
type
  enumvkresult* {.size: sizeof(cint).} = enum
    Errorcompressionexhaustedext = -1000338000,
    Errorinvalidvideostdparameterskhr = -1000299000,
    Errorinvalidopaquecaptureaddress = -1000257000,
    Errorfullscreenexclusivemodelostext = -1000255000,
    Errornotpermittedkhr = -1000174001, Errorfragmentation = -1000161000,
    Errorinvaliddrmformatmodifierplanelayoutext = -1000158000,
    Errorinvalidexternalhandle = -1000072003,
    Erroroutofpoolmemory = -1000069000,
    Errorvideostdversionnotsupportedkhr = -1000023005,
    Errorvideoprofilecodecnotsupportedkhr = -1000023004,
    Errorvideoprofileformatnotsupportedkhr = -1000023003,
    Errorvideoprofileoperationnotsupportedkhr = -1000023002,
    Errorvideopicturelayoutnotsupportedkhr = -1000023001,
    Errorimageusagenotsupportedkhr = -1000023000,
    Errorinvalidshadernv = -1000012000, Errorvalidationfailedext = -1000011001,
    Errorincompatibledisplaykhr = -1000003001, Erroroutofdatekhr = -1000001004,
    Errornativewindowinusekhr = -1000000001, Errorsurfacelostkhr = -1000000000,
    Errorunknown = -13, Errorfragmentedpool = -12,
    Errorformatnotsupported = -11, Errortoomanyobjects = -10,
    Errorincompatibledriver = -9, Errorfeaturenotpresent = -8,
    Errorextensionnotpresent = -7, Errorlayernotpresent = -6,
    Errormemorymapfailed = -5, Errordevicelost = -4,
    Errorinitializationfailed = -3, Erroroutofdevicememory = -2,
    Erroroutofhostmemory = -1, Success = 0, Notready = 1, Timeout = 2,
    Eventset = 3, Eventreset = 4, Incomplete = 5, Suboptimalkhr = 1000001003,
    Threadidlekhr = 1000268000, Threaddonekhr = 1000268001,
    Operationdeferredkhr = 1000268002, Operationnotdeferredkhr = 1000268003,
    Pipelinecompilerequired = 1000297000,
    Incompatibleshaderbinaryext = 1000482000, Resultmaxenum = 2147483647
const
  Erroroutofpoolmemorykhr* = enumvkresult.Erroroutofpoolmemory
const
  Errorinvalidexternalhandlekhr* = enumvkresult.Errorinvalidexternalhandle
const
  Errorfragmentationext* = enumvkresult.Errorfragmentation
const
  Errornotpermittedext* = enumvkresult.Errornotpermittedkhr
const
  Errorinvaliddeviceaddressext* = enumvkresult.Errorinvalidopaquecaptureaddress
const
  Errorinvalidopaquecaptureaddresskhr* = enumvkresult.Errorinvalidopaquecaptureaddress
const
  Pipelinecompilerequiredext* = enumvkresult.Pipelinecompilerequired
const
  Errorpipelinecompilerequiredext* = enumvkresult.Pipelinecompilerequired
const
  Errorincompatibleshaderbinaryext* = enumvkresult.Incompatibleshaderbinaryext
type
  enumvkstructuretype* {.size: sizeof(cuint).} = enum
    Structuretypeapplicationinfo = 0, Structuretypeinstancecreateinfo = 1,
    Structuretypedevicequeuecreateinfo = 2, Structuretypedevicecreateinfo = 3,
    Structuretypesubmitinfo = 4, Structuretypememoryallocateinfo = 5,
    Structuretypemappedmemoryrange = 6, Structuretypebindsparseinfo = 7,
    Structuretypefencecreateinfo = 8, Structuretypesemaphorecreateinfo = 9,
    Structuretypeeventcreateinfo = 10, Structuretypequerypoolcreateinfo = 11,
    Structuretypebuffercreateinfo = 12, Structuretypebufferviewcreateinfo = 13,
    Structuretypeimagecreateinfo = 14, Structuretypeimageviewcreateinfo = 15,
    Structuretypeshadermodulecreateinfo = 16,
    Structuretypepipelinecachecreateinfo = 17,
    Structuretypepipelineshaderstagecreateinfo = 18,
    Structuretypepipelinevertexinputstatecreateinfo = 19,
    Structuretypepipelineinputassemblystatecreateinfo = 20,
    Structuretypepipelinetessellationstatecreateinfo = 21,
    Structuretypepipelineviewportstatecreateinfo = 22,
    Structuretypepipelinerasterizationstatecreateinfo = 23,
    Structuretypepipelinemultisamplestatecreateinfo = 24,
    Structuretypepipelinedepthstencilstatecreateinfo = 25,
    Structuretypepipelinecolorblendstatecreateinfo = 26,
    Structuretypepipelinedynamicstatecreateinfo = 27,
    Structuretypegraphicspipelinecreateinfo = 28,
    Structuretypecomputepipelinecreateinfo = 29,
    Structuretypepipelinelayoutcreateinfo = 30,
    Structuretypesamplercreateinfo = 31,
    Structuretypedescriptorsetlayoutcreateinfo = 32,
    Structuretypedescriptorpoolcreateinfo = 33,
    Structuretypedescriptorsetallocateinfo = 34,
    Structuretypewritedescriptorset = 35, Structuretypecopydescriptorset = 36,
    Structuretypeframebuffercreateinfo = 37,
    Structuretyperenderpasscreateinfo = 38,
    Structuretypecommandpoolcreateinfo = 39,
    Structuretypecommandbufferallocateinfo = 40,
    Structuretypecommandbufferinheritanceinfo = 41,
    Structuretypecommandbufferbegininfo = 42,
    Structuretyperenderpassbegininfo = 43,
    Structuretypebuffermemorybarrier = 44, Structuretypeimagememorybarrier = 45,
    Structuretypememorybarrier = 46, Structuretypeloaderinstancecreateinfo = 47,
    Structuretypeloaderdevicecreateinfo = 48,
    Structuretypephysicaldevicevulkan11features = 49,
    Structuretypephysicaldevicevulkan11properties = 50,
    Structuretypephysicaldevicevulkan12features = 51,
    Structuretypephysicaldevicevulkan12properties = 52,
    Structuretypephysicaldevicevulkan13features = 53,
    Structuretypephysicaldevicevulkan13properties = 54,
    Structuretypeswapchaincreateinfokhr = 1000001000,
    Structuretypepresentinfokhr = 1000001001,
    Structuretypedisplaymodecreateinfokhr = 1000002000,
    Structuretypedisplaysurfacecreateinfokhr = 1000002001,
    Structuretypedisplaypresentinfokhr = 1000003000,
    Structuretypexlibsurfacecreateinfokhr = 1000004000,
    Structuretypexcbsurfacecreateinfokhr = 1000005000,
    Structuretypewaylandsurfacecreateinfokhr = 1000006000,
    Structuretypeandroidsurfacecreateinfokhr = 1000008000,
    Structuretypewin32surfacecreateinfokhr = 1000009000,
    Structuretypedebugreportcallbackcreateinfoext = 1000011000,
    Structuretypepipelinerasterizationstaterasterizationorderamd = 1000018000,
    Structuretypedebugmarkerobjectnameinfoext = 1000022000,
    Structuretypedebugmarkerobjecttaginfoext = 1000022001,
    Structuretypedebugmarkermarkerinfoext = 1000022002,
    Structuretypevideoprofileinfokhr = 1000023000,
    Structuretypevideocapabilitieskhr = 1000023001,
    Structuretypevideopictureresourceinfokhr = 1000023002,
    Structuretypevideosessionmemoryrequirementskhr = 1000023003,
    Structuretypebindvideosessionmemoryinfokhr = 1000023004,
    Structuretypevideosessioncreateinfokhr = 1000023005,
    Structuretypevideosessionparameterscreateinfokhr = 1000023006,
    Structuretypevideosessionparametersupdateinfokhr = 1000023007,
    Structuretypevideobegincodinginfokhr = 1000023008,
    Structuretypevideoendcodinginfokhr = 1000023009,
    Structuretypevideocodingcontrolinfokhr = 1000023010,
    Structuretypevideoreferenceslotinfokhr = 1000023011,
    Structuretypequeuefamilyvideopropertieskhr = 1000023012,
    Structuretypevideoprofilelistinfokhr = 1000023013,
    Structuretypephysicaldevicevideoformatinfokhr = 1000023014,
    Structuretypevideoformatpropertieskhr = 1000023015,
    Structuretypequeuefamilyqueryresultstatuspropertieskhr = 1000023016,
    Structuretypevideodecodeinfokhr = 1000024000,
    Structuretypevideodecodecapabilitieskhr = 1000024001,
    Structuretypevideodecodeusageinfokhr = 1000024002,
    Structuretypededicatedallocationimagecreateinfonv = 1000026000,
    Structuretypededicatedallocationbuffercreateinfonv = 1000026001,
    Structuretypededicatedallocationmemoryallocateinfonv = 1000026002,
    Structuretypephysicaldevicetransformfeedbackfeaturesext = 1000028000,
    Structuretypephysicaldevicetransformfeedbackpropertiesext = 1000028001,
    Structuretypepipelinerasterizationstatestreamcreateinfoext = 1000028002,
    Structuretypecumodulecreateinfonvx = 1000029000,
    Structuretypecufunctioncreateinfonvx = 1000029001,
    Structuretypeculaunchinfonvx = 1000029002,
    Structuretypeimageviewhandleinfonvx = 1000030000,
    Structuretypeimageviewaddresspropertiesnvx = 1000030001,
    Structuretypevideoencodeh264capabilitieskhr = 1000038000,
    Structuretypevideoencodeh264sessionparameterscreateinfokhr = 1000038001,
    Structuretypevideoencodeh264sessionparametersaddinfokhr = 1000038002,
    Structuretypevideoencodeh264pictureinfokhr = 1000038003,
    Structuretypevideoencodeh264dpbslotinfokhr = 1000038004,
    Structuretypevideoencodeh264nalusliceinfokhr = 1000038005,
    Structuretypevideoencodeh264gopremainingframeinfokhr = 1000038006,
    Structuretypevideoencodeh264profileinfokhr = 1000038007,
    Structuretypevideoencodeh264ratecontrolinfokhr = 1000038008,
    Structuretypevideoencodeh264ratecontrollayerinfokhr = 1000038009,
    Structuretypevideoencodeh264sessioncreateinfokhr = 1000038010,
    Structuretypevideoencodeh264qualitylevelpropertieskhr = 1000038011,
    Structuretypevideoencodeh264sessionparametersgetinfokhr = 1000038012,
    Structuretypevideoencodeh264sessionparametersfeedbackinfokhr = 1000038013,
    Structuretypevideoencodeh265capabilitieskhr = 1000039000,
    Structuretypevideoencodeh265sessionparameterscreateinfokhr = 1000039001,
    Structuretypevideoencodeh265sessionparametersaddinfokhr = 1000039002,
    Structuretypevideoencodeh265pictureinfokhr = 1000039003,
    Structuretypevideoencodeh265dpbslotinfokhr = 1000039004,
    Structuretypevideoencodeh265naluslicesegmentinfokhr = 1000039005,
    Structuretypevideoencodeh265gopremainingframeinfokhr = 1000039006,
    Structuretypevideoencodeh265profileinfokhr = 1000039007,
    Structuretypevideoencodeh265ratecontrolinfokhr = 1000039009,
    Structuretypevideoencodeh265ratecontrollayerinfokhr = 1000039010,
    Structuretypevideoencodeh265sessioncreateinfokhr = 1000039011,
    Structuretypevideoencodeh265qualitylevelpropertieskhr = 1000039012,
    Structuretypevideoencodeh265sessionparametersgetinfokhr = 1000039013,
    Structuretypevideoencodeh265sessionparametersfeedbackinfokhr = 1000039014,
    Structuretypevideodecodeh264capabilitieskhr = 1000040000,
    Structuretypevideodecodeh264pictureinfokhr = 1000040001,
    Structuretypevideodecodeh264profileinfokhr = 1000040003,
    Structuretypevideodecodeh264sessionparameterscreateinfokhr = 1000040004,
    Structuretypevideodecodeh264sessionparametersaddinfokhr = 1000040005,
    Structuretypevideodecodeh264dpbslotinfokhr = 1000040006,
    Structuretypetexturelodgatherformatpropertiesamd = 1000041000,
    Structuretyperenderinginfo = 1000044000,
    Structuretyperenderingattachmentinfo = 1000044001,
    Structuretypepipelinerenderingcreateinfo = 1000044002,
    Structuretypephysicaldevicedynamicrenderingfeatures = 1000044003,
    Structuretypecommandbufferinheritancerenderinginfo = 1000044004,
    Structuretyperenderingfragmentshadingrateattachmentinfokhr = 1000044006,
    Structuretyperenderingfragmentdensitymapattachmentinfoext = 1000044007,
    Structuretypeattachmentsamplecountinfoamd = 1000044008,
    Structuretypemultiviewperviewattributesinfonvx = 1000044009,
    Structuretypestreamdescriptorsurfacecreateinfoggp = 1000049000,
    Structuretypephysicaldevicecornersampledimagefeaturesnv = 1000050000,
    Structuretyperenderpassmultiviewcreateinfo = 1000053000,
    Structuretypephysicaldevicemultiviewfeatures = 1000053001,
    Structuretypephysicaldevicemultiviewproperties = 1000053002,
    Structuretypeexternalmemoryimagecreateinfonv = 1000056000,
    Structuretypeexportmemoryallocateinfonv = 1000056001,
    Structuretypeimportmemorywin32handleinfonv = 1000057000,
    Structuretypeexportmemorywin32handleinfonv = 1000057001,
    Structuretypewin32keyedmutexacquirereleaseinfonv = 1000058000,
    Structuretypephysicaldevicefeatures2 = 1000059000,
    Structuretypephysicaldeviceproperties2 = 1000059001,
    Structuretypeformatproperties2 = 1000059002,
    Structuretypeimageformatproperties2 = 1000059003,
    Structuretypephysicaldeviceimageformatinfo2 = 1000059004,
    Structuretypequeuefamilyproperties2 = 1000059005,
    Structuretypephysicaldevicememoryproperties2 = 1000059006,
    Structuretypesparseimageformatproperties2 = 1000059007,
    Structuretypephysicaldevicesparseimageformatinfo2 = 1000059008,
    Structuretypememoryallocateflagsinfo = 1000060000,
    Structuretypedevicegrouprenderpassbegininfo = 1000060003,
    Structuretypedevicegroupcommandbufferbegininfo = 1000060004,
    Structuretypedevicegroupsubmitinfo = 1000060005,
    Structuretypedevicegroupbindsparseinfo = 1000060006,
    Structuretypedevicegrouppresentcapabilitieskhr = 1000060007,
    Structuretypeimageswapchaincreateinfokhr = 1000060008,
    Structuretypebindimagememoryswapchaininfokhr = 1000060009,
    Structuretypeacquirenextimageinfokhr = 1000060010,
    Structuretypedevicegrouppresentinfokhr = 1000060011,
    Structuretypedevicegroupswapchaincreateinfokhr = 1000060012,
    Structuretypebindbuffermemorydevicegroupinfo = 1000060013,
    Structuretypebindimagememorydevicegroupinfo = 1000060014,
    Structuretypevalidationflagsext = 1000061000,
    Structuretypevisurfacecreateinfonn = 1000062000,
    Structuretypephysicaldeviceshaderdrawparametersfeatures = 1000063000,
    Structuretypephysicaldevicetexturecompressionastchdrfeatures = 1000066000,
    Structuretypeimageviewastcdecodemodeext = 1000067000,
    Structuretypephysicaldeviceastcdecodefeaturesext = 1000067001,
    Structuretypepipelinerobustnesscreateinfoext = 1000068000,
    Structuretypephysicaldevicepipelinerobustnessfeaturesext = 1000068001,
    Structuretypephysicaldevicepipelinerobustnesspropertiesext = 1000068002,
    Structuretypephysicaldevicegroupproperties = 1000070000,
    Structuretypedevicegroupdevicecreateinfo = 1000070001,
    Structuretypephysicaldeviceexternalimageformatinfo = 1000071000,
    Structuretypeexternalimageformatproperties = 1000071001,
    Structuretypephysicaldeviceexternalbufferinfo = 1000071002,
    Structuretypeexternalbufferproperties = 1000071003,
    Structuretypephysicaldeviceidproperties = 1000071004,
    Structuretypeexternalmemorybuffercreateinfo = 1000072000,
    Structuretypeexternalmemoryimagecreateinfo = 1000072001,
    Structuretypeexportmemoryallocateinfo = 1000072002,
    Structuretypeimportmemorywin32handleinfokhr = 1000073000,
    Structuretypeexportmemorywin32handleinfokhr = 1000073001,
    Structuretypememorywin32handlepropertieskhr = 1000073002,
    Structuretypememorygetwin32handleinfokhr = 1000073003,
    Structuretypeimportmemoryfdinfokhr = 1000074000,
    Structuretypememoryfdpropertieskhr = 1000074001,
    Structuretypememorygetfdinfokhr = 1000074002,
    Structuretypewin32keyedmutexacquirereleaseinfokhr = 1000075000,
    Structuretypephysicaldeviceexternalsemaphoreinfo = 1000076000,
    Structuretypeexternalsemaphoreproperties = 1000076001,
    Structuretypeexportsemaphorecreateinfo = 1000077000,
    Structuretypeimportsemaphorewin32handleinfokhr = 1000078000,
    Structuretypeexportsemaphorewin32handleinfokhr = 1000078001,
    Structuretyped3d12fencesubmitinfokhr = 1000078002,
    Structuretypesemaphoregetwin32handleinfokhr = 1000078003,
    Structuretypeimportsemaphorefdinfokhr = 1000079000,
    Structuretypesemaphoregetfdinfokhr = 1000079001,
    Structuretypephysicaldevicepushdescriptorpropertieskhr = 1000080000, Structuretypecommandbufferinheritanceconditionalrenderinginfoext = 1000081000,
    Structuretypephysicaldeviceconditionalrenderingfeaturesext = 1000081001,
    Structuretypeconditionalrenderingbegininfoext = 1000081002,
    Structuretypephysicaldeviceshaderfloat16int8features = 1000082000,
    Structuretypephysicaldevice16bitstoragefeatures = 1000083000,
    Structuretypepresentregionskhr = 1000084000,
    Structuretypedescriptorupdatetemplatecreateinfo = 1000085000,
    Structuretypepipelineviewportwscalingstatecreateinfonv = 1000087000,
    Structuretypesurfacecapabilities2ext = 1000090000,
    Structuretypedisplaypowerinfoext = 1000091000,
    Structuretypedeviceeventinfoext = 1000091001,
    Structuretypedisplayeventinfoext = 1000091002,
    Structuretypeswapchaincountercreateinfoext = 1000091003,
    Structuretypepresenttimesinfogoogle = 1000092000,
    Structuretypephysicaldevicesubgroupproperties = 1000094000, Structuretypephysicaldevicemultiviewperviewattributespropertiesnvx = 1000097000,
    Structuretypepipelineviewportswizzlestatecreateinfonv = 1000098000,
    Structuretypephysicaldevicediscardrectanglepropertiesext = 1000099000,
    Structuretypepipelinediscardrectanglestatecreateinfoext = 1000099001, Structuretypephysicaldeviceconservativerasterizationpropertiesext = 1000101000, Structuretypepipelinerasterizationconservativestatecreateinfoext = 1000101001,
    Structuretypephysicaldevicedepthclipenablefeaturesext = 1000102000,
    Structuretypepipelinerasterizationdepthclipstatecreateinfoext = 1000102001,
    Structuretypehdrmetadataext = 1000105000,
    Structuretypephysicaldeviceimagelessframebufferfeatures = 1000108000,
    Structuretypeframebufferattachmentscreateinfo = 1000108001,
    Structuretypeframebufferattachmentimageinfo = 1000108002,
    Structuretyperenderpassattachmentbegininfo = 1000108003,
    Structuretypeattachmentdescription2 = 1000109000,
    Structuretypeattachmentreference2 = 1000109001,
    Structuretypesubpassdescription2 = 1000109002,
    Structuretypesubpassdependency2 = 1000109003,
    Structuretyperenderpasscreateinfo2 = 1000109004,
    Structuretypesubpassbegininfo = 1000109005,
    Structuretypesubpassendinfo = 1000109006, Structuretypephysicaldevicerelaxedlinerasterizationfeaturesimg = 1000110000,
    Structuretypesharedpresentsurfacecapabilitieskhr = 1000111000,
    Structuretypephysicaldeviceexternalfenceinfo = 1000112000,
    Structuretypeexternalfenceproperties = 1000112001,
    Structuretypeexportfencecreateinfo = 1000113000,
    Structuretypeimportfencewin32handleinfokhr = 1000114000,
    Structuretypeexportfencewin32handleinfokhr = 1000114001,
    Structuretypefencegetwin32handleinfokhr = 1000114002,
    Structuretypeimportfencefdinfokhr = 1000115000,
    Structuretypefencegetfdinfokhr = 1000115001,
    Structuretypephysicaldeviceperformancequeryfeatureskhr = 1000116000,
    Structuretypephysicaldeviceperformancequerypropertieskhr = 1000116001,
    Structuretypequerypoolperformancecreateinfokhr = 1000116002,
    Structuretypeperformancequerysubmitinfokhr = 1000116003,
    Structuretypeacquireprofilinglockinfokhr = 1000116004,
    Structuretypeperformancecounterkhr = 1000116005,
    Structuretypeperformancecounterdescriptionkhr = 1000116006,
    Structuretypephysicaldevicepointclippingproperties = 1000117000,
    Structuretyperenderpassinputattachmentaspectcreateinfo = 1000117001,
    Structuretypeimageviewusagecreateinfo = 1000117002,
    Structuretypepipelinetessellationdomainoriginstatecreateinfo = 1000117003,
    Structuretypephysicaldevicesurfaceinfo2khr = 1000119000,
    Structuretypesurfacecapabilities2khr = 1000119001,
    Structuretypesurfaceformat2khr = 1000119002,
    Structuretypephysicaldevicevariablepointersfeatures = 1000120000,
    Structuretypedisplayproperties2khr = 1000121000,
    Structuretypedisplayplaneproperties2khr = 1000121001,
    Structuretypedisplaymodeproperties2khr = 1000121002,
    Structuretypedisplayplaneinfo2khr = 1000121003,
    Structuretypedisplayplanecapabilities2khr = 1000121004,
    Structuretypeiossurfacecreateinfomvk = 1000122000,
    Structuretypemacossurfacecreateinfomvk = 1000123000,
    Structuretypememorydedicatedrequirements = 1000127000,
    Structuretypememorydedicatedallocateinfo = 1000127001,
    Structuretypedebugutilsobjectnameinfoext = 1000128000,
    Structuretypedebugutilsobjecttaginfoext = 1000128001,
    Structuretypedebugutilslabelext = 1000128002,
    Structuretypedebugutilsmessengercallbackdataext = 1000128003,
    Structuretypedebugutilsmessengercreateinfoext = 1000128004,
    Structuretypeandroidhardwarebufferusageandroid = 1000129000,
    Structuretypeandroidhardwarebufferpropertiesandroid = 1000129001,
    Structuretypeandroidhardwarebufferformatpropertiesandroid = 1000129002,
    Structuretypeimportandroidhardwarebufferinfoandroid = 1000129003,
    Structuretypememorygetandroidhardwarebufferinfoandroid = 1000129004,
    Structuretypeexternalformatandroid = 1000129005,
    Structuretypeandroidhardwarebufferformatproperties2android = 1000129006,
    Structuretypephysicaldevicesamplerfilterminmaxproperties = 1000130000,
    Structuretypesamplerreductionmodecreateinfo = 1000130001,
    Structuretypephysicaldeviceinlineuniformblockfeatures = 1000138000,
    Structuretypephysicaldeviceinlineuniformblockproperties = 1000138001,
    Structuretypewritedescriptorsetinlineuniformblock = 1000138002,
    Structuretypedescriptorpoolinlineuniformblockcreateinfo = 1000138003,
    Structuretypesamplelocationsinfoext = 1000143000,
    Structuretyperenderpasssamplelocationsbegininfoext = 1000143001,
    Structuretypepipelinesamplelocationsstatecreateinfoext = 1000143002,
    Structuretypephysicaldevicesamplelocationspropertiesext = 1000143003,
    Structuretypemultisamplepropertiesext = 1000143004,
    Structuretypeprotectedsubmitinfo = 1000145000,
    Structuretypephysicaldeviceprotectedmemoryfeatures = 1000145001,
    Structuretypephysicaldeviceprotectedmemoryproperties = 1000145002,
    Structuretypedevicequeueinfo2 = 1000145003,
    Structuretypebuffermemoryrequirementsinfo2 = 1000146000,
    Structuretypeimagememoryrequirementsinfo2 = 1000146001,
    Structuretypeimagesparsememoryrequirementsinfo2 = 1000146002,
    Structuretypememoryrequirements2 = 1000146003,
    Structuretypesparseimagememoryrequirements2 = 1000146004,
    Structuretypeimageformatlistcreateinfo = 1000147000,
    Structuretypephysicaldeviceblendoperationadvancedfeaturesext = 1000148000, Structuretypephysicaldeviceblendoperationadvancedpropertiesext = 1000148001,
    Structuretypepipelinecolorblendadvancedstatecreateinfoext = 1000148002,
    Structuretypepipelinecoveragetocolorstatecreateinfonv = 1000149000,
    Structuretypeaccelerationstructurebuildgeometryinfokhr = 1000150000,
    Structuretypeaccelerationstructuredeviceaddressinfokhr = 1000150002,
    Structuretypeaccelerationstructuregeometryaabbsdatakhr = 1000150003,
    Structuretypeaccelerationstructuregeometryinstancesdatakhr = 1000150004,
    Structuretypeaccelerationstructuregeometrytrianglesdatakhr = 1000150005,
    Structuretypeaccelerationstructuregeometrykhr = 1000150006,
    Structuretypewritedescriptorsetaccelerationstructurekhr = 1000150007,
    Structuretypeaccelerationstructureversioninfokhr = 1000150009,
    Structuretypecopyaccelerationstructureinfokhr = 1000150010,
    Structuretypecopyaccelerationstructuretomemoryinfokhr = 1000150011,
    Structuretypecopymemorytoaccelerationstructureinfokhr = 1000150012,
    Structuretypephysicaldeviceaccelerationstructurefeatureskhr = 1000150013,
    Structuretypephysicaldeviceaccelerationstructurepropertieskhr = 1000150014,
    Structuretyperaytracingpipelinecreateinfokhr = 1000150015,
    Structuretyperaytracingshadergroupcreateinfokhr = 1000150016,
    Structuretypeaccelerationstructurecreateinfokhr = 1000150017,
    Structuretyperaytracingpipelineinterfacecreateinfokhr = 1000150018,
    Structuretypeaccelerationstructurebuildsizesinfokhr = 1000150020,
    Structuretypepipelinecoveragemodulationstatecreateinfonv = 1000152000,
    Structuretypephysicaldeviceshadersmbuiltinsfeaturesnv = 1000154000,
    Structuretypephysicaldeviceshadersmbuiltinspropertiesnv = 1000154001,
    Structuretypesamplerycbcrconversioncreateinfo = 1000156000,
    Structuretypesamplerycbcrconversioninfo = 1000156001,
    Structuretypebindimageplanememoryinfo = 1000156002,
    Structuretypeimageplanememoryrequirementsinfo = 1000156003,
    Structuretypephysicaldevicesamplerycbcrconversionfeatures = 1000156004,
    Structuretypesamplerycbcrconversionimageformatproperties = 1000156005,
    Structuretypebindbuffermemoryinfo = 1000157000,
    Structuretypebindimagememoryinfo = 1000157001,
    Structuretypedrmformatmodifierpropertieslistext = 1000158000,
    Structuretypephysicaldeviceimagedrmformatmodifierinfoext = 1000158002,
    Structuretypeimagedrmformatmodifierlistcreateinfoext = 1000158003,
    Structuretypeimagedrmformatmodifierexplicitcreateinfoext = 1000158004,
    Structuretypeimagedrmformatmodifierpropertiesext = 1000158005,
    Structuretypedrmformatmodifierpropertieslist2ext = 1000158006,
    Structuretypevalidationcachecreateinfoext = 1000160000,
    Structuretypeshadermodulevalidationcachecreateinfoext = 1000160001,
    Structuretypedescriptorsetlayoutbindingflagscreateinfo = 1000161000,
    Structuretypephysicaldevicedescriptorindexingfeatures = 1000161001,
    Structuretypephysicaldevicedescriptorindexingproperties = 1000161002,
    Structuretypedescriptorsetvariabledescriptorcountallocateinfo = 1000161003, Structuretypedescriptorsetvariabledescriptorcountlayoutsupport = 1000161004, Structuretypepipelineviewportshadingrateimagestatecreateinfonv = 1000164000,
    Structuretypephysicaldeviceshadingrateimagefeaturesnv = 1000164001,
    Structuretypephysicaldeviceshadingrateimagepropertiesnv = 1000164002, Structuretypepipelineviewportcoarsesampleorderstatecreateinfonv = 1000164005,
    Structuretyperaytracingpipelinecreateinfonv = 1000165000,
    Structuretypeaccelerationstructurecreateinfonv = 1000165001,
    Structuretypegeometrynv = 1000165003,
    Structuretypegeometrytrianglesnv = 1000165004,
    Structuretypegeometryaabbnv = 1000165005,
    Structuretypebindaccelerationstructurememoryinfonv = 1000165006,
    Structuretypewritedescriptorsetaccelerationstructurenv = 1000165007,
    Structuretypeaccelerationstructurememoryrequirementsinfonv = 1000165008,
    Structuretypephysicaldeviceraytracingpropertiesnv = 1000165009,
    Structuretyperaytracingshadergroupcreateinfonv = 1000165011,
    Structuretypeaccelerationstructureinfonv = 1000165012, Structuretypephysicaldevicerepresentativefragmenttestfeaturesnv = 1000166000, Structuretypepipelinerepresentativefragmentteststatecreateinfonv = 1000166001,
    Structuretypephysicaldevicemaintenance3properties = 1000168000,
    Structuretypedescriptorsetlayoutsupport = 1000168001,
    Structuretypephysicaldeviceimageviewimageformatinfoext = 1000170000,
    Structuretypefiltercubicimageviewimageformatpropertiesext = 1000170001,
    Structuretypedevicequeueglobalprioritycreateinfokhr = 1000174000, Structuretypephysicaldeviceshadersubgroupextendedtypesfeatures = 1000175000,
    Structuretypephysicaldevice8bitstoragefeatures = 1000177000,
    Structuretypeimportmemoryhostpointerinfoext = 1000178000,
    Structuretypememoryhostpointerpropertiesext = 1000178001,
    Structuretypephysicaldeviceexternalmemoryhostpropertiesext = 1000178002,
    Structuretypephysicaldeviceshaderatomicint64features = 1000180000,
    Structuretypephysicaldeviceshaderclockfeatureskhr = 1000181000,
    Structuretypepipelinecompilercontrolcreateinfoamd = 1000183000,
    Structuretypecalibratedtimestampinfokhr = 1000184000,
    Structuretypephysicaldeviceshadercorepropertiesamd = 1000185000,
    Structuretypevideodecodeh265capabilitieskhr = 1000187000,
    Structuretypevideodecodeh265sessionparameterscreateinfokhr = 1000187001,
    Structuretypevideodecodeh265sessionparametersaddinfokhr = 1000187002,
    Structuretypevideodecodeh265profileinfokhr = 1000187003,
    Structuretypevideodecodeh265pictureinfokhr = 1000187004,
    Structuretypevideodecodeh265dpbslotinfokhr = 1000187005,
    Structuretypedevicememoryoverallocationcreateinfoamd = 1000189000, Structuretypephysicaldevicevertexattributedivisorpropertiesext = 1000190000,
    Structuretypepipelinevertexinputdivisorstatecreateinfokhr = 1000190001,
    Structuretypephysicaldevicevertexattributedivisorfeatureskhr = 1000190002,
    Structuretypepresentframetokenggp = 1000191000,
    Structuretypepipelinecreationfeedbackcreateinfo = 1000192000,
    Structuretypephysicaldevicedriverproperties = 1000196000,
    Structuretypephysicaldevicefloatcontrolsproperties = 1000197000,
    Structuretypephysicaldevicedepthstencilresolveproperties = 1000199000,
    Structuretypesubpassdescriptiondepthstencilresolve = 1000199001,
    Structuretypephysicaldevicecomputeshaderderivativesfeaturesnv = 1000201000,
    Structuretypephysicaldevicemeshshaderfeaturesnv = 1000202000,
    Structuretypephysicaldevicemeshshaderpropertiesnv = 1000202001, Structuretypephysicaldevicefragmentshaderbarycentricfeatureskhr = 1000203000,
    Structuretypephysicaldeviceshaderimagefootprintfeaturesnv = 1000204000, Structuretypepipelineviewportexclusivescissorstatecreateinfonv = 1000205000,
    Structuretypephysicaldeviceexclusivescissorfeaturesnv = 1000205002,
    Structuretypecheckpointdatanv = 1000206000,
    Structuretypequeuefamilycheckpointpropertiesnv = 1000206001,
    Structuretypephysicaldevicetimelinesemaphorefeatures = 1000207000,
    Structuretypephysicaldevicetimelinesemaphoreproperties = 1000207001,
    Structuretypesemaphoretypecreateinfo = 1000207002,
    Structuretypetimelinesemaphoresubmitinfo = 1000207003,
    Structuretypesemaphorewaitinfo = 1000207004,
    Structuretypesemaphoresignalinfo = 1000207005, Structuretypephysicaldeviceshaderintegerfunctions2featuresintel = 1000209000,
    Structuretypequerypoolperformancequerycreateinfointel = 1000210000,
    Structuretypeinitializeperformanceapiinfointel = 1000210001,
    Structuretypeperformancemarkerinfointel = 1000210002,
    Structuretypeperformancestreammarkerinfointel = 1000210003,
    Structuretypeperformanceoverrideinfointel = 1000210004,
    Structuretypeperformanceconfigurationacquireinfointel = 1000210005,
    Structuretypephysicaldevicevulkanmemorymodelfeatures = 1000211000,
    Structuretypephysicaldevicepcibusinfopropertiesext = 1000212000,
    Structuretypedisplaynativehdrsurfacecapabilitiesamd = 1000213000,
    Structuretypeswapchaindisplaynativehdrcreateinfoamd = 1000213001,
    Structuretypeimagepipesurfacecreateinfofuchsia = 1000214000,
    Structuretypephysicaldeviceshaderterminateinvocationfeatures = 1000215000,
    Structuretypemetalsurfacecreateinfoext = 1000217000,
    Structuretypephysicaldevicefragmentdensitymapfeaturesext = 1000218000,
    Structuretypephysicaldevicefragmentdensitymappropertiesext = 1000218001,
    Structuretyperenderpassfragmentdensitymapcreateinfoext = 1000218002,
    Structuretypephysicaldevicescalarblocklayoutfeatures = 1000221000,
    Structuretypephysicaldevicesubgroupsizecontrolproperties = 1000225000, Structuretypepipelineshaderstagerequiredsubgroupsizecreateinfo = 1000225001,
    Structuretypephysicaldevicesubgroupsizecontrolfeatures = 1000225002,
    Structuretypefragmentshadingrateattachmentinfokhr = 1000226000,
    Structuretypepipelinefragmentshadingratestatecreateinfokhr = 1000226001,
    Structuretypephysicaldevicefragmentshadingratepropertieskhr = 1000226002,
    Structuretypephysicaldevicefragmentshadingratefeatureskhr = 1000226003,
    Structuretypephysicaldevicefragmentshadingratekhr = 1000226004,
    Structuretypephysicaldeviceshadercoreproperties2amd = 1000227000,
    Structuretypephysicaldevicecoherentmemoryfeaturesamd = 1000229000, Structuretypephysicaldevicedynamicrenderinglocalreadfeatureskhr = 1000232000,
    Structuretyperenderingattachmentlocationinfokhr = 1000232001,
    Structuretyperenderinginputattachmentindexinfokhr = 1000232002,
    Structuretypephysicaldeviceshaderimageatomicint64featuresext = 1000234000,
    Structuretypephysicaldeviceshaderquadcontrolfeatureskhr = 1000235000,
    Structuretypephysicaldevicememorybudgetpropertiesext = 1000237000,
    Structuretypephysicaldevicememorypriorityfeaturesext = 1000238000,
    Structuretypememorypriorityallocateinfoext = 1000238001,
    Structuretypesurfaceprotectedcapabilitieskhr = 1000239000, Structuretypephysicaldevicededicatedallocationimagealiasingfeaturesnv = 1000240000, Structuretypephysicaldeviceseparatedepthstencillayoutsfeatures = 1000241000,
    Structuretypeattachmentreferencestencillayout = 1000241001,
    Structuretypeattachmentdescriptionstencillayout = 1000241002,
    Structuretypephysicaldevicebufferdeviceaddressfeaturesext = 1000244000,
    Structuretypebufferdeviceaddressinfo = 1000244001,
    Structuretypebufferdeviceaddresscreateinfoext = 1000244002,
    Structuretypephysicaldevicetoolproperties = 1000245000,
    Structuretypeimagestencilusagecreateinfo = 1000246000,
    Structuretypevalidationfeaturesext = 1000247000,
    Structuretypephysicaldevicepresentwaitfeatureskhr = 1000248000,
    Structuretypephysicaldevicecooperativematrixfeaturesnv = 1000249000,
    Structuretypecooperativematrixpropertiesnv = 1000249001,
    Structuretypephysicaldevicecooperativematrixpropertiesnv = 1000249002,
    Structuretypephysicaldevicecoveragereductionmodefeaturesnv = 1000250000,
    Structuretypepipelinecoveragereductionstatecreateinfonv = 1000250001,
    Structuretypeframebuffermixedsamplescombinationnv = 1000250002,
    Structuretypephysicaldevicefragmentshaderinterlockfeaturesext = 1000251000,
    Structuretypephysicaldeviceycbcrimagearraysfeaturesext = 1000252000, Structuretypephysicaldeviceuniformbufferstandardlayoutfeatures = 1000253000,
    Structuretypephysicaldeviceprovokingvertexfeaturesext = 1000254000, Structuretypepipelinerasterizationprovokingvertexstatecreateinfoext = 1000254001,
    Structuretypephysicaldeviceprovokingvertexpropertiesext = 1000254002,
    Structuretypesurfacefullscreenexclusiveinfoext = 1000255000,
    Structuretypesurfacefullscreenexclusivewin32infoext = 1000255001,
    Structuretypesurfacecapabilitiesfullscreenexclusiveext = 1000255002,
    Structuretypeheadlesssurfacecreateinfoext = 1000256000,
    Structuretypephysicaldevicebufferdeviceaddressfeatures = 1000257000,
    Structuretypebufferopaquecaptureaddresscreateinfo = 1000257002,
    Structuretypememoryopaquecaptureaddressallocateinfo = 1000257003,
    Structuretypedevicememoryopaquecaptureaddressinfo = 1000257004,
    Structuretypephysicaldevicelinerasterizationfeatureskhr = 1000259000,
    Structuretypepipelinerasterizationlinestatecreateinfokhr = 1000259001,
    Structuretypephysicaldevicelinerasterizationpropertieskhr = 1000259002,
    Structuretypephysicaldeviceshaderatomicfloatfeaturesext = 1000260000,
    Structuretypephysicaldevicehostqueryresetfeatures = 1000261000,
    Structuretypephysicaldeviceindextypeuint8featureskhr = 1000265000,
    Structuretypephysicaldeviceextendeddynamicstatefeaturesext = 1000267000, Structuretypephysicaldevicepipelineexecutablepropertiesfeatureskhr = 1000269000,
    Structuretypepipelineinfokhr = 1000269001,
    Structuretypepipelineexecutablepropertieskhr = 1000269002,
    Structuretypepipelineexecutableinfokhr = 1000269003,
    Structuretypepipelineexecutablestatistickhr = 1000269004,
    Structuretypepipelineexecutableinternalrepresentationkhr = 1000269005,
    Structuretypephysicaldevicehostimagecopyfeaturesext = 1000270000,
    Structuretypephysicaldevicehostimagecopypropertiesext = 1000270001,
    Structuretypememorytoimagecopyext = 1000270002,
    Structuretypeimagetomemorycopyext = 1000270003,
    Structuretypecopyimagetomemoryinfoext = 1000270004,
    Structuretypecopymemorytoimageinfoext = 1000270005,
    Structuretypehostimagelayouttransitioninfoext = 1000270006,
    Structuretypecopyimagetoimageinfoext = 1000270007,
    Structuretypesubresourcehostmemcpysizeext = 1000270008,
    Structuretypehostimagecopydeviceperformancequeryext = 1000270009,
    Structuretypememorymapinfokhr = 1000271000,
    Structuretypememoryunmapinfokhr = 1000271001,
    Structuretypephysicaldevicemapmemoryplacedfeaturesext = 1000272000,
    Structuretypephysicaldevicemapmemoryplacedpropertiesext = 1000272001,
    Structuretypememorymapplacedinfoext = 1000272002,
    Structuretypephysicaldeviceshaderatomicfloat2featuresext = 1000273000,
    Structuretypesurfacepresentmodeext = 1000274000,
    Structuretypesurfacepresentscalingcapabilitiesext = 1000274001,
    Structuretypesurfacepresentmodecompatibilityext = 1000274002,
    Structuretypephysicaldeviceswapchainmaintenance1featuresext = 1000275000,
    Structuretypeswapchainpresentfenceinfoext = 1000275001,
    Structuretypeswapchainpresentmodescreateinfoext = 1000275002,
    Structuretypeswapchainpresentmodeinfoext = 1000275003,
    Structuretypeswapchainpresentscalingcreateinfoext = 1000275004,
    Structuretypereleaseswapchainimagesinfoext = 1000275005, Structuretypephysicaldeviceshaderdemotetohelperinvocationfeatures = 1000276000, Structuretypephysicaldevicedevicegeneratedcommandspropertiesnv = 1000277000,
    Structuretypegraphicsshadergroupcreateinfonv = 1000277001,
    Structuretypegraphicspipelineshadergroupscreateinfonv = 1000277002,
    Structuretypeindirectcommandslayouttokennv = 1000277003,
    Structuretypeindirectcommandslayoutcreateinfonv = 1000277004,
    Structuretypegeneratedcommandsinfonv = 1000277005,
    Structuretypegeneratedcommandsmemoryrequirementsinfonv = 1000277006,
    Structuretypephysicaldevicedevicegeneratedcommandsfeaturesnv = 1000277007,
    Structuretypephysicaldeviceinheritedviewportscissorfeaturesnv = 1000278000,
    Structuretypecommandbufferinheritanceviewportscissorinfonv = 1000278001,
    Structuretypephysicaldeviceshaderintegerdotproductfeatures = 1000280000,
    Structuretypephysicaldeviceshaderintegerdotproductproperties = 1000280001,
    Structuretypephysicaldevicetexelbufferalignmentfeaturesext = 1000281000,
    Structuretypephysicaldevicetexelbufferalignmentproperties = 1000281001, Structuretypecommandbufferinheritancerenderpasstransforminfoqcom = 1000282000,
    Structuretyperenderpasstransformbegininfoqcom = 1000282001,
    Structuretypephysicaldevicedepthbiascontrolfeaturesext = 1000283000,
    Structuretypedepthbiasinfoext = 1000283001,
    Structuretypedepthbiasrepresentationinfoext = 1000283002,
    Structuretypephysicaldevicedevicememoryreportfeaturesext = 1000284000,
    Structuretypedevicedevicememoryreportcreateinfoext = 1000284001,
    Structuretypedevicememoryreportcallbackdataext = 1000284002,
    Structuretypephysicaldevicerobustness2featuresext = 1000286000,
    Structuretypephysicaldevicerobustness2propertiesext = 1000286001,
    Structuretypesamplercustombordercolorcreateinfoext = 1000287000,
    Structuretypephysicaldevicecustombordercolorpropertiesext = 1000287001,
    Structuretypephysicaldevicecustombordercolorfeaturesext = 1000287002,
    Structuretypepipelinelibrarycreateinfokhr = 1000290000,
    Structuretypephysicaldevicepresentbarrierfeaturesnv = 1000292000,
    Structuretypesurfacecapabilitiespresentbarriernv = 1000292001,
    Structuretypeswapchainpresentbarriercreateinfonv = 1000292002,
    Structuretypepresentidkhr = 1000294000,
    Structuretypephysicaldevicepresentidfeatureskhr = 1000294001,
    Structuretypephysicaldeviceprivatedatafeatures = 1000295000,
    Structuretypedeviceprivatedatacreateinfo = 1000295001,
    Structuretypeprivatedataslotcreateinfo = 1000295002, Structuretypephysicaldevicepipelinecreationcachecontrolfeatures = 1000297000,
    Structuretypevideoencodeinfokhr = 1000299000,
    Structuretypevideoencoderatecontrolinfokhr = 1000299001,
    Structuretypevideoencoderatecontrollayerinfokhr = 1000299002,
    Structuretypevideoencodecapabilitieskhr = 1000299003,
    Structuretypevideoencodeusageinfokhr = 1000299004,
    Structuretypequerypoolvideoencodefeedbackcreateinfokhr = 1000299005,
    Structuretypephysicaldevicevideoencodequalitylevelinfokhr = 1000299006,
    Structuretypevideoencodequalitylevelpropertieskhr = 1000299007,
    Structuretypevideoencodequalitylevelinfokhr = 1000299008,
    Structuretypevideoencodesessionparametersgetinfokhr = 1000299009,
    Structuretypevideoencodesessionparametersfeedbackinfokhr = 1000299010,
    Structuretypephysicaldevicediagnosticsconfigfeaturesnv = 1000300000,
    Structuretypedevicediagnosticsconfigcreateinfonv = 1000300001,
    Structuretypecudamodulecreateinfonv = 1000307000,
    Structuretypecudafunctioncreateinfonv = 1000307001,
    Structuretypecudalaunchinfonv = 1000307002,
    Structuretypephysicaldevicecudakernellaunchfeaturesnv = 1000307003,
    Structuretypephysicaldevicecudakernellaunchpropertiesnv = 1000307004,
    Structuretypequerylowlatencysupportnv = 1000310000,
    Structuretypeexportmetalobjectcreateinfoext = 1000311000,
    Structuretypeexportmetalobjectsinfoext = 1000311001,
    Structuretypeexportmetaldeviceinfoext = 1000311002,
    Structuretypeexportmetalcommandqueueinfoext = 1000311003,
    Structuretypeexportmetalbufferinfoext = 1000311004,
    Structuretypeimportmetalbufferinfoext = 1000311005,
    Structuretypeexportmetaltextureinfoext = 1000311006,
    Structuretypeimportmetaltextureinfoext = 1000311007,
    Structuretypeexportmetaliosurfaceinfoext = 1000311008,
    Structuretypeimportmetaliosurfaceinfoext = 1000311009,
    Structuretypeexportmetalsharedeventinfoext = 1000311010,
    Structuretypeimportmetalsharedeventinfoext = 1000311011,
    Structuretypememorybarrier2 = 1000314000,
    Structuretypebuffermemorybarrier2 = 1000314001,
    Structuretypeimagememorybarrier2 = 1000314002,
    Structuretypedependencyinfo = 1000314003,
    Structuretypesubmitinfo2 = 1000314004,
    Structuretypesemaphoresubmitinfo = 1000314005,
    Structuretypecommandbuffersubmitinfo = 1000314006,
    Structuretypephysicaldevicesynchronization2features = 1000314007,
    Structuretypequeuefamilycheckpointproperties2nv = 1000314008,
    Structuretypecheckpointdata2nv = 1000314009,
    Structuretypephysicaldevicedescriptorbufferpropertiesext = 1000316000, Structuretypephysicaldevicedescriptorbufferdensitymappropertiesext = 1000316001,
    Structuretypephysicaldevicedescriptorbufferfeaturesext = 1000316002,
    Structuretypedescriptoraddressinfoext = 1000316003,
    Structuretypedescriptorgetinfoext = 1000316004,
    Structuretypebuffercapturedescriptordatainfoext = 1000316005,
    Structuretypeimagecapturedescriptordatainfoext = 1000316006,
    Structuretypeimageviewcapturedescriptordatainfoext = 1000316007,
    Structuretypesamplercapturedescriptordatainfoext = 1000316008, Structuretypeaccelerationstructurecapturedescriptordatainfoext = 1000316009,
    Structuretypeopaquecapturedescriptordatacreateinfoext = 1000316010,
    Structuretypedescriptorbufferbindinginfoext = 1000316011, Structuretypedescriptorbufferbindingpushdescriptorbufferhandleext = 1000316012,
    Structuretypephysicaldevicegraphicspipelinelibraryfeaturesext = 1000320000, Structuretypephysicaldevicegraphicspipelinelibrarypropertiesext = 1000320001,
    Structuretypegraphicspipelinelibrarycreateinfoext = 1000320002, Structuretypephysicaldeviceshaderearlyandlatefragmenttestsfeaturesamd = 1000321000, Structuretypephysicaldevicefragmentshaderbarycentricpropertieskhr = 1000322000, Structuretypephysicaldeviceshadersubgroupuniformcontrolflowfeatureskhr = 1000323000, Structuretypephysicaldevicezeroinitializeworkgroupmemoryfeatures = 1000325000, Structuretypephysicaldevicefragmentshadingrateenumspropertiesnv = 1000326000,
    Structuretypephysicaldevicefragmentshadingrateenumsfeaturesnv = 1000326001,
    Structuretypepipelinefragmentshadingrateenumstatecreateinfonv = 1000326002, Structuretypeaccelerationstructuregeometrymotiontrianglesdatanv = 1000327000,
    Structuretypephysicaldeviceraytracingmotionblurfeaturesnv = 1000327001,
    Structuretypeaccelerationstructuremotioninfonv = 1000327002,
    Structuretypephysicaldevicemeshshaderfeaturesext = 1000328000,
    Structuretypephysicaldevicemeshshaderpropertiesext = 1000328001,
    Structuretypephysicaldeviceycbcr2plane444formatsfeaturesext = 1000330000,
    Structuretypephysicaldevicefragmentdensitymap2featuresext = 1000332000,
    Structuretypephysicaldevicefragmentdensitymap2propertiesext = 1000332001,
    Structuretypecopycommandtransforminfoqcom = 1000333000,
    Structuretypephysicaldeviceimagerobustnessfeatures = 1000335000, Structuretypephysicaldeviceworkgroupmemoryexplicitlayoutfeatureskhr = 1000336000,
    Structuretypecopybufferinfo2 = 1000337000,
    Structuretypecopyimageinfo2 = 1000337001,
    Structuretypecopybuffertoimageinfo2 = 1000337002,
    Structuretypecopyimagetobufferinfo2 = 1000337003,
    Structuretypeblitimageinfo2 = 1000337004,
    Structuretyperesolveimageinfo2 = 1000337005,
    Structuretypebuffercopy2 = 1000337006, Structuretypeimagecopy2 = 1000337007,
    Structuretypeimageblit2 = 1000337008,
    Structuretypebufferimagecopy2 = 1000337009,
    Structuretypeimageresolve2 = 1000337010,
    Structuretypephysicaldeviceimagecompressioncontrolfeaturesext = 1000338000,
    Structuretypeimagecompressioncontrolext = 1000338001,
    Structuretypesubresourcelayout2khr = 1000338002,
    Structuretypeimagesubresource2khr = 1000338003,
    Structuretypeimagecompressionpropertiesext = 1000338004, Structuretypephysicaldeviceattachmentfeedbacklooplayoutfeaturesext = 1000339000,
    Structuretypephysicaldevice4444formatsfeaturesext = 1000340000,
    Structuretypephysicaldevicefaultfeaturesext = 1000341000,
    Structuretypedevicefaultcountsext = 1000341001,
    Structuretypedevicefaultinfoext = 1000341002, Structuretypephysicaldevicerasterizationorderattachmentaccessfeaturesext = 1000342000,
    Structuretypephysicaldevicergba10x6formatsfeaturesext = 1000344000,
    Structuretypedirectfbsurfacecreateinfoext = 1000346000,
    Structuretypephysicaldeviceraytracingpipelinefeatureskhr = 1000347000,
    Structuretypephysicaldeviceraytracingpipelinepropertieskhr = 1000347001,
    Structuretypephysicaldevicerayqueryfeatureskhr = 1000348013,
    Structuretypephysicaldevicemutabledescriptortypefeaturesext = 1000351000,
    Structuretypemutabledescriptortypecreateinfoext = 1000351002,
    Structuretypephysicaldevicevertexinputdynamicstatefeaturesext = 1000352000,
    Structuretypevertexinputbindingdescription2ext = 1000352001,
    Structuretypevertexinputattributedescription2ext = 1000352002,
    Structuretypephysicaldevicedrmpropertiesext = 1000353000,
    Structuretypephysicaldeviceaddressbindingreportfeaturesext = 1000354000,
    Structuretypedeviceaddressbindingcallbackdataext = 1000354001,
    Structuretypephysicaldevicedepthclipcontrolfeaturesext = 1000355000,
    Structuretypepipelineviewportdepthclipcontrolcreateinfoext = 1000355001, Structuretypephysicaldeviceprimitivetopologylistrestartfeaturesext = 1000356000,
    Structuretypeformatproperties3 = 1000360000,
    Structuretypeimportmemoryzirconhandleinfofuchsia = 1000364000,
    Structuretypememoryzirconhandlepropertiesfuchsia = 1000364001,
    Structuretypememorygetzirconhandleinfofuchsia = 1000364002,
    Structuretypeimportsemaphorezirconhandleinfofuchsia = 1000365000,
    Structuretypesemaphoregetzirconhandleinfofuchsia = 1000365001,
    Structuretypebuffercollectioncreateinfofuchsia = 1000366000,
    Structuretypeimportmemorybuffercollectionfuchsia = 1000366001,
    Structuretypebuffercollectionimagecreateinfofuchsia = 1000366002,
    Structuretypebuffercollectionpropertiesfuchsia = 1000366003,
    Structuretypebufferconstraintsinfofuchsia = 1000366004,
    Structuretypebuffercollectionbuffercreateinfofuchsia = 1000366005,
    Structuretypeimageconstraintsinfofuchsia = 1000366006,
    Structuretypeimageformatconstraintsinfofuchsia = 1000366007,
    Structuretypesysmemcolorspacefuchsia = 1000366008,
    Structuretypebuffercollectionconstraintsinfofuchsia = 1000366009,
    Structuretypesubpassshadingpipelinecreateinfohuawei = 1000369000,
    Structuretypephysicaldevicesubpassshadingfeatureshuawei = 1000369001,
    Structuretypephysicaldevicesubpassshadingpropertieshuawei = 1000369002,
    Structuretypephysicaldeviceinvocationmaskfeatureshuawei = 1000370000,
    Structuretypememorygetremoteaddressinfonv = 1000371000,
    Structuretypephysicaldeviceexternalmemoryrdmafeaturesnv = 1000371001,
    Structuretypepipelinepropertiesidentifierext = 1000372000,
    Structuretypephysicaldevicepipelinepropertiesfeaturesext = 1000372001,
    Structuretypephysicaldeviceframeboundaryfeaturesext = 1000375000,
    Structuretypeframeboundaryext = 1000375001, Structuretypephysicaldevicemultisampledrendertosinglesampledfeaturesext = 1000376000,
    Structuretypesubpassresolveperformancequeryext = 1000376001,
    Structuretypemultisampledrendertosinglesampledinfoext = 1000376002,
    Structuretypephysicaldeviceextendeddynamicstate2featuresext = 1000377000,
    Structuretypescreensurfacecreateinfoqnx = 1000378000,
    Structuretypephysicaldevicecolorwriteenablefeaturesext = 1000381000,
    Structuretypepipelinecolorwritecreateinfoext = 1000381001, Structuretypephysicaldeviceprimitivesgeneratedqueryfeaturesext = 1000382000,
    Structuretypephysicaldeviceraytracingmaintenance1featureskhr = 1000386000,
    Structuretypephysicaldeviceglobalpriorityqueryfeatureskhr = 1000388000,
    Structuretypequeuefamilyglobalprioritypropertieskhr = 1000388001,
    Structuretypephysicaldeviceimageviewminlodfeaturesext = 1000391000,
    Structuretypeimageviewminlodcreateinfoext = 1000391001,
    Structuretypephysicaldevicemultidrawfeaturesext = 1000392000,
    Structuretypephysicaldevicemultidrawpropertiesext = 1000392001,
    Structuretypephysicaldeviceimage2dviewof3dfeaturesext = 1000393000,
    Structuretypephysicaldeviceshadertileimagefeaturesext = 1000395000,
    Structuretypephysicaldeviceshadertileimagepropertiesext = 1000395001,
    Structuretypemicromapbuildinfoext = 1000396000,
    Structuretypemicromapversioninfoext = 1000396001,
    Structuretypecopymicromapinfoext = 1000396002,
    Structuretypecopymicromaptomemoryinfoext = 1000396003,
    Structuretypecopymemorytomicromapinfoext = 1000396004,
    Structuretypephysicaldeviceopacitymicromapfeaturesext = 1000396005,
    Structuretypephysicaldeviceopacitymicromappropertiesext = 1000396006,
    Structuretypemicromapcreateinfoext = 1000396007,
    Structuretypemicromapbuildsizesinfoext = 1000396008,
    Structuretypeaccelerationstructuretrianglesopacitymicromapext = 1000396009,
    Structuretypephysicaldeviceclustercullingshaderfeatureshuawei = 1000404000, Structuretypephysicaldeviceclustercullingshaderpropertieshuawei = 1000404001, Structuretypephysicaldeviceclustercullingshadervrsfeatureshuawei = 1000404002,
    Structuretypephysicaldevicebordercolorswizzlefeaturesext = 1000411000,
    Structuretypesamplerbordercolorcomponentmappingcreateinfoext = 1000411001, Structuretypephysicaldevicepageabledevicelocalmemoryfeaturesext = 1000412000,
    Structuretypephysicaldevicemaintenance4features = 1000413000,
    Structuretypephysicaldevicemaintenance4properties = 1000413001,
    Structuretypedevicebuffermemoryrequirements = 1000413002,
    Structuretypedeviceimagememoryrequirements = 1000413003,
    Structuretypephysicaldeviceshadercorepropertiesarm = 1000415000,
    Structuretypephysicaldeviceshadersubgrouprotatefeatureskhr = 1000416000,
    Structuretypedevicequeueshadercorecontrolcreateinfoarm = 1000417000,
    Structuretypephysicaldeviceschedulingcontrolsfeaturesarm = 1000417001,
    Structuretypephysicaldeviceschedulingcontrolspropertiesarm = 1000417002,
    Structuretypephysicaldeviceimageslicedviewof3dfeaturesext = 1000418000,
    Structuretypeimageviewslicedcreateinfoext = 1000418001, Structuretypephysicaldevicedescriptorsethostmappingfeaturesvalve = 1000420000,
    Structuretypedescriptorsetbindingreferencevalve = 1000420001,
    Structuretypedescriptorsetlayouthostmappinginfovalve = 1000420002,
    Structuretypephysicaldevicedepthclampzeroonefeaturesext = 1000421000,
    Structuretypephysicaldevicenonseamlesscubemapfeaturesext = 1000422000,
    Structuretypephysicaldevicerenderpassstripedfeaturesarm = 1000424000,
    Structuretypephysicaldevicerenderpassstripedpropertiesarm = 1000424001,
    Structuretyperenderpassstripebegininfoarm = 1000424002,
    Structuretyperenderpassstripeinfoarm = 1000424003,
    Structuretyperenderpassstripesubmitinfoarm = 1000424004, Structuretypephysicaldevicefragmentdensitymapoffsetfeaturesqcom = 1000425000, Structuretypephysicaldevicefragmentdensitymapoffsetpropertiesqcom = 1000425001,
    Structuretypesubpassfragmentdensitymapoffsetendinfoqcom = 1000425002,
    Structuretypephysicaldevicecopymemoryindirectfeaturesnv = 1000426000,
    Structuretypephysicaldevicecopymemoryindirectpropertiesnv = 1000426001,
    Structuretypephysicaldevicememorydecompressionfeaturesnv = 1000427000,
    Structuretypephysicaldevicememorydecompressionpropertiesnv = 1000427001, Structuretypephysicaldevicedevicegeneratedcommandscomputefeaturesnv = 1000428000,
    Structuretypecomputepipelineindirectbufferinfonv = 1000428001,
    Structuretypepipelineindirectdeviceaddressinfonv = 1000428002,
    Structuretypephysicaldevicelinearcolorattachmentfeaturesnv = 1000430000, Structuretypephysicaldeviceshadermaximalreconvergencefeatureskhr = 1000434000, Structuretypephysicaldeviceimagecompressioncontrolswapchainfeaturesext = 1000437000,
    Structuretypephysicaldeviceimageprocessingfeaturesqcom = 1000440000,
    Structuretypephysicaldeviceimageprocessingpropertiesqcom = 1000440001,
    Structuretypeimageviewsampleweightcreateinfoqcom = 1000440002,
    Structuretypephysicaldevicenestedcommandbufferfeaturesext = 1000451000,
    Structuretypephysicaldevicenestedcommandbufferpropertiesext = 1000451001,
    Structuretypeexternalmemoryacquireunmodifiedext = 1000453000,
    Structuretypephysicaldeviceextendeddynamicstate3featuresext = 1000455000,
    Structuretypephysicaldeviceextendeddynamicstate3propertiesext = 1000455001,
    Structuretypephysicaldevicesubpassmergefeedbackfeaturesext = 1000458000,
    Structuretyperenderpasscreationcontrolext = 1000458001,
    Structuretyperenderpasscreationfeedbackcreateinfoext = 1000458002,
    Structuretyperenderpasssubpassfeedbackcreateinfoext = 1000458003,
    Structuretypedirectdriverloadinginfolunarg = 1000459000,
    Structuretypedirectdriverloadinglistlunarg = 1000459001,
    Structuretypephysicaldeviceshadermoduleidentifierfeaturesext = 1000462000, Structuretypephysicaldeviceshadermoduleidentifierpropertiesext = 1000462001,
    Structuretypepipelineshaderstagemoduleidentifiercreateinfoext = 1000462002,
    Structuretypeshadermoduleidentifierext = 1000462003,
    Structuretypephysicaldeviceopticalflowfeaturesnv = 1000464000,
    Structuretypephysicaldeviceopticalflowpropertiesnv = 1000464001,
    Structuretypeopticalflowimageformatinfonv = 1000464002,
    Structuretypeopticalflowimageformatpropertiesnv = 1000464003,
    Structuretypeopticalflowsessioncreateinfonv = 1000464004,
    Structuretypeopticalflowexecuteinfonv = 1000464005,
    Structuretypeopticalflowsessioncreateprivatedatainfonv = 1000464010,
    Structuretypephysicaldevicelegacyditheringfeaturesext = 1000465000,
    Structuretypephysicaldevicepipelineprotectedaccessfeaturesext = 1000466000, Structuretypephysicaldeviceexternalformatresolvefeaturesandroid = 1000468000, Structuretypephysicaldeviceexternalformatresolvepropertiesandroid = 1000468001, Structuretypeandroidhardwarebufferformatresolvepropertiesandroid = 1000468002,
    Structuretypephysicaldevicemaintenance5featureskhr = 1000470000,
    Structuretypephysicaldevicemaintenance5propertieskhr = 1000470001,
    Structuretyperenderingareainfokhr = 1000470003,
    Structuretypedeviceimagesubresourceinfokhr = 1000470004,
    Structuretypepipelinecreateflags2createinfokhr = 1000470005,
    Structuretypebufferusageflags2createinfokhr = 1000470006,
    Structuretypephysicaldeviceraytracingpositionfetchfeatureskhr = 1000481000,
    Structuretypephysicaldeviceshaderobjectfeaturesext = 1000482000,
    Structuretypephysicaldeviceshaderobjectpropertiesext = 1000482001,
    Structuretypeshadercreateinfoext = 1000482002,
    Structuretypephysicaldevicetilepropertiesfeaturesqcom = 1000484000,
    Structuretypetilepropertiesqcom = 1000484001,
    Structuretypephysicaldeviceamigoprofilingfeaturessec = 1000485000,
    Structuretypeamigoprofilingsubmitinfosec = 1000485001, Structuretypephysicaldevicemultiviewperviewviewportsfeaturesqcom = 1000488000, Structuretypephysicaldeviceraytracinginvocationreorderfeaturesnv = 1000490000, Structuretypephysicaldeviceraytracinginvocationreorderpropertiesnv = 1000490001, Structuretypephysicaldeviceextendedsparseaddressspacefeaturesnv = 1000492000, Structuretypephysicaldeviceextendedsparseaddressspacepropertiesnv = 1000492001,
    Structuretypelayersettingscreateinfoext = 1000496000,
    Structuretypephysicaldeviceshadercorebuiltinsfeaturesarm = 1000497000,
    Structuretypephysicaldeviceshadercorebuiltinspropertiesarm = 1000497001, Structuretypephysicaldevicepipelinelibrarygrouphandlesfeaturesext = 1000498000, Structuretypephysicaldevicedynamicrenderingunusedattachmentsfeaturesext = 1000499000,
    Structuretypelatencysleepmodeinfonv = 1000505000,
    Structuretypelatencysleepinfonv = 1000505001,
    Structuretypesetlatencymarkerinfonv = 1000505002,
    Structuretypegetlatencymarkerinfonv = 1000505003,
    Structuretypelatencytimingsframereportnv = 1000505004,
    Structuretypelatencysubmissionpresentidnv = 1000505005,
    Structuretypeoutofbandqueuetypeinfonv = 1000505006,
    Structuretypeswapchainlatencycreateinfonv = 1000505007,
    Structuretypelatencysurfacecapabilitiesnv = 1000505008,
    Structuretypephysicaldevicecooperativematrixfeatureskhr = 1000506000,
    Structuretypecooperativematrixpropertieskhr = 1000506001,
    Structuretypephysicaldevicecooperativematrixpropertieskhr = 1000506002, Structuretypephysicaldevicemultiviewperviewrenderareasfeaturesqcom = 1000510000, Structuretypemultiviewperviewrenderareasrenderpassbegininfoqcom = 1000510001,
    Structuretypevideodecodeav1capabilitieskhr = 1000512000,
    Structuretypevideodecodeav1pictureinfokhr = 1000512001,
    Structuretypevideodecodeav1profileinfokhr = 1000512003,
    Structuretypevideodecodeav1sessionparameterscreateinfokhr = 1000512004,
    Structuretypevideodecodeav1dpbslotinfokhr = 1000512005,
    Structuretypephysicaldevicevideomaintenance1featureskhr = 1000515000,
    Structuretypevideoinlinequeryinfokhr = 1000515001,
    Structuretypephysicaldeviceperstagedescriptorsetfeaturesnv = 1000516000,
    Structuretypephysicaldeviceimageprocessing2featuresqcom = 1000518000,
    Structuretypephysicaldeviceimageprocessing2propertiesqcom = 1000518001,
    Structuretypesamplerblockmatchwindowcreateinfoqcom = 1000518002,
    Structuretypesamplercubicweightscreateinfoqcom = 1000519000,
    Structuretypephysicaldevicecubicweightsfeaturesqcom = 1000519001,
    Structuretypeblitimagecubicweightsinfoqcom = 1000519002,
    Structuretypephysicaldeviceycbcrdegammafeaturesqcom = 1000520000,
    Structuretypesamplerycbcrconversionycbcrdegammacreateinfoqcom = 1000520001,
    Structuretypephysicaldevicecubicclampfeaturesqcom = 1000521000, Structuretypephysicaldeviceattachmentfeedbackloopdynamicstatefeaturesext = 1000524000, Structuretypephysicaldevicevertexattributedivisorpropertieskhr = 1000525000,
    Structuretypephysicaldeviceshaderfloatcontrols2featureskhr = 1000528000,
    Structuretypescreenbufferpropertiesqnx = 1000529000,
    Structuretypescreenbufferformatpropertiesqnx = 1000529001,
    Structuretypeimportscreenbufferinfoqnx = 1000529002,
    Structuretypeexternalformatqnx = 1000529003, Structuretypephysicaldeviceexternalmemoryscreenbufferfeaturesqnx = 1000529004,
    Structuretypephysicaldevicelayereddriverpropertiesmsft = 1000530000,
    Structuretypephysicaldeviceshaderexpectassumefeatureskhr = 1000544000,
    Structuretypephysicaldevicemaintenance6featureskhr = 1000545000,
    Structuretypephysicaldevicemaintenance6propertieskhr = 1000545001,
    Structuretypebindmemorystatuskhr = 1000545002,
    Structuretypebinddescriptorsetsinfokhr = 1000545003,
    Structuretypepushconstantsinfokhr = 1000545004,
    Structuretypepushdescriptorsetinfokhr = 1000545005,
    Structuretypepushdescriptorsetwithtemplateinfokhr = 1000545006,
    Structuretypesetdescriptorbufferoffsetsinfoext = 1000545007,
    Structuretypebinddescriptorbufferembeddedsamplersinfoext = 1000545008, Structuretypephysicaldevicedescriptorpooloverallocationfeaturesnv = 1000546000,
    Structuretypephysicaldevicerawaccesschainsfeaturesnv = 1000555000, Structuretypephysicaldeviceshaderatomicfloat16vectorfeaturesnv = 1000563000,
    Structuretypemaxenum = 2147483647
const
  Structuretypephysicaldevicevariablepointerfeatures* = enumvkstructuretype.Structuretypephysicaldevicevariablepointersfeatures
const
  Structuretypephysicaldeviceshaderdrawparameterfeatures* = enumvkstructuretype.Structuretypephysicaldeviceshaderdrawparametersfeatures
const
  Structuretypedebugreportcreateinfoext* = enumvkstructuretype.Structuretypedebugreportcallbackcreateinfoext
const
  Structuretyperenderinginfokhr* = enumvkstructuretype.Structuretyperenderinginfo
const
  Structuretyperenderingattachmentinfokhr* = enumvkstructuretype.Structuretyperenderingattachmentinfo
const
  Structuretypepipelinerenderingcreateinfokhr* = enumvkstructuretype.Structuretypepipelinerenderingcreateinfo
const
  Structuretypephysicaldevicedynamicrenderingfeatureskhr* = enumvkstructuretype.Structuretypephysicaldevicedynamicrenderingfeatures
const
  Structuretypecommandbufferinheritancerenderinginfokhr* = enumvkstructuretype.Structuretypecommandbufferinheritancerenderinginfo
const
  Structuretypeattachmentsamplecountinfonv* = enumvkstructuretype.Structuretypeattachmentsamplecountinfoamd
const
  Structuretyperenderpassmultiviewcreateinfokhr* = enumvkstructuretype.Structuretyperenderpassmultiviewcreateinfo
const
  Structuretypephysicaldevicemultiviewfeatureskhr* = enumvkstructuretype.Structuretypephysicaldevicemultiviewfeatures
const
  Structuretypephysicaldevicemultiviewpropertieskhr* = enumvkstructuretype.Structuretypephysicaldevicemultiviewproperties
const
  Structuretypephysicaldevicefeatures2khr* = enumvkstructuretype.Structuretypephysicaldevicefeatures2
const
  Structuretypephysicaldeviceproperties2khr* = enumvkstructuretype.Structuretypephysicaldeviceproperties2
const
  Structuretypeformatproperties2khr* = enumvkstructuretype.Structuretypeformatproperties2
const
  Structuretypeimageformatproperties2khr* = enumvkstructuretype.Structuretypeimageformatproperties2
const
  Structuretypephysicaldeviceimageformatinfo2khr* = enumvkstructuretype.Structuretypephysicaldeviceimageformatinfo2
const
  Structuretypequeuefamilyproperties2khr* = enumvkstructuretype.Structuretypequeuefamilyproperties2
const
  Structuretypephysicaldevicememoryproperties2khr* = enumvkstructuretype.Structuretypephysicaldevicememoryproperties2
const
  Structuretypesparseimageformatproperties2khr* = enumvkstructuretype.Structuretypesparseimageformatproperties2
const
  Structuretypephysicaldevicesparseimageformatinfo2khr* = enumvkstructuretype.Structuretypephysicaldevicesparseimageformatinfo2
const
  Structuretypememoryallocateflagsinfokhr* = enumvkstructuretype.Structuretypememoryallocateflagsinfo
const
  Structuretypedevicegrouprenderpassbegininfokhr* = enumvkstructuretype.Structuretypedevicegrouprenderpassbegininfo
const
  Structuretypedevicegroupcommandbufferbegininfokhr* = enumvkstructuretype.Structuretypedevicegroupcommandbufferbegininfo
const
  Structuretypedevicegroupsubmitinfokhr* = enumvkstructuretype.Structuretypedevicegroupsubmitinfo
const
  Structuretypedevicegroupbindsparseinfokhr* = enumvkstructuretype.Structuretypedevicegroupbindsparseinfo
const
  Structuretypebindbuffermemorydevicegroupinfokhr* = enumvkstructuretype.Structuretypebindbuffermemorydevicegroupinfo
const
  Structuretypebindimagememorydevicegroupinfokhr* = enumvkstructuretype.Structuretypebindimagememorydevicegroupinfo
const
  Structuretypephysicaldevicetexturecompressionastchdrfeaturesext* = enumvkstructuretype.Structuretypephysicaldevicetexturecompressionastchdrfeatures
const
  Structuretypephysicaldevicegrouppropertieskhr* = enumvkstructuretype.Structuretypephysicaldevicegroupproperties
const
  Structuretypedevicegroupdevicecreateinfokhr* = enumvkstructuretype.Structuretypedevicegroupdevicecreateinfo
const
  Structuretypephysicaldeviceexternalimageformatinfokhr* = enumvkstructuretype.Structuretypephysicaldeviceexternalimageformatinfo
const
  Structuretypeexternalimageformatpropertieskhr* = enumvkstructuretype.Structuretypeexternalimageformatproperties
const
  Structuretypephysicaldeviceexternalbufferinfokhr* = enumvkstructuretype.Structuretypephysicaldeviceexternalbufferinfo
const
  Structuretypeexternalbufferpropertieskhr* = enumvkstructuretype.Structuretypeexternalbufferproperties
const
  Structuretypephysicaldeviceidpropertieskhr* = enumvkstructuretype.Structuretypephysicaldeviceidproperties
const
  Structuretypeexternalmemorybuffercreateinfokhr* = enumvkstructuretype.Structuretypeexternalmemorybuffercreateinfo
const
  Structuretypeexternalmemoryimagecreateinfokhr* = enumvkstructuretype.Structuretypeexternalmemoryimagecreateinfo
const
  Structuretypeexportmemoryallocateinfokhr* = enumvkstructuretype.Structuretypeexportmemoryallocateinfo
const
  Structuretypephysicaldeviceexternalsemaphoreinfokhr* = enumvkstructuretype.Structuretypephysicaldeviceexternalsemaphoreinfo
const
  Structuretypeexternalsemaphorepropertieskhr* = enumvkstructuretype.Structuretypeexternalsemaphoreproperties
const
  Structuretypeexportsemaphorecreateinfokhr* = enumvkstructuretype.Structuretypeexportsemaphorecreateinfo
const
  Structuretypephysicaldeviceshaderfloat16int8featureskhr* = enumvkstructuretype.Structuretypephysicaldeviceshaderfloat16int8features
const
  Structuretypephysicaldevicefloat16int8featureskhr* = enumvkstructuretype.Structuretypephysicaldeviceshaderfloat16int8features
const
  Structuretypephysicaldevice16bitstoragefeatureskhr* = enumvkstructuretype.Structuretypephysicaldevice16bitstoragefeatures
const
  Structuretypedescriptorupdatetemplatecreateinfokhr* = enumvkstructuretype.Structuretypedescriptorupdatetemplatecreateinfo
const
  Structuretypesurfacecapabilities2extenumval* = enumvkstructuretype.Structuretypesurfacecapabilities2ext
const
  Structuretypephysicaldeviceimagelessframebufferfeatureskhr* = enumvkstructuretype.Structuretypephysicaldeviceimagelessframebufferfeatures
const
  Structuretypeframebufferattachmentscreateinfokhr* = enumvkstructuretype.Structuretypeframebufferattachmentscreateinfo
const
  Structuretypeframebufferattachmentimageinfokhr* = enumvkstructuretype.Structuretypeframebufferattachmentimageinfo
const
  Structuretyperenderpassattachmentbegininfokhr* = enumvkstructuretype.Structuretyperenderpassattachmentbegininfo
const
  Structuretypeattachmentdescription2khr* = enumvkstructuretype.Structuretypeattachmentdescription2
const
  Structuretypeattachmentreference2khr* = enumvkstructuretype.Structuretypeattachmentreference2
const
  Structuretypesubpassdescription2khr* = enumvkstructuretype.Structuretypesubpassdescription2
const
  Structuretypesubpassdependency2khr* = enumvkstructuretype.Structuretypesubpassdependency2
const
  Structuretyperenderpasscreateinfo2khr* = enumvkstructuretype.Structuretyperenderpasscreateinfo2
const
  Structuretypesubpassbegininfokhr* = enumvkstructuretype.Structuretypesubpassbegininfo
const
  Structuretypesubpassendinfokhr* = enumvkstructuretype.Structuretypesubpassendinfo
const
  Structuretypephysicaldeviceexternalfenceinfokhr* = enumvkstructuretype.Structuretypephysicaldeviceexternalfenceinfo
const
  Structuretypeexternalfencepropertieskhr* = enumvkstructuretype.Structuretypeexternalfenceproperties
const
  Structuretypeexportfencecreateinfokhr* = enumvkstructuretype.Structuretypeexportfencecreateinfo
const
  Structuretypephysicaldevicepointclippingpropertieskhr* = enumvkstructuretype.Structuretypephysicaldevicepointclippingproperties
const
  Structuretyperenderpassinputattachmentaspectcreateinfokhr* = enumvkstructuretype.Structuretyperenderpassinputattachmentaspectcreateinfo
const
  Structuretypeimageviewusagecreateinfokhr* = enumvkstructuretype.Structuretypeimageviewusagecreateinfo
const
  Structuretypepipelinetessellationdomainoriginstatecreateinfokhr* = enumvkstructuretype.Structuretypepipelinetessellationdomainoriginstatecreateinfo
const
  Structuretypephysicaldevicevariablepointersfeatureskhr* = enumvkstructuretype.Structuretypephysicaldevicevariablepointersfeatures
const
  Structuretypephysicaldevicevariablepointerfeatureskhr* = enumvkstructuretype.Structuretypephysicaldevicevariablepointersfeatures
const
  Structuretypememorydedicatedrequirementskhr* = enumvkstructuretype.Structuretypememorydedicatedrequirements
const
  Structuretypememorydedicatedallocateinfokhr* = enumvkstructuretype.Structuretypememorydedicatedallocateinfo
const
  Structuretypephysicaldevicesamplerfilterminmaxpropertiesext* = enumvkstructuretype.Structuretypephysicaldevicesamplerfilterminmaxproperties
const
  Structuretypesamplerreductionmodecreateinfoext* = enumvkstructuretype.Structuretypesamplerreductionmodecreateinfo
const
  Structuretypephysicaldeviceinlineuniformblockfeaturesext* = enumvkstructuretype.Structuretypephysicaldeviceinlineuniformblockfeatures
const
  Structuretypephysicaldeviceinlineuniformblockpropertiesext* = enumvkstructuretype.Structuretypephysicaldeviceinlineuniformblockproperties
const
  Structuretypewritedescriptorsetinlineuniformblockext* = enumvkstructuretype.Structuretypewritedescriptorsetinlineuniformblock
const
  Structuretypedescriptorpoolinlineuniformblockcreateinfoext* = enumvkstructuretype.Structuretypedescriptorpoolinlineuniformblockcreateinfo
const
  Structuretypebuffermemoryrequirementsinfo2khr* = enumvkstructuretype.Structuretypebuffermemoryrequirementsinfo2
const
  Structuretypeimagememoryrequirementsinfo2khr* = enumvkstructuretype.Structuretypeimagememoryrequirementsinfo2
const
  Structuretypeimagesparsememoryrequirementsinfo2khr* = enumvkstructuretype.Structuretypeimagesparsememoryrequirementsinfo2
const
  Structuretypememoryrequirements2khr* = enumvkstructuretype.Structuretypememoryrequirements2
const
  Structuretypesparseimagememoryrequirements2khr* = enumvkstructuretype.Structuretypesparseimagememoryrequirements2
const
  Structuretypeimageformatlistcreateinfokhr* = enumvkstructuretype.Structuretypeimageformatlistcreateinfo
const
  Structuretypesamplerycbcrconversioncreateinfokhr* = enumvkstructuretype.Structuretypesamplerycbcrconversioncreateinfo
const
  Structuretypesamplerycbcrconversioninfokhr* = enumvkstructuretype.Structuretypesamplerycbcrconversioninfo
const
  Structuretypebindimageplanememoryinfokhr* = enumvkstructuretype.Structuretypebindimageplanememoryinfo
const
  Structuretypeimageplanememoryrequirementsinfokhr* = enumvkstructuretype.Structuretypeimageplanememoryrequirementsinfo
const
  Structuretypephysicaldevicesamplerycbcrconversionfeatureskhr* = enumvkstructuretype.Structuretypephysicaldevicesamplerycbcrconversionfeatures
const
  Structuretypesamplerycbcrconversionimageformatpropertieskhr* = enumvkstructuretype.Structuretypesamplerycbcrconversionimageformatproperties
const
  Structuretypebindbuffermemoryinfokhr* = enumvkstructuretype.Structuretypebindbuffermemoryinfo
const
  Structuretypebindimagememoryinfokhr* = enumvkstructuretype.Structuretypebindimagememoryinfo
const
  Structuretypedescriptorsetlayoutbindingflagscreateinfoext* = enumvkstructuretype.Structuretypedescriptorsetlayoutbindingflagscreateinfo
const
  Structuretypephysicaldevicedescriptorindexingfeaturesext* = enumvkstructuretype.Structuretypephysicaldevicedescriptorindexingfeatures
const
  Structuretypephysicaldevicedescriptorindexingpropertiesext* = enumvkstructuretype.Structuretypephysicaldevicedescriptorindexingproperties
const
  Structuretypedescriptorsetvariabledescriptorcountallocateinfoext* = enumvkstructuretype.Structuretypedescriptorsetvariabledescriptorcountallocateinfo
const
  Structuretypedescriptorsetvariabledescriptorcountlayoutsupportext* = enumvkstructuretype.Structuretypedescriptorsetvariabledescriptorcountlayoutsupport
const
  Structuretypephysicaldevicemaintenance3propertieskhr* = enumvkstructuretype.Structuretypephysicaldevicemaintenance3properties
const
  Structuretypedescriptorsetlayoutsupportkhr* = enumvkstructuretype.Structuretypedescriptorsetlayoutsupport
const
  Structuretypedevicequeueglobalprioritycreateinfoext* = enumvkstructuretype.Structuretypedevicequeueglobalprioritycreateinfokhr
const
  Structuretypephysicaldeviceshadersubgroupextendedtypesfeatureskhr* = enumvkstructuretype.Structuretypephysicaldeviceshadersubgroupextendedtypesfeatures
const
  Structuretypephysicaldevice8bitstoragefeatureskhr* = enumvkstructuretype.Structuretypephysicaldevice8bitstoragefeatures
const
  Structuretypephysicaldeviceshaderatomicint64featureskhr* = enumvkstructuretype.Structuretypephysicaldeviceshaderatomicint64features
const
  Structuretypecalibratedtimestampinfoext* = enumvkstructuretype.Structuretypecalibratedtimestampinfokhr
const
  Structuretypepipelinevertexinputdivisorstatecreateinfoext* = enumvkstructuretype.Structuretypepipelinevertexinputdivisorstatecreateinfokhr
const
  Structuretypephysicaldevicevertexattributedivisorfeaturesext* = enumvkstructuretype.Structuretypephysicaldevicevertexattributedivisorfeatureskhr
const
  Structuretypepipelinecreationfeedbackcreateinfoext* = enumvkstructuretype.Structuretypepipelinecreationfeedbackcreateinfo
const
  Structuretypephysicaldevicedriverpropertieskhr* = enumvkstructuretype.Structuretypephysicaldevicedriverproperties
const
  Structuretypephysicaldevicefloatcontrolspropertieskhr* = enumvkstructuretype.Structuretypephysicaldevicefloatcontrolsproperties
const
  Structuretypephysicaldevicedepthstencilresolvepropertieskhr* = enumvkstructuretype.Structuretypephysicaldevicedepthstencilresolveproperties
const
  Structuretypesubpassdescriptiondepthstencilresolvekhr* = enumvkstructuretype.Structuretypesubpassdescriptiondepthstencilresolve
const
  Structuretypephysicaldevicefragmentshaderbarycentricfeaturesnv* = enumvkstructuretype.Structuretypephysicaldevicefragmentshaderbarycentricfeatureskhr
const
  Structuretypephysicaldevicetimelinesemaphorefeatureskhr* = enumvkstructuretype.Structuretypephysicaldevicetimelinesemaphorefeatures
const
  Structuretypephysicaldevicetimelinesemaphorepropertieskhr* = enumvkstructuretype.Structuretypephysicaldevicetimelinesemaphoreproperties
const
  Structuretypesemaphoretypecreateinfokhr* = enumvkstructuretype.Structuretypesemaphoretypecreateinfo
const
  Structuretypetimelinesemaphoresubmitinfokhr* = enumvkstructuretype.Structuretypetimelinesemaphoresubmitinfo
const
  Structuretypesemaphorewaitinfokhr* = enumvkstructuretype.Structuretypesemaphorewaitinfo
const
  Structuretypesemaphoresignalinfokhr* = enumvkstructuretype.Structuretypesemaphoresignalinfo
const
  Structuretypequerypoolcreateinfointel* = enumvkstructuretype.Structuretypequerypoolperformancequerycreateinfointel
const
  Structuretypephysicaldevicevulkanmemorymodelfeatureskhr* = enumvkstructuretype.Structuretypephysicaldevicevulkanmemorymodelfeatures
const
  Structuretypephysicaldeviceshaderterminateinvocationfeatureskhr* = enumvkstructuretype.Structuretypephysicaldeviceshaderterminateinvocationfeatures
const
  Structuretypephysicaldevicescalarblocklayoutfeaturesext* = enumvkstructuretype.Structuretypephysicaldevicescalarblocklayoutfeatures
const
  Structuretypephysicaldevicesubgroupsizecontrolpropertiesext* = enumvkstructuretype.Structuretypephysicaldevicesubgroupsizecontrolproperties
const
  Structuretypepipelineshaderstagerequiredsubgroupsizecreateinfoext* = enumvkstructuretype.Structuretypepipelineshaderstagerequiredsubgroupsizecreateinfo
const
  Structuretypephysicaldevicesubgroupsizecontrolfeaturesext* = enumvkstructuretype.Structuretypephysicaldevicesubgroupsizecontrolfeatures
const
  Structuretypephysicaldeviceseparatedepthstencillayoutsfeatureskhr* = enumvkstructuretype.Structuretypephysicaldeviceseparatedepthstencillayoutsfeatures
const
  Structuretypeattachmentreferencestencillayoutkhr* = enumvkstructuretype.Structuretypeattachmentreferencestencillayout
const
  Structuretypeattachmentdescriptionstencillayoutkhr* = enumvkstructuretype.Structuretypeattachmentdescriptionstencillayout
const
  Structuretypephysicaldevicebufferaddressfeaturesext* = enumvkstructuretype.Structuretypephysicaldevicebufferdeviceaddressfeaturesext
const
  Structuretypebufferdeviceaddressinfoext* = enumvkstructuretype.Structuretypebufferdeviceaddressinfo
const
  Structuretypephysicaldevicetoolpropertiesext* = enumvkstructuretype.Structuretypephysicaldevicetoolproperties
const
  Structuretypeimagestencilusagecreateinfoext* = enumvkstructuretype.Structuretypeimagestencilusagecreateinfo
const
  Structuretypephysicaldeviceuniformbufferstandardlayoutfeatureskhr* = enumvkstructuretype.Structuretypephysicaldeviceuniformbufferstandardlayoutfeatures
const
  Structuretypephysicaldevicebufferdeviceaddressfeatureskhr* = enumvkstructuretype.Structuretypephysicaldevicebufferdeviceaddressfeatures
const
  Structuretypebufferdeviceaddressinfokhr* = enumvkstructuretype.Structuretypebufferdeviceaddressinfo
const
  Structuretypebufferopaquecaptureaddresscreateinfokhr* = enumvkstructuretype.Structuretypebufferopaquecaptureaddresscreateinfo
const
  Structuretypememoryopaquecaptureaddressallocateinfokhr* = enumvkstructuretype.Structuretypememoryopaquecaptureaddressallocateinfo
const
  Structuretypedevicememoryopaquecaptureaddressinfokhr* = enumvkstructuretype.Structuretypedevicememoryopaquecaptureaddressinfo
const
  Structuretypephysicaldevicelinerasterizationfeaturesext* = enumvkstructuretype.Structuretypephysicaldevicelinerasterizationfeatureskhr
const
  Structuretypepipelinerasterizationlinestatecreateinfoext* = enumvkstructuretype.Structuretypepipelinerasterizationlinestatecreateinfokhr
const
  Structuretypephysicaldevicelinerasterizationpropertiesext* = enumvkstructuretype.Structuretypephysicaldevicelinerasterizationpropertieskhr
const
  Structuretypephysicaldevicehostqueryresetfeaturesext* = enumvkstructuretype.Structuretypephysicaldevicehostqueryresetfeatures
const
  Structuretypephysicaldeviceindextypeuint8featuresext* = enumvkstructuretype.Structuretypephysicaldeviceindextypeuint8featureskhr
const
  Structuretypephysicaldeviceshaderdemotetohelperinvocationfeaturesext* = enumvkstructuretype.Structuretypephysicaldeviceshaderdemotetohelperinvocationfeatures
const
  Structuretypephysicaldeviceshaderintegerdotproductfeatureskhr* = enumvkstructuretype.Structuretypephysicaldeviceshaderintegerdotproductfeatures
const
  Structuretypephysicaldeviceshaderintegerdotproductpropertieskhr* = enumvkstructuretype.Structuretypephysicaldeviceshaderintegerdotproductproperties
const
  Structuretypephysicaldevicetexelbufferalignmentpropertiesext* = enumvkstructuretype.Structuretypephysicaldevicetexelbufferalignmentproperties
const
  Structuretypephysicaldeviceprivatedatafeaturesext* = enumvkstructuretype.Structuretypephysicaldeviceprivatedatafeatures
const
  Structuretypedeviceprivatedatacreateinfoext* = enumvkstructuretype.Structuretypedeviceprivatedatacreateinfo
const
  Structuretypeprivatedataslotcreateinfoext* = enumvkstructuretype.Structuretypeprivatedataslotcreateinfo
const
  Structuretypephysicaldevicepipelinecreationcachecontrolfeaturesext* = enumvkstructuretype.Structuretypephysicaldevicepipelinecreationcachecontrolfeatures
const
  Structuretypememorybarrier2khr* = enumvkstructuretype.Structuretypememorybarrier2
const
  Structuretypebuffermemorybarrier2khr* = enumvkstructuretype.Structuretypebuffermemorybarrier2
const
  Structuretypeimagememorybarrier2khr* = enumvkstructuretype.Structuretypeimagememorybarrier2
const
  Structuretypedependencyinfokhr* = enumvkstructuretype.Structuretypedependencyinfo
const
  Structuretypesubmitinfo2khr* = enumvkstructuretype.Structuretypesubmitinfo2
const
  Structuretypesemaphoresubmitinfokhr* = enumvkstructuretype.Structuretypesemaphoresubmitinfo
const
  Structuretypecommandbuffersubmitinfokhr* = enumvkstructuretype.Structuretypecommandbuffersubmitinfo
const
  Structuretypephysicaldevicesynchronization2featureskhr* = enumvkstructuretype.Structuretypephysicaldevicesynchronization2features
const
  Structuretypephysicaldevicezeroinitializeworkgroupmemoryfeatureskhr* = enumvkstructuretype.Structuretypephysicaldevicezeroinitializeworkgroupmemoryfeatures
const
  Structuretypephysicaldeviceimagerobustnessfeaturesext* = enumvkstructuretype.Structuretypephysicaldeviceimagerobustnessfeatures
const
  Structuretypecopybufferinfo2khr* = enumvkstructuretype.Structuretypecopybufferinfo2
const
  Structuretypecopyimageinfo2khr* = enumvkstructuretype.Structuretypecopyimageinfo2
const
  Structuretypecopybuffertoimageinfo2khr* = enumvkstructuretype.Structuretypecopybuffertoimageinfo2
const
  Structuretypecopyimagetobufferinfo2khr* = enumvkstructuretype.Structuretypecopyimagetobufferinfo2
const
  Structuretypeblitimageinfo2khr* = enumvkstructuretype.Structuretypeblitimageinfo2
const
  Structuretyperesolveimageinfo2khr* = enumvkstructuretype.Structuretyperesolveimageinfo2
const
  Structuretypebuffercopy2khr* = enumvkstructuretype.Structuretypebuffercopy2
const
  Structuretypeimagecopy2khr* = enumvkstructuretype.Structuretypeimagecopy2
const
  Structuretypeimageblit2khr* = enumvkstructuretype.Structuretypeimageblit2
const
  Structuretypebufferimagecopy2khr* = enumvkstructuretype.Structuretypebufferimagecopy2
const
  Structuretypeimageresolve2khr* = enumvkstructuretype.Structuretypeimageresolve2
const
  Structuretypesubresourcelayout2ext* = enumvkstructuretype.Structuretypesubresourcelayout2khr
const
  Structuretypeimagesubresource2ext* = enumvkstructuretype.Structuretypeimagesubresource2khr
const
  Structuretypephysicaldevicerasterizationorderattachmentaccessfeaturesarm* = enumvkstructuretype.Structuretypephysicaldevicerasterizationorderattachmentaccessfeaturesext
const
  Structuretypephysicaldevicemutabledescriptortypefeaturesvalve* = enumvkstructuretype.Structuretypephysicaldevicemutabledescriptortypefeaturesext
const
  Structuretypemutabledescriptortypecreateinfovalve* = enumvkstructuretype.Structuretypemutabledescriptortypecreateinfoext
const
  Structuretypeformatproperties3khr* = enumvkstructuretype.Structuretypeformatproperties3
const
  Structuretypepipelineinfoext* = enumvkstructuretype.Structuretypepipelineinfokhr
const
  Structuretypephysicaldeviceglobalpriorityqueryfeaturesext* = enumvkstructuretype.Structuretypephysicaldeviceglobalpriorityqueryfeatureskhr
const
  Structuretypequeuefamilyglobalprioritypropertiesext* = enumvkstructuretype.Structuretypequeuefamilyglobalprioritypropertieskhr
const
  Structuretypephysicaldevicemaintenance4featureskhr* = enumvkstructuretype.Structuretypephysicaldevicemaintenance4features
const
  Structuretypephysicaldevicemaintenance4propertieskhr* = enumvkstructuretype.Structuretypephysicaldevicemaintenance4properties
const
  Structuretypedevicebuffermemoryrequirementskhr* = enumvkstructuretype.Structuretypedevicebuffermemoryrequirements
const
  Structuretypedeviceimagememoryrequirementskhr* = enumvkstructuretype.Structuretypedeviceimagememoryrequirements
const
  Structuretypeshaderrequiredsubgroupsizecreateinfoext* = enumvkstructuretype.Structuretypepipelineshaderstagerequiredsubgroupsizecreateinfo
type
  enumvkpipelinecacheheaderversion* {.size: sizeof(cuint).} = enum
    Pipelinecacheheaderversiononeenumval = 1,
    Pipelinecacheheaderversionmaxenum = 2147483647
type
  enumvkimagelayout* {.size: sizeof(cuint).} = enum
    Imagelayoutundefined = 0, Imagelayoutgeneral = 1,
    Imagelayoutcolorattachmentoptimal = 2,
    Imagelayoutdepthstencilattachmentoptimal = 3,
    Imagelayoutdepthstencilreadonlyoptimal = 4,
    Imagelayoutshaderreadonlyoptimal = 5, Imagelayouttransfersrcoptimal = 6,
    Imagelayouttransferdstoptimal = 7, Imagelayoutpreinitialized = 8,
    Imagelayoutpresentsrckhr = 1000001002,
    Imagelayoutvideodecodedstkhr = 1000024000,
    Imagelayoutvideodecodesrckhr = 1000024001,
    Imagelayoutvideodecodedpbkhr = 1000024002,
    Imagelayoutsharedpresentkhr = 1000111000,
    Imagelayoutdepthreadonlystencilattachmentoptimal = 1000117000,
    Imagelayoutdepthattachmentstencilreadonlyoptimal = 1000117001,
    Imagelayoutfragmentshadingrateattachmentoptimalkhr = 1000164003,
    Imagelayoutfragmentdensitymapoptimalext = 1000218000,
    Imagelayoutrenderinglocalreadkhr = 1000232000,
    Imagelayoutdepthattachmentoptimal = 1000241000,
    Imagelayoutdepthreadonlyoptimal = 1000241001,
    Imagelayoutstencilattachmentoptimal = 1000241002,
    Imagelayoutstencilreadonlyoptimal = 1000241003,
    Imagelayoutvideoencodedstkhr = 1000299000,
    Imagelayoutvideoencodesrckhr = 1000299001,
    Imagelayoutvideoencodedpbkhr = 1000299002,
    Imagelayoutreadonlyoptimal = 1000314000,
    Imagelayoutattachmentoptimal = 1000314001,
    Imagelayoutattachmentfeedbackloopoptimalext = 1000339000,
    Imagelayoutmaxenum = 2147483647
const
  Imagelayoutdepthreadonlystencilattachmentoptimalkhr* = enumvkimagelayout.Imagelayoutdepthreadonlystencilattachmentoptimal
const
  Imagelayoutdepthattachmentstencilreadonlyoptimalkhr* = enumvkimagelayout.Imagelayoutdepthattachmentstencilreadonlyoptimal
const
  Imagelayoutshadingrateoptimalnv* = enumvkimagelayout.Imagelayoutfragmentshadingrateattachmentoptimalkhr
const
  Imagelayoutdepthattachmentoptimalkhr* = enumvkimagelayout.Imagelayoutdepthattachmentoptimal
const
  Imagelayoutdepthreadonlyoptimalkhr* = enumvkimagelayout.Imagelayoutdepthreadonlyoptimal
const
  Imagelayoutstencilattachmentoptimalkhr* = enumvkimagelayout.Imagelayoutstencilattachmentoptimal
const
  Imagelayoutstencilreadonlyoptimalkhr* = enumvkimagelayout.Imagelayoutstencilreadonlyoptimal
const
  Imagelayoutreadonlyoptimalkhr* = enumvkimagelayout.Imagelayoutreadonlyoptimal
const
  Imagelayoutattachmentoptimalkhr* = enumvkimagelayout.Imagelayoutattachmentoptimal
type
  enumvkobjecttype* {.size: sizeof(cuint).} = enum
    Objecttypeunknown = 0, Objecttypeinstance = 1, Objecttypephysicaldevice = 2,
    Objecttypedevice = 3, Objecttypequeue = 4, Objecttypesemaphore = 5,
    Objecttypecommandbuffer = 6, Objecttypefence = 7,
    Objecttypedevicememory = 8, Objecttypebuffer = 9, Objecttypeimage = 10,
    Objecttypeevent = 11, Objecttypequerypool = 12, Objecttypebufferview = 13,
    Objecttypeimageview = 14, Objecttypeshadermodule = 15,
    Objecttypepipelinecache = 16, Objecttypepipelinelayout = 17,
    Objecttyperenderpass = 18, Objecttypepipeline = 19,
    Objecttypedescriptorsetlayout = 20, Objecttypesampler = 21,
    Objecttypedescriptorpool = 22, Objecttypedescriptorset = 23,
    Objecttypeframebuffer = 24, Objecttypecommandpool = 25,
    Objecttypesurfacekhr = 1000000000, Objecttypeswapchainkhr = 1000001000,
    Objecttypedisplaykhr = 1000002000, Objecttypedisplaymodekhr = 1000002001,
    Objecttypedebugreportcallbackext = 1000011000,
    Objecttypevideosessionkhr = 1000023000,
    Objecttypevideosessionparameterskhr = 1000023001,
    Objecttypecumodulenvx = 1000029000, Objecttypecufunctionnvx = 1000029001,
    Objecttypedescriptorupdatetemplate = 1000085000,
    Objecttypedebugutilsmessengerext = 1000128000,
    Objecttypeaccelerationstructurekhr = 1000150000,
    Objecttypesamplerycbcrconversion = 1000156000,
    Objecttypevalidationcacheext = 1000160000,
    Objecttypeaccelerationstructurenv = 1000165000,
    Objecttypeperformanceconfigurationintel = 1000210000,
    Objecttypedeferredoperationkhr = 1000268000,
    Objecttypeindirectcommandslayoutnv = 1000277000,
    Objecttypeprivatedataslot = 1000295000, Objecttypecudamodulenv = 1000307000,
    Objecttypecudafunctionnv = 1000307001,
    Objecttypebuffercollectionfuchsia = 1000366000,
    Objecttypemicromapext = 1000396000,
    Objecttypeopticalflowsessionnv = 1000464000,
    Objecttypeshaderext = 1000482000, Objecttypemaxenum = 2147483647
const
  Objecttypedescriptorupdatetemplatekhr* = enumvkobjecttype.Objecttypedescriptorupdatetemplate
const
  Objecttypesamplerycbcrconversionkhr* = enumvkobjecttype.Objecttypesamplerycbcrconversion
const
  Objecttypeprivatedataslotext* = enumvkobjecttype.Objecttypeprivatedataslot
type
  enumvkvendorid* {.size: sizeof(cuint).} = enum
    Vendoridviv = 65537, Vendoridvsi = 65538, Vendoridkazan = 65539,
    Vendoridcodeplay = 65540, Vendoridmesa = 65541, Vendoridpocl = 65542,
    Vendoridmobileye = 65543, Vendoridmaxenum = 2147483647
type
  enumvksystemallocationscope* {.size: sizeof(cuint).} = enum
    Systemallocationscopecommand = 0, Systemallocationscopeobject = 1,
    Systemallocationscopecache = 2, Systemallocationscopedevice = 3,
    Systemallocationscopeinstance = 4, Systemallocationscopemaxenum = 2147483647
type
  enumvkinternalallocationtype* {.size: sizeof(cuint).} = enum
    Internalallocationtypeexecutable = 0,
    Internalallocationtypemaxenum = 2147483647
type
  enumvkformat* {.size: sizeof(cuint).} = enum
    Formatundefined = 0, Formatr4g4unormpack8 = 1,
    Formatr4g4b4a4unormpack16 = 2, Formatb4g4r4a4unormpack16 = 3,
    Formatr5g6b5unormpack16 = 4, Formatb5g6r5unormpack16 = 5,
    Formatr5g5b5a1unormpack16 = 6, Formatb5g5r5a1unormpack16 = 7,
    Formata1r5g5b5unormpack16 = 8, Formatr8unorm = 9, Formatr8snorm = 10,
    Formatr8uscaled = 11, Formatr8sscaled = 12, Formatr8uint = 13,
    Formatr8sint = 14, Formatr8srgb = 15, Formatr8g8unorm = 16,
    Formatr8g8snorm = 17, Formatr8g8uscaled = 18, Formatr8g8sscaled = 19,
    Formatr8g8uint = 20, Formatr8g8sint = 21, Formatr8g8srgb = 22,
    Formatr8g8b8unorm = 23, Formatr8g8b8snorm = 24, Formatr8g8b8uscaled = 25,
    Formatr8g8b8sscaled = 26, Formatr8g8b8uint = 27, Formatr8g8b8sint = 28,
    Formatr8g8b8srgb = 29, Formatb8g8r8unorm = 30, Formatb8g8r8snorm = 31,
    Formatb8g8r8uscaled = 32, Formatb8g8r8sscaled = 33, Formatb8g8r8uint = 34,
    Formatb8g8r8sint = 35, Formatb8g8r8srgb = 36, Formatr8g8b8a8unorm = 37,
    Formatr8g8b8a8snorm = 38, Formatr8g8b8a8uscaled = 39,
    Formatr8g8b8a8sscaled = 40, Formatr8g8b8a8uint = 41,
    Formatr8g8b8a8sint = 42, Formatr8g8b8a8srgb = 43, Formatb8g8r8a8unorm = 44,
    Formatb8g8r8a8snorm = 45, Formatb8g8r8a8uscaled = 46,
    Formatb8g8r8a8sscaled = 47, Formatb8g8r8a8uint = 48,
    Formatb8g8r8a8sint = 49, Formatb8g8r8a8srgb = 50,
    Formata8b8g8r8unormpack32 = 51, Formata8b8g8r8snormpack32 = 52,
    Formata8b8g8r8uscaledpack32 = 53, Formata8b8g8r8sscaledpack32 = 54,
    Formata8b8g8r8uintpack32 = 55, Formata8b8g8r8sintpack32 = 56,
    Formata8b8g8r8srgbpack32 = 57, Formata2r10g10b10unormpack32 = 58,
    Formata2r10g10b10snormpack32 = 59, Formata2r10g10b10uscaledpack32 = 60,
    Formata2r10g10b10sscaledpack32 = 61, Formata2r10g10b10uintpack32 = 62,
    Formata2r10g10b10sintpack32 = 63, Formata2b10g10r10unormpack32 = 64,
    Formata2b10g10r10snormpack32 = 65, Formata2b10g10r10uscaledpack32 = 66,
    Formata2b10g10r10sscaledpack32 = 67, Formata2b10g10r10uintpack32 = 68,
    Formata2b10g10r10sintpack32 = 69, Formatr16unorm = 70, Formatr16snorm = 71,
    Formatr16uscaled = 72, Formatr16sscaled = 73, Formatr16uint = 74,
    Formatr16sint = 75, Formatr16sfloat = 76, Formatr16g16unorm = 77,
    Formatr16g16snorm = 78, Formatr16g16uscaled = 79, Formatr16g16sscaled = 80,
    Formatr16g16uint = 81, Formatr16g16sint = 82, Formatr16g16sfloat = 83,
    Formatr16g16b16unorm = 84, Formatr16g16b16snorm = 85,
    Formatr16g16b16uscaled = 86, Formatr16g16b16sscaled = 87,
    Formatr16g16b16uint = 88, Formatr16g16b16sint = 89,
    Formatr16g16b16sfloat = 90, Formatr16g16b16a16unorm = 91,
    Formatr16g16b16a16snorm = 92, Formatr16g16b16a16uscaled = 93,
    Formatr16g16b16a16sscaled = 94, Formatr16g16b16a16uint = 95,
    Formatr16g16b16a16sint = 96, Formatr16g16b16a16sfloat = 97,
    Formatr32uint = 98, Formatr32sint = 99, Formatr32sfloat = 100,
    Formatr32g32uint = 101, Formatr32g32sint = 102, Formatr32g32sfloat = 103,
    Formatr32g32b32uint = 104, Formatr32g32b32sint = 105,
    Formatr32g32b32sfloat = 106, Formatr32g32b32a32uint = 107,
    Formatr32g32b32a32sint = 108, Formatr32g32b32a32sfloat = 109,
    Formatr64uint = 110, Formatr64sint = 111, Formatr64sfloat = 112,
    Formatr64g64uint = 113, Formatr64g64sint = 114, Formatr64g64sfloat = 115,
    Formatr64g64b64uint = 116, Formatr64g64b64sint = 117,
    Formatr64g64b64sfloat = 118, Formatr64g64b64a64uint = 119,
    Formatr64g64b64a64sint = 120, Formatr64g64b64a64sfloat = 121,
    Formatb10g11r11ufloatpack32 = 122, Formate5b9g9r9ufloatpack32 = 123,
    Formatd16unorm = 124, Formatx8d24unormpack32 = 125, Formatd32sfloat = 126,
    Formats8uint = 127, Formatd16unorms8uint = 128, Formatd24unorms8uint = 129,
    Formatd32sfloats8uint = 130, Formatbc1rgbunormblock = 131,
    Formatbc1rgbsrgbblock = 132, Formatbc1rgbaunormblock = 133,
    Formatbc1rgbasrgbblock = 134, Formatbc2unormblock = 135,
    Formatbc2srgbblock = 136, Formatbc3unormblock = 137,
    Formatbc3srgbblock = 138, Formatbc4unormblock = 139,
    Formatbc4snormblock = 140, Formatbc5unormblock = 141,
    Formatbc5snormblock = 142, Formatbc6hufloatblock = 143,
    Formatbc6hsfloatblock = 144, Formatbc7unormblock = 145,
    Formatbc7srgbblock = 146, Formatetc2r8g8b8unormblock = 147,
    Formatetc2r8g8b8srgbblock = 148, Formatetc2r8g8b8a1unormblock = 149,
    Formatetc2r8g8b8a1srgbblock = 150, Formatetc2r8g8b8a8unormblock = 151,
    Formatetc2r8g8b8a8srgbblock = 152, Formateacr11unormblock = 153,
    Formateacr11snormblock = 154, Formateacr11g11unormblock = 155,
    Formateacr11g11snormblock = 156, Formatastc4x4unormblock = 157,
    Formatastc4x4srgbblock = 158, Formatastc5x4unormblock = 159,
    Formatastc5x4srgbblock = 160, Formatastc5x5unormblock = 161,
    Formatastc5x5srgbblock = 162, Formatastc6x5unormblock = 163,
    Formatastc6x5srgbblock = 164, Formatastc6x6unormblock = 165,
    Formatastc6x6srgbblock = 166, Formatastc8x5unormblock = 167,
    Formatastc8x5srgbblock = 168, Formatastc8x6unormblock = 169,
    Formatastc8x6srgbblock = 170, Formatastc8x8unormblock = 171,
    Formatastc8x8srgbblock = 172, Formatastc10x5unormblock = 173,
    Formatastc10x5srgbblock = 174, Formatastc10x6unormblock = 175,
    Formatastc10x6srgbblock = 176, Formatastc10x8unormblock = 177,
    Formatastc10x8srgbblock = 178, Formatastc10x10unormblock = 179,
    Formatastc10x10srgbblock = 180, Formatastc12x10unormblock = 181,
    Formatastc12x10srgbblock = 182, Formatastc12x12unormblock = 183,
    Formatastc12x12srgbblock = 184, Formatpvrtc12bppunormblockimg = 1000054000,
    Formatpvrtc14bppunormblockimg = 1000054001,
    Formatpvrtc22bppunormblockimg = 1000054002,
    Formatpvrtc24bppunormblockimg = 1000054003,
    Formatpvrtc12bppsrgbblockimg = 1000054004,
    Formatpvrtc14bppsrgbblockimg = 1000054005,
    Formatpvrtc22bppsrgbblockimg = 1000054006,
    Formatpvrtc24bppsrgbblockimg = 1000054007,
    Formatastc4x4sfloatblock = 1000066000,
    Formatastc5x4sfloatblock = 1000066001,
    Formatastc5x5sfloatblock = 1000066002,
    Formatastc6x5sfloatblock = 1000066003,
    Formatastc6x6sfloatblock = 1000066004,
    Formatastc8x5sfloatblock = 1000066005,
    Formatastc8x6sfloatblock = 1000066006,
    Formatastc8x8sfloatblock = 1000066007,
    Formatastc10x5sfloatblock = 1000066008,
    Formatastc10x6sfloatblock = 1000066009,
    Formatastc10x8sfloatblock = 1000066010,
    Formatastc10x10sfloatblock = 1000066011,
    Formatastc12x10sfloatblock = 1000066012,
    Formatastc12x12sfloatblock = 1000066013,
    Formatg8b8g8r8422unorm = 1000156000, Formatb8g8r8g8422unorm = 1000156001,
    Formatg8b8r83plane420unorm = 1000156002,
    Formatg8b8r82plane420unorm = 1000156003,
    Formatg8b8r83plane422unorm = 1000156004,
    Formatg8b8r82plane422unorm = 1000156005,
    Formatg8b8r83plane444unorm = 1000156006,
    Formatr10x6unormpack16 = 1000156007,
    Formatr10x6g10x6unorm2pack16 = 1000156008,
    Formatr10x6g10x6b10x6a10x6unorm4pack16 = 1000156009,
    Formatg10x6b10x6g10x6r10x6422unorm4pack16 = 1000156010,
    Formatb10x6g10x6r10x6g10x6422unorm4pack16 = 1000156011,
    Formatg10x6b10x6r10x63plane420unorm3pack16 = 1000156012,
    Formatg10x6b10x6r10x62plane420unorm3pack16 = 1000156013,
    Formatg10x6b10x6r10x63plane422unorm3pack16 = 1000156014,
    Formatg10x6b10x6r10x62plane422unorm3pack16 = 1000156015,
    Formatg10x6b10x6r10x63plane444unorm3pack16 = 1000156016,
    Formatr12x4unormpack16 = 1000156017,
    Formatr12x4g12x4unorm2pack16 = 1000156018,
    Formatr12x4g12x4b12x4a12x4unorm4pack16 = 1000156019,
    Formatg12x4b12x4g12x4r12x4422unorm4pack16 = 1000156020,
    Formatb12x4g12x4r12x4g12x4422unorm4pack16 = 1000156021,
    Formatg12x4b12x4r12x43plane420unorm3pack16 = 1000156022,
    Formatg12x4b12x4r12x42plane420unorm3pack16 = 1000156023,
    Formatg12x4b12x4r12x43plane422unorm3pack16 = 1000156024,
    Formatg12x4b12x4r12x42plane422unorm3pack16 = 1000156025,
    Formatg12x4b12x4r12x43plane444unorm3pack16 = 1000156026,
    Formatg16b16g16r16422unorm = 1000156027,
    Formatb16g16r16g16422unorm = 1000156028,
    Formatg16b16r163plane420unorm = 1000156029,
    Formatg16b16r162plane420unorm = 1000156030,
    Formatg16b16r163plane422unorm = 1000156031,
    Formatg16b16r162plane422unorm = 1000156032,
    Formatg16b16r163plane444unorm = 1000156033,
    Formatg8b8r82plane444unorm = 1000330000,
    Formatg10x6b10x6r10x62plane444unorm3pack16 = 1000330001,
    Formatg12x4b12x4r12x42plane444unorm3pack16 = 1000330002,
    Formatg16b16r162plane444unorm = 1000330003,
    Formata4r4g4b4unormpack16 = 1000340000,
    Formata4b4g4r4unormpack16 = 1000340001, Formatr16g16s105nv = 1000464000,
    Formata1b5g5r5unormpack16khr = 1000470000, Formata8unormkhr = 1000470001,
    Formatmaxenum = 2147483647
const
  Formatastc4x4sfloatblockext* = enumvkformat.Formatastc4x4sfloatblock
const
  Formatastc5x4sfloatblockext* = enumvkformat.Formatastc5x4sfloatblock
const
  Formatastc5x5sfloatblockext* = enumvkformat.Formatastc5x5sfloatblock
const
  Formatastc6x5sfloatblockext* = enumvkformat.Formatastc6x5sfloatblock
const
  Formatastc6x6sfloatblockext* = enumvkformat.Formatastc6x6sfloatblock
const
  Formatastc8x5sfloatblockext* = enumvkformat.Formatastc8x5sfloatblock
const
  Formatastc8x6sfloatblockext* = enumvkformat.Formatastc8x6sfloatblock
const
  Formatastc8x8sfloatblockext* = enumvkformat.Formatastc8x8sfloatblock
const
  Formatastc10x5sfloatblockext* = enumvkformat.Formatastc10x5sfloatblock
const
  Formatastc10x6sfloatblockext* = enumvkformat.Formatastc10x6sfloatblock
const
  Formatastc10x8sfloatblockext* = enumvkformat.Formatastc10x8sfloatblock
const
  Formatastc10x10sfloatblockext* = enumvkformat.Formatastc10x10sfloatblock
const
  Formatastc12x10sfloatblockext* = enumvkformat.Formatastc12x10sfloatblock
const
  Formatastc12x12sfloatblockext* = enumvkformat.Formatastc12x12sfloatblock
const
  Formatg8b8g8r8422unormkhr* = enumvkformat.Formatg8b8g8r8422unorm
const
  Formatb8g8r8g8422unormkhr* = enumvkformat.Formatb8g8r8g8422unorm
const
  Formatg8b8r83plane420unormkhr* = enumvkformat.Formatg8b8r83plane420unorm
const
  Formatg8b8r82plane420unormkhr* = enumvkformat.Formatg8b8r82plane420unorm
const
  Formatg8b8r83plane422unormkhr* = enumvkformat.Formatg8b8r83plane422unorm
const
  Formatg8b8r82plane422unormkhr* = enumvkformat.Formatg8b8r82plane422unorm
const
  Formatg8b8r83plane444unormkhr* = enumvkformat.Formatg8b8r83plane444unorm
const
  Formatr10x6unormpack16khr* = enumvkformat.Formatr10x6unormpack16
const
  Formatr10x6g10x6unorm2pack16khr* = enumvkformat.Formatr10x6g10x6unorm2pack16
const
  Formatr10x6g10x6b10x6a10x6unorm4pack16khr* = enumvkformat.Formatr10x6g10x6b10x6a10x6unorm4pack16
const
  Formatg10x6b10x6g10x6r10x6422unorm4pack16khr* = enumvkformat.Formatg10x6b10x6g10x6r10x6422unorm4pack16
const
  Formatb10x6g10x6r10x6g10x6422unorm4pack16khr* = enumvkformat.Formatb10x6g10x6r10x6g10x6422unorm4pack16
const
  Formatg10x6b10x6r10x63plane420unorm3pack16khr* = enumvkformat.Formatg10x6b10x6r10x63plane420unorm3pack16
const
  Formatg10x6b10x6r10x62plane420unorm3pack16khr* = enumvkformat.Formatg10x6b10x6r10x62plane420unorm3pack16
const
  Formatg10x6b10x6r10x63plane422unorm3pack16khr* = enumvkformat.Formatg10x6b10x6r10x63plane422unorm3pack16
const
  Formatg10x6b10x6r10x62plane422unorm3pack16khr* = enumvkformat.Formatg10x6b10x6r10x62plane422unorm3pack16
const
  Formatg10x6b10x6r10x63plane444unorm3pack16khr* = enumvkformat.Formatg10x6b10x6r10x63plane444unorm3pack16
const
  Formatr12x4unormpack16khr* = enumvkformat.Formatr12x4unormpack16
const
  Formatr12x4g12x4unorm2pack16khr* = enumvkformat.Formatr12x4g12x4unorm2pack16
const
  Formatr12x4g12x4b12x4a12x4unorm4pack16khr* = enumvkformat.Formatr12x4g12x4b12x4a12x4unorm4pack16
const
  Formatg12x4b12x4g12x4r12x4422unorm4pack16khr* = enumvkformat.Formatg12x4b12x4g12x4r12x4422unorm4pack16
const
  Formatb12x4g12x4r12x4g12x4422unorm4pack16khr* = enumvkformat.Formatb12x4g12x4r12x4g12x4422unorm4pack16
const
  Formatg12x4b12x4r12x43plane420unorm3pack16khr* = enumvkformat.Formatg12x4b12x4r12x43plane420unorm3pack16
const
  Formatg12x4b12x4r12x42plane420unorm3pack16khr* = enumvkformat.Formatg12x4b12x4r12x42plane420unorm3pack16
const
  Formatg12x4b12x4r12x43plane422unorm3pack16khr* = enumvkformat.Formatg12x4b12x4r12x43plane422unorm3pack16
const
  Formatg12x4b12x4r12x42plane422unorm3pack16khr* = enumvkformat.Formatg12x4b12x4r12x42plane422unorm3pack16
const
  Formatg12x4b12x4r12x43plane444unorm3pack16khr* = enumvkformat.Formatg12x4b12x4r12x43plane444unorm3pack16
const
  Formatg16b16g16r16422unormkhr* = enumvkformat.Formatg16b16g16r16422unorm
const
  Formatb16g16r16g16422unormkhr* = enumvkformat.Formatb16g16r16g16422unorm
const
  Formatg16b16r163plane420unormkhr* = enumvkformat.Formatg16b16r163plane420unorm
const
  Formatg16b16r162plane420unormkhr* = enumvkformat.Formatg16b16r162plane420unorm
const
  Formatg16b16r163plane422unormkhr* = enumvkformat.Formatg16b16r163plane422unorm
const
  Formatg16b16r162plane422unormkhr* = enumvkformat.Formatg16b16r162plane422unorm
const
  Formatg16b16r163plane444unormkhr* = enumvkformat.Formatg16b16r163plane444unorm
const
  Formatg8b8r82plane444unormext* = enumvkformat.Formatg8b8r82plane444unorm
const
  Formatg10x6b10x6r10x62plane444unorm3pack16ext* = enumvkformat.Formatg10x6b10x6r10x62plane444unorm3pack16
const
  Formatg12x4b12x4r12x42plane444unorm3pack16ext* = enumvkformat.Formatg12x4b12x4r12x42plane444unorm3pack16
const
  Formatg16b16r162plane444unormext* = enumvkformat.Formatg16b16r162plane444unorm
const
  Formata4r4g4b4unormpack16ext* = enumvkformat.Formata4r4g4b4unormpack16
const
  Formata4b4g4r4unormpack16ext* = enumvkformat.Formata4b4g4r4unormpack16
type
  enumvkimagetiling* {.size: sizeof(cuint).} = enum
    Imagetilingoptimal = 0, Imagetilinglinear = 1,
    Imagetilingdrmformatmodifierext = 1000158000,
    Imagetilingmaxenum = 2147483647
type
  enumvkimagetype* {.size: sizeof(cuint).} = enum
    Imagetype1d = 0, Imagetype2d = 1, Imagetype3d = 2,
    Imagetypemaxenum = 2147483647
type
  enumvkphysicaldevicetype* {.size: sizeof(cuint).} = enum
    Physicaldevicetypeother = 0, Physicaldevicetypeintegratedgpu = 1,
    Physicaldevicetypediscretegpu = 2, Physicaldevicetypevirtualgpu = 3,
    Physicaldevicetypecpu = 4, Physicaldevicetypemaxenum = 2147483647
type
  enumvkquerytype* {.size: sizeof(cuint).} = enum
    Querytypeocclusion = 0, Querytypepipelinestatistics = 1,
    Querytypetimestamp = 2, Querytyperesultstatusonlykhr = 1000023000,
    Querytypetransformfeedbackstreamext = 1000028004,
    Querytypeperformancequerykhr = 1000116000,
    Querytypeaccelerationstructurecompactedsizekhr = 1000150000,
    Querytypeaccelerationstructureserializationsizekhr = 1000150001,
    Querytypeaccelerationstructurecompactedsizenv = 1000165000,
    Querytypeperformancequeryintel = 1000210000,
    Querytypevideoencodefeedbackkhr = 1000299000,
    Querytypemeshprimitivesgeneratedext = 1000328000,
    Querytypeprimitivesgeneratedext = 1000382000, Querytypeaccelerationstructureserializationbottomlevelpointerskhr = 1000386000,
    Querytypeaccelerationstructuresizekhr = 1000386001,
    Querytypemicromapserializationsizeext = 1000396000,
    Querytypemicromapcompactedsizeext = 1000396001,
    Querytypemaxenum = 2147483647
type
  enumvksharingmode* {.size: sizeof(cuint).} = enum
    Sharingmodeexclusive = 0, Sharingmodeconcurrent = 1,
    Sharingmodemaxenum = 2147483647
type
  enumvkcomponentswizzle* {.size: sizeof(cuint).} = enum
    Componentswizzleidentity = 0, Componentswizzlezero = 1,
    Componentswizzleone = 2, Componentswizzler = 3, Componentswizzleg = 4,
    Componentswizzleb = 5, Componentswizzlea = 6,
    Componentswizzlemaxenum = 2147483647
type
  enumvkimageviewtype* {.size: sizeof(cuint).} = enum
    Imageviewtype1d = 0, Imageviewtype2d = 1, Imageviewtype3d = 2,
    Imageviewtypecube = 3, Imageviewtype1darray = 4, Imageviewtype2darray = 5,
    Imageviewtypecubearray = 6, Imageviewtypemaxenum = 2147483647
type
  enumvkblendfactor* {.size: sizeof(cuint).} = enum
    Blendfactorzero = 0, Blendfactorone = 1, Blendfactorsrccolor = 2,
    Blendfactoroneminussrccolor = 3, Blendfactordstcolor = 4,
    Blendfactoroneminusdstcolor = 5, Blendfactorsrcalpha = 6,
    Blendfactoroneminussrcalpha = 7, Blendfactordstalpha = 8,
    Blendfactoroneminusdstalpha = 9, Blendfactorconstantcolor = 10,
    Blendfactoroneminusconstantcolor = 11, Blendfactorconstantalpha = 12,
    Blendfactoroneminusconstantalpha = 13, Blendfactorsrcalphasaturate = 14,
    Blendfactorsrc1color = 15, Blendfactoroneminussrc1color = 16,
    Blendfactorsrc1alpha = 17, Blendfactoroneminussrc1alpha = 18,
    Blendfactormaxenum = 2147483647
type
  enumvkblendop* {.size: sizeof(cuint).} = enum
    Blendopadd = 0, Blendopsubtract = 1, Blendopreversesubtract = 2,
    Blendopmin = 3, Blendopmax = 4, Blendopzeroext = 1000148000,
    Blendopsrcext = 1000148001, Blendopdstext = 1000148002,
    Blendopsrcoverext = 1000148003, Blendopdstoverext = 1000148004,
    Blendopsrcinext = 1000148005, Blendopdstinext = 1000148006,
    Blendopsrcoutext = 1000148007, Blendopdstoutext = 1000148008,
    Blendopsrcatopext = 1000148009, Blendopdstatopext = 1000148010,
    Blendopxorext = 1000148011, Blendopmultiplyext = 1000148012,
    Blendopscreenext = 1000148013, Blendopoverlayext = 1000148014,
    Blendopdarkenext = 1000148015, Blendoplightenext = 1000148016,
    Blendopcolordodgeext = 1000148017, Blendopcolorburnext = 1000148018,
    Blendophardlightext = 1000148019, Blendopsoftlightext = 1000148020,
    Blendopdifferenceext = 1000148021, Blendopexclusionext = 1000148022,
    Blendopinvertext = 1000148023, Blendopinvertrgbext = 1000148024,
    Blendoplineardodgeext = 1000148025, Blendoplinearburnext = 1000148026,
    Blendopvividlightext = 1000148027, Blendoplinearlightext = 1000148028,
    Blendoppinlightext = 1000148029, Blendophardmixext = 1000148030,
    Blendophslhueext = 1000148031, Blendophslsaturationext = 1000148032,
    Blendophslcolorext = 1000148033, Blendophslluminosityext = 1000148034,
    Blendopplusext = 1000148035, Blendopplusclampedext = 1000148036,
    Blendopplusclampedalphaext = 1000148037, Blendopplusdarkerext = 1000148038,
    Blendopminusext = 1000148039, Blendopminusclampedext = 1000148040,
    Blendopcontrastext = 1000148041, Blendopinvertovgext = 1000148042,
    Blendopredext = 1000148043, Blendopgreenext = 1000148044,
    Blendopblueext = 1000148045, Blendopmaxenum = 2147483647
type
  enumvkcompareop* {.size: sizeof(cuint).} = enum
    Compareopnever = 0, Compareopless = 1, Compareopequal = 2,
    Compareoplessorequal = 3, Compareopgreater = 4, Compareopnotequal = 5,
    Compareopgreaterorequal = 6, Compareopalways = 7,
    Compareopmaxenum = 2147483647
type
  enumvkdynamicstate* {.size: sizeof(cuint).} = enum
    Dynamicstateviewport = 0, Dynamicstatescissor = 1,
    Dynamicstatelinewidth = 2, Dynamicstatedepthbias = 3,
    Dynamicstateblendconstants = 4, Dynamicstatedepthbounds = 5,
    Dynamicstatestencilcomparemask = 6, Dynamicstatestencilwritemask = 7,
    Dynamicstatestencilreference = 8,
    Dynamicstateviewportwscalingnv = 1000087000,
    Dynamicstatediscardrectangleext = 1000099000,
    Dynamicstatediscardrectangleenableext = 1000099001,
    Dynamicstatediscardrectanglemodeext = 1000099002,
    Dynamicstatesamplelocationsext = 1000143000,
    Dynamicstateviewportshadingratepalettenv = 1000164004,
    Dynamicstateviewportcoarsesampleordernv = 1000164006,
    Dynamicstateexclusivescissorenablenv = 1000205000,
    Dynamicstateexclusivescissornv = 1000205001,
    Dynamicstatefragmentshadingratekhr = 1000226000,
    Dynamicstatelinestipplekhr = 1000259000, Dynamicstatecullmode = 1000267000,
    Dynamicstatefrontface = 1000267001,
    Dynamicstateprimitivetopology = 1000267002,
    Dynamicstateviewportwithcount = 1000267003,
    Dynamicstatescissorwithcount = 1000267004,
    Dynamicstatevertexinputbindingstride = 1000267005,
    Dynamicstatedepthtestenable = 1000267006,
    Dynamicstatedepthwriteenable = 1000267007,
    Dynamicstatedepthcompareop = 1000267008,
    Dynamicstatedepthboundstestenable = 1000267009,
    Dynamicstatestenciltestenable = 1000267010,
    Dynamicstatestencilop = 1000267011,
    Dynamicstateraytracingpipelinestacksizekhr = 1000347000,
    Dynamicstatevertexinputext = 1000352000,
    Dynamicstatepatchcontrolpointsext = 1000377000,
    Dynamicstaterasterizerdiscardenable = 1000377001,
    Dynamicstatedepthbiasenable = 1000377002,
    Dynamicstatelogicopext = 1000377003,
    Dynamicstateprimitiverestartenable = 1000377004,
    Dynamicstatecolorwriteenableext = 1000381000,
    Dynamicstatetessellationdomainoriginext = 1000455002,
    Dynamicstatedepthclampenableext = 1000455003,
    Dynamicstatepolygonmodeext = 1000455004,
    Dynamicstaterasterizationsamplesext = 1000455005,
    Dynamicstatesamplemaskext = 1000455006,
    Dynamicstatealphatocoverageenableext = 1000455007,
    Dynamicstatealphatooneenableext = 1000455008,
    Dynamicstatelogicopenableext = 1000455009,
    Dynamicstatecolorblendenableext = 1000455010,
    Dynamicstatecolorblendequationext = 1000455011,
    Dynamicstatecolorwritemaskext = 1000455012,
    Dynamicstaterasterizationstreamext = 1000455013,
    Dynamicstateconservativerasterizationmodeext = 1000455014,
    Dynamicstateextraprimitiveoverestimationsizeext = 1000455015,
    Dynamicstatedepthclipenableext = 1000455016,
    Dynamicstatesamplelocationsenableext = 1000455017,
    Dynamicstatecolorblendadvancedext = 1000455018,
    Dynamicstateprovokingvertexmodeext = 1000455019,
    Dynamicstatelinerasterizationmodeext = 1000455020,
    Dynamicstatelinestippleenableext = 1000455021,
    Dynamicstatedepthclipnegativeonetooneext = 1000455022,
    Dynamicstateviewportwscalingenablenv = 1000455023,
    Dynamicstateviewportswizzlenv = 1000455024,
    Dynamicstatecoveragetocolorenablenv = 1000455025,
    Dynamicstatecoveragetocolorlocationnv = 1000455026,
    Dynamicstatecoveragemodulationmodenv = 1000455027,
    Dynamicstatecoveragemodulationtableenablenv = 1000455028,
    Dynamicstatecoveragemodulationtablenv = 1000455029,
    Dynamicstateshadingrateimageenablenv = 1000455030,
    Dynamicstaterepresentativefragmenttestenablenv = 1000455031,
    Dynamicstatecoveragereductionmodenv = 1000455032,
    Dynamicstateattachmentfeedbackloopenableext = 1000524000,
    Dynamicstatemaxenum = 2147483647
const
  Dynamicstatelinestippleext* = enumvkdynamicstate.Dynamicstatelinestipplekhr
const
  Dynamicstatecullmodeext* = enumvkdynamicstate.Dynamicstatecullmode
const
  Dynamicstatefrontfaceext* = enumvkdynamicstate.Dynamicstatefrontface
const
  Dynamicstateprimitivetopologyext* = enumvkdynamicstate.Dynamicstateprimitivetopology
const
  Dynamicstateviewportwithcountext* = enumvkdynamicstate.Dynamicstateviewportwithcount
const
  Dynamicstatescissorwithcountext* = enumvkdynamicstate.Dynamicstatescissorwithcount
const
  Dynamicstatevertexinputbindingstrideext* = enumvkdynamicstate.Dynamicstatevertexinputbindingstride
const
  Dynamicstatedepthtestenableext* = enumvkdynamicstate.Dynamicstatedepthtestenable
const
  Dynamicstatedepthwriteenableext* = enumvkdynamicstate.Dynamicstatedepthwriteenable
const
  Dynamicstatedepthcompareopext* = enumvkdynamicstate.Dynamicstatedepthcompareop
const
  Dynamicstatedepthboundstestenableext* = enumvkdynamicstate.Dynamicstatedepthboundstestenable
const
  Dynamicstatestenciltestenableext* = enumvkdynamicstate.Dynamicstatestenciltestenable
const
  Dynamicstatestencilopext* = enumvkdynamicstate.Dynamicstatestencilop
const
  Dynamicstaterasterizerdiscardenableext* = enumvkdynamicstate.Dynamicstaterasterizerdiscardenable
const
  Dynamicstatedepthbiasenableext* = enumvkdynamicstate.Dynamicstatedepthbiasenable
const
  Dynamicstateprimitiverestartenableext* = enumvkdynamicstate.Dynamicstateprimitiverestartenable
type
  enumvkfrontface* {.size: sizeof(cuint).} = enum
    Frontfacecounterclockwise = 0, Frontfaceclockwise = 1,
    Frontfacemaxenum = 2147483647
type
  enumvkvertexinputrate* {.size: sizeof(cuint).} = enum
    Vertexinputratevertex = 0, Vertexinputrateinstance = 1,
    Vertexinputratemaxenum = 2147483647
type
  enumvkprimitivetopology* {.size: sizeof(cuint).} = enum
    Primitivetopologypointlist = 0, Primitivetopologylinelist = 1,
    Primitivetopologylinestrip = 2, Primitivetopologytrianglelist = 3,
    Primitivetopologytrianglestrip = 4, Primitivetopologytrianglefan = 5,
    Primitivetopologylinelistwithadjacency = 6,
    Primitivetopologylinestripwithadjacency = 7,
    Primitivetopologytrianglelistwithadjacency = 8,
    Primitivetopologytrianglestripwithadjacency = 9,
    Primitivetopologypatchlist = 10, Primitivetopologymaxenum = 2147483647
type
  enumvkpolygonmode* {.size: sizeof(cuint).} = enum
    Polygonmodefill = 0, Polygonmodeline = 1, Polygonmodepoint = 2,
    Polygonmodefillrectanglenv = 1000153000, Polygonmodemaxenum = 2147483647
type
  enumvkstencilop* {.size: sizeof(cuint).} = enum
    Stencilopkeep = 0, Stencilopzero = 1, Stencilopreplace = 2,
    Stencilopincrementandclamp = 3, Stencilopdecrementandclamp = 4,
    Stencilopinvert = 5, Stencilopincrementandwrap = 6,
    Stencilopdecrementandwrap = 7, Stencilopmaxenum = 2147483647
type
  enumvklogicop* {.size: sizeof(cuint).} = enum
    Logicopclear = 0, Logicopand = 1, Logicopandreverse = 2, Logicopcopy = 3,
    Logicopandinverted = 4, Logicopnoop = 5, Logicopxor = 6, Logicopor = 7,
    Logicopnor = 8, Logicopequivalent = 9, Logicopinvert = 10,
    Logicoporreverse = 11, Logicopcopyinverted = 12, Logicoporinverted = 13,
    Logicopnand = 14, Logicopset = 15, Logicopmaxenum = 2147483647
type
  enumvkbordercolor* {.size: sizeof(cuint).} = enum
    Bordercolorfloattransparentblack = 0, Bordercolorinttransparentblack = 1,
    Bordercolorfloatopaqueblack = 2, Bordercolorintopaqueblack = 3,
    Bordercolorfloatopaquewhite = 4, Bordercolorintopaquewhite = 5,
    Bordercolorfloatcustomext = 1000287003,
    Bordercolorintcustomext = 1000287004, Bordercolormaxenum = 2147483647
type
  enumvkfilter* {.size: sizeof(cuint).} = enum
    Filternearest = 0, Filterlinear = 1, Filtercubicext = 1000015000,
    Filtermaxenum = 2147483647
const
  Filtercubicimg* = enumvkfilter.Filtercubicext
type
  enumvksampleraddressmode* {.size: sizeof(cuint).} = enum
    Sampleraddressmoderepeat = 0, Sampleraddressmodemirroredrepeat = 1,
    Sampleraddressmodeclamptoedge = 2, Sampleraddressmodeclamptoborder = 3,
    Sampleraddressmodemirrorclamptoedge = 4,
    Sampleraddressmodemaxenum = 2147483647
const
  Sampleraddressmodemirrorclamptoedgekhr* = enumvksampleraddressmode.Sampleraddressmodemirrorclamptoedge
type
  enumvksamplermipmapmode* {.size: sizeof(cuint).} = enum
    Samplermipmapmodenearest = 0, Samplermipmapmodelinear = 1,
    Samplermipmapmodemaxenum = 2147483647
type
  enumvkdescriptortype* {.size: sizeof(cuint).} = enum
    Descriptortypesampler = 0, Descriptortypecombinedimagesampler = 1,
    Descriptortypesampledimage = 2, Descriptortypestorageimage = 3,
    Descriptortypeuniformtexelbuffer = 4, Descriptortypestoragetexelbuffer = 5,
    Descriptortypeuniformbuffer = 6, Descriptortypestoragebuffer = 7,
    Descriptortypeuniformbufferdynamic = 8,
    Descriptortypestoragebufferdynamic = 9, Descriptortypeinputattachment = 10,
    Descriptortypeinlineuniformblock = 1000138000,
    Descriptortypeaccelerationstructurekhr = 1000150000,
    Descriptortypeaccelerationstructurenv = 1000165000,
    Descriptortypemutableext = 1000351000,
    Descriptortypesampleweightimageqcom = 1000440000,
    Descriptortypeblockmatchimageqcom = 1000440001,
    Descriptortypemaxenum = 2147483647
const
  Descriptortypeinlineuniformblockext* = enumvkdescriptortype.Descriptortypeinlineuniformblock
const
  Descriptortypemutablevalve* = enumvkdescriptortype.Descriptortypemutableext
type
  enumvkattachmentloadop* {.size: sizeof(cuint).} = enum
    Attachmentloadopload = 0, Attachmentloadopclear = 1,
    Attachmentloadopdontcare = 2, Attachmentloadopnonekhr = 1000400000,
    Attachmentloadopmaxenum = 2147483647
const
  Attachmentloadopnoneext* = enumvkattachmentloadop.Attachmentloadopnonekhr
type
  enumvkattachmentstoreop* {.size: sizeof(cuint).} = enum
    Attachmentstoreopstore = 0, Attachmentstoreopdontcare = 1,
    Attachmentstoreopnone = 1000301000, Attachmentstoreopmaxenum = 2147483647
const
  Attachmentstoreopnonekhr* = enumvkattachmentstoreop.Attachmentstoreopnone
const
  Attachmentstoreopnoneqcom* = enumvkattachmentstoreop.Attachmentstoreopnone
const
  Attachmentstoreopnoneext* = enumvkattachmentstoreop.Attachmentstoreopnone
type
  enumvkpipelinebindpoint* {.size: sizeof(cuint).} = enum
    Pipelinebindpointgraphics = 0, Pipelinebindpointcompute = 1,
    Pipelinebindpointraytracingkhr = 1000165000,
    Pipelinebindpointsubpassshadinghuawei = 1000369003,
    Pipelinebindpointmaxenum = 2147483647
const
  Pipelinebindpointraytracingnv* = enumvkpipelinebindpoint.Pipelinebindpointraytracingkhr
type
  enumvkcommandbufferlevel* {.size: sizeof(cuint).} = enum
    Commandbufferlevelprimary = 0, Commandbufferlevelsecondary = 1,
    Commandbufferlevelmaxenum = 2147483647
type
  enumvkindextype* {.size: sizeof(cuint).} = enum
    Indextypeuint16 = 0, Indextypeuint32 = 1, Indextypenonekhr = 1000165000,
    Indextypeuint8khr = 1000265000, Indextypemaxenum = 2147483647
const
  Indextypenonenv* = enumvkindextype.Indextypenonekhr
const
  Indextypeuint8ext* = enumvkindextype.Indextypeuint8khr
type
  enumvksubpasscontents* {.size: sizeof(cuint).} = enum
    Subpasscontentsinline = 0, Subpasscontentssecondarycommandbuffers = 1,
    Subpasscontentsinlineandsecondarycommandbuffersext = 1000451000,
    Subpasscontentsmaxenum = 2147483647
type
  enumvkaccessflagbits* {.size: sizeof(cuint).} = enum
    Accessnone = 0, Accessindirectcommandreadbit = 1, Accessindexreadbit = 2,
    Accessvertexattributereadbit = 4, Accessuniformreadbit = 8,
    Accessinputattachmentreadbit = 16, Accessshaderreadbit = 32,
    Accessshaderwritebit = 64, Accesscolorattachmentreadbit = 128,
    Accesscolorattachmentwritebit = 256,
    Accessdepthstencilattachmentreadbit = 512,
    Accessdepthstencilattachmentwritebit = 1024, Accesstransferreadbit = 2048,
    Accesstransferwritebit = 4096, Accesshostreadbit = 8192,
    Accesshostwritebit = 16384, Accessmemoryreadbit = 32768,
    Accessmemorywritebit = 65536, Accesscommandpreprocessreadbitnv = 131072,
    Accesscommandpreprocesswritebitnv = 262144,
    Accesscolorattachmentreadnoncoherentbitext = 524288,
    Accessconditionalrenderingreadbitext = 1048576,
    Accessaccelerationstructurereadbitkhr = 2097152,
    Accessaccelerationstructurewritebitkhr = 4194304,
    Accessfragmentshadingrateattachmentreadbitkhr = 8388608,
    Accessfragmentdensitymapreadbitext = 16777216,
    Accesstransformfeedbackwritebitext = 33554432,
    Accesstransformfeedbackcounterreadbitext = 67108864,
    Accesstransformfeedbackcounterwritebitext = 134217728,
    Accessflagbitsmaxenum = 2147483647
const
  Accessshadingrateimagereadbitnv* = enumvkaccessflagbits.Accessfragmentshadingrateattachmentreadbitkhr
const
  Accessaccelerationstructurereadbitnv* = enumvkaccessflagbits.Accessaccelerationstructurereadbitkhr
const
  Accessaccelerationstructurewritebitnv* = enumvkaccessflagbits.Accessaccelerationstructurewritebitkhr
const
  Accessnonekhr* = enumvkaccessflagbits.Accessnone
type
  enumvkimageaspectflagbits* {.size: sizeof(cuint).} = enum
    Imageaspectnone = 0, Imageaspectcolorbit = 1, Imageaspectdepthbit = 2,
    Imageaspectstencilbit = 4, Imageaspectmetadatabit = 8,
    Imageaspectplane0bit = 16, Imageaspectplane1bit = 32,
    Imageaspectplane2bit = 64, Imageaspectmemoryplane0bitext = 128,
    Imageaspectmemoryplane1bitext = 256, Imageaspectmemoryplane2bitext = 512,
    Imageaspectmemoryplane3bitext = 1024,
    Imageaspectflagbitsmaxenum = 2147483647
const
  Imageaspectplane0bitkhr* = enumvkimageaspectflagbits.Imageaspectplane0bit
const
  Imageaspectplane1bitkhr* = enumvkimageaspectflagbits.Imageaspectplane1bit
const
  Imageaspectplane2bitkhr* = enumvkimageaspectflagbits.Imageaspectplane2bit
const
  Imageaspectnonekhr* = enumvkimageaspectflagbits.Imageaspectnone
type
  enumvkformatfeatureflagbits* {.size: sizeof(cuint).} = enum
    Formatfeaturesampledimagebit = 1, Formatfeaturestorageimagebit = 2,
    Formatfeaturestorageimageatomicbit = 4,
    Formatfeatureuniformtexelbufferbit = 8,
    Formatfeaturestoragetexelbufferbit = 16,
    Formatfeaturestoragetexelbufferatomicbit = 32,
    Formatfeaturevertexbufferbit = 64, Formatfeaturecolorattachmentbit = 128,
    Formatfeaturecolorattachmentblendbit = 256,
    Formatfeaturedepthstencilattachmentbit = 512,
    Formatfeatureblitsrcbit = 1024, Formatfeatureblitdstbit = 2048,
    Formatfeaturesampledimagefilterlinearbit = 4096,
    Formatfeaturesampledimagefiltercubicbitext = 8192,
    Formatfeaturetransfersrcbit = 16384, Formatfeaturetransferdstbit = 32768,
    Formatfeaturesampledimagefilterminmaxbit = 65536,
    Formatfeaturemidpointchromasamplesbit = 131072,
    Formatfeaturesampledimageycbcrconversionlinearfilterbit = 262144, Formatfeaturesampledimageycbcrconversionseparatereconstructionfilterbit = 524288, Formatfeaturesampledimageycbcrconversionchromareconstructionexplicitbit = 1048576, Formatfeaturesampledimageycbcrconversionchromareconstructionexplicitforceablebit = 2097152,
    Formatfeaturedisjointbit = 4194304,
    Formatfeaturecositedchromasamplesbit = 8388608,
    Formatfeaturefragmentdensitymapbitext = 16777216,
    Formatfeaturevideodecodeoutputbitkhr = 33554432,
    Formatfeaturevideodecodedpbbitkhr = 67108864,
    Formatfeaturevideoencodeinputbitkhr = 134217728,
    Formatfeaturevideoencodedpbbitkhr = 268435456,
    Formatfeatureaccelerationstructurevertexbufferbitkhr = 536870912,
    Formatfeaturefragmentshadingrateattachmentbitkhr = 1073741824,
    Formatfeatureflagbitsmaxenum = 2147483647
const
  Formatfeaturesampledimagefiltercubicbitimg* = enumvkformatfeatureflagbits.Formatfeaturesampledimagefiltercubicbitext
const
  Formatfeaturetransfersrcbitkhr* = enumvkformatfeatureflagbits.Formatfeaturetransfersrcbit
const
  Formatfeaturetransferdstbitkhr* = enumvkformatfeatureflagbits.Formatfeaturetransferdstbit
const
  Formatfeaturesampledimagefilterminmaxbitext* = enumvkformatfeatureflagbits.Formatfeaturesampledimagefilterminmaxbit
const
  Formatfeaturemidpointchromasamplesbitkhr* = enumvkformatfeatureflagbits.Formatfeaturemidpointchromasamplesbit
const
  Formatfeaturesampledimageycbcrconversionlinearfilterbitkhr* = enumvkformatfeatureflagbits.Formatfeaturesampledimageycbcrconversionlinearfilterbit
const
  Formatfeaturesampledimageycbcrconversionseparatereconstructionfilterbitkhr* = enumvkformatfeatureflagbits.Formatfeaturesampledimageycbcrconversionseparatereconstructionfilterbit
const
  Formatfeaturesampledimageycbcrconversionchromareconstructionexplicitbitkhr* = enumvkformatfeatureflagbits.Formatfeaturesampledimageycbcrconversionchromareconstructionexplicitbit
const
  Formatfeaturesampledimageycbcrconversionchromareconstructionexplicitforceablebitkhr* = enumvkformatfeatureflagbits.Formatfeaturesampledimageycbcrconversionchromareconstructionexplicitforceablebit
const
  Formatfeaturedisjointbitkhr* = enumvkformatfeatureflagbits.Formatfeaturedisjointbit
const
  Formatfeaturecositedchromasamplesbitkhr* = enumvkformatfeatureflagbits.Formatfeaturecositedchromasamplesbit
type
  enumvkimagecreateflagbits* {.size: sizeof(cuint).} = enum
    Imagecreatesparsebindingbit = 1, Imagecreatesparseresidencybit = 2,
    Imagecreatesparsealiasedbit = 4, Imagecreatemutableformatbit = 8,
    Imagecreatecubecompatiblebit = 16, Imagecreate2darraycompatiblebit = 32,
    Imagecreatesplitinstancebindregionsbit = 64,
    Imagecreateblocktexelviewcompatiblebit = 128,
    Imagecreateextendedusagebit = 256, Imagecreatedisjointbit = 512,
    Imagecreatealiasbit = 1024, Imagecreateprotectedbit = 2048,
    Imagecreatesamplelocationscompatibledepthbitext = 4096,
    Imagecreatecornersampledbitnv = 8192, Imagecreatesubsampledbitext = 16384,
    Imagecreatefragmentdensitymapoffsetbitqcom = 32768,
    Imagecreatedescriptorbuffercapturereplaybitext = 65536,
    Imagecreate2dviewcompatiblebitext = 131072,
    Imagecreatemultisampledrendertosinglesampledbitext = 262144,
    Imagecreatevideoprofileindependentbitkhr = 1048576,
    Imagecreateflagbitsmaxenum = 2147483647
const
  Imagecreatesplitinstancebindregionsbitkhr* = enumvkimagecreateflagbits.Imagecreatesplitinstancebindregionsbit
const
  Imagecreate2darraycompatiblebitkhr* = enumvkimagecreateflagbits.Imagecreate2darraycompatiblebit
const
  Imagecreateblocktexelviewcompatiblebitkhr* = enumvkimagecreateflagbits.Imagecreateblocktexelviewcompatiblebit
const
  Imagecreateextendedusagebitkhr* = enumvkimagecreateflagbits.Imagecreateextendedusagebit
const
  Imagecreatedisjointbitkhr* = enumvkimagecreateflagbits.Imagecreatedisjointbit
const
  Imagecreatealiasbitkhr* = enumvkimagecreateflagbits.Imagecreatealiasbit
type
  enumvksamplecountflagbits* {.size: sizeof(cuint).} = enum
    Samplecount1bit = 1, Samplecount2bit = 2, Samplecount4bit = 4,
    Samplecount8bit = 8, Samplecount16bit = 16, Samplecount32bit = 32,
    Samplecount64bit = 64, Samplecountflagbitsmaxenum = 2147483647
type
  enumvkimageusageflagbits* {.size: sizeof(cuint).} = enum
    Imageusagetransfersrcbit = 1, Imageusagetransferdstbit = 2,
    Imageusagesampledbit = 4, Imageusagestoragebit = 8,
    Imageusagecolorattachmentbit = 16, Imageusagedepthstencilattachmentbit = 32,
    Imageusagetransientattachmentbit = 64, Imageusageinputattachmentbit = 128,
    Imageusagefragmentshadingrateattachmentbitkhr = 256,
    Imageusagefragmentdensitymapbitext = 512,
    Imageusagevideodecodedstbitkhr = 1024,
    Imageusagevideodecodesrcbitkhr = 2048,
    Imageusagevideodecodedpbbitkhr = 4096,
    Imageusagevideoencodedstbitkhr = 8192,
    Imageusagevideoencodesrcbitkhr = 16384,
    Imageusagevideoencodedpbbitkhr = 32768,
    Imageusageinvocationmaskbithuawei = 262144,
    Imageusageattachmentfeedbackloopbitext = 524288,
    Imageusagesampleweightbitqcom = 1048576,
    Imageusagesampleblockmatchbitqcom = 2097152,
    Imageusagehosttransferbitext = 4194304,
    Imageusageflagbitsmaxenum = 2147483647
const
  Imageusageshadingrateimagebitnv* = enumvkimageusageflagbits.Imageusagefragmentshadingrateattachmentbitkhr
type
  enumvkinstancecreateflagbits* {.size: sizeof(cuint).} = enum
    Instancecreateenumerateportabilitybitkhr = 1,
    Instancecreateflagbitsmaxenum = 2147483647
type
  enumvkmemoryheapflagbits* {.size: sizeof(cuint).} = enum
    Memoryheapdevicelocalbit = 1, Memoryheapmultiinstancebit = 2,
    Memoryheapflagbitsmaxenum = 2147483647
const
  Memoryheapmultiinstancebitkhr* = enumvkmemoryheapflagbits.Memoryheapmultiinstancebit
type
  enumvkmemorypropertyflagbits* {.size: sizeof(cuint).} = enum
    Memorypropertydevicelocalbit = 1, Memorypropertyhostvisiblebit = 2,
    Memorypropertyhostcoherentbit = 4, Memorypropertyhostcachedbit = 8,
    Memorypropertylazilyallocatedbit = 16, Memorypropertyprotectedbit = 32,
    Memorypropertydevicecoherentbitamd = 64,
    Memorypropertydeviceuncachedbitamd = 128,
    Memorypropertyrdmacapablebitnv = 256,
    Memorypropertyflagbitsmaxenum = 2147483647
type
  enumvkqueueflagbits* {.size: sizeof(cuint).} = enum
    Queuegraphicsbit = 1, Queuecomputebit = 2, Queuetransferbit = 4,
    Queuesparsebindingbit = 8, Queueprotectedbit = 16,
    Queuevideodecodebitkhr = 32, Queuevideoencodebitkhr = 64,
    Queueopticalflowbitnv = 256, Queueflagbitsmaxenum = 2147483647
type
  enumvkdevicequeuecreateflagbits* {.size: sizeof(cuint).} = enum
    Devicequeuecreateprotectedbit = 1,
    Devicequeuecreateflagbitsmaxenum = 2147483647
type
  enumvkpipelinestageflagbits* {.size: sizeof(cuint).} = enum
    Pipelinestagenone = 0, Pipelinestagetopofpipebit = 1,
    Pipelinestagedrawindirectbit = 2, Pipelinestagevertexinputbit = 4,
    Pipelinestagevertexshaderbit = 8,
    Pipelinestagetessellationcontrolshaderbit = 16,
    Pipelinestagetessellationevaluationshaderbit = 32,
    Pipelinestagegeometryshaderbit = 64, Pipelinestagefragmentshaderbit = 128,
    Pipelinestageearlyfragmenttestsbit = 256,
    Pipelinestagelatefragmenttestsbit = 512,
    Pipelinestagecolorattachmentoutputbit = 1024,
    Pipelinestagecomputeshaderbit = 2048, Pipelinestagetransferbit = 4096,
    Pipelinestagebottomofpipebit = 8192, Pipelinestagehostbit = 16384,
    Pipelinestageallgraphicsbit = 32768, Pipelinestageallcommandsbit = 65536,
    Pipelinestagecommandpreprocessbitnv = 131072,
    Pipelinestageconditionalrenderingbitext = 262144,
    Pipelinestagetaskshaderbitext = 524288,
    Pipelinestagemeshshaderbitext = 1048576,
    Pipelinestageraytracingshaderbitkhr = 2097152,
    Pipelinestagefragmentshadingrateattachmentbitkhr = 4194304,
    Pipelinestagefragmentdensityprocessbitext = 8388608,
    Pipelinestagetransformfeedbackbitext = 16777216,
    Pipelinestageaccelerationstructurebuildbitkhr = 33554432,
    Pipelinestageflagbitsmaxenum = 2147483647
const
  Pipelinestageshadingrateimagebitnv* = enumvkpipelinestageflagbits.Pipelinestagefragmentshadingrateattachmentbitkhr
const
  Pipelinestageraytracingshaderbitnv* = enumvkpipelinestageflagbits.Pipelinestageraytracingshaderbitkhr
const
  Pipelinestageaccelerationstructurebuildbitnv* = enumvkpipelinestageflagbits.Pipelinestageaccelerationstructurebuildbitkhr
const
  Pipelinestagetaskshaderbitnv* = enumvkpipelinestageflagbits.Pipelinestagetaskshaderbitext
const
  Pipelinestagemeshshaderbitnv* = enumvkpipelinestageflagbits.Pipelinestagemeshshaderbitext
const
  Pipelinestagenonekhr* = enumvkpipelinestageflagbits.Pipelinestagenone
type
  enumvkmemorymapflagbits* {.size: sizeof(cuint).} = enum
    Memorymapplacedbitext = 1, Memorymapflagbitsmaxenum = 2147483647
type
  enumvksparsememorybindflagbits* {.size: sizeof(cuint).} = enum
    Sparsememorybindmetadatabit = 1,
    Sparsememorybindflagbitsmaxenum = 2147483647
type
  enumvksparseimageformatflagbits* {.size: sizeof(cuint).} = enum
    Sparseimageformatsinglemiptailbit = 1,
    Sparseimageformatalignedmipsizebit = 2,
    Sparseimageformatnonstandardblocksizebit = 4,
    Sparseimageformatflagbitsmaxenum = 2147483647
type
  enumvkfencecreateflagbits* {.size: sizeof(cuint).} = enum
    Fencecreatesignaledbit = 1, Fencecreateflagbitsmaxenum = 2147483647
type
  enumvkeventcreateflagbits* {.size: sizeof(cuint).} = enum
    Eventcreatedeviceonlybit = 1, Eventcreateflagbitsmaxenum = 2147483647
const
  Eventcreatedeviceonlybitkhr* = enumvkeventcreateflagbits.Eventcreatedeviceonlybit
type
  enumvkquerypipelinestatisticflagbits* {.size: sizeof(cuint).} = enum
    Querypipelinestatisticinputassemblyverticesbit = 1,
    Querypipelinestatisticinputassemblyprimitivesbit = 2,
    Querypipelinestatisticvertexshaderinvocationsbit = 4,
    Querypipelinestatisticgeometryshaderinvocationsbit = 8,
    Querypipelinestatisticgeometryshaderprimitivesbit = 16,
    Querypipelinestatisticclippinginvocationsbit = 32,
    Querypipelinestatisticclippingprimitivesbit = 64,
    Querypipelinestatisticfragmentshaderinvocationsbit = 128,
    Querypipelinestatistictessellationcontrolshaderpatchesbit = 256,
    Querypipelinestatistictessellationevaluationshaderinvocationsbit = 512,
    Querypipelinestatisticcomputeshaderinvocationsbit = 1024,
    Querypipelinestatistictaskshaderinvocationsbitext = 2048,
    Querypipelinestatisticmeshshaderinvocationsbitext = 4096,
    Querypipelinestatisticclustercullingshaderinvocationsbithuawei = 8192,
    Querypipelinestatisticflagbitsmaxenum = 2147483647
type
  enumvkqueryresultflagbits* {.size: sizeof(cuint).} = enum
    Queryresult64bit = 1, Queryresultwaitbit = 2,
    Queryresultwithavailabilitybit = 4, Queryresultpartialbit = 8,
    Queryresultwithstatusbitkhr = 16, Queryresultflagbitsmaxenum = 2147483647
type
  enumvkbuffercreateflagbits* {.size: sizeof(cuint).} = enum
    Buffercreatesparsebindingbit = 1, Buffercreatesparseresidencybit = 2,
    Buffercreatesparsealiasedbit = 4, Buffercreateprotectedbit = 8,
    Buffercreatedeviceaddresscapturereplaybit = 16,
    Buffercreatedescriptorbuffercapturereplaybitext = 32,
    Buffercreatevideoprofileindependentbitkhr = 64,
    Buffercreateflagbitsmaxenum = 2147483647
const
  Buffercreatedeviceaddresscapturereplaybitext* = enumvkbuffercreateflagbits.Buffercreatedeviceaddresscapturereplaybit
const
  Buffercreatedeviceaddresscapturereplaybitkhr* = enumvkbuffercreateflagbits.Buffercreatedeviceaddresscapturereplaybit
type
  enumvkbufferusageflagbits* {.size: sizeof(cuint).} = enum
    Bufferusagetransfersrcbit = 1, Bufferusagetransferdstbit = 2,
    Bufferusageuniformtexelbufferbit = 4, Bufferusagestoragetexelbufferbit = 8,
    Bufferusageuniformbufferbit = 16, Bufferusagestoragebufferbit = 32,
    Bufferusageindexbufferbit = 64, Bufferusagevertexbufferbit = 128,
    Bufferusageindirectbufferbit = 256,
    Bufferusageconditionalrenderingbitext = 512,
    Bufferusageshaderbindingtablebitkhr = 1024,
    Bufferusagetransformfeedbackbufferbitext = 2048,
    Bufferusagetransformfeedbackcounterbufferbitext = 4096,
    Bufferusagevideodecodesrcbitkhr = 8192,
    Bufferusagevideodecodedstbitkhr = 16384,
    Bufferusagevideoencodedstbitkhr = 32768,
    Bufferusagevideoencodesrcbitkhr = 65536,
    Bufferusageshaderdeviceaddressbit = 131072,
    Bufferusageaccelerationstructurebuildinputreadonlybitkhr = 524288,
    Bufferusageaccelerationstructurestoragebitkhr = 1048576,
    Bufferusagesamplerdescriptorbufferbitext = 2097152,
    Bufferusageresourcedescriptorbufferbitext = 4194304,
    Bufferusagemicromapbuildinputreadonlybitext = 8388608,
    Bufferusagemicromapstoragebitext = 16777216,
    Bufferusagepushdescriptorsdescriptorbufferbitext = 67108864,
    Bufferusageflagbitsmaxenum = 2147483647
const
  Bufferusageraytracingbitnv* = enumvkbufferusageflagbits.Bufferusageshaderbindingtablebitkhr
const
  Bufferusageshaderdeviceaddressbitext* = enumvkbufferusageflagbits.Bufferusageshaderdeviceaddressbit
const
  Bufferusageshaderdeviceaddressbitkhr* = enumvkbufferusageflagbits.Bufferusageshaderdeviceaddressbit
type
  enumvkimageviewcreateflagbits* {.size: sizeof(cuint).} = enum
    Imageviewcreatefragmentdensitymapdynamicbitext = 1,
    Imageviewcreatefragmentdensitymapdeferredbitext = 2,
    Imageviewcreatedescriptorbuffercapturereplaybitext = 4,
    Imageviewcreateflagbitsmaxenum = 2147483647
type
  enumvkpipelinecachecreateflagbits* {.size: sizeof(cuint).} = enum
    Pipelinecachecreateexternallysynchronizedbit = 1,
    Pipelinecachecreateflagbitsmaxenum = 2147483647
const
  Pipelinecachecreateexternallysynchronizedbitext* = enumvkpipelinecachecreateflagbits.Pipelinecachecreateexternallysynchronizedbit
type
  enumvkcolorcomponentflagbits* {.size: sizeof(cuint).} = enum
    Colorcomponentrbit = 1, Colorcomponentgbit = 2, Colorcomponentbbit = 4,
    Colorcomponentabit = 8, Colorcomponentflagbitsmaxenum = 2147483647
type
  enumvkpipelinecreateflagbits* {.size: sizeof(cuint).} = enum
    Pipelinecreatedisableoptimizationbit = 1,
    Pipelinecreateallowderivativesbit = 2, Pipelinecreatederivativebit = 4,
    Pipelinecreateviewindexfromdeviceindexbit = 8,
    Pipelinecreatedispatchbasebit = 16, Pipelinecreatedefercompilebitnv = 32,
    Pipelinecreatecapturestatisticsbitkhr = 64,
    Pipelinecreatecaptureinternalrepresentationsbitkhr = 128,
    Pipelinecreatefailonpipelinecompilerequiredbit = 256,
    Pipelinecreateearlyreturnonfailurebit = 512,
    Pipelinecreatelinktimeoptimizationbitext = 1024,
    Pipelinecreatelibrarybitkhr = 2048,
    Pipelinecreateraytracingskiptrianglesbitkhr = 4096,
    Pipelinecreateraytracingskipaabbsbitkhr = 8192,
    Pipelinecreateraytracingnonullanyhitshadersbitkhr = 16384,
    Pipelinecreateraytracingnonullclosesthitshadersbitkhr = 32768,
    Pipelinecreateraytracingnonullmissshadersbitkhr = 65536,
    Pipelinecreateraytracingnonullintersectionshadersbitkhr = 131072,
    Pipelinecreateindirectbindablebitnv = 262144,
    Pipelinecreateraytracingshadergrouphandlecapturereplaybitkhr = 524288,
    Pipelinecreateraytracingallowmotionbitnv = 1048576,
    Pipelinecreaterenderingfragmentshadingrateattachmentbitkhr = 2097152,
    Pipelinecreaterenderingfragmentdensitymapattachmentbitext = 4194304,
    Pipelinecreateretainlinktimeoptimizationinfobitext = 8388608,
    Pipelinecreateraytracingopacitymicromapbitext = 16777216,
    Pipelinecreatecolorattachmentfeedbackloopbitext = 33554432,
    Pipelinecreatedepthstencilattachmentfeedbackloopbitext = 67108864,
    Pipelinecreatenoprotectedaccessbitext = 134217728,
    Pipelinecreatedescriptorbufferbitext = 536870912,
    Pipelinecreateprotectedaccessonlybitext = 1073741824,
    Pipelinecreateflagbitsmaxenum = 2147483647
const
  Pipelinecreatedispatchbase* = enumvkpipelinecreateflagbits.Pipelinecreatedispatchbasebit
const
  Pipelinerasterizationstatecreatefragmentshadingrateattachmentbitkhr* = enumvkpipelinecreateflagbits.Pipelinecreaterenderingfragmentshadingrateattachmentbitkhr
const
  Pipelinerasterizationstatecreatefragmentdensitymapattachmentbitext* = enumvkpipelinecreateflagbits.Pipelinecreaterenderingfragmentdensitymapattachmentbitext
const
  Pipelinecreateviewindexfromdeviceindexbitkhr* = enumvkpipelinecreateflagbits.Pipelinecreateviewindexfromdeviceindexbit
const
  Pipelinecreatedispatchbasekhr* = enumvkpipelinecreateflagbits.Pipelinecreatedispatchbasebit
const
  Pipelinecreatefailonpipelinecompilerequiredbitext* = enumvkpipelinecreateflagbits.Pipelinecreatefailonpipelinecompilerequiredbit
const
  Pipelinecreateearlyreturnonfailurebitext* = enumvkpipelinecreateflagbits.Pipelinecreateearlyreturnonfailurebit
type
  enumvkpipelineshaderstagecreateflagbits* {.size: sizeof(cuint).} = enum
    Pipelineshaderstagecreateallowvaryingsubgroupsizebit = 1,
    Pipelineshaderstagecreaterequirefullsubgroupsbit = 2,
    Pipelineshaderstagecreateflagbitsmaxenum = 2147483647
const
  Pipelineshaderstagecreateallowvaryingsubgroupsizebitext* = enumvkpipelineshaderstagecreateflagbits.Pipelineshaderstagecreateallowvaryingsubgroupsizebit
const
  Pipelineshaderstagecreaterequirefullsubgroupsbitext* = enumvkpipelineshaderstagecreateflagbits.Pipelineshaderstagecreaterequirefullsubgroupsbit
type
  enumvkshaderstageflagbits* {.size: sizeof(cuint).} = enum
    Shaderstagevertexbit = 1, Shaderstagetessellationcontrolbit = 2,
    Shaderstagetessellationevaluationbit = 4, Shaderstagegeometrybit = 8,
    Shaderstagefragmentbit = 16, Shaderstageallgraphics = 31,
    Shaderstagecomputebit = 32, Shaderstagetaskbitext = 64,
    Shaderstagemeshbitext = 128, Shaderstageraygenbitkhr = 256,
    Shaderstageanyhitbitkhr = 512, Shaderstageclosesthitbitkhr = 1024,
    Shaderstagemissbitkhr = 2048, Shaderstageintersectionbitkhr = 4096,
    Shaderstagecallablebitkhr = 8192,
    Shaderstagesubpassshadingbithuawei = 16384,
    Shaderstageclustercullingbithuawei = 524288, Shaderstageall = 2147483647
const
  Shaderstageraygenbitnv* = enumvkshaderstageflagbits.Shaderstageraygenbitkhr
const
  Shaderstageanyhitbitnv* = enumvkshaderstageflagbits.Shaderstageanyhitbitkhr
const
  Shaderstageclosesthitbitnv* = enumvkshaderstageflagbits.Shaderstageclosesthitbitkhr
const
  Shaderstagemissbitnv* = enumvkshaderstageflagbits.Shaderstagemissbitkhr
const
  Shaderstageintersectionbitnv* = enumvkshaderstageflagbits.Shaderstageintersectionbitkhr
const
  Shaderstagecallablebitnv* = enumvkshaderstageflagbits.Shaderstagecallablebitkhr
const
  Shaderstagetaskbitnv* = enumvkshaderstageflagbits.Shaderstagetaskbitext
const
  Shaderstagemeshbitnv* = enumvkshaderstageflagbits.Shaderstagemeshbitext
const
  Shaderstageflagbitsmaxenum* = enumvkshaderstageflagbits.Shaderstageall
type
  enumvkcullmodeflagbits* {.size: sizeof(cuint).} = enum
    Cullmodenone = 0, Cullmodefrontbit = 1, Cullmodebackbit = 2,
    Cullmodefrontandback = 3, Cullmodeflagbitsmaxenum = 2147483647
type
  enumvkpipelinedepthstencilstatecreateflagbits* {.size: sizeof(cuint).} = enum
    Pipelinedepthstencilstatecreaterasterizationorderattachmentdepthaccessbitext = 1, Pipelinedepthstencilstatecreaterasterizationorderattachmentstencilaccessbitext = 2,
    Pipelinedepthstencilstatecreateflagbitsmaxenum = 2147483647
const
  Pipelinedepthstencilstatecreaterasterizationorderattachmentdepthaccessbitarm* = enumvkpipelinedepthstencilstatecreateflagbits.Pipelinedepthstencilstatecreaterasterizationorderattachmentdepthaccessbitext
const
  Pipelinedepthstencilstatecreaterasterizationorderattachmentstencilaccessbitarm* = enumvkpipelinedepthstencilstatecreateflagbits.Pipelinedepthstencilstatecreaterasterizationorderattachmentstencilaccessbitext
type
  enumvkpipelinecolorblendstatecreateflagbits* {.size: sizeof(cuint).} = enum
    Pipelinecolorblendstatecreaterasterizationorderattachmentaccessbitext = 1,
    Pipelinecolorblendstatecreateflagbitsmaxenum = 2147483647
const
  Pipelinecolorblendstatecreaterasterizationorderattachmentaccessbitarm* = enumvkpipelinecolorblendstatecreateflagbits.Pipelinecolorblendstatecreaterasterizationorderattachmentaccessbitext
type
  enumvkpipelinelayoutcreateflagbits* {.size: sizeof(cuint).} = enum
    Pipelinelayoutcreateindependentsetsbitext = 2,
    Pipelinelayoutcreateflagbitsmaxenum = 2147483647
type
  enumvksamplercreateflagbits* {.size: sizeof(cuint).} = enum
    Samplercreatesubsampledbitext = 1,
    Samplercreatesubsampledcoarsereconstructionbitext = 2,
    Samplercreatenonseamlesscubemapbitext = 4,
    Samplercreatedescriptorbuffercapturereplaybitext = 8,
    Samplercreateimageprocessingbitqcom = 16,
    Samplercreateflagbitsmaxenum = 2147483647
type
  enumvkdescriptorpoolcreateflagbits* {.size: sizeof(cuint).} = enum
    Descriptorpoolcreatefreedescriptorsetbit = 1,
    Descriptorpoolcreateupdateafterbindbit = 2,
    Descriptorpoolcreatehostonlybitext = 4,
    Descriptorpoolcreateallowoverallocationsetsbitnv = 8,
    Descriptorpoolcreateallowoverallocationpoolsbitnv = 16,
    Descriptorpoolcreateflagbitsmaxenum = 2147483647
const
  Descriptorpoolcreateupdateafterbindbitext* = enumvkdescriptorpoolcreateflagbits.Descriptorpoolcreateupdateafterbindbit
const
  Descriptorpoolcreatehostonlybitvalve* = enumvkdescriptorpoolcreateflagbits.Descriptorpoolcreatehostonlybitext
type
  enumvkdescriptorsetlayoutcreateflagbits* {.size: sizeof(cuint).} = enum
    Descriptorsetlayoutcreatepushdescriptorbitkhr = 1,
    Descriptorsetlayoutcreateupdateafterbindpoolbit = 2,
    Descriptorsetlayoutcreatehostonlypoolbitext = 4,
    Descriptorsetlayoutcreatedescriptorbufferbitext = 16,
    Descriptorsetlayoutcreateembeddedimmutablesamplersbitext = 32,
    Descriptorsetlayoutcreateperstagebitnv = 64,
    Descriptorsetlayoutcreateindirectbindablebitnv = 128,
    Descriptorsetlayoutcreateflagbitsmaxenum = 2147483647
const
  Descriptorsetlayoutcreateupdateafterbindpoolbitext* = enumvkdescriptorsetlayoutcreateflagbits.Descriptorsetlayoutcreateupdateafterbindpoolbit
const
  Descriptorsetlayoutcreatehostonlypoolbitvalve* = enumvkdescriptorsetlayoutcreateflagbits.Descriptorsetlayoutcreatehostonlypoolbitext
type
  enumvkattachmentdescriptionflagbits* {.size: sizeof(cuint).} = enum
    Attachmentdescriptionmayaliasbit = 1,
    Attachmentdescriptionflagbitsmaxenum = 2147483647
type
  enumvkdependencyflagbits* {.size: sizeof(cuint).} = enum
    Dependencybyregionbit = 1, Dependencyviewlocalbit = 2,
    Dependencydevicegroupbit = 4, Dependencyfeedbackloopbitext = 8,
    Dependencyflagbitsmaxenum = 2147483647
const
  Dependencyviewlocalbitkhr* = enumvkdependencyflagbits.Dependencyviewlocalbit
const
  Dependencydevicegroupbitkhr* = enumvkdependencyflagbits.Dependencydevicegroupbit
type
  enumvkframebuffercreateflagbits* {.size: sizeof(cuint).} = enum
    Framebuffercreateimagelessbit = 1,
    Framebuffercreateflagbitsmaxenum = 2147483647
const
  Framebuffercreateimagelessbitkhr* = enumvkframebuffercreateflagbits.Framebuffercreateimagelessbit
type
  enumvkrenderpasscreateflagbits* {.size: sizeof(cuint).} = enum
    Renderpasscreatetransformbitqcom = 2,
    Renderpasscreateflagbitsmaxenum = 2147483647
type
  enumvksubpassdescriptionflagbits* {.size: sizeof(cuint).} = enum
    Subpassdescriptionperviewattributesbitnvx = 1,
    Subpassdescriptionperviewpositionxonlybitnvx = 2,
    Subpassdescriptionfragmentregionbitqcom = 4,
    Subpassdescriptionshaderresolvebitqcom = 8,
    Subpassdescriptionrasterizationorderattachmentcoloraccessbitext = 16,
    Subpassdescriptionrasterizationorderattachmentdepthaccessbitext = 32,
    Subpassdescriptionrasterizationorderattachmentstencilaccessbitext = 64,
    Subpassdescriptionenablelegacyditheringbitext = 128,
    Subpassdescriptionflagbitsmaxenum = 2147483647
const
  Subpassdescriptionrasterizationorderattachmentcoloraccessbitarm* = enumvksubpassdescriptionflagbits.Subpassdescriptionrasterizationorderattachmentcoloraccessbitext
const
  Subpassdescriptionrasterizationorderattachmentdepthaccessbitarm* = enumvksubpassdescriptionflagbits.Subpassdescriptionrasterizationorderattachmentdepthaccessbitext
const
  Subpassdescriptionrasterizationorderattachmentstencilaccessbitarm* = enumvksubpassdescriptionflagbits.Subpassdescriptionrasterizationorderattachmentstencilaccessbitext
type
  enumvkcommandpoolcreateflagbits* {.size: sizeof(cuint).} = enum
    Commandpoolcreatetransientbit = 1,
    Commandpoolcreateresetcommandbufferbit = 2,
    Commandpoolcreateprotectedbit = 4,
    Commandpoolcreateflagbitsmaxenum = 2147483647
type
  enumvkcommandpoolresetflagbits* {.size: sizeof(cuint).} = enum
    Commandpoolresetreleaseresourcesbit = 1,
    Commandpoolresetflagbitsmaxenum = 2147483647
type
  enumvkcommandbufferusageflagbits* {.size: sizeof(cuint).} = enum
    Commandbufferusageonetimesubmitbit = 1,
    Commandbufferusagerenderpasscontinuebit = 2,
    Commandbufferusagesimultaneoususebit = 4,
    Commandbufferusageflagbitsmaxenum = 2147483647
type
  enumvkquerycontrolflagbits* {.size: sizeof(cuint).} = enum
    Querycontrolprecisebit = 1, Querycontrolflagbitsmaxenum = 2147483647
type
  enumvkcommandbufferresetflagbits* {.size: sizeof(cuint).} = enum
    Commandbufferresetreleaseresourcesbit = 1,
    Commandbufferresetflagbitsmaxenum = 2147483647
type
  enumvkstencilfaceflagbits* {.size: sizeof(cuint).} = enum
    Stencilfacefrontbit = 1, Stencilfacebackbit = 2,
    Stencilfacefrontandback = 3, Stencilfaceflagbitsmaxenum = 2147483647
const
  Stencilfrontandback* = enumvkstencilfaceflagbits.Stencilfacefrontandback
type
  enumvkpointclippingbehavior* {.size: sizeof(cuint).} = enum
    Pointclippingbehaviorallclipplanes = 0,
    Pointclippingbehavioruserclipplanesonly = 1,
    Pointclippingbehaviormaxenum = 2147483647
const
  Pointclippingbehaviorallclipplaneskhr* = enumvkpointclippingbehavior.Pointclippingbehaviorallclipplanes
const
  Pointclippingbehavioruserclipplanesonlykhr* = enumvkpointclippingbehavior.Pointclippingbehavioruserclipplanesonly
type
  enumvktessellationdomainorigin* {.size: sizeof(cuint).} = enum
    Tessellationdomainoriginupperleft = 0,
    Tessellationdomainoriginlowerleft = 1,
    Tessellationdomainoriginmaxenum = 2147483647
const
  Tessellationdomainoriginupperleftkhr* = enumvktessellationdomainorigin.Tessellationdomainoriginupperleft
const
  Tessellationdomainoriginlowerleftkhr* = enumvktessellationdomainorigin.Tessellationdomainoriginlowerleft
type
  enumvksamplerycbcrmodelconversion* {.size: sizeof(cuint).} = enum
    Samplerycbcrmodelconversionrgbidentity = 0,
    Samplerycbcrmodelconversionycbcridentity = 1,
    Samplerycbcrmodelconversionycbcr709 = 2,
    Samplerycbcrmodelconversionycbcr601 = 3,
    Samplerycbcrmodelconversionycbcr2020 = 4,
    Samplerycbcrmodelconversionmaxenum = 2147483647
const
  Samplerycbcrmodelconversionrgbidentitykhr* = enumvksamplerycbcrmodelconversion.Samplerycbcrmodelconversionrgbidentity
const
  Samplerycbcrmodelconversionycbcridentitykhr* = enumvksamplerycbcrmodelconversion.Samplerycbcrmodelconversionycbcridentity
const
  Samplerycbcrmodelconversionycbcr709khr* = enumvksamplerycbcrmodelconversion.Samplerycbcrmodelconversionycbcr709
const
  Samplerycbcrmodelconversionycbcr601khr* = enumvksamplerycbcrmodelconversion.Samplerycbcrmodelconversionycbcr601
const
  Samplerycbcrmodelconversionycbcr2020khr* = enumvksamplerycbcrmodelconversion.Samplerycbcrmodelconversionycbcr2020
type
  enumvksamplerycbcrrange* {.size: sizeof(cuint).} = enum
    Samplerycbcrrangeitufull = 0, Samplerycbcrrangeitunarrow = 1,
    Samplerycbcrrangemaxenum = 2147483647
const
  Samplerycbcrrangeitufullkhr* = enumvksamplerycbcrrange.Samplerycbcrrangeitufull
const
  Samplerycbcrrangeitunarrowkhr* = enumvksamplerycbcrrange.Samplerycbcrrangeitunarrow
type
  enumvkchromalocation* {.size: sizeof(cuint).} = enum
    Chromalocationcositedeven = 0, Chromalocationmidpoint = 1,
    Chromalocationmaxenum = 2147483647
const
  Chromalocationcositedevenkhr* = enumvkchromalocation.Chromalocationcositedeven
const
  Chromalocationmidpointkhr* = enumvkchromalocation.Chromalocationmidpoint
type
  enumvkdescriptorupdatetemplatetype* {.size: sizeof(cuint).} = enum
    Descriptorupdatetemplatetypedescriptorset = 0,
    Descriptorupdatetemplatetypepushdescriptorskhr = 1,
    Descriptorupdatetemplatetypemaxenum = 2147483647
const
  Descriptorupdatetemplatetypedescriptorsetkhr* = enumvkdescriptorupdatetemplatetype.Descriptorupdatetemplatetypedescriptorset
type
  enumvksubgroupfeatureflagbits* {.size: sizeof(cuint).} = enum
    Subgroupfeaturebasicbit = 1, Subgroupfeaturevotebit = 2,
    Subgroupfeaturearithmeticbit = 4, Subgroupfeatureballotbit = 8,
    Subgroupfeatureshufflebit = 16, Subgroupfeatureshufflerelativebit = 32,
    Subgroupfeatureclusteredbit = 64, Subgroupfeaturequadbit = 128,
    Subgroupfeaturepartitionedbitnv = 256, Subgroupfeaturerotatebitkhr = 512,
    Subgroupfeaturerotateclusteredbitkhr = 1024,
    Subgroupfeatureflagbitsmaxenum = 2147483647
type
  enumvkpeermemoryfeatureflagbits* {.size: sizeof(cuint).} = enum
    Peermemoryfeaturecopysrcbit = 1, Peermemoryfeaturecopydstbit = 2,
    Peermemoryfeaturegenericsrcbit = 4, Peermemoryfeaturegenericdstbit = 8,
    Peermemoryfeatureflagbitsmaxenum = 2147483647
const
  Peermemoryfeaturecopysrcbitkhr* = enumvkpeermemoryfeatureflagbits.Peermemoryfeaturecopysrcbit
const
  Peermemoryfeaturecopydstbitkhr* = enumvkpeermemoryfeatureflagbits.Peermemoryfeaturecopydstbit
const
  Peermemoryfeaturegenericsrcbitkhr* = enumvkpeermemoryfeatureflagbits.Peermemoryfeaturegenericsrcbit
const
  Peermemoryfeaturegenericdstbitkhr* = enumvkpeermemoryfeatureflagbits.Peermemoryfeaturegenericdstbit
type
  enumvkmemoryallocateflagbits* {.size: sizeof(cuint).} = enum
    Memoryallocatedevicemaskbit = 1, Memoryallocatedeviceaddressbit = 2,
    Memoryallocatedeviceaddresscapturereplaybit = 4,
    Memoryallocateflagbitsmaxenum = 2147483647
const
  Memoryallocatedevicemaskbitkhr* = enumvkmemoryallocateflagbits.Memoryallocatedevicemaskbit
const
  Memoryallocatedeviceaddressbitkhr* = enumvkmemoryallocateflagbits.Memoryallocatedeviceaddressbit
const
  Memoryallocatedeviceaddresscapturereplaybitkhr* = enumvkmemoryallocateflagbits.Memoryallocatedeviceaddresscapturereplaybit
type
  enumvkexternalmemoryhandletypeflagbits* {.size: sizeof(cuint).} = enum
    Externalmemoryhandletypeopaquefdbit = 1,
    Externalmemoryhandletypeopaquewin32bit = 2,
    Externalmemoryhandletypeopaquewin32kmtbit = 4,
    Externalmemoryhandletyped3d11texturebit = 8,
    Externalmemoryhandletyped3d11texturekmtbit = 16,
    Externalmemoryhandletyped3d12heapbit = 32,
    Externalmemoryhandletyped3d12resourcebit = 64,
    Externalmemoryhandletypehostallocationbitext = 128,
    Externalmemoryhandletypehostmappedforeignmemorybitext = 256,
    Externalmemoryhandletypedmabufbitext = 512,
    Externalmemoryhandletypeandroidhardwarebufferbitandroid = 1024,
    Externalmemoryhandletypezirconvmobitfuchsia = 2048,
    Externalmemoryhandletyperdmaaddressbitnv = 4096,
    Externalmemoryhandletypescreenbufferbitqnx = 16384,
    Externalmemoryhandletypeflagbitsmaxenum = 2147483647
const
  Externalmemoryhandletypeopaquefdbitkhr* = enumvkexternalmemoryhandletypeflagbits.Externalmemoryhandletypeopaquefdbit
const
  Externalmemoryhandletypeopaquewin32bitkhr* = enumvkexternalmemoryhandletypeflagbits.Externalmemoryhandletypeopaquewin32bit
const
  Externalmemoryhandletypeopaquewin32kmtbitkhr* = enumvkexternalmemoryhandletypeflagbits.Externalmemoryhandletypeopaquewin32kmtbit
const
  Externalmemoryhandletyped3d11texturebitkhr* = enumvkexternalmemoryhandletypeflagbits.Externalmemoryhandletyped3d11texturebit
const
  Externalmemoryhandletyped3d11texturekmtbitkhr* = enumvkexternalmemoryhandletypeflagbits.Externalmemoryhandletyped3d11texturekmtbit
const
  Externalmemoryhandletyped3d12heapbitkhr* = enumvkexternalmemoryhandletypeflagbits.Externalmemoryhandletyped3d12heapbit
const
  Externalmemoryhandletyped3d12resourcebitkhr* = enumvkexternalmemoryhandletypeflagbits.Externalmemoryhandletyped3d12resourcebit
type
  enumvkexternalmemoryfeatureflagbits* {.size: sizeof(cuint).} = enum
    Externalmemoryfeaturededicatedonlybit = 1,
    Externalmemoryfeatureexportablebit = 2,
    Externalmemoryfeatureimportablebit = 4,
    Externalmemoryfeatureflagbitsmaxenum = 2147483647
const
  Externalmemoryfeaturededicatedonlybitkhr* = enumvkexternalmemoryfeatureflagbits.Externalmemoryfeaturededicatedonlybit
const
  Externalmemoryfeatureexportablebitkhr* = enumvkexternalmemoryfeatureflagbits.Externalmemoryfeatureexportablebit
const
  Externalmemoryfeatureimportablebitkhr* = enumvkexternalmemoryfeatureflagbits.Externalmemoryfeatureimportablebit
type
  enumvkexternalfencehandletypeflagbits* {.size: sizeof(cuint).} = enum
    Externalfencehandletypeopaquefdbit = 1,
    Externalfencehandletypeopaquewin32bit = 2,
    Externalfencehandletypeopaquewin32kmtbit = 4,
    Externalfencehandletypesyncfdbit = 8,
    Externalfencehandletypeflagbitsmaxenum = 2147483647
const
  Externalfencehandletypeopaquefdbitkhr* = enumvkexternalfencehandletypeflagbits.Externalfencehandletypeopaquefdbit
const
  Externalfencehandletypeopaquewin32bitkhr* = enumvkexternalfencehandletypeflagbits.Externalfencehandletypeopaquewin32bit
const
  Externalfencehandletypeopaquewin32kmtbitkhr* = enumvkexternalfencehandletypeflagbits.Externalfencehandletypeopaquewin32kmtbit
const
  Externalfencehandletypesyncfdbitkhr* = enumvkexternalfencehandletypeflagbits.Externalfencehandletypesyncfdbit
type
  enumvkexternalfencefeatureflagbits* {.size: sizeof(cuint).} = enum
    Externalfencefeatureexportablebit = 1,
    Externalfencefeatureimportablebit = 2,
    Externalfencefeatureflagbitsmaxenum = 2147483647
const
  Externalfencefeatureexportablebitkhr* = enumvkexternalfencefeatureflagbits.Externalfencefeatureexportablebit
const
  Externalfencefeatureimportablebitkhr* = enumvkexternalfencefeatureflagbits.Externalfencefeatureimportablebit
type
  enumvkfenceimportflagbits* {.size: sizeof(cuint).} = enum
    Fenceimporttemporarybit = 1, Fenceimportflagbitsmaxenum = 2147483647
const
  Fenceimporttemporarybitkhr* = enumvkfenceimportflagbits.Fenceimporttemporarybit
type
  enumvksemaphoreimportflagbits* {.size: sizeof(cuint).} = enum
    Semaphoreimporttemporarybit = 1, Semaphoreimportflagbitsmaxenum = 2147483647
const
  Semaphoreimporttemporarybitkhr* = enumvksemaphoreimportflagbits.Semaphoreimporttemporarybit
type
  enumvkexternalsemaphorehandletypeflagbits* {.size: sizeof(cuint).} = enum
    Externalsemaphorehandletypeopaquefdbit = 1,
    Externalsemaphorehandletypeopaquewin32bit = 2,
    Externalsemaphorehandletypeopaquewin32kmtbit = 4,
    Externalsemaphorehandletyped3d12fencebit = 8,
    Externalsemaphorehandletypesyncfdbit = 16,
    Externalsemaphorehandletypezirconeventbitfuchsia = 128,
    Externalsemaphorehandletypeflagbitsmaxenum = 2147483647
const
  Externalsemaphorehandletyped3d11fencebit* = enumvkexternalsemaphorehandletypeflagbits.Externalsemaphorehandletyped3d12fencebit
const
  Externalsemaphorehandletypeopaquefdbitkhr* = enumvkexternalsemaphorehandletypeflagbits.Externalsemaphorehandletypeopaquefdbit
const
  Externalsemaphorehandletypeopaquewin32bitkhr* = enumvkexternalsemaphorehandletypeflagbits.Externalsemaphorehandletypeopaquewin32bit
const
  Externalsemaphorehandletypeopaquewin32kmtbitkhr* = enumvkexternalsemaphorehandletypeflagbits.Externalsemaphorehandletypeopaquewin32kmtbit
const
  Externalsemaphorehandletyped3d12fencebitkhr* = enumvkexternalsemaphorehandletypeflagbits.Externalsemaphorehandletyped3d12fencebit
const
  Externalsemaphorehandletypesyncfdbitkhr* = enumvkexternalsemaphorehandletypeflagbits.Externalsemaphorehandletypesyncfdbit
type
  enumvkexternalsemaphorefeatureflagbits* {.size: sizeof(cuint).} = enum
    Externalsemaphorefeatureexportablebit = 1,
    Externalsemaphorefeatureimportablebit = 2,
    Externalsemaphorefeatureflagbitsmaxenum = 2147483647
const
  Externalsemaphorefeatureexportablebitkhr* = enumvkexternalsemaphorefeatureflagbits.Externalsemaphorefeatureexportablebit
const
  Externalsemaphorefeatureimportablebitkhr* = enumvkexternalsemaphorefeatureflagbits.Externalsemaphorefeatureimportablebit
type
  enumvkdriverid* {.size: sizeof(cuint).} = enum
    Driveridamdproprietary = 1, Driveridamdopensource = 2, Driveridmesaradv = 3,
    Driveridnvidiaproprietary = 4, Driveridintelproprietarywindows = 5,
    Driveridintelopensourcemesa = 6, Driveridimaginationproprietary = 7,
    Driveridqualcommproprietary = 8, Driveridarmproprietary = 9,
    Driveridgoogleswiftshader = 10, Driveridggpproprietary = 11,
    Driveridbroadcomproprietary = 12, Driveridmesallvmpipe = 13,
    Driveridmoltenvk = 14, Driveridcoreaviproprietary = 15,
    Driveridjuiceproprietary = 16, Driveridverisiliconproprietary = 17,
    Driveridmesaturnip = 18, Driveridmesav3dv = 19, Driveridmesapanvk = 20,
    Driveridsamsungproprietary = 21, Driveridmesavenus = 22,
    Driveridmesadozen = 23, Driveridmesanvk = 24,
    Driveridimaginationopensourcemesa = 25, Driveridmesaagxv = 26,
    Driveridmaxenum = 2147483647
const
  Driveridamdproprietarykhr* = enumvkdriverid.Driveridamdproprietary
const
  Driveridamdopensourcekhr* = enumvkdriverid.Driveridamdopensource
const
  Driveridmesaradvkhr* = enumvkdriverid.Driveridmesaradv
const
  Driveridnvidiaproprietarykhr* = enumvkdriverid.Driveridnvidiaproprietary
const
  Driveridintelproprietarywindowskhr* = enumvkdriverid.Driveridintelproprietarywindows
const
  Driveridintelopensourcemesakhr* = enumvkdriverid.Driveridintelopensourcemesa
const
  Driveridimaginationproprietarykhr* = enumvkdriverid.Driveridimaginationproprietary
const
  Driveridqualcommproprietarykhr* = enumvkdriverid.Driveridqualcommproprietary
const
  Driveridarmproprietarykhr* = enumvkdriverid.Driveridarmproprietary
const
  Driveridgoogleswiftshaderkhr* = enumvkdriverid.Driveridgoogleswiftshader
const
  Driveridggpproprietarykhr* = enumvkdriverid.Driveridggpproprietary
const
  Driveridbroadcomproprietarykhr* = enumvkdriverid.Driveridbroadcomproprietary
type
  enumvkshaderfloatcontrolsindependence* {.size: sizeof(cuint).} = enum
    Shaderfloatcontrolsindependence32bitonly = 0,
    Shaderfloatcontrolsindependenceall = 1,
    Shaderfloatcontrolsindependencenone = 2,
    Shaderfloatcontrolsindependencemaxenum = 2147483647
const
  Shaderfloatcontrolsindependence32bitonlykhr* = enumvkshaderfloatcontrolsindependence.Shaderfloatcontrolsindependence32bitonly
const
  Shaderfloatcontrolsindependenceallkhr* = enumvkshaderfloatcontrolsindependence.Shaderfloatcontrolsindependenceall
const
  Shaderfloatcontrolsindependencenonekhr* = enumvkshaderfloatcontrolsindependence.Shaderfloatcontrolsindependencenone
type
  enumvksamplerreductionmode* {.size: sizeof(cuint).} = enum
    Samplerreductionmodeweightedaverage = 0, Samplerreductionmodemin = 1,
    Samplerreductionmodemax = 2,
    Samplerreductionmodeweightedaveragerangeclampqcom = 1000521000,
    Samplerreductionmodemaxenum = 2147483647
const
  Samplerreductionmodeweightedaverageext* = enumvksamplerreductionmode.Samplerreductionmodeweightedaverage
const
  Samplerreductionmodeminext* = enumvksamplerreductionmode.Samplerreductionmodemin
const
  Samplerreductionmodemaxext* = enumvksamplerreductionmode.Samplerreductionmodemax
type
  enumvksemaphoretype* {.size: sizeof(cuint).} = enum
    Semaphoretypebinary = 0, Semaphoretypetimeline = 1,
    Semaphoretypemaxenum = 2147483647
const
  Semaphoretypebinarykhr* = enumvksemaphoretype.Semaphoretypebinary
const
  Semaphoretypetimelinekhr* = enumvksemaphoretype.Semaphoretypetimeline
type
  enumvkresolvemodeflagbits* {.size: sizeof(cuint).} = enum
    Resolvemodenone = 0, Resolvemodesamplezerobit = 1,
    Resolvemodeaveragebit = 2, Resolvemodeminbit = 4, Resolvemodemaxbit = 8,
    Resolvemodeexternalformatdownsampleandroid = 16,
    Resolvemodeflagbitsmaxenum = 2147483647
const
  Resolvemodenonekhr* = enumvkresolvemodeflagbits.Resolvemodenone
const
  Resolvemodesamplezerobitkhr* = enumvkresolvemodeflagbits.Resolvemodesamplezerobit
const
  Resolvemodeaveragebitkhr* = enumvkresolvemodeflagbits.Resolvemodeaveragebit
const
  Resolvemodeminbitkhr* = enumvkresolvemodeflagbits.Resolvemodeminbit
const
  Resolvemodemaxbitkhr* = enumvkresolvemodeflagbits.Resolvemodemaxbit
type
  enumvkdescriptorbindingflagbits* {.size: sizeof(cuint).} = enum
    Descriptorbindingupdateafterbindbit = 1,
    Descriptorbindingupdateunusedwhilependingbit = 2,
    Descriptorbindingpartiallyboundbit = 4,
    Descriptorbindingvariabledescriptorcountbit = 8,
    Descriptorbindingflagbitsmaxenum = 2147483647
const
  Descriptorbindingupdateafterbindbitext* = enumvkdescriptorbindingflagbits.Descriptorbindingupdateafterbindbit
const
  Descriptorbindingupdateunusedwhilependingbitext* = enumvkdescriptorbindingflagbits.Descriptorbindingupdateunusedwhilependingbit
const
  Descriptorbindingpartiallyboundbitext* = enumvkdescriptorbindingflagbits.Descriptorbindingpartiallyboundbit
const
  Descriptorbindingvariabledescriptorcountbitext* = enumvkdescriptorbindingflagbits.Descriptorbindingvariabledescriptorcountbit
type
  enumvksemaphorewaitflagbits* {.size: sizeof(cuint).} = enum
    Semaphorewaitanybit = 1, Semaphorewaitflagbitsmaxenum = 2147483647
const
  Semaphorewaitanybitkhr* = enumvksemaphorewaitflagbits.Semaphorewaitanybit
type
  enumvkpipelinecreationfeedbackflagbits* {.size: sizeof(cuint).} = enum
    Pipelinecreationfeedbackvalidbit = 1,
    Pipelinecreationfeedbackapplicationpipelinecachehitbit = 2,
    Pipelinecreationfeedbackbasepipelineaccelerationbit = 4,
    Pipelinecreationfeedbackflagbitsmaxenum = 2147483647
const
  Pipelinecreationfeedbackvalidbitext* = enumvkpipelinecreationfeedbackflagbits.Pipelinecreationfeedbackvalidbit
const
  Pipelinecreationfeedbackapplicationpipelinecachehitbitext* = enumvkpipelinecreationfeedbackflagbits.Pipelinecreationfeedbackapplicationpipelinecachehitbit
const
  Pipelinecreationfeedbackbasepipelineaccelerationbitext* = enumvkpipelinecreationfeedbackflagbits.Pipelinecreationfeedbackbasepipelineaccelerationbit
type
  enumvktoolpurposeflagbits* {.size: sizeof(cuint).} = enum
    Toolpurposevalidationbit = 1, Toolpurposeprofilingbit = 2,
    Toolpurposetracingbit = 4, Toolpurposeadditionalfeaturesbit = 8,
    Toolpurposemodifyingfeaturesbit = 16, Toolpurposedebugreportingbitext = 32,
    Toolpurposedebugmarkersbitext = 64, Toolpurposeflagbitsmaxenum = 2147483647
const
  Toolpurposevalidationbitext* = enumvktoolpurposeflagbits.Toolpurposevalidationbit
const
  Toolpurposeprofilingbitext* = enumvktoolpurposeflagbits.Toolpurposeprofilingbit
const
  Toolpurposetracingbitext* = enumvktoolpurposeflagbits.Toolpurposetracingbit
const
  Toolpurposeadditionalfeaturesbitext* = enumvktoolpurposeflagbits.Toolpurposeadditionalfeaturesbit
const
  Toolpurposemodifyingfeaturesbitext* = enumvktoolpurposeflagbits.Toolpurposemodifyingfeaturesbit
type
  enumvksubmitflagbits* {.size: sizeof(cuint).} = enum
    Submitprotectedbit = 1, Submitflagbitsmaxenum = 2147483647
const
  Submitprotectedbitkhr* = enumvksubmitflagbits.Submitprotectedbit
type
  enumvkrenderingflagbits* {.size: sizeof(cuint).} = enum
    Renderingcontentssecondarycommandbuffersbit = 1, Renderingsuspendingbit = 2,
    Renderingresumingbit = 4, Renderingenablelegacyditheringbitext = 8,
    Renderingcontentsinlinebitext = 16, Renderingflagbitsmaxenum = 2147483647
const
  Renderingcontentssecondarycommandbuffersbitkhr* = enumvkrenderingflagbits.Renderingcontentssecondarycommandbuffersbit
const
  Renderingsuspendingbitkhr* = enumvkrenderingflagbits.Renderingsuspendingbit
const
  Renderingresumingbitkhr* = enumvkrenderingflagbits.Renderingresumingbit
type
  enumvkpresentmodekhr* {.size: sizeof(cuint).} = enum
    Presentmodeimmediatekhr = 0, Presentmodemailboxkhr = 1,
    Presentmodefifokhr = 2, Presentmodefiforelaxedkhr = 3,
    Presentmodeshareddemandrefreshkhr = 1000111000,
    Presentmodesharedcontinuousrefreshkhr = 1000111001,
    Presentmodemaxenumkhr = 2147483647
type
  enumvkcolorspacekhr* {.size: sizeof(cuint).} = enum
    Colorspacesrgbnonlinearkhr = 0,
    Colorspacedisplayp3nonlinearext = 1000104001,
    Colorspaceextendedsrgblinearext = 1000104002,
    Colorspacedisplayp3linearext = 1000104003,
    Colorspacedcip3nonlinearext = 1000104004,
    Colorspacebt709linearext = 1000104005,
    Colorspacebt709nonlinearext = 1000104006,
    Colorspacebt2020linearext = 1000104007,
    Colorspacehdr10st2084ext = 1000104008,
    Colorspacedolbyvisionext = 1000104009, Colorspacehdr10hlgext = 1000104010,
    Colorspaceadobergblinearext = 1000104011,
    Colorspaceadobergbnonlinearext = 1000104012,
    Colorspacepassthroughext = 1000104013,
    Colorspaceextendedsrgbnonlinearext = 1000104014,
    Colorspacedisplaynativeamd = 1000213000, Colorspacemaxenumkhr = 2147483647
const
  Colorspacesrgbnonlinearkhrenumval* = enumvkcolorspacekhr.Colorspacesrgbnonlinearkhr
const
  Colorspacedcip3linearext* = enumvkcolorspacekhr.Colorspacedisplayp3linearext
type
  enumvksurfacetransformflagbitskhr* {.size: sizeof(cuint).} = enum
    Surfacetransformidentitybitkhr = 1, Surfacetransformrotate90bitkhr = 2,
    Surfacetransformrotate180bitkhr = 4, Surfacetransformrotate270bitkhr = 8,
    Surfacetransformhorizontalmirrorbitkhr = 16,
    Surfacetransformhorizontalmirrorrotate90bitkhr = 32,
    Surfacetransformhorizontalmirrorrotate180bitkhr = 64,
    Surfacetransformhorizontalmirrorrotate270bitkhr = 128,
    Surfacetransforminheritbitkhr = 256,
    Surfacetransformflagbitsmaxenumkhr = 2147483647
type
  enumvkcompositealphaflagbitskhr* {.size: sizeof(cuint).} = enum
    Compositealphaopaquebitkhr = 1, Compositealphapremultipliedbitkhr = 2,
    Compositealphapostmultipliedbitkhr = 4, Compositealphainheritbitkhr = 8,
    Compositealphaflagbitsmaxenumkhr = 2147483647
type
  enumvkswapchaincreateflagbitskhr* {.size: sizeof(cuint).} = enum
    Swapchaincreatesplitinstancebindregionsbitkhr = 1,
    Swapchaincreateprotectedbitkhr = 2, Swapchaincreatemutableformatbitkhr = 4,
    Swapchaincreatedeferredmemoryallocationbitext = 8,
    Swapchaincreateflagbitsmaxenumkhr = 2147483647
type
  enumvkdevicegrouppresentmodeflagbitskhr* {.size: sizeof(cuint).} = enum
    Devicegrouppresentmodelocalbitkhr = 1,
    Devicegrouppresentmoderemotebitkhr = 2, Devicegrouppresentmodesumbitkhr = 4,
    Devicegrouppresentmodelocalmultidevicebitkhr = 8,
    Devicegrouppresentmodeflagbitsmaxenumkhr = 2147483647
type
  enumvkdisplayplanealphaflagbitskhr* {.size: sizeof(cuint).} = enum
    Displayplanealphaopaquebitkhr = 1, Displayplanealphaglobalbitkhr = 2,
    Displayplanealphaperpixelbitkhr = 4,
    Displayplanealphaperpixelpremultipliedbitkhr = 8,
    Displayplanealphaflagbitsmaxenumkhr = 2147483647
type
  enumvkqueryresultstatuskhr* {.size: sizeof(cint).} = enum
    Queryresultstatusinsufficientbitstreambufferrangekhr = -1000299000,
    Queryresultstatuserrorkhr = -1, Queryresultstatusnotreadykhr = 0,
    Queryresultstatuscompletekhr = 1, Queryresultstatusmaxenumkhr = 2147483647
type
  enumvkvideocodecoperationflagbitskhr* {.size: sizeof(cuint).} = enum
    Videocodecoperationnonekhr = 0, Videocodecoperationdecodeh264bitkhr = 1,
    Videocodecoperationdecodeh265bitkhr = 2,
    Videocodecoperationdecodeav1bitkhr = 4,
    Videocodecoperationencodeh264bitkhr = 65536,
    Videocodecoperationencodeh265bitkhr = 131072,
    Videocodecoperationflagbitsmaxenumkhr = 2147483647
type
  enumvkvideochromasubsamplingflagbitskhr* {.size: sizeof(cuint).} = enum
    Videochromasubsamplinginvalidkhr = 0,
    Videochromasubsamplingmonochromebitkhr = 1,
    Videochromasubsampling420bitkhr = 2, Videochromasubsampling422bitkhr = 4,
    Videochromasubsampling444bitkhr = 8,
    Videochromasubsamplingflagbitsmaxenumkhr = 2147483647
type
  enumvkvideocomponentbitdepthflagbitskhr* {.size: sizeof(cuint).} = enum
    Videocomponentbitdepthinvalidkhr = 0, Videocomponentbitdepth8bitkhr = 1,
    Videocomponentbitdepth10bitkhr = 4, Videocomponentbitdepth12bitkhr = 16,
    Videocomponentbitdepthflagbitsmaxenumkhr = 2147483647
type
  enumvkvideocapabilityflagbitskhr* {.size: sizeof(cuint).} = enum
    Videocapabilityprotectedcontentbitkhr = 1,
    Videocapabilityseparatereferenceimagesbitkhr = 2,
    Videocapabilityflagbitsmaxenumkhr = 2147483647
type
  enumvkvideosessioncreateflagbitskhr* {.size: sizeof(cuint).} = enum
    Videosessioncreateprotectedcontentbitkhr = 1,
    Videosessioncreateallowencodeparameteroptimizationsbitkhr = 2,
    Videosessioncreateinlinequeriesbitkhr = 4,
    Videosessioncreateflagbitsmaxenumkhr = 2147483647
type
  enumvkvideocodingcontrolflagbitskhr* {.size: sizeof(cuint).} = enum
    Videocodingcontrolresetbitkhr = 1,
    Videocodingcontrolencoderatecontrolbitkhr = 2,
    Videocodingcontrolencodequalitylevelbitkhr = 4,
    Videocodingcontrolflagbitsmaxenumkhr = 2147483647
type
  enumvkvideodecodecapabilityflagbitskhr* {.size: sizeof(cuint).} = enum
    Videodecodecapabilitydpbandoutputcoincidebitkhr = 1,
    Videodecodecapabilitydpbandoutputdistinctbitkhr = 2,
    Videodecodecapabilityflagbitsmaxenumkhr = 2147483647
type
  enumvkvideodecodeusageflagbitskhr* {.size: sizeof(cuint).} = enum
    Videodecodeusagedefaultkhr = 0, Videodecodeusagetranscodingbitkhr = 1,
    Videodecodeusageofflinebitkhr = 2, Videodecodeusagestreamingbitkhr = 4,
    Videodecodeusageflagbitsmaxenumkhr = 2147483647
type
  enumvkvideoencodeh264capabilityflagbitskhr* {.size: sizeof(cuint).} = enum
    Videoencodeh264capabilityhrdcompliancebitkhr = 1,
    Videoencodeh264capabilitypredictionweighttablegeneratedbitkhr = 2,
    Videoencodeh264capabilityrowunalignedslicebitkhr = 4,
    Videoencodeh264capabilitydifferentslicetypebitkhr = 8,
    Videoencodeh264capabilitybframeinl0listbitkhr = 16,
    Videoencodeh264capabilitybframeinl1listbitkhr = 32,
    Videoencodeh264capabilityperpicturetypeminmaxqpbitkhr = 64,
    Videoencodeh264capabilitypersliceconstantqpbitkhr = 128,
    Videoencodeh264capabilitygenerateprefixnalubitkhr = 256,
    Videoencodeh264capabilityflagbitsmaxenumkhr = 2147483647
type
  enumvkvideoencodeh264stdflagbitskhr* {.size: sizeof(cuint).} = enum
    Videoencodeh264stdseparatecolorplaneflagsetbitkhr = 1,
    Videoencodeh264stdqpprimeyzerotransformbypassflagsetbitkhr = 2,
    Videoencodeh264stdscalingmatrixpresentflagsetbitkhr = 4,
    Videoencodeh264stdchromaqpindexoffsetbitkhr = 8,
    Videoencodeh264stdsecondchromaqpindexoffsetbitkhr = 16,
    Videoencodeh264stdpicinitqpminus26bitkhr = 32,
    Videoencodeh264stdweightedpredflagsetbitkhr = 64,
    Videoencodeh264stdweightedbipredidcexplicitbitkhr = 128,
    Videoencodeh264stdweightedbipredidcimplicitbitkhr = 256,
    Videoencodeh264stdtransform8x8modeflagsetbitkhr = 512,
    Videoencodeh264stddirectspatialmvpredflagunsetbitkhr = 1024,
    Videoencodeh264stdentropycodingmodeflagunsetbitkhr = 2048,
    Videoencodeh264stdentropycodingmodeflagsetbitkhr = 4096,
    Videoencodeh264stddirect8x8inferenceflagunsetbitkhr = 8192,
    Videoencodeh264stdconstrainedintrapredflagsetbitkhr = 16384,
    Videoencodeh264stddeblockingfilterdisabledbitkhr = 32768,
    Videoencodeh264stddeblockingfilterenabledbitkhr = 65536,
    Videoencodeh264stddeblockingfilterpartialbitkhr = 131072,
    Videoencodeh264stdsliceqpdeltabitkhr = 524288,
    Videoencodeh264stddifferentsliceqpdeltabitkhr = 1048576,
    Videoencodeh264stdflagbitsmaxenumkhr = 2147483647
type
  enumvkvideoencodeh264ratecontrolflagbitskhr* {.size: sizeof(cuint).} = enum
    Videoencodeh264ratecontrolattempthrdcompliancebitkhr = 1,
    Videoencodeh264ratecontrolregulargopbitkhr = 2,
    Videoencodeh264ratecontrolreferencepatternflatbitkhr = 4,
    Videoencodeh264ratecontrolreferencepatterndyadicbitkhr = 8,
    Videoencodeh264ratecontroltemporallayerpatterndyadicbitkhr = 16,
    Videoencodeh264ratecontrolflagbitsmaxenumkhr = 2147483647
type
  enumvkvideoencodeh265capabilityflagbitskhr* {.size: sizeof(cuint).} = enum
    Videoencodeh265capabilityhrdcompliancebitkhr = 1,
    Videoencodeh265capabilitypredictionweighttablegeneratedbitkhr = 2,
    Videoencodeh265capabilityrowunalignedslicesegmentbitkhr = 4,
    Videoencodeh265capabilitydifferentslicesegmenttypebitkhr = 8,
    Videoencodeh265capabilitybframeinl0listbitkhr = 16,
    Videoencodeh265capabilitybframeinl1listbitkhr = 32,
    Videoencodeh265capabilityperpicturetypeminmaxqpbitkhr = 64,
    Videoencodeh265capabilityperslicesegmentconstantqpbitkhr = 128,
    Videoencodeh265capabilitymultipletilesperslicesegmentbitkhr = 256,
    Videoencodeh265capabilitymultipleslicesegmentspertilebitkhr = 512,
    Videoencodeh265capabilityflagbitsmaxenumkhr = 2147483647
type
  enumvkvideoencodeh265stdflagbitskhr* {.size: sizeof(cuint).} = enum
    Videoencodeh265stdseparatecolorplaneflagsetbitkhr = 1,
    Videoencodeh265stdsampleadaptiveoffsetenabledflagsetbitkhr = 2,
    Videoencodeh265stdscalinglistdatapresentflagsetbitkhr = 4,
    Videoencodeh265stdpcmenabledflagsetbitkhr = 8,
    Videoencodeh265stdspstemporalmvpenabledflagsetbitkhr = 16,
    Videoencodeh265stdinitqpminus26bitkhr = 32,
    Videoencodeh265stdweightedpredflagsetbitkhr = 64,
    Videoencodeh265stdweightedbipredflagsetbitkhr = 128,
    Videoencodeh265stdlog2parallelmergelevelminus2bitkhr = 256,
    Videoencodeh265stdsigndatahidingenabledflagsetbitkhr = 512,
    Videoencodeh265stdtransformskipenabledflagsetbitkhr = 1024,
    Videoencodeh265stdtransformskipenabledflagunsetbitkhr = 2048,
    Videoencodeh265stdppsslicechromaqpoffsetspresentflagsetbitkhr = 4096,
    Videoencodeh265stdtransquantbypassenabledflagsetbitkhr = 8192,
    Videoencodeh265stdconstrainedintrapredflagsetbitkhr = 16384,
    Videoencodeh265stdentropycodingsyncenabledflagsetbitkhr = 32768,
    Videoencodeh265stddeblockingfilteroverrideenabledflagsetbitkhr = 65536,
    Videoencodeh265stddependentslicesegmentsenabledflagsetbitkhr = 131072,
    Videoencodeh265stddependentslicesegmentflagsetbitkhr = 262144,
    Videoencodeh265stdsliceqpdeltabitkhr = 524288,
    Videoencodeh265stddifferentsliceqpdeltabitkhr = 1048576,
    Videoencodeh265stdflagbitsmaxenumkhr = 2147483647
type
  enumvkvideoencodeh265ctbsizeflagbitskhr* {.size: sizeof(cuint).} = enum
    Videoencodeh265ctbsize16bitkhr = 1, Videoencodeh265ctbsize32bitkhr = 2,
    Videoencodeh265ctbsize64bitkhr = 4,
    Videoencodeh265ctbsizeflagbitsmaxenumkhr = 2147483647
type
  enumvkvideoencodeh265transformblocksizeflagbitskhr* {.size: sizeof(cuint).} = enum
    Videoencodeh265transformblocksize4bitkhr = 1,
    Videoencodeh265transformblocksize8bitkhr = 2,
    Videoencodeh265transformblocksize16bitkhr = 4,
    Videoencodeh265transformblocksize32bitkhr = 8,
    Videoencodeh265transformblocksizeflagbitsmaxenumkhr = 2147483647
type
  enumvkvideoencodeh265ratecontrolflagbitskhr* {.size: sizeof(cuint).} = enum
    Videoencodeh265ratecontrolattempthrdcompliancebitkhr = 1,
    Videoencodeh265ratecontrolregulargopbitkhr = 2,
    Videoencodeh265ratecontrolreferencepatternflatbitkhr = 4,
    Videoencodeh265ratecontrolreferencepatterndyadicbitkhr = 8,
    Videoencodeh265ratecontroltemporalsublayerpatterndyadicbitkhr = 16,
    Videoencodeh265ratecontrolflagbitsmaxenumkhr = 2147483647
type
  enumvkvideodecodeh264picturelayoutflagbitskhr* {.size: sizeof(cuint).} = enum
    Videodecodeh264picturelayoutprogressivekhr = 0,
    Videodecodeh264picturelayoutinterlacedinterleavedlinesbitkhr = 1,
    Videodecodeh264picturelayoutinterlacedseparateplanesbitkhr = 2,
    Videodecodeh264picturelayoutflagbitsmaxenumkhr = 2147483647
type
  enumvkperformancecounterunitkhr* {.size: sizeof(cuint).} = enum
    Performancecounterunitgenerickhr = 0,
    Performancecounterunitpercentagekhr = 1,
    Performancecounterunitnanosecondskhr = 2,
    Performancecounterunitbyteskhr = 3,
    Performancecounterunitbytespersecondkhr = 4,
    Performancecounterunitkelvinkhr = 5, Performancecounterunitwattskhr = 6,
    Performancecounterunitvoltskhr = 7, Performancecounterunitampskhr = 8,
    Performancecounterunithertzkhr = 9, Performancecounterunitcycleskhr = 10,
    Performancecounterunitmaxenumkhr = 2147483647
type
  enumvkperformancecounterscopekhr* {.size: sizeof(cuint).} = enum
    Performancecounterscopecommandbufferkhr = 0,
    Performancecounterscoperenderpasskhr = 1,
    Performancecounterscopecommandkhr = 2,
    Performancecounterscopemaxenumkhr = 2147483647
const
  Queryscopecommandbufferkhr* = enumvkperformancecounterscopekhr.Performancecounterscopecommandbufferkhr
const
  Queryscoperenderpasskhr* = enumvkperformancecounterscopekhr.Performancecounterscoperenderpasskhr
const
  Queryscopecommandkhr* = enumvkperformancecounterscopekhr.Performancecounterscopecommandkhr
type
  enumvkperformancecounterstoragekhr* {.size: sizeof(cuint).} = enum
    Performancecounterstorageint32khr = 0,
    Performancecounterstorageint64khr = 1,
    Performancecounterstorageuint32khr = 2,
    Performancecounterstorageuint64khr = 3,
    Performancecounterstoragefloat32khr = 4,
    Performancecounterstoragefloat64khr = 5,
    Performancecounterstoragemaxenumkhr = 2147483647
type
  enumvkperformancecounterdescriptionflagbitskhr* {.size: sizeof(cuint).} = enum
    Performancecounterdescriptionperformanceimpactingbitkhr = 1,
    Performancecounterdescriptionconcurrentlyimpactedbitkhr = 2,
    Performancecounterdescriptionflagbitsmaxenumkhr = 2147483647
const
  Performancecounterdescriptionperformanceimpactingkhr* = enumvkperformancecounterdescriptionflagbitskhr.Performancecounterdescriptionperformanceimpactingbitkhr
const
  Performancecounterdescriptionconcurrentlyimpactedkhr* = enumvkperformancecounterdescriptionflagbitskhr.Performancecounterdescriptionconcurrentlyimpactedbitkhr
type
  enumvkacquireprofilinglockflagbitskhr* {.size: sizeof(cuint).} = enum
    Acquireprofilinglockflagbitsmaxenumkhr = 2147483647
type
  enumvkqueueglobalprioritykhr* {.size: sizeof(cuint).} = enum
    Queueglobalprioritylowkhr = 128, Queueglobalprioritymediumkhr = 256,
    Queueglobalpriorityhighkhr = 512, Queueglobalpriorityrealtimekhr = 1024,
    Queueglobalprioritymaxenumkhr = 2147483647
const
  Queueglobalprioritylowext* = enumvkqueueglobalprioritykhr.Queueglobalprioritylowkhr
const
  Queueglobalprioritymediumext* = enumvkqueueglobalprioritykhr.Queueglobalprioritymediumkhr
const
  Queueglobalpriorityhighext* = enumvkqueueglobalprioritykhr.Queueglobalpriorityhighkhr
const
  Queueglobalpriorityrealtimeext* = enumvkqueueglobalprioritykhr.Queueglobalpriorityrealtimekhr
type
  enumvkfragmentshadingratecombineropkhr* {.size: sizeof(cuint).} = enum
    Fragmentshadingratecombineropkeepkhr = 0,
    Fragmentshadingratecombineropreplacekhr = 1,
    Fragmentshadingratecombineropminkhr = 2,
    Fragmentshadingratecombineropmaxkhr = 3,
    Fragmentshadingratecombineropmulkhr = 4,
    Fragmentshadingratecombineropmaxenumkhr = 2147483647
type
  enumvkpipelineexecutablestatisticformatkhr* {.size: sizeof(cuint).} = enum
    Pipelineexecutablestatisticformatbool32khr = 0,
    Pipelineexecutablestatisticformatint64khr = 1,
    Pipelineexecutablestatisticformatuint64khr = 2,
    Pipelineexecutablestatisticformatfloat64khr = 3,
    Pipelineexecutablestatisticformatmaxenumkhr = 2147483647
type
  enumvkmemoryunmapflagbitskhr* {.size: sizeof(cuint).} = enum
    Memoryunmapreservebitext = 1, Memoryunmapflagbitsmaxenumkhr = 2147483647
type
  enumvkvideoencodetuningmodekhr* {.size: sizeof(cuint).} = enum
    Videoencodetuningmodedefaultkhr = 0,
    Videoencodetuningmodehighqualitykhr = 1,
    Videoencodetuningmodelowlatencykhr = 2,
    Videoencodetuningmodeultralowlatencykhr = 3,
    Videoencodetuningmodelosslesskhr = 4,
    Videoencodetuningmodemaxenumkhr = 2147483647
type
  enumvkvideoencodeflagbitskhr* {.size: sizeof(cuint).} = enum
    Videoencodeflagbitsmaxenumkhr = 2147483647
type
  enumvkvideoencodecapabilityflagbitskhr* {.size: sizeof(cuint).} = enum
    Videoencodecapabilityprecedingexternallyencodedbytesbitkhr = 1,
    Videoencodecapabilityinsufficientbitstreambufferrangedetectionbitkhr = 2,
    Videoencodecapabilityflagbitsmaxenumkhr = 2147483647
type
  enumvkvideoencoderatecontrolmodeflagbitskhr* {.size: sizeof(cuint).} = enum
    Videoencoderatecontrolmodedefaultkhr = 0,
    Videoencoderatecontrolmodedisabledbitkhr = 1,
    Videoencoderatecontrolmodecbrbitkhr = 2,
    Videoencoderatecontrolmodevbrbitkhr = 4,
    Videoencoderatecontrolmodeflagbitsmaxenumkhr = 2147483647
type
  enumvkvideoencodefeedbackflagbitskhr* {.size: sizeof(cuint).} = enum
    Videoencodefeedbackbitstreambufferoffsetbitkhr = 1,
    Videoencodefeedbackbitstreambyteswrittenbitkhr = 2,
    Videoencodefeedbackbitstreamhasoverridesbitkhr = 4,
    Videoencodefeedbackflagbitsmaxenumkhr = 2147483647
type
  enumvkvideoencodeusageflagbitskhr* {.size: sizeof(cuint).} = enum
    Videoencodeusagedefaultkhr = 0, Videoencodeusagetranscodingbitkhr = 1,
    Videoencodeusagestreamingbitkhr = 2, Videoencodeusagerecordingbitkhr = 4,
    Videoencodeusageconferencingbitkhr = 8,
    Videoencodeusageflagbitsmaxenumkhr = 2147483647
type
  enumvkvideoencodecontentflagbitskhr* {.size: sizeof(cuint).} = enum
    Videoencodecontentdefaultkhr = 0, Videoencodecontentcamerabitkhr = 1,
    Videoencodecontentdesktopbitkhr = 2, Videoencodecontentrenderedbitkhr = 4,
    Videoencodecontentflagbitsmaxenumkhr = 2147483647
type
  enumvkcomponenttypekhr* {.size: sizeof(cuint).} = enum
    Componenttypefloat16khr = 0, Componenttypefloat32khr = 1,
    Componenttypefloat64khr = 2, Componenttypesint8khr = 3,
    Componenttypesint16khr = 4, Componenttypesint32khr = 5,
    Componenttypesint64khr = 6, Componenttypeuint8khr = 7,
    Componenttypeuint16khr = 8, Componenttypeuint32khr = 9,
    Componenttypeuint64khr = 10, Componenttypemaxenumkhr = 2147483647
const
  Componenttypefloat16nv* = enumvkcomponenttypekhr.Componenttypefloat16khr
const
  Componenttypefloat32nv* = enumvkcomponenttypekhr.Componenttypefloat32khr
const
  Componenttypefloat64nv* = enumvkcomponenttypekhr.Componenttypefloat64khr
const
  Componenttypesint8nv* = enumvkcomponenttypekhr.Componenttypesint8khr
const
  Componenttypesint16nv* = enumvkcomponenttypekhr.Componenttypesint16khr
const
  Componenttypesint32nv* = enumvkcomponenttypekhr.Componenttypesint32khr
const
  Componenttypesint64nv* = enumvkcomponenttypekhr.Componenttypesint64khr
const
  Componenttypeuint8nv* = enumvkcomponenttypekhr.Componenttypeuint8khr
const
  Componenttypeuint16nv* = enumvkcomponenttypekhr.Componenttypeuint16khr
const
  Componenttypeuint32nv* = enumvkcomponenttypekhr.Componenttypeuint32khr
const
  Componenttypeuint64nv* = enumvkcomponenttypekhr.Componenttypeuint64khr
type
  enumvkscopekhr* {.size: sizeof(cuint).} = enum
    Scopedevicekhr = 1, Scopeworkgroupkhr = 2, Scopesubgroupkhr = 3,
    Scopequeuefamilykhr = 5, Scopemaxenumkhr = 2147483647
const
  Scopedevicenv* = enumvkscopekhr.Scopedevicekhr
const
  Scopeworkgroupnv* = enumvkscopekhr.Scopeworkgroupkhr
const
  Scopesubgroupnv* = enumvkscopekhr.Scopesubgroupkhr
const
  Scopequeuefamilynv* = enumvkscopekhr.Scopequeuefamilykhr
type
  enumvklinerasterizationmodekhr* {.size: sizeof(cuint).} = enum
    Linerasterizationmodedefaultkhr = 0,
    Linerasterizationmoderectangularkhr = 1,
    Linerasterizationmodebresenhamkhr = 2,
    Linerasterizationmoderectangularsmoothkhr = 3,
    Linerasterizationmodemaxenumkhr = 2147483647
const
  Linerasterizationmodedefaultext* = enumvklinerasterizationmodekhr.Linerasterizationmodedefaultkhr
const
  Linerasterizationmoderectangularext* = enumvklinerasterizationmodekhr.Linerasterizationmoderectangularkhr
const
  Linerasterizationmodebresenhamext* = enumvklinerasterizationmodekhr.Linerasterizationmodebresenhamkhr
const
  Linerasterizationmoderectangularsmoothext* = enumvklinerasterizationmodekhr.Linerasterizationmoderectangularsmoothkhr
type
  enumvktimedomainkhr* {.size: sizeof(cuint).} = enum
    Timedomaindevicekhr = 0, Timedomainclockmonotonickhr = 1,
    Timedomainclockmonotonicrawkhr = 2,
    Timedomainqueryperformancecounterkhr = 3, Timedomainmaxenumkhr = 2147483647
const
  Timedomaindeviceext* = enumvktimedomainkhr.Timedomaindevicekhr
const
  Timedomainclockmonotonicext* = enumvktimedomainkhr.Timedomainclockmonotonickhr
const
  Timedomainclockmonotonicrawext* = enumvktimedomainkhr.Timedomainclockmonotonicrawkhr
const
  Timedomainqueryperformancecounterext* = enumvktimedomainkhr.Timedomainqueryperformancecounterkhr
type
  enumvkdebugreportobjecttypeext* {.size: sizeof(cuint).} = enum
    Debugreportobjecttypeunknownext = 0, Debugreportobjecttypeinstanceext = 1,
    Debugreportobjecttypephysicaldeviceext = 2,
    Debugreportobjecttypedeviceext = 3, Debugreportobjecttypequeueext = 4,
    Debugreportobjecttypesemaphoreext = 5,
    Debugreportobjecttypecommandbufferext = 6,
    Debugreportobjecttypefenceext = 7, Debugreportobjecttypedevicememoryext = 8,
    Debugreportobjecttypebufferext = 9, Debugreportobjecttypeimageext = 10,
    Debugreportobjecttypeeventext = 11, Debugreportobjecttypequerypoolext = 12,
    Debugreportobjecttypebufferviewext = 13,
    Debugreportobjecttypeimageviewext = 14,
    Debugreportobjecttypeshadermoduleext = 15,
    Debugreportobjecttypepipelinecacheext = 16,
    Debugreportobjecttypepipelinelayoutext = 17,
    Debugreportobjecttyperenderpassext = 18,
    Debugreportobjecttypepipelineext = 19,
    Debugreportobjecttypedescriptorsetlayoutext = 20,
    Debugreportobjecttypesamplerext = 21,
    Debugreportobjecttypedescriptorpoolext = 22,
    Debugreportobjecttypedescriptorsetext = 23,
    Debugreportobjecttypeframebufferext = 24,
    Debugreportobjecttypecommandpoolext = 25,
    Debugreportobjecttypesurfacekhrext = 26,
    Debugreportobjecttypeswapchainkhrext = 27,
    Debugreportobjecttypedebugreportcallbackextext = 28,
    Debugreportobjecttypedisplaykhrext = 29,
    Debugreportobjecttypedisplaymodekhrext = 30,
    Debugreportobjecttypevalidationcacheextext = 33,
    Debugreportobjecttypecumodulenvxext = 1000029000,
    Debugreportobjecttypecufunctionnvxext = 1000029001,
    Debugreportobjecttypedescriptorupdatetemplateext = 1000085000,
    Debugreportobjecttypeaccelerationstructurekhrext = 1000150000,
    Debugreportobjecttypesamplerycbcrconversionext = 1000156000,
    Debugreportobjecttypeaccelerationstructurenvext = 1000165000,
    Debugreportobjecttypecudamodulenvext = 1000307000,
    Debugreportobjecttypecudafunctionnvext = 1000307001,
    Debugreportobjecttypebuffercollectionfuchsiaext = 1000366000,
    Debugreportobjecttypemaxenumext = 2147483647
const
  Debugreportobjecttypedebugreportext* = enumvkdebugreportobjecttypeext.Debugreportobjecttypedebugreportcallbackextext
const
  Debugreportobjecttypevalidationcacheext* = enumvkdebugreportobjecttypeext.Debugreportobjecttypevalidationcacheextext
const
  Debugreportobjecttypedescriptorupdatetemplatekhrext* = enumvkdebugreportobjecttypeext.Debugreportobjecttypedescriptorupdatetemplateext
const
  Debugreportobjecttypesamplerycbcrconversionkhrext* = enumvkdebugreportobjecttypeext.Debugreportobjecttypesamplerycbcrconversionext
type
  enumvkdebugreportflagbitsext* {.size: sizeof(cuint).} = enum
    Debugreportinformationbitext = 1, Debugreportwarningbitext = 2,
    Debugreportperformancewarningbitext = 4, Debugreporterrorbitext = 8,
    Debugreportdebugbitext = 16, Debugreportflagbitsmaxenumext = 2147483647
type
  enumvkrasterizationorderamd* {.size: sizeof(cuint).} = enum
    Rasterizationorderstrictamd = 0, Rasterizationorderrelaxedamd = 1,
    Rasterizationordermaxenumamd = 2147483647
type
  enumvkshaderinfotypeamd* {.size: sizeof(cuint).} = enum
    Shaderinfotypestatisticsamd = 0, Shaderinfotypebinaryamd = 1,
    Shaderinfotypedisassemblyamd = 2, Shaderinfotypemaxenumamd = 2147483647
type
  enumvkexternalmemoryhandletypeflagbitsnv* {.size: sizeof(cuint).} = enum
    Externalmemoryhandletypeopaquewin32bitnv = 1,
    Externalmemoryhandletypeopaquewin32kmtbitnv = 2,
    Externalmemoryhandletyped3d11imagebitnv = 4,
    Externalmemoryhandletyped3d11imagekmtbitnv = 8,
    Externalmemoryhandletypeflagbitsmaxenumnv = 2147483647
type
  enumvkexternalmemoryfeatureflagbitsnv* {.size: sizeof(cuint).} = enum
    Externalmemoryfeaturededicatedonlybitnv = 1,
    Externalmemoryfeatureexportablebitnv = 2,
    Externalmemoryfeatureimportablebitnv = 4,
    Externalmemoryfeatureflagbitsmaxenumnv = 2147483647
type
  enumvkvalidationcheckext* {.size: sizeof(cuint).} = enum
    Validationcheckallext = 0, Validationcheckshadersext = 1,
    Validationcheckmaxenumext = 2147483647
type
  enumvkpipelinerobustnessbufferbehaviorext* {.size: sizeof(cuint).} = enum
    Pipelinerobustnessbufferbehaviordevicedefaultext = 0,
    Pipelinerobustnessbufferbehaviordisabledext = 1,
    Pipelinerobustnessbufferbehaviorrobustbufferaccessext = 2,
    Pipelinerobustnessbufferbehaviorrobustbufferaccess2ext = 3,
    Pipelinerobustnessbufferbehaviormaxenumext = 2147483647
type
  enumvkpipelinerobustnessimagebehaviorext* {.size: sizeof(cuint).} = enum
    Pipelinerobustnessimagebehaviordevicedefaultext = 0,
    Pipelinerobustnessimagebehaviordisabledext = 1,
    Pipelinerobustnessimagebehaviorrobustimageaccessext = 2,
    Pipelinerobustnessimagebehaviorrobustimageaccess2ext = 3,
    Pipelinerobustnessimagebehaviormaxenumext = 2147483647
type
  enumvkconditionalrenderingflagbitsext* {.size: sizeof(cuint).} = enum
    Conditionalrenderinginvertedbitext = 1,
    Conditionalrenderingflagbitsmaxenumext = 2147483647
type
  enumvksurfacecounterflagbitsext* {.size: sizeof(cuint).} = enum
    Surfacecountervblankbitext = 1,
    Surfacecounterflagbitsmaxenumext = 2147483647
const
  Surfacecountervblankext* = enumvksurfacecounterflagbitsext.Surfacecountervblankbitext
type
  enumvkdisplaypowerstateext* {.size: sizeof(cuint).} = enum
    Displaypowerstateoffext = 0, Displaypowerstatesuspendext = 1,
    Displaypowerstateonext = 2, Displaypowerstatemaxenumext = 2147483647
type
  enumvkdeviceeventtypeext* {.size: sizeof(cuint).} = enum
    Deviceeventtypedisplayhotplugext = 0, Deviceeventtypemaxenumext = 2147483647
type
  enumvkdisplayeventtypeext* {.size: sizeof(cuint).} = enum
    Displayeventtypefirstpixeloutext = 0,
    Displayeventtypemaxenumext = 2147483647
type
  enumvkviewportcoordinateswizzlenv* {.size: sizeof(cuint).} = enum
    Viewportcoordinateswizzlepositivexnv = 0,
    Viewportcoordinateswizzlenegativexnv = 1,
    Viewportcoordinateswizzlepositiveynv = 2,
    Viewportcoordinateswizzlenegativeynv = 3,
    Viewportcoordinateswizzlepositiveznv = 4,
    Viewportcoordinateswizzlenegativeznv = 5,
    Viewportcoordinateswizzlepositivewnv = 6,
    Viewportcoordinateswizzlenegativewnv = 7,
    Viewportcoordinateswizzlemaxenumnv = 2147483647
type
  enumvkdiscardrectanglemodeext* {.size: sizeof(cuint).} = enum
    Discardrectanglemodeinclusiveext = 0, Discardrectanglemodeexclusiveext = 1,
    Discardrectanglemodemaxenumext = 2147483647
type
  enumvkconservativerasterizationmodeext* {.size: sizeof(cuint).} = enum
    Conservativerasterizationmodedisabledext = 0,
    Conservativerasterizationmodeoverestimateext = 1,
    Conservativerasterizationmodeunderestimateext = 2,
    Conservativerasterizationmodemaxenumext = 2147483647
type
  enumvkdebugutilsmessageseverityflagbitsext* {.size: sizeof(cuint).} = enum
    Debugutilsmessageseverityverbosebitext = 1,
    Debugutilsmessageseverityinfobitext = 16,
    Debugutilsmessageseveritywarningbitext = 256,
    Debugutilsmessageseverityerrorbitext = 4096,
    Debugutilsmessageseverityflagbitsmaxenumext = 2147483647
type
  enumvkdebugutilsmessagetypeflagbitsext* {.size: sizeof(cuint).} = enum
    Debugutilsmessagetypegeneralbitext = 1,
    Debugutilsmessagetypevalidationbitext = 2,
    Debugutilsmessagetypeperformancebitext = 4,
    Debugutilsmessagetypedeviceaddressbindingbitext = 8,
    Debugutilsmessagetypeflagbitsmaxenumext = 2147483647
type
  enumvkblendoverlapext* {.size: sizeof(cuint).} = enum
    Blendoverlapuncorrelatedext = 0, Blendoverlapdisjointext = 1,
    Blendoverlapconjointext = 2, Blendoverlapmaxenumext = 2147483647
type
  enumvkcoveragemodulationmodenv* {.size: sizeof(cuint).} = enum
    Coveragemodulationmodenonenv = 0, Coveragemodulationmodergbnv = 1,
    Coveragemodulationmodealphanv = 2, Coveragemodulationmodergbanv = 3,
    Coveragemodulationmodemaxenumnv = 2147483647
type
  enumvkvalidationcacheheaderversionext* {.size: sizeof(cuint).} = enum
    Validationcacheheaderversiononeext = 1,
    Validationcacheheaderversionmaxenumext = 2147483647
type
  enumvkshadingratepaletteentrynv* {.size: sizeof(cuint).} = enum
    Shadingratepaletteentrynoinvocationsnv = 0,
    Shadingratepaletteentry16invocationsperpixelnv = 1,
    Shadingratepaletteentry8invocationsperpixelnv = 2,
    Shadingratepaletteentry4invocationsperpixelnv = 3,
    Shadingratepaletteentry2invocationsperpixelnv = 4,
    Shadingratepaletteentry1invocationperpixelnv = 5,
    Shadingratepaletteentry1invocationper2x1pixelsnv = 6,
    Shadingratepaletteentry1invocationper1x2pixelsnv = 7,
    Shadingratepaletteentry1invocationper2x2pixelsnv = 8,
    Shadingratepaletteentry1invocationper4x2pixelsnv = 9,
    Shadingratepaletteentry1invocationper2x4pixelsnv = 10,
    Shadingratepaletteentry1invocationper4x4pixelsnv = 11,
    Shadingratepaletteentrymaxenumnv = 2147483647
type
  enumvkcoarsesampleordertypenv* {.size: sizeof(cuint).} = enum
    Coarsesampleordertypedefaultnv = 0, Coarsesampleordertypecustomnv = 1,
    Coarsesampleordertypepixelmajornv = 2,
    Coarsesampleordertypesamplemajornv = 3,
    Coarsesampleordertypemaxenumnv = 2147483647
type
  enumvkraytracingshadergrouptypekhr* {.size: sizeof(cuint).} = enum
    Raytracingshadergrouptypegeneralkhr = 0,
    Raytracingshadergrouptypetriangleshitgroupkhr = 1,
    Raytracingshadergrouptypeproceduralhitgroupkhr = 2,
    Raytracingshadergrouptypemaxenumkhr = 2147483647
const
  Raytracingshadergrouptypegeneralnv* = enumvkraytracingshadergrouptypekhr.Raytracingshadergrouptypegeneralkhr
const
  Raytracingshadergrouptypetriangleshitgroupnv* = enumvkraytracingshadergrouptypekhr.Raytracingshadergrouptypetriangleshitgroupkhr
const
  Raytracingshadergrouptypeproceduralhitgroupnv* = enumvkraytracingshadergrouptypekhr.Raytracingshadergrouptypeproceduralhitgroupkhr
type
  enumvkgeometrytypekhr* {.size: sizeof(cuint).} = enum
    Geometrytypetriangleskhr = 0, Geometrytypeaabbskhr = 1,
    Geometrytypeinstanceskhr = 2, Geometrytypemaxenumkhr = 2147483647
const
  Geometrytypetrianglesnv* = enumvkgeometrytypekhr.Geometrytypetriangleskhr
const
  Geometrytypeaabbsnv* = enumvkgeometrytypekhr.Geometrytypeaabbskhr
type
  enumvkaccelerationstructuretypekhr* {.size: sizeof(cuint).} = enum
    Accelerationstructuretypetoplevelkhr = 0,
    Accelerationstructuretypebottomlevelkhr = 1,
    Accelerationstructuretypegenerickhr = 2,
    Accelerationstructuretypemaxenumkhr = 2147483647
const
  Accelerationstructuretypetoplevelnv* = enumvkaccelerationstructuretypekhr.Accelerationstructuretypetoplevelkhr
const
  Accelerationstructuretypebottomlevelnv* = enumvkaccelerationstructuretypekhr.Accelerationstructuretypebottomlevelkhr
type
  enumvkcopyaccelerationstructuremodekhr* {.size: sizeof(cuint).} = enum
    Copyaccelerationstructuremodeclonekhr = 0,
    Copyaccelerationstructuremodecompactkhr = 1,
    Copyaccelerationstructuremodeserializekhr = 2,
    Copyaccelerationstructuremodedeserializekhr = 3,
    Copyaccelerationstructuremodemaxenumkhr = 2147483647
const
  Copyaccelerationstructuremodeclonenv* = enumvkcopyaccelerationstructuremodekhr.Copyaccelerationstructuremodeclonekhr
const
  Copyaccelerationstructuremodecompactnv* = enumvkcopyaccelerationstructuremodekhr.Copyaccelerationstructuremodecompactkhr
type
  enumvkaccelerationstructurememoryrequirementstypenv* {.size: sizeof(cuint).} = enum
    Accelerationstructurememoryrequirementstypeobjectnv = 0,
    Accelerationstructurememoryrequirementstypebuildscratchnv = 1,
    Accelerationstructurememoryrequirementstypeupdatescratchnv = 2,
    Accelerationstructurememoryrequirementstypemaxenumnv = 2147483647
type
  enumvkgeometryflagbitskhr* {.size: sizeof(cuint).} = enum
    Geometryopaquebitkhr = 1, Geometrynoduplicateanyhitinvocationbitkhr = 2,
    Geometryflagbitsmaxenumkhr = 2147483647
const
  Geometryopaquebitnv* = enumvkgeometryflagbitskhr.Geometryopaquebitkhr
const
  Geometrynoduplicateanyhitinvocationbitnv* = enumvkgeometryflagbitskhr.Geometrynoduplicateanyhitinvocationbitkhr
type
  enumvkgeometryinstanceflagbitskhr* {.size: sizeof(cuint).} = enum
    Geometryinstancetrianglefacingculldisablebitkhr = 1,
    Geometryinstancetriangleflipfacingbitkhr = 2,
    Geometryinstanceforceopaquebitkhr = 4,
    Geometryinstanceforcenoopaquebitkhr = 8,
    Geometryinstanceforceopacitymicromap2stateext = 16,
    Geometryinstancedisableopacitymicromapsext = 32,
    Geometryinstanceflagbitsmaxenumkhr = 2147483647
const
  Geometryinstancetrianglefrontcounterclockwisebitkhr* = enumvkgeometryinstanceflagbitskhr.Geometryinstancetriangleflipfacingbitkhr
const
  Geometryinstancetriangleculldisablebitnv* = enumvkgeometryinstanceflagbitskhr.Geometryinstancetrianglefacingculldisablebitkhr
const
  Geometryinstancetrianglefrontcounterclockwisebitnv* = enumvkgeometryinstanceflagbitskhr.Geometryinstancetriangleflipfacingbitkhr
const
  Geometryinstanceforceopaquebitnv* = enumvkgeometryinstanceflagbitskhr.Geometryinstanceforceopaquebitkhr
const
  Geometryinstanceforcenoopaquebitnv* = enumvkgeometryinstanceflagbitskhr.Geometryinstanceforcenoopaquebitkhr
type
  enumvkbuildaccelerationstructureflagbitskhr* {.size: sizeof(cuint).} = enum
    Buildaccelerationstructureallowupdatebitkhr = 1,
    Buildaccelerationstructureallowcompactionbitkhr = 2,
    Buildaccelerationstructurepreferfasttracebitkhr = 4,
    Buildaccelerationstructurepreferfastbuildbitkhr = 8,
    Buildaccelerationstructurelowmemorybitkhr = 16,
    Buildaccelerationstructuremotionbitnv = 32,
    Buildaccelerationstructureallowopacitymicromapupdateext = 64,
    Buildaccelerationstructureallowdisableopacitymicromapsext = 128,
    Buildaccelerationstructureallowopacitymicromapdataupdateext = 256,
    Buildaccelerationstructureallowdataaccesskhr = 2048,
    Buildaccelerationstructureflagbitsmaxenumkhr = 2147483647
const
  Buildaccelerationstructureallowupdatebitnv* = enumvkbuildaccelerationstructureflagbitskhr.Buildaccelerationstructureallowupdatebitkhr
const
  Buildaccelerationstructureallowcompactionbitnv* = enumvkbuildaccelerationstructureflagbitskhr.Buildaccelerationstructureallowcompactionbitkhr
const
  Buildaccelerationstructurepreferfasttracebitnv* = enumvkbuildaccelerationstructureflagbitskhr.Buildaccelerationstructurepreferfasttracebitkhr
const
  Buildaccelerationstructurepreferfastbuildbitnv* = enumvkbuildaccelerationstructureflagbitskhr.Buildaccelerationstructurepreferfastbuildbitkhr
const
  Buildaccelerationstructurelowmemorybitnv* = enumvkbuildaccelerationstructureflagbitskhr.Buildaccelerationstructurelowmemorybitkhr
type
  enumvkpipelinecompilercontrolflagbitsamd* {.size: sizeof(cuint).} = enum
    Pipelinecompilercontrolflagbitsmaxenumamd = 2147483647
type
  enumvkmemoryoverallocationbehavioramd* {.size: sizeof(cuint).} = enum
    Memoryoverallocationbehaviordefaultamd = 0,
    Memoryoverallocationbehaviorallowedamd = 1,
    Memoryoverallocationbehaviordisallowedamd = 2,
    Memoryoverallocationbehaviormaxenumamd = 2147483647
type
  enumvkperformanceconfigurationtypeintel* {.size: sizeof(cuint).} = enum
    Performanceconfigurationtypecommandqueuemetricsdiscoveryactivatedintel = 0,
    Performanceconfigurationtypemaxenumintel = 2147483647
type
  enumvkquerypoolsamplingmodeintel* {.size: sizeof(cuint).} = enum
    Querypoolsamplingmodemanualintel = 0,
    Querypoolsamplingmodemaxenumintel = 2147483647
type
  enumvkperformanceoverridetypeintel* {.size: sizeof(cuint).} = enum
    Performanceoverridetypenullhardwareintel = 0,
    Performanceoverridetypeflushgpucachesintel = 1,
    Performanceoverridetypemaxenumintel = 2147483647
type
  enumvkperformanceparametertypeintel* {.size: sizeof(cuint).} = enum
    Performanceparametertypehwcounterssupportedintel = 0,
    Performanceparametertypestreammarkervalidbitsintel = 1,
    Performanceparametertypemaxenumintel = 2147483647
type
  enumvkperformancevaluetypeintel* {.size: sizeof(cuint).} = enum
    Performancevaluetypeuint32intel = 0, Performancevaluetypeuint64intel = 1,
    Performancevaluetypefloatintel = 2, Performancevaluetypeboolintel = 3,
    Performancevaluetypestringintel = 4,
    Performancevaluetypemaxenumintel = 2147483647
type
  enumvkshadercorepropertiesflagbitsamd* {.size: sizeof(cuint).} = enum
    Shadercorepropertiesflagbitsmaxenumamd = 2147483647
type
  enumvkvalidationfeatureenableext* {.size: sizeof(cuint).} = enum
    Validationfeatureenablegpuassistedext = 0,
    Validationfeatureenablegpuassistedreservebindingslotext = 1,
    Validationfeatureenablebestpracticesext = 2,
    Validationfeatureenabledebugprintfext = 3,
    Validationfeatureenablesynchronizationvalidationext = 4,
    Validationfeatureenablemaxenumext = 2147483647
type
  enumvkvalidationfeaturedisableext* {.size: sizeof(cuint).} = enum
    Validationfeaturedisableallext = 0, Validationfeaturedisableshadersext = 1,
    Validationfeaturedisablethreadsafetyext = 2,
    Validationfeaturedisableapiparametersext = 3,
    Validationfeaturedisableobjectlifetimesext = 4,
    Validationfeaturedisablecorechecksext = 5,
    Validationfeaturedisableuniquehandlesext = 6,
    Validationfeaturedisableshadervalidationcacheext = 7,
    Validationfeaturedisablemaxenumext = 2147483647
type
  enumvkcoveragereductionmodenv* {.size: sizeof(cuint).} = enum
    Coveragereductionmodemergenv = 0, Coveragereductionmodetruncatenv = 1,
    Coveragereductionmodemaxenumnv = 2147483647
type
  enumvkprovokingvertexmodeext* {.size: sizeof(cuint).} = enum
    Provokingvertexmodefirstvertexext = 0, Provokingvertexmodelastvertexext = 1,
    Provokingvertexmodemaxenumext = 2147483647
type
  enumvkhostimagecopyflagbitsext* {.size: sizeof(cuint).} = enum
    Hostimagecopymemcpyext = 1, Hostimagecopyflagbitsmaxenumext = 2147483647
type
  enumvkpresentscalingflagbitsext* {.size: sizeof(cuint).} = enum
    Presentscalingonetoonebitext = 1,
    Presentscalingaspectratiostretchbitext = 2, Presentscalingstretchbitext = 4,
    Presentscalingflagbitsmaxenumext = 2147483647
type
  enumvkpresentgravityflagbitsext* {.size: sizeof(cuint).} = enum
    Presentgravityminbitext = 1, Presentgravitymaxbitext = 2,
    Presentgravitycenteredbitext = 4,
    Presentgravityflagbitsmaxenumext = 2147483647
type
  enumvkindirectcommandstokentypenv* {.size: sizeof(cuint).} = enum
    Indirectcommandstokentypeshadergroupnv = 0,
    Indirectcommandstokentypestateflagsnv = 1,
    Indirectcommandstokentypeindexbuffernv = 2,
    Indirectcommandstokentypevertexbuffernv = 3,
    Indirectcommandstokentypepushconstantnv = 4,
    Indirectcommandstokentypedrawindexednv = 5,
    Indirectcommandstokentypedrawnv = 6,
    Indirectcommandstokentypedrawtasksnv = 7,
    Indirectcommandstokentypedrawmeshtasksnv = 1000328000,
    Indirectcommandstokentypepipelinenv = 1000428003,
    Indirectcommandstokentypedispatchnv = 1000428004,
    Indirectcommandstokentypemaxenumnv = 2147483647
type
  enumvkindirectstateflagbitsnv* {.size: sizeof(cuint).} = enum
    Indirectstateflagfrontfacebitnv = 1,
    Indirectstateflagbitsmaxenumnv = 2147483647
type
  enumvkindirectcommandslayoutusageflagbitsnv* {.size: sizeof(cuint).} = enum
    Indirectcommandslayoutusageexplicitpreprocessbitnv = 1,
    Indirectcommandslayoutusageindexedsequencesbitnv = 2,
    Indirectcommandslayoutusageunorderedsequencesbitnv = 4,
    Indirectcommandslayoutusageflagbitsmaxenumnv = 2147483647
type
  enumvkdepthbiasrepresentationext* {.size: sizeof(cuint).} = enum
    Depthbiasrepresentationleastrepresentablevalueformatext = 0,
    Depthbiasrepresentationleastrepresentablevalueforceunormext = 1,
    Depthbiasrepresentationfloatext = 2,
    Depthbiasrepresentationmaxenumext = 2147483647
type
  enumvkdevicememoryreporteventtypeext* {.size: sizeof(cuint).} = enum
    Devicememoryreporteventtypeallocateext = 0,
    Devicememoryreporteventtypefreeext = 1,
    Devicememoryreporteventtypeimportext = 2,
    Devicememoryreporteventtypeunimportext = 3,
    Devicememoryreporteventtypeallocationfailedext = 4,
    Devicememoryreporteventtypemaxenumext = 2147483647
type
  enumvkdevicediagnosticsconfigflagbitsnv* {.size: sizeof(cuint).} = enum
    Devicediagnosticsconfigenableshaderdebuginfobitnv = 1,
    Devicediagnosticsconfigenableresourcetrackingbitnv = 2,
    Devicediagnosticsconfigenableautomaticcheckpointsbitnv = 4,
    Devicediagnosticsconfigenableshadererrorreportingbitnv = 8,
    Devicediagnosticsconfigflagbitsmaxenumnv = 2147483647
type
  enumvkgraphicspipelinelibraryflagbitsext* {.size: sizeof(cuint).} = enum
    Graphicspipelinelibraryvertexinputinterfacebitext = 1,
    Graphicspipelinelibraryprerasterizationshadersbitext = 2,
    Graphicspipelinelibraryfragmentshaderbitext = 4,
    Graphicspipelinelibraryfragmentoutputinterfacebitext = 8,
    Graphicspipelinelibraryflagbitsmaxenumext = 2147483647
type
  enumvkfragmentshadingratetypenv* {.size: sizeof(cuint).} = enum
    Fragmentshadingratetypefragmentsizenv = 0,
    Fragmentshadingratetypeenumsnv = 1,
    Fragmentshadingratetypemaxenumnv = 2147483647
type
  enumvkfragmentshadingratenv* {.size: sizeof(cuint).} = enum
    Fragmentshadingrate1invocationperpixelnv = 0,
    Fragmentshadingrate1invocationper1x2pixelsnv = 1,
    Fragmentshadingrate1invocationper2x1pixelsnv = 4,
    Fragmentshadingrate1invocationper2x2pixelsnv = 5,
    Fragmentshadingrate1invocationper2x4pixelsnv = 6,
    Fragmentshadingrate1invocationper4x2pixelsnv = 9,
    Fragmentshadingrate1invocationper4x4pixelsnv = 10,
    Fragmentshadingrate2invocationsperpixelnv = 11,
    Fragmentshadingrate4invocationsperpixelnv = 12,
    Fragmentshadingrate8invocationsperpixelnv = 13,
    Fragmentshadingrate16invocationsperpixelnv = 14,
    Fragmentshadingratenoinvocationsnv = 15,
    Fragmentshadingratemaxenumnv = 2147483647
type
  enumvkaccelerationstructuremotioninstancetypenv* {.size: sizeof(cuint).} = enum
    Accelerationstructuremotioninstancetypestaticnv = 0,
    Accelerationstructuremotioninstancetypematrixmotionnv = 1,
    Accelerationstructuremotioninstancetypesrtmotionnv = 2,
    Accelerationstructuremotioninstancetypemaxenumnv = 2147483647
type
  enumvkimagecompressionflagbitsext* {.size: sizeof(cuint).} = enum
    Imagecompressiondefaultext = 0, Imagecompressionfixedratedefaultext = 1,
    Imagecompressionfixedrateexplicitext = 2, Imagecompressiondisabledext = 4,
    Imagecompressionflagbitsmaxenumext = 2147483647
type
  enumvkimagecompressionfixedrateflagbitsext* {.size: sizeof(cuint).} = enum
    Imagecompressionfixedratenoneext = 0,
    Imagecompressionfixedrate1bpcbitext = 1,
    Imagecompressionfixedrate2bpcbitext = 2,
    Imagecompressionfixedrate3bpcbitext = 4,
    Imagecompressionfixedrate4bpcbitext = 8,
    Imagecompressionfixedrate5bpcbitext = 16,
    Imagecompressionfixedrate6bpcbitext = 32,
    Imagecompressionfixedrate7bpcbitext = 64,
    Imagecompressionfixedrate8bpcbitext = 128,
    Imagecompressionfixedrate9bpcbitext = 256,
    Imagecompressionfixedrate10bpcbitext = 512,
    Imagecompressionfixedrate11bpcbitext = 1024,
    Imagecompressionfixedrate12bpcbitext = 2048,
    Imagecompressionfixedrate13bpcbitext = 4096,
    Imagecompressionfixedrate14bpcbitext = 8192,
    Imagecompressionfixedrate15bpcbitext = 16384,
    Imagecompressionfixedrate16bpcbitext = 32768,
    Imagecompressionfixedrate17bpcbitext = 65536,
    Imagecompressionfixedrate18bpcbitext = 131072,
    Imagecompressionfixedrate19bpcbitext = 262144,
    Imagecompressionfixedrate20bpcbitext = 524288,
    Imagecompressionfixedrate21bpcbitext = 1048576,
    Imagecompressionfixedrate22bpcbitext = 2097152,
    Imagecompressionfixedrate23bpcbitext = 4194304,
    Imagecompressionfixedrate24bpcbitext = 8388608,
    Imagecompressionfixedrateflagbitsmaxenumext = 2147483647
type
  enumvkdevicefaultaddresstypeext* {.size: sizeof(cuint).} = enum
    Devicefaultaddresstypenoneext = 0, Devicefaultaddresstypereadinvalidext = 1,
    Devicefaultaddresstypewriteinvalidext = 2,
    Devicefaultaddresstypeexecuteinvalidext = 3,
    Devicefaultaddresstypeinstructionpointerunknownext = 4,
    Devicefaultaddresstypeinstructionpointerinvalidext = 5,
    Devicefaultaddresstypeinstructionpointerfaultext = 6,
    Devicefaultaddresstypemaxenumext = 2147483647
type
  enumvkdevicefaultvendorbinaryheaderversionext* {.size: sizeof(cuint).} = enum
    Devicefaultvendorbinaryheaderversiononeextenumval = 1,
    Devicefaultvendorbinaryheaderversionmaxenumext = 2147483647
type
  enumvkdeviceaddressbindingtypeext* {.size: sizeof(cuint).} = enum
    Deviceaddressbindingtypebindext = 0, Deviceaddressbindingtypeunbindext = 1,
    Deviceaddressbindingtypemaxenumext = 2147483647
type
  enumvkdeviceaddressbindingflagbitsext* {.size: sizeof(cuint).} = enum
    Deviceaddressbindinginternalobjectbitext = 1,
    Deviceaddressbindingflagbitsmaxenumext = 2147483647
type
  enumvkframeboundaryflagbitsext* {.size: sizeof(cuint).} = enum
    Frameboundaryframeendbitext = 1,
    Frameboundaryflagbitsmaxenumext = 2147483647
type
  enumvkmicromaptypeext* {.size: sizeof(cuint).} = enum
    Micromaptypeopacitymicromapext = 0, Micromaptypemaxenumext = 2147483647
type
  enumvkbuildmicromapmodeext* {.size: sizeof(cuint).} = enum
    Buildmicromapmodebuildext = 0, Buildmicromapmodemaxenumext = 2147483647
type
  enumvkcopymicromapmodeext* {.size: sizeof(cuint).} = enum
    Copymicromapmodecloneext = 0, Copymicromapmodeserializeext = 1,
    Copymicromapmodedeserializeext = 2, Copymicromapmodecompactext = 3,
    Copymicromapmodemaxenumext = 2147483647
type
  enumvkopacitymicromapformatext* {.size: sizeof(cuint).} = enum
    Opacitymicromapformat2stateext = 1, Opacitymicromapformat4stateext = 2,
    Opacitymicromapformatmaxenumext = 2147483647
type
  enumvkopacitymicromapspecialindexext* {.size: sizeof(cint).} = enum
    Opacitymicromapspecialindexfullyunknownopaqueext = -4,
    Opacitymicromapspecialindexfullyunknowntransparentext = -3,
    Opacitymicromapspecialindexfullyopaqueext = -2,
    Opacitymicromapspecialindexfullytransparentext = -1,
    Opacitymicromapspecialindexmaxenumext = 2147483647
type
  enumvkaccelerationstructurecompatibilitykhr* {.size: sizeof(cuint).} = enum
    Accelerationstructurecompatibilitycompatiblekhr = 0,
    Accelerationstructurecompatibilityincompatiblekhr = 1,
    Accelerationstructurecompatibilitymaxenumkhr = 2147483647
type
  enumvkaccelerationstructurebuildtypekhr* {.size: sizeof(cuint).} = enum
    Accelerationstructurebuildtypehostkhr = 0,
    Accelerationstructurebuildtypedevicekhr = 1,
    Accelerationstructurebuildtypehostordevicekhr = 2,
    Accelerationstructurebuildtypemaxenumkhr = 2147483647
type
  enumvkbuildmicromapflagbitsext* {.size: sizeof(cuint).} = enum
    Buildmicromappreferfasttracebitext = 1,
    Buildmicromappreferfastbuildbitext = 2,
    Buildmicromapallowcompactionbitext = 4,
    Buildmicromapflagbitsmaxenumext = 2147483647
type
  enumvkmicromapcreateflagbitsext* {.size: sizeof(cuint).} = enum
    Micromapcreatedeviceaddresscapturereplaybitext = 1,
    Micromapcreateflagbitsmaxenumext = 2147483647
type
  enumvksubpassmergestatusext* {.size: sizeof(cuint).} = enum
    Subpassmergestatusmergedext = 0, Subpassmergestatusdisallowedext = 1,
    Subpassmergestatusnotmergedsideeffectsext = 2,
    Subpassmergestatusnotmergedsamplesmismatchext = 3,
    Subpassmergestatusnotmergedviewsmismatchext = 4,
    Subpassmergestatusnotmergedaliasingext = 5,
    Subpassmergestatusnotmergeddependenciesext = 6,
    Subpassmergestatusnotmergedincompatibleinputattachmentext = 7,
    Subpassmergestatusnotmergedtoomanyattachmentsext = 8,
    Subpassmergestatusnotmergedinsufficientstorageext = 9,
    Subpassmergestatusnotmergeddepthstencilcountext = 10,
    Subpassmergestatusnotmergedresolveattachmentreuseext = 11,
    Subpassmergestatusnotmergedsinglesubpassext = 12,
    Subpassmergestatusnotmergedunspecifiedext = 13,
    Subpassmergestatusmaxenumext = 2147483647
type
  enumvkdirectdriverloadingmodelunarg* {.size: sizeof(cuint).} = enum
    Directdriverloadingmodeexclusivelunarg = 0,
    Directdriverloadingmodeinclusivelunarg = 1,
    Directdriverloadingmodemaxenumlunarg = 2147483647
type
  enumvkopticalflowperformancelevelnv* {.size: sizeof(cuint).} = enum
    Opticalflowperformancelevelunknownnv = 0,
    Opticalflowperformancelevelslownv = 1,
    Opticalflowperformancelevelmediumnv = 2,
    Opticalflowperformancelevelfastnv = 3,
    Opticalflowperformancelevelmaxenumnv = 2147483647
type
  enumvkopticalflowsessionbindingpointnv* {.size: sizeof(cuint).} = enum
    Opticalflowsessionbindingpointunknownnv = 0,
    Opticalflowsessionbindingpointinputnv = 1,
    Opticalflowsessionbindingpointreferencenv = 2,
    Opticalflowsessionbindingpointhintnv = 3,
    Opticalflowsessionbindingpointflowvectornv = 4,
    Opticalflowsessionbindingpointbackwardflowvectornv = 5,
    Opticalflowsessionbindingpointcostnv = 6,
    Opticalflowsessionbindingpointbackwardcostnv = 7,
    Opticalflowsessionbindingpointglobalflownv = 8,
    Opticalflowsessionbindingpointmaxenumnv = 2147483647
type
  enumvkopticalflowgridsizeflagbitsnv* {.size: sizeof(cuint).} = enum
    Opticalflowgridsizeunknownnv = 0, Opticalflowgridsize1x1bitnv = 1,
    Opticalflowgridsize2x2bitnv = 2, Opticalflowgridsize4x4bitnv = 4,
    Opticalflowgridsize8x8bitnv = 8,
    Opticalflowgridsizeflagbitsmaxenumnv = 2147483647
type
  enumvkopticalflowusageflagbitsnv* {.size: sizeof(cuint).} = enum
    Opticalflowusageunknownnv = 0, Opticalflowusageinputbitnv = 1,
    Opticalflowusageoutputbitnv = 2, Opticalflowusagehintbitnv = 4,
    Opticalflowusagecostbitnv = 8, Opticalflowusageglobalflowbitnv = 16,
    Opticalflowusageflagbitsmaxenumnv = 2147483647
type
  enumvkopticalflowsessioncreateflagbitsnv* {.size: sizeof(cuint).} = enum
    Opticalflowsessioncreateenablehintbitnv = 1,
    Opticalflowsessioncreateenablecostbitnv = 2,
    Opticalflowsessioncreateenableglobalflowbitnv = 4,
    Opticalflowsessioncreateallowregionsbitnv = 8,
    Opticalflowsessioncreatebothdirectionsbitnv = 16,
    Opticalflowsessioncreateflagbitsmaxenumnv = 2147483647
type
  enumvkopticalflowexecuteflagbitsnv* {.size: sizeof(cuint).} = enum
    Opticalflowexecutedisabletemporalhintsbitnv = 1,
    Opticalflowexecuteflagbitsmaxenumnv = 2147483647
type
  enumvkshadercodetypeext* {.size: sizeof(cuint).} = enum
    Shadercodetypebinaryext = 0, Shadercodetypespirvext = 1,
    Shadercodetypemaxenumext = 2147483647
type
  enumvkshadercreateflagbitsext* {.size: sizeof(cuint).} = enum
    Shadercreatelinkstagebitext = 1,
    Shadercreateallowvaryingsubgroupsizebitext = 2,
    Shadercreaterequirefullsubgroupsbitext = 4,
    Shadercreatenotaskshaderbitext = 8, Shadercreatedispatchbasebitext = 16,
    Shadercreatefragmentshadingrateattachmentbitext = 32,
    Shadercreatefragmentdensitymapattachmentbitext = 64,
    Shadercreateflagbitsmaxenumext = 2147483647
type
  enumvkraytracinginvocationreordermodenv* {.size: sizeof(cuint).} = enum
    Raytracinginvocationreordermodenonenv = 0,
    Raytracinginvocationreordermodereordernv = 1,
    Raytracinginvocationreordermodemaxenumnv = 2147483647
type
  enumvklayersettingtypeext* {.size: sizeof(cuint).} = enum
    Layersettingtypebool32ext = 0, Layersettingtypeint32ext = 1,
    Layersettingtypeint64ext = 2, Layersettingtypeuint32ext = 3,
    Layersettingtypeuint64ext = 4, Layersettingtypefloat32ext = 5,
    Layersettingtypefloat64ext = 6, Layersettingtypestringext = 7,
    Layersettingtypemaxenumext = 2147483647
type
  enumvklatencymarkernv* {.size: sizeof(cuint).} = enum
    Latencymarkersimulationstartnv = 0, Latencymarkersimulationendnv = 1,
    Latencymarkerrendersubmitstartnv = 2, Latencymarkerrendersubmitendnv = 3,
    Latencymarkerpresentstartnv = 4, Latencymarkerpresentendnv = 5,
    Latencymarkerinputsamplenv = 6, Latencymarkertriggerflashnv = 7,
    Latencymarkeroutofbandrendersubmitstartnv = 8,
    Latencymarkeroutofbandrendersubmitendnv = 9,
    Latencymarkeroutofbandpresentstartnv = 10,
    Latencymarkeroutofbandpresentendnv = 11, Latencymarkermaxenumnv = 2147483647
type
  enumvkoutofbandqueuetypenv* {.size: sizeof(cuint).} = enum
    Outofbandqueuetyperendernv = 0, Outofbandqueuetypepresentnv = 1,
    Outofbandqueuetypemaxenumnv = 2147483647
type
  enumvkblockmatchwindowcomparemodeqcom* {.size: sizeof(cuint).} = enum
    Blockmatchwindowcomparemodeminqcom = 0,
    Blockmatchwindowcomparemodemaxqcom = 1,
    Blockmatchwindowcomparemodemaxenumqcom = 2147483647
type
  enumvkcubicfilterweightsqcom* {.size: sizeof(cuint).} = enum
    Cubicfilterweightscatmullromqcom = 0,
    Cubicfilterweightszerotangentcardinalqcom = 1,
    Cubicfilterweightsbsplineqcom = 2,
    Cubicfilterweightsmitchellnetravaliqcom = 3,
    Cubicfilterweightsmaxenumqcom = 2147483647
type
  enumvklayereddriverunderlyingapimsft* {.size: sizeof(cuint).} = enum
    Layereddriverunderlyingapinonemsft = 0,
    Layereddriverunderlyingapid3d12msft = 1,
    Layereddriverunderlyingapimaxenummsft = 2147483647
type
  enumvkbuildaccelerationstructuremodekhr* {.size: sizeof(cuint).} = enum
    Buildaccelerationstructuremodebuildkhr = 0,
    Buildaccelerationstructuremodeupdatekhr = 1,
    Buildaccelerationstructuremodemaxenumkhr = 2147483647
type
  enumvkaccelerationstructurecreateflagbitskhr* {.size: sizeof(cuint).} = enum
    Accelerationstructurecreatedeviceaddresscapturereplaybitkhr = 1,
    Accelerationstructurecreatemotionbitnv = 4,
    Accelerationstructurecreatedescriptorbuffercapturereplaybitext = 8,
    Accelerationstructurecreateflagbitsmaxenumkhr = 2147483647
type
  enumvkshadergroupshaderkhr* {.size: sizeof(cuint).} = enum
    Shadergroupshadergeneralkhr = 0, Shadergroupshaderclosesthitkhr = 1,
    Shadergroupshaderanyhitkhr = 2, Shadergroupshaderintersectionkhr = 3,
    Shadergroupshadermaxenumkhr = 2147483647
type
  enumstdvideoh264levelidc* {.size: sizeof(cuint).} = enum
    Stdvideoh264levelidc10 = 0, Stdvideoh264levelidc11 = 1,
    Stdvideoh264levelidc12 = 2, Stdvideoh264levelidc13 = 3,
    Stdvideoh264levelidc20 = 4, Stdvideoh264levelidc21 = 5,
    Stdvideoh264levelidc22 = 6, Stdvideoh264levelidc30 = 7,
    Stdvideoh264levelidc31 = 8, Stdvideoh264levelidc32 = 9,
    Stdvideoh264levelidc40 = 10, Stdvideoh264levelidc41 = 11,
    Stdvideoh264levelidc42 = 12, Stdvideoh264levelidc50 = 13,
    Stdvideoh264levelidc51 = 14, Stdvideoh264levelidc52 = 15,
    Stdvideoh264levelidc60 = 16, Stdvideoh264levelidc61 = 17,
    Stdvideoh264levelidc62 = 18, Stdvideoh264levelidcinvalid = 2147483647
const
  Stdvideoh264levelidcmaxenum* = enumstdvideoh264levelidc.Stdvideoh264levelidcinvalid
type
  enumstdvideoh264profileidc* {.size: sizeof(cuint).} = enum
    Stdvideoh264profileidcbaseline = 66, Stdvideoh264profileidcmain = 77,
    Stdvideoh264profileidchigh = 100,
    Stdvideoh264profileidchigh444predictive = 244,
    Stdvideoh264profileidcinvalid = 2147483647
const
  Stdvideoh264profileidcmaxenum* = enumstdvideoh264profileidc.Stdvideoh264profileidcinvalid
type
  enumstdvideoh265levelidc* {.size: sizeof(cuint).} = enum
    Stdvideoh265levelidc10 = 0, Stdvideoh265levelidc20 = 1,
    Stdvideoh265levelidc21 = 2, Stdvideoh265levelidc30 = 3,
    Stdvideoh265levelidc31 = 4, Stdvideoh265levelidc40 = 5,
    Stdvideoh265levelidc41 = 6, Stdvideoh265levelidc50 = 7,
    Stdvideoh265levelidc51 = 8, Stdvideoh265levelidc52 = 9,
    Stdvideoh265levelidc60 = 10, Stdvideoh265levelidc61 = 11,
    Stdvideoh265levelidc62 = 12, Stdvideoh265levelidcinvalid = 2147483647
const
  Stdvideoh265levelidcmaxenum* = enumstdvideoh265levelidc.Stdvideoh265levelidcinvalid
type
  enumstdvideoh265profileidc* {.size: sizeof(cuint).} = enum
    Stdvideoh265profileidcmain = 1, Stdvideoh265profileidcmain10 = 2,
    Stdvideoh265profileidcmainstillpicture = 3,
    Stdvideoh265profileidcformatrangeextensions = 4,
    Stdvideoh265profileidcsccextensions = 9,
    Stdvideoh265profileidcinvalid = 2147483647
const
  Stdvideoh265profileidcmaxenum* = enumstdvideoh265profileidc.Stdvideoh265profileidcinvalid
type
  enumstdvideoav1profile* {.size: sizeof(cuint).} = enum
    Stdvideoav1profilemain = 0, Stdvideoav1profilehigh = 1,
    Stdvideoav1profileprofessional = 2, Stdvideoav1profileinvalid = 2147483647
const
  Stdvideoav1profilemaxenum* = enumstdvideoav1profile.Stdvideoav1profileinvalid
type
  enumstdvideoav1level* {.size: sizeof(cuint).} = enum
    Stdvideoav1level20 = 0, Stdvideoav1level21 = 1, Stdvideoav1level22 = 2,
    Stdvideoav1level23 = 3, Stdvideoav1level30 = 4, Stdvideoav1level31 = 5,
    Stdvideoav1level32 = 6, Stdvideoav1level33 = 7, Stdvideoav1level40 = 8,
    Stdvideoav1level41 = 9, Stdvideoav1level42 = 10, Stdvideoav1level43 = 11,
    Stdvideoav1level50 = 12, Stdvideoav1level51 = 13, Stdvideoav1level52 = 14,
    Stdvideoav1level53 = 15, Stdvideoav1level60 = 16, Stdvideoav1level61 = 17,
    Stdvideoav1level62 = 18, Stdvideoav1level63 = 19, Stdvideoav1level70 = 20,
    Stdvideoav1level71 = 21, Stdvideoav1level72 = 22, Stdvideoav1level73 = 23,
    Stdvideoav1levelinvalid = 2147483647
const
  Stdvideoav1levelmaxenum* = enumstdvideoav1level.Stdvideoav1levelinvalid
type
  enumstdvideoh264chromaformatidc* {.size: sizeof(cuint).} = enum
    Stdvideoh264chromaformatidcmonochrome = 0,
    Stdvideoh264chromaformatidc420 = 1, Stdvideoh264chromaformatidc422 = 2,
    Stdvideoh264chromaformatidc444 = 3,
    Stdvideoh264chromaformatidcinvalid = 2147483647
const
  Stdvideoh264chromaformatidcmaxenum* = enumstdvideoh264chromaformatidc.Stdvideoh264chromaformatidcinvalid
type
  enumstdvideoh264poctype* {.size: sizeof(cuint).} = enum
    Stdvideoh264poctype0 = 0, Stdvideoh264poctype1 = 1,
    Stdvideoh264poctype2 = 2, Stdvideoh264poctypeinvalid = 2147483647
const
  Stdvideoh264poctypemaxenum* = enumstdvideoh264poctype.Stdvideoh264poctypeinvalid
type
  enumstdvideoh264weightedbipredidc* {.size: sizeof(cuint).} = enum
    Stdvideoh264weightedbipredidcdefault = 0,
    Stdvideoh264weightedbipredidcexplicit = 1,
    Stdvideoh264weightedbipredidcimplicit = 2,
    Stdvideoh264weightedbipredidcinvalid = 2147483647
const
  Stdvideoh264weightedbipredidcmaxenum* = enumstdvideoh264weightedbipredidc.Stdvideoh264weightedbipredidcinvalid
type
  enumstdvideoh264slicetype* {.size: sizeof(cuint).} = enum
    Stdvideoh264slicetypep = 0, Stdvideoh264slicetypeb = 1,
    Stdvideoh264slicetypei = 2, Stdvideoh264slicetypeinvalid = 2147483647
const
  Stdvideoh264slicetypemaxenum* = enumstdvideoh264slicetype.Stdvideoh264slicetypeinvalid
type
  enumstdvideoh264cabacinitidc* {.size: sizeof(cuint).} = enum
    Stdvideoh264cabacinitidc0 = 0, Stdvideoh264cabacinitidc1 = 1,
    Stdvideoh264cabacinitidc2 = 2, Stdvideoh264cabacinitidcinvalid = 2147483647
const
  Stdvideoh264cabacinitidcmaxenum* = enumstdvideoh264cabacinitidc.Stdvideoh264cabacinitidcinvalid
type
  enumstdvideoh264disabledeblockingfilteridc* {.size: sizeof(cuint).} = enum
    Stdvideoh264disabledeblockingfilteridcdisabled = 0,
    Stdvideoh264disabledeblockingfilteridcenabled = 1,
    Stdvideoh264disabledeblockingfilteridcpartial = 2,
    Stdvideoh264disabledeblockingfilteridcinvalid = 2147483647
const
  Stdvideoh264disabledeblockingfilteridcmaxenum* = enumstdvideoh264disabledeblockingfilteridc.Stdvideoh264disabledeblockingfilteridcinvalid
type
  enumstdvideoh264picturetype* {.size: sizeof(cuint).} = enum
    Stdvideoh264picturetypep = 0, Stdvideoh264picturetypeb = 1,
    Stdvideoh264picturetypei = 2, Stdvideoh264picturetypeidr = 5,
    Stdvideoh264picturetypeinvalid = 2147483647
const
  Stdvideoh264picturetypemaxenum* = enumstdvideoh264picturetype.Stdvideoh264picturetypeinvalid
type
  enumstdvideoh265chromaformatidc* {.size: sizeof(cuint).} = enum
    Stdvideoh265chromaformatidcmonochrome = 0,
    Stdvideoh265chromaformatidc420 = 1, Stdvideoh265chromaformatidc422 = 2,
    Stdvideoh265chromaformatidc444 = 3,
    Stdvideoh265chromaformatidcinvalid = 2147483647
const
  Stdvideoh265chromaformatidcmaxenum* = enumstdvideoh265chromaformatidc.Stdvideoh265chromaformatidcinvalid
type
  enumstdvideoh265slicetype* {.size: sizeof(cuint).} = enum
    Stdvideoh265slicetypeb = 0, Stdvideoh265slicetypep = 1,
    Stdvideoh265slicetypei = 2, Stdvideoh265slicetypeinvalid = 2147483647
const
  Stdvideoh265slicetypemaxenum* = enumstdvideoh265slicetype.Stdvideoh265slicetypeinvalid
type
  enumstdvideoh265picturetype* {.size: sizeof(cuint).} = enum
    Stdvideoh265picturetypep = 0, Stdvideoh265picturetypeb = 1,
    Stdvideoh265picturetypei = 2, Stdvideoh265picturetypeidr = 3,
    Stdvideoh265picturetypeinvalid = 2147483647
const
  Stdvideoh265picturetypemaxenum* = enumstdvideoh265picturetype.Stdvideoh265picturetypeinvalid
type
  enumstdvideoav1frametype* {.size: sizeof(cuint).} = enum
    Stdvideoav1frametypekey = 0, Stdvideoav1frametypeinter = 1,
    Stdvideoav1frametypeintraonly = 2, Stdvideoav1frametypeswitch = 3,
    Stdvideoav1frametypeinvalid = 2147483647
const
  Stdvideoav1frametypemaxenum* = enumstdvideoav1frametype.Stdvideoav1frametypeinvalid
type
  enumstdvideoav1interpolationfilter* {.size: sizeof(cuint).} = enum
    Stdvideoav1interpolationfiltereighttap = 0,
    Stdvideoav1interpolationfiltereighttapsmooth = 1,
    Stdvideoav1interpolationfiltereighttapsharp = 2,
    Stdvideoav1interpolationfilterbilinear = 3,
    Stdvideoav1interpolationfilterswitchable = 4,
    Stdvideoav1interpolationfilterinvalid = 2147483647
const
  Stdvideoav1interpolationfiltermaxenum* = enumstdvideoav1interpolationfilter.Stdvideoav1interpolationfilterinvalid
type
  enumstdvideoav1txmode* {.size: sizeof(cuint).} = enum
    Stdvideoav1txmodeonly4x4 = 0, Stdvideoav1txmodelargest = 1,
    Stdvideoav1txmodeselect = 2, Stdvideoav1txmodeinvalid = 2147483647
const
  Stdvideoav1txmodemaxenum* = enumstdvideoav1txmode.Stdvideoav1txmodeinvalid
type
  enumstdvideoh264aspectratioidc* {.size: sizeof(cuint).} = enum
    Stdvideoh264aspectratioidcunspecified = 0,
    Stdvideoh264aspectratioidcsquare = 1, Stdvideoh264aspectratioidc1211 = 2,
    Stdvideoh264aspectratioidc1011 = 3, Stdvideoh264aspectratioidc1611 = 4,
    Stdvideoh264aspectratioidc4033 = 5, Stdvideoh264aspectratioidc2411 = 6,
    Stdvideoh264aspectratioidc2011 = 7, Stdvideoh264aspectratioidc3211 = 8,
    Stdvideoh264aspectratioidc8033 = 9, Stdvideoh264aspectratioidc1811 = 10,
    Stdvideoh264aspectratioidc1511 = 11, Stdvideoh264aspectratioidc6433 = 12,
    Stdvideoh264aspectratioidc16099 = 13, Stdvideoh264aspectratioidc43 = 14,
    Stdvideoh264aspectratioidc32 = 15, Stdvideoh264aspectratioidc21 = 16,
    Stdvideoh264aspectratioidcextendedsar = 255,
    Stdvideoh264aspectratioidcinvalid = 2147483647
const
  Stdvideoh264aspectratioidcmaxenum* = enumstdvideoh264aspectratioidc.Stdvideoh264aspectratioidcinvalid
type
  enumstdvideoh265aspectratioidc* {.size: sizeof(cuint).} = enum
    Stdvideoh265aspectratioidcunspecified = 0,
    Stdvideoh265aspectratioidcsquare = 1, Stdvideoh265aspectratioidc1211 = 2,
    Stdvideoh265aspectratioidc1011 = 3, Stdvideoh265aspectratioidc1611 = 4,
    Stdvideoh265aspectratioidc4033 = 5, Stdvideoh265aspectratioidc2411 = 6,
    Stdvideoh265aspectratioidc2011 = 7, Stdvideoh265aspectratioidc3211 = 8,
    Stdvideoh265aspectratioidc8033 = 9, Stdvideoh265aspectratioidc1811 = 10,
    Stdvideoh265aspectratioidc1511 = 11, Stdvideoh265aspectratioidc6433 = 12,
    Stdvideoh265aspectratioidc16099 = 13, Stdvideoh265aspectratioidc43 = 14,
    Stdvideoh265aspectratioidc32 = 15, Stdvideoh265aspectratioidc21 = 16,
    Stdvideoh265aspectratioidcextendedsar = 255,
    Stdvideoh265aspectratioidcinvalid = 2147483647
const
  Stdvideoh265aspectratioidcmaxenum* = enumstdvideoh265aspectratioidc.Stdvideoh265aspectratioidcinvalid
type
  enumstdvideoav1colorprimaries* {.size: sizeof(cuint).} = enum
    Stdvideoav1colorprimariesbt709 = 1,
    Stdvideoav1colorprimariesbtunspecified = 2,
    Stdvideoav1colorprimariesbt470m = 4, Stdvideoav1colorprimariesbt470bg = 5,
    Stdvideoav1colorprimariesbt601 = 6, Stdvideoav1colorprimariessmpte240 = 7,
    Stdvideoav1colorprimariesgenericfilm = 8,
    Stdvideoav1colorprimariesbt2020 = 9, Stdvideoav1colorprimariesxyz = 10,
    Stdvideoav1colorprimariessmpte431 = 11,
    Stdvideoav1colorprimariessmpte432 = 12,
    Stdvideoav1colorprimariesebu3213 = 22,
    Stdvideoav1colorprimariesinvalid = 2147483647
const
  Stdvideoav1colorprimariesmaxenum* = enumstdvideoav1colorprimaries.Stdvideoav1colorprimariesinvalid
type
  enumstdvideoav1transfercharacteristics* {.size: sizeof(cuint).} = enum
    Stdvideoav1transfercharacteristicsreserved0 = 0,
    Stdvideoav1transfercharacteristicsbt709 = 1,
    Stdvideoav1transfercharacteristicsunspecified = 2,
    Stdvideoav1transfercharacteristicsreserved3 = 3,
    Stdvideoav1transfercharacteristicsbt470m = 4,
    Stdvideoav1transfercharacteristicsbt470bg = 5,
    Stdvideoav1transfercharacteristicsbt601 = 6,
    Stdvideoav1transfercharacteristicssmpte240 = 7,
    Stdvideoav1transfercharacteristicslinear = 8,
    Stdvideoav1transfercharacteristicslog100 = 9,
    Stdvideoav1transfercharacteristicslog100sqrt10 = 10,
    Stdvideoav1transfercharacteristicsiec61966 = 11,
    Stdvideoav1transfercharacteristicsbt1361 = 12,
    Stdvideoav1transfercharacteristicssrgb = 13,
    Stdvideoav1transfercharacteristicsbt202010bit = 14,
    Stdvideoav1transfercharacteristicsbt202012bit = 15,
    Stdvideoav1transfercharacteristicssmpte2084 = 16,
    Stdvideoav1transfercharacteristicssmpte428 = 17,
    Stdvideoav1transfercharacteristicshlg = 18,
    Stdvideoav1transfercharacteristicsinvalid = 2147483647
const
  Stdvideoav1transfercharacteristicsmaxenum* = enumstdvideoav1transfercharacteristics.Stdvideoav1transfercharacteristicsinvalid
type
  enumstdvideoav1matrixcoefficients* {.size: sizeof(cuint).} = enum
    Stdvideoav1matrixcoefficientsidentity = 0,
    Stdvideoav1matrixcoefficientsbt709 = 1,
    Stdvideoav1matrixcoefficientsunspecified = 2,
    Stdvideoav1matrixcoefficientsreserved3 = 3,
    Stdvideoav1matrixcoefficientsfcc = 4,
    Stdvideoav1matrixcoefficientsbt470bg = 5,
    Stdvideoav1matrixcoefficientsbt601 = 6,
    Stdvideoav1matrixcoefficientssmpte240 = 7,
    Stdvideoav1matrixcoefficientssmpteycgco = 8,
    Stdvideoav1matrixcoefficientsbt2020ncl = 9,
    Stdvideoav1matrixcoefficientsbt2020cl = 10,
    Stdvideoav1matrixcoefficientssmpte2085 = 11,
    Stdvideoav1matrixcoefficientschromatncl = 12,
    Stdvideoav1matrixcoefficientschromatcl = 13,
    Stdvideoav1matrixcoefficientsictcp = 14,
    Stdvideoav1matrixcoefficientsinvalid = 2147483647
const
  Stdvideoav1matrixcoefficientsmaxenum* = enumstdvideoav1matrixcoefficients.Stdvideoav1matrixcoefficientsinvalid
type
  enumstdvideoav1chromasampleposition* {.size: sizeof(cuint).} = enum
    Stdvideoav1chromasamplepositionunknown = 0,
    Stdvideoav1chromasamplepositionvertical = 1,
    Stdvideoav1chromasamplepositioncolocated = 2,
    Stdvideoav1chromasamplepositionreserved = 3,
    Stdvideoav1chromasamplepositioninvalid = 2147483647
const
  Stdvideoav1chromasamplepositionmaxenum* = enumstdvideoav1chromasampleposition.Stdvideoav1chromasamplepositioninvalid
type
  enumstdvideoav1framerestorationtype* {.size: sizeof(cuint).} = enum
    Stdvideoav1framerestorationtypenone = 0,
    Stdvideoav1framerestorationtypewiener = 1,
    Stdvideoav1framerestorationtypesgrproj = 2,
    Stdvideoav1framerestorationtypeswitchable = 3,
    Stdvideoav1framerestorationtypeinvalid = 2147483647
const
  Stdvideoav1framerestorationtypemaxenum* = enumstdvideoav1framerestorationtype.Stdvideoav1framerestorationtypeinvalid
type
  enumstdvideoh264modificationofpicnumsidc* {.size: sizeof(cuint).} = enum
    Stdvideoh264modificationofpicnumsidcshorttermsubtract = 0,
    Stdvideoh264modificationofpicnumsidcshorttermadd = 1,
    Stdvideoh264modificationofpicnumsidclongterm = 2,
    Stdvideoh264modificationofpicnumsidcend = 3,
    Stdvideoh264modificationofpicnumsidcinvalid = 2147483647
const
  Stdvideoh264modificationofpicnumsidcmaxenum* = enumstdvideoh264modificationofpicnumsidc.Stdvideoh264modificationofpicnumsidcinvalid
type
  enumstdvideoh264memmgmtcontrolop* {.size: sizeof(cuint).} = enum
    Stdvideoh264memmgmtcontrolopend = 0,
    Stdvideoh264memmgmtcontrolopunmarkshortterm = 1,
    Stdvideoh264memmgmtcontrolopunmarklongterm = 2,
    Stdvideoh264memmgmtcontrolopmarklongterm = 3,
    Stdvideoh264memmgmtcontrolopsetmaxlongtermindex = 4,
    Stdvideoh264memmgmtcontrolopunmarkall = 5,
    Stdvideoh264memmgmtcontrolopmarkcurrentaslongterm = 6,
    Stdvideoh264memmgmtcontrolopinvalid = 2147483647
const
  Stdvideoh264memmgmtcontrolopmaxenum* = enumstdvideoh264memmgmtcontrolop.Stdvideoh264memmgmtcontrolopinvalid
type
  structvkfencet* = distinct object
type
  structvkdescriptorsett* = distinct object
type
  structvkdisplaykhrt* = distinct object
type
  Queuefamilyexternal* = distinct object
type
  structvkrenderpasst* = distinct object
type
  structvkdebugreportcallbackextt* = distinct object
type
  structvkdeferredoperationkhrt* = distinct object
type
  structvkpipelinet* = distinct object
type
  structvkcommandpoolt* = distinct object
type
  structvkdisplaymodekhrt* = distinct object
type
  structvkbufferviewt* = distinct object
type
  structvkaccelerationstructurenvt* = distinct object
type
  structvkpipelinelayoutt* = distinct object
type
  structvkshadermodulet* = distinct object
type
  structvkphysicaldevicet* = distinct object
type
  structvkeventt* = distinct object
type
  structvkinstancet* = distinct object
type
  structvkpipelinecachet* = distinct object
type
  structvkimageviewt* = distinct object
type
  structvkframebuffert* = distinct object
type
  structvkdevicet* = distinct object
type
  structvksamplerycbcrconversiont* = distinct object
type
  Shaderunusedkhr* = distinct object
type
  structvkdescriptorpoolt* = distinct object
type
  structvkaccelerationstructurekhrt* = distinct object
type
  structvkprivatedataslott* = distinct object
type
  structvkbuffert* = distinct object
type
  structvksamplert* = distinct object
type
  structvkvideosessionparameterskhrt* = distinct object
type
  structvkcumodulenvxt* = distinct object
type
  structvkcufunctionnvxt* = distinct object
type
  structvkopticalflowsessionnvt* = distinct object
type
  structvkperformanceconfigurationintelt* = distinct object
type
  structvkimaget* = distinct object
type
  structvkcommandbuffert* = distinct object
type
  structvkquerypoolt* = distinct object
type
  structvkdescriptorsetlayoutt* = distinct object
type
  structvksurfacekhrt* = distinct object
type
  structvkswapchainkhrt* = distinct object
type
  structvkcudafunctionnvt* = distinct object
type
  structvkindirectcommandslayoutnvt* = distinct object
type
  structvkdevicememoryt* = distinct object
type
  structvksemaphoret* = distinct object
type
  structvkdebugutilsmessengerextt* = distinct object
type
  structvkqueuet* = distinct object
type
  structvkvideosessionkhrt* = distinct object
type
  structvkvalidationcacheextt* = distinct object
type
  structvkmicromapextt* = distinct object
type
  structvkshaderextt* = distinct object
type
  structvkdescriptorupdatetemplatet* = distinct object
type
  structvkcudamodulenvt* = distinct object
type
  Bool32* = uint32           ## Generated based on /usr/include/vulkan/vulkan_core.h:94:18
  Deviceaddress* = uint64    ## Generated based on /usr/include/vulkan/vulkan_core.h:95:18
  Devicesize* = uint64       ## Generated based on /usr/include/vulkan/vulkan_core.h:96:18
  Flags* = uint32            ## Generated based on /usr/include/vulkan/vulkan_core.h:97:18
  Samplemask* = uint32       ## Generated based on /usr/include/vulkan/vulkan_core.h:98:18
  Buffer* = ptr structvkbuffert ## Generated based on /usr/include/vulkan/vulkan_core.h:99:1
  Image* = ptr structvkimaget ## Generated based on /usr/include/vulkan/vulkan_core.h:100:1
  Instance* = ptr structvkinstancet ## Generated based on /usr/include/vulkan/vulkan_core.h:101:1
  Physicaldevice* = ptr structvkphysicaldevicet ## Generated based on /usr/include/vulkan/vulkan_core.h:102:1
  Device* = ptr structvkdevicet ## Generated based on /usr/include/vulkan/vulkan_core.h:103:1
  Queue* = ptr structvkqueuet ## Generated based on /usr/include/vulkan/vulkan_core.h:104:1
  Semaphore* = ptr structvksemaphoret ## Generated based on /usr/include/vulkan/vulkan_core.h:105:1
  Commandbuffer* = ptr structvkcommandbuffert ## Generated based on /usr/include/vulkan/vulkan_core.h:106:1
  Fence* = ptr structvkfencet ## Generated based on /usr/include/vulkan/vulkan_core.h:107:1
  Devicememory* = ptr structvkdevicememoryt ## Generated based on /usr/include/vulkan/vulkan_core.h:108:1
  Event* = ptr structvkeventt ## Generated based on /usr/include/vulkan/vulkan_core.h:109:1
  Querypool* = ptr structvkquerypoolt ## Generated based on /usr/include/vulkan/vulkan_core.h:110:1
  Bufferview* = ptr structvkbufferviewt ## Generated based on /usr/include/vulkan/vulkan_core.h:111:1
  Imageview* = ptr structvkimageviewt ## Generated based on /usr/include/vulkan/vulkan_core.h:112:1
  Shadermodule* = ptr structvkshadermodulet ## Generated based on /usr/include/vulkan/vulkan_core.h:113:1
  Pipelinecache* = ptr structvkpipelinecachet ## Generated based on /usr/include/vulkan/vulkan_core.h:114:1
  Pipelinelayout* = ptr structvkpipelinelayoutt ## Generated based on /usr/include/vulkan/vulkan_core.h:115:1
  Pipeline* = ptr structvkpipelinet ## Generated based on /usr/include/vulkan/vulkan_core.h:116:1
  Renderpass* = ptr structvkrenderpasst ## Generated based on /usr/include/vulkan/vulkan_core.h:117:1
  Descriptorsetlayout* = ptr structvkdescriptorsetlayoutt ## Generated based on /usr/include/vulkan/vulkan_core.h:118:1
  Sampler* = ptr structvksamplert ## Generated based on /usr/include/vulkan/vulkan_core.h:119:1
  Descriptorset* = ptr structvkdescriptorsett ## Generated based on /usr/include/vulkan/vulkan_core.h:120:1
  Descriptorpool* = ptr structvkdescriptorpoolt ## Generated based on /usr/include/vulkan/vulkan_core.h:121:1
  Framebuffer* = ptr structvkframebuffert ## Generated based on /usr/include/vulkan/vulkan_core.h:122:1
  Commandpool* = ptr structvkcommandpoolt ## Generated based on /usr/include/vulkan/vulkan_core.h:123:1
  Result* = enumvkresult     ## Generated based on /usr/include/vulkan/vulkan_core.h:198:3
  Structuretype* = enumvkstructuretype ## Generated based on /usr/include/vulkan/vulkan_core.h:1298:3
  Pipelinecacheheaderversion* = enumvkpipelinecacheheaderversion ## Generated based on /usr/include/vulkan/vulkan_core.h:1303:3
  Imagelayout* = enumvkimagelayout ## Generated based on /usr/include/vulkan/vulkan_core.h:1345:3
  Objecttype* = enumvkobjecttype ## Generated based on /usr/include/vulkan/vulkan_core.h:1403:3
  Vendorid* = enumvkvendorid ## Generated based on /usr/include/vulkan/vulkan_core.h:1414:3
  Systemallocationscope* = enumvksystemallocationscope ## Generated based on /usr/include/vulkan/vulkan_core.h:1423:3
  Internalallocationtype* = enumvkinternalallocationtype ## Generated based on /usr/include/vulkan/vulkan_core.h:1428:3
  Format* = enumvkformat     ## Generated based on /usr/include/vulkan/vulkan_core.h:1736:3
  Imagetiling* = enumvkimagetiling ## Generated based on /usr/include/vulkan/vulkan_core.h:1743:3
  Imagetype* = enumvkimagetype ## Generated based on /usr/include/vulkan/vulkan_core.h:1750:3
  Physicaldevicetype* = enumvkphysicaldevicetype ## Generated based on /usr/include/vulkan/vulkan_core.h:1759:3
  Querytype* = enumvkquerytype ## Generated based on /usr/include/vulkan/vulkan_core.h:1780:3
  Sharingmode* = enumvksharingmode ## Generated based on /usr/include/vulkan/vulkan_core.h:1786:3
  Componentswizzle* = enumvkcomponentswizzle ## Generated based on /usr/include/vulkan/vulkan_core.h:1797:3
  Imageviewtype* = enumvkimageviewtype ## Generated based on /usr/include/vulkan/vulkan_core.h:1808:3
  Blendfactor* = enumvkblendfactor ## Generated based on /usr/include/vulkan/vulkan_core.h:1831:3
  Blendop* = enumvkblendop   ## Generated based on /usr/include/vulkan/vulkan_core.h:1886:3
  Compareop* = enumvkcompareop ## Generated based on /usr/include/vulkan/vulkan_core.h:1898:3
  Dynamicstate* = enumvkdynamicstate ## Generated based on /usr/include/vulkan/vulkan_core.h:1990:3
  Frontface* = enumvkfrontface ## Generated based on /usr/include/vulkan/vulkan_core.h:1996:3
  Vertexinputrate* = enumvkvertexinputrate ## Generated based on /usr/include/vulkan/vulkan_core.h:2002:3
  Primitivetopology* = enumvkprimitivetopology ## Generated based on /usr/include/vulkan/vulkan_core.h:2017:3
  Polygonmode* = enumvkpolygonmode ## Generated based on /usr/include/vulkan/vulkan_core.h:2025:3
  Stencilop* = enumvkstencilop ## Generated based on /usr/include/vulkan/vulkan_core.h:2037:3
  Logicop* = enumvklogicop   ## Generated based on /usr/include/vulkan/vulkan_core.h:2057:3
  Bordercolor* = enumvkbordercolor ## Generated based on /usr/include/vulkan/vulkan_core.h:2069:3
  Filter* = enumvkfilter     ## Generated based on /usr/include/vulkan/vulkan_core.h:2077:3
  Sampleraddressmode* = enumvksampleraddressmode ## Generated based on /usr/include/vulkan/vulkan_core.h:2087:3
  Samplermipmapmode* = enumvksamplermipmapmode ## Generated based on /usr/include/vulkan/vulkan_core.h:2093:3
  Descriptortype* = enumvkdescriptortype ## Generated based on /usr/include/vulkan/vulkan_core.h:2116:3
  Attachmentloadop* = enumvkattachmentloadop ## Generated based on /usr/include/vulkan/vulkan_core.h:2125:3
  Attachmentstoreop* = enumvkattachmentstoreop ## Generated based on /usr/include/vulkan/vulkan_core.h:2135:3
  Pipelinebindpoint* = enumvkpipelinebindpoint ## Generated based on /usr/include/vulkan/vulkan_core.h:2147:3
  Commandbufferlevel* = enumvkcommandbufferlevel ## Generated based on /usr/include/vulkan/vulkan_core.h:2153:3
  Indextype* = enumvkindextype ## Generated based on /usr/include/vulkan/vulkan_core.h:2163:3
  Subpasscontents* = enumvksubpasscontents ## Generated based on /usr/include/vulkan/vulkan_core.h:2170:3
  Accessflagbits* = enumvkaccessflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2207:3
  Accessflags* = Flags       ## Generated based on /usr/include/vulkan/vulkan_core.h:2208:17
  Imageaspectflagbits* = enumvkimageaspectflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2228:3
  Imageaspectflags* = Flags  ## Generated based on /usr/include/vulkan/vulkan_core.h:2229:17
  Formatfeatureflagbits* = enumvkformatfeatureflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2275:3
  Formatfeatureflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2276:17
  Imagecreateflagbits* = enumvkimagecreateflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2306:3
  Imagecreateflags* = Flags  ## Generated based on /usr/include/vulkan/vulkan_core.h:2307:17
  Samplecountflagbits* = enumvksamplecountflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2318:3
  Samplecountflags* = Flags  ## Generated based on /usr/include/vulkan/vulkan_core.h:2319:17
  Imageusageflagbits* = enumvkimageusageflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2345:3
  Imageusageflags* = Flags   ## Generated based on /usr/include/vulkan/vulkan_core.h:2346:17
  Instancecreateflagbits* = enumvkinstancecreateflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2351:3
  Instancecreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2352:17
  Memoryheapflagbits* = enumvkmemoryheapflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2359:3
  Memoryheapflags* = Flags   ## Generated based on /usr/include/vulkan/vulkan_core.h:2360:17
  Memorypropertyflagbits* = enumvkmemorypropertyflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2373:3
  Memorypropertyflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2374:17
  Queueflagbits* = enumvkqueueflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2386:3
  Queueflags* = Flags        ## Generated based on /usr/include/vulkan/vulkan_core.h:2387:17
  Devicecreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2388:17
  Devicequeuecreateflagbits* = enumvkdevicequeuecreateflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2393:3
  Devicequeuecreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2394:17
  Pipelinestageflagbits* = enumvkpipelinestageflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2431:3
  Pipelinestageflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2432:17
  Memorymapflagbits* = enumvkmemorymapflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2437:3
  Memorymapflags* = Flags    ## Generated based on /usr/include/vulkan/vulkan_core.h:2438:17
  Sparsememorybindflagbits* = enumvksparsememorybindflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2443:3
  Sparsememorybindflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2444:17
  Sparseimageformatflagbits* = enumvksparseimageformatflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2451:3
  Sparseimageformatflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2452:17
  Fencecreateflagbits* = enumvkfencecreateflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2457:3
  Fencecreateflags* = Flags  ## Generated based on /usr/include/vulkan/vulkan_core.h:2458:17
  Semaphorecreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2459:17
  Eventcreateflagbits* = enumvkeventcreateflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2465:3
  Eventcreateflags* = Flags  ## Generated based on /usr/include/vulkan/vulkan_core.h:2466:17
  Querypipelinestatisticflagbits* = enumvkquerypipelinestatisticflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2484:3
  Querypipelinestatisticflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2485:17
  Querypoolcreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2486:17
  Queryresultflagbits* = enumvkqueryresultflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2495:3
  Queryresultflags* = Flags  ## Generated based on /usr/include/vulkan/vulkan_core.h:2496:17
  Buffercreateflagbits* = enumvkbuffercreateflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2509:3
  Buffercreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2510:17
  Bufferusageflagbits* = enumvkbufferusageflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2545:3
  Bufferusageflags* = Flags  ## Generated based on /usr/include/vulkan/vulkan_core.h:2546:17
  Bufferviewcreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2547:17
  Imageviewcreateflagbits* = enumvkimageviewcreateflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2554:3
  Imageviewcreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2555:17
  Shadermodulecreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2556:17
  Pipelinecachecreateflagbits* = enumvkpipelinecachecreateflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2562:3
  Pipelinecachecreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2563:17
  Colorcomponentflagbits* = enumvkcolorcomponentflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2571:3
  Colorcomponentflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2572:17
  Pipelinecreateflagbits* = enumvkpipelinecreateflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2616:3
  Pipelinecreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2617:17
  Pipelineshaderstagecreateflagbits* = enumvkpipelineshaderstagecreateflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2625:3
  Pipelineshaderstagecreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2626:17
  Shaderstageflagbits* = enumvkshaderstageflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2656:3
  Cullmodeflagbits* = enumvkcullmodeflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2664:3
  Cullmodeflags* = Flags     ## Generated based on /usr/include/vulkan/vulkan_core.h:2665:17
  Pipelinevertexinputstatecreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2666:17
  Pipelineinputassemblystatecreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2667:17
  Pipelinetessellationstatecreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2668:17
  Pipelineviewportstatecreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2669:17
  Pipelinerasterizationstatecreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2670:17
  Pipelinemultisamplestatecreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2671:17
  Pipelinedepthstencilstatecreateflagbits* = enumvkpipelinedepthstencilstatecreateflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2679:3
  Pipelinedepthstencilstatecreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2680:17
  Pipelinecolorblendstatecreateflagbits* = enumvkpipelinecolorblendstatecreateflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2686:3
  Pipelinecolorblendstatecreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2687:17
  Pipelinedynamicstatecreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2688:17
  Pipelinelayoutcreateflagbits* = enumvkpipelinelayoutcreateflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2693:3
  Pipelinelayoutcreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2694:17
  Shaderstageflags* = Flags  ## Generated based on /usr/include/vulkan/vulkan_core.h:2695:17
  Samplercreateflagbits* = enumvksamplercreateflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2704:3
  Samplercreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2705:17
  Descriptorpoolcreateflagbits* = enumvkdescriptorpoolcreateflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2716:3
  Descriptorpoolcreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2717:17
  Descriptorpoolresetflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2718:17
  Descriptorsetlayoutcreateflagbits* = enumvkdescriptorsetlayoutcreateflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2731:3
  Descriptorsetlayoutcreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2732:17
  Attachmentdescriptionflagbits* = enumvkattachmentdescriptionflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2737:3
  Attachmentdescriptionflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2738:17
  Dependencyflagbits* = enumvkdependencyflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2748:3
  Dependencyflags* = Flags   ## Generated based on /usr/include/vulkan/vulkan_core.h:2749:17
  Framebuffercreateflagbits* = enumvkframebuffercreateflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2755:3
  Framebuffercreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2756:17
  Renderpasscreateflagbits* = enumvkrenderpasscreateflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2761:3
  Renderpasscreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2762:17
  Subpassdescriptionflagbits* = enumvksubpassdescriptionflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2777:3
  Subpassdescriptionflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2778:17
  Commandpoolcreateflagbits* = enumvkcommandpoolcreateflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2785:3
  Commandpoolcreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2786:17
  Commandpoolresetflagbits* = enumvkcommandpoolresetflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2791:3
  Commandpoolresetflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2792:17
  Commandbufferusageflagbits* = enumvkcommandbufferusageflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2799:3
  Commandbufferusageflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2800:17
  Querycontrolflagbits* = enumvkquerycontrolflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2805:3
  Querycontrolflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2806:17
  Commandbufferresetflagbits* = enumvkcommandbufferresetflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2811:3
  Commandbufferresetflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:2812:17
  Stencilfaceflagbits* = enumvkstencilfaceflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:2820:3
  Stencilfaceflags* = Flags  ## Generated based on /usr/include/vulkan/vulkan_core.h:2821:17
  structvkextent2d* {.pure, inheritable, bycopy.} = object
    width*: uint32           ## Generated based on /usr/include/vulkan/vulkan_core.h:2822:16
    height*: uint32

  Extent2d* = structvkextent2d ## Generated based on /usr/include/vulkan/vulkan_core.h:2825:3
  structvkextent3d* {.pure, inheritable, bycopy.} = object
    width*: uint32           ## Generated based on /usr/include/vulkan/vulkan_core.h:2827:16
    height*: uint32
    depth*: uint32

  Extent3d* = structvkextent3d ## Generated based on /usr/include/vulkan/vulkan_core.h:2831:3
  structvkoffset2d* {.pure, inheritable, bycopy.} = object
    x*: int32                ## Generated based on /usr/include/vulkan/vulkan_core.h:2833:16
    y*: int32

  Offset2d* = structvkoffset2d ## Generated based on /usr/include/vulkan/vulkan_core.h:2836:3
  structvkoffset3d* {.pure, inheritable, bycopy.} = object
    x*: int32                ## Generated based on /usr/include/vulkan/vulkan_core.h:2838:16
    y*: int32
    z*: int32

  Offset3d* = structvkoffset3d ## Generated based on /usr/include/vulkan/vulkan_core.h:2842:3
  structvkrect2d* {.pure, inheritable, bycopy.} = object
    offset*: Offset2d        ## Generated based on /usr/include/vulkan/vulkan_core.h:2844:16
    extent*: Extent2d

  Rect2d* = structvkrect2d   ## Generated based on /usr/include/vulkan/vulkan_core.h:2847:3
  structvkbaseinstructure* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:2849:16
    pnext*: ptr structvkbaseinstructure

  Baseinstructure* = structvkbaseinstructure ## Generated based on /usr/include/vulkan/vulkan_core.h:2852:3
  structvkbaseoutstructure* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:2854:16
    pnext*: ptr structvkbaseoutstructure

  Baseoutstructure* = structvkbaseoutstructure ## Generated based on /usr/include/vulkan/vulkan_core.h:2857:3
  structvkbuffermemorybarrier* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:2859:16
    pnext*: pointer
    srcaccessmask*: Accessflags
    dstaccessmask*: Accessflags
    srcqueuefamilyindex*: uint32
    dstqueuefamilyindex*: uint32
    buffer*: Buffer
    offset*: Devicesize
    size*: Devicesize

  Buffermemorybarrier* = structvkbuffermemorybarrier ## Generated based on /usr/include/vulkan/vulkan_core.h:2869:3
  structvkdispatchindirectcommand* {.pure, inheritable, bycopy.} = object
    x*: uint32               ## Generated based on /usr/include/vulkan/vulkan_core.h:2871:16
    y*: uint32
    z*: uint32

  Dispatchindirectcommand* = structvkdispatchindirectcommand ## Generated based on /usr/include/vulkan/vulkan_core.h:2875:3
  structvkdrawindexedindirectcommand* {.pure, inheritable, bycopy.} = object
    indexcount*: uint32      ## Generated based on /usr/include/vulkan/vulkan_core.h:2877:16
    instancecount*: uint32
    firstindex*: uint32
    vertexoffset*: int32
    firstinstance*: uint32

  Drawindexedindirectcommand* = structvkdrawindexedindirectcommand ## Generated based on /usr/include/vulkan/vulkan_core.h:2883:3
  structvkdrawindirectcommand* {.pure, inheritable, bycopy.} = object
    vertexcount*: uint32     ## Generated based on /usr/include/vulkan/vulkan_core.h:2885:16
    instancecount*: uint32
    firstvertex*: uint32
    firstinstance*: uint32

  Drawindirectcommand* = structvkdrawindirectcommand ## Generated based on /usr/include/vulkan/vulkan_core.h:2890:3
  structvkimagesubresourcerange* {.pure, inheritable, bycopy.} = object
    aspectmask*: Imageaspectflags ## Generated based on /usr/include/vulkan/vulkan_core.h:2892:16
    basemiplevel*: uint32
    levelcount*: uint32
    basearraylayer*: uint32
    layercount*: uint32

  Imagesubresourcerange* = structvkimagesubresourcerange ## Generated based on /usr/include/vulkan/vulkan_core.h:2898:3
  structvkimagememorybarrier* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:2900:16
    pnext*: pointer
    srcaccessmask*: Accessflags
    dstaccessmask*: Accessflags
    oldlayout*: Imagelayout
    newlayout*: Imagelayout
    srcqueuefamilyindex*: uint32
    dstqueuefamilyindex*: uint32
    image*: Image
    subresourcerange*: Imagesubresourcerange

  Imagememorybarrier* = structvkimagememorybarrier ## Generated based on /usr/include/vulkan/vulkan_core.h:2911:3
  structvkmemorybarrier* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:2913:16
    pnext*: pointer
    srcaccessmask*: Accessflags
    dstaccessmask*: Accessflags

  Memorybarrier* = structvkmemorybarrier ## Generated based on /usr/include/vulkan/vulkan_core.h:2918:3
  structvkpipelinecacheheaderversionone* {.pure, inheritable, bycopy.} = object
    headersize*: uint32      ## Generated based on /usr/include/vulkan/vulkan_core.h:2920:16
    headerversion*: Pipelinecacheheaderversion
    vendorid*: uint32
    deviceid*: uint32
    pipelinecacheuuid*: array[16'i64, uint8]

  Pipelinecacheheaderversionone* = structvkpipelinecacheheaderversionone ## Generated based on /usr/include/vulkan/vulkan_core.h:2926:3
  Pfnvkallocationfunction* = proc (a0: pointer; a1: csize_t; a2: csize_t;
                                   a3: Systemallocationscope): pointer {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:2928:27
  Pfnvkfreefunction* = proc (a0: pointer; a1: pointer): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:2934:26
  Pfnvkinternalallocationnotification* = proc (a0: pointer; a1: csize_t;
      a2: Internalallocationtype; a3: Systemallocationscope): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:2938:26
  Pfnvkinternalfreenotification* = proc (a0: pointer; a1: csize_t;
      a2: Internalallocationtype; a3: Systemallocationscope): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:2944:26
  Pfnvkreallocationfunction* = proc (a0: pointer; a1: pointer; a2: csize_t;
                                     a3: csize_t; a4: Systemallocationscope): pointer {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:2950:27
  Pfnvkvoidfunction* = proc (): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:2957:26
  structvkallocationcallbacks* {.pure, inheritable, bycopy.} = object
    puserdata*: pointer      ## Generated based on /usr/include/vulkan/vulkan_core.h:2958:16
    pfnallocation*: Pfnvkallocationfunction
    pfnreallocation*: Pfnvkreallocationfunction
    pfnfree*: Pfnvkfreefunction
    pfninternalallocation*: Pfnvkinternalallocationnotification
    pfninternalfree*: Pfnvkinternalfreenotification

  Allocationcallbacks* = structvkallocationcallbacks ## Generated based on /usr/include/vulkan/vulkan_core.h:2965:3
  structvkapplicationinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:2967:16
    pnext*: pointer
    papplicationname*: cstring
    applicationversion*: uint32
    penginename*: cstring
    engineversion*: uint32
    apiversion*: uint32

  Applicationinfo* = structvkapplicationinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:2975:3
  structvkformatproperties* {.pure, inheritable, bycopy.} = object
    lineartilingfeatures*: Formatfeatureflags ## Generated based on /usr/include/vulkan/vulkan_core.h:2977:16
    optimaltilingfeatures*: Formatfeatureflags
    bufferfeatures*: Formatfeatureflags

  Formatproperties* = structvkformatproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:2981:3
  structvkimageformatproperties* {.pure, inheritable, bycopy.} = object
    maxextent*: Extent3d     ## Generated based on /usr/include/vulkan/vulkan_core.h:2983:16
    maxmiplevels*: uint32
    maxarraylayers*: uint32
    samplecounts*: Samplecountflags
    maxresourcesize*: Devicesize

  Imageformatproperties* = structvkimageformatproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:2989:3
  structvkinstancecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:2991:16
    pnext*: pointer
    flags*: Instancecreateflags
    papplicationinfo*: ptr Applicationinfo
    enabledlayercount*: uint32
    ppenabledlayernames*: ptr cstring
    enabledextensioncount*: uint32
    ppenabledextensionnames*: ptr cstring

  Instancecreateinfo* = structvkinstancecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3000:3
  structvkmemoryheap* {.pure, inheritable, bycopy.} = object
    size*: Devicesize        ## Generated based on /usr/include/vulkan/vulkan_core.h:3002:16
    flags*: Memoryheapflags

  Memoryheap* = structvkmemoryheap ## Generated based on /usr/include/vulkan/vulkan_core.h:3005:3
  structvkmemorytype* {.pure, inheritable, bycopy.} = object
    propertyflags*: Memorypropertyflags ## Generated based on /usr/include/vulkan/vulkan_core.h:3007:16
    heapindex*: uint32

  Memorytype* = structvkmemorytype ## Generated based on /usr/include/vulkan/vulkan_core.h:3010:3
  structvkphysicaldevicefeatures* {.pure, inheritable, bycopy.} = object
    robustbufferaccess*: Bool32 ## Generated based on /usr/include/vulkan/vulkan_core.h:3012:16
    fulldrawindexuint32*: Bool32
    imagecubearray*: Bool32
    independentblend*: Bool32
    geometryshader*: Bool32
    tessellationshader*: Bool32
    samplerateshading*: Bool32
    dualsrcblend*: Bool32
    logicop*: Bool32
    multidrawindirect*: Bool32
    drawindirectfirstinstance*: Bool32
    depthclamp*: Bool32
    depthbiasclamp*: Bool32
    fillmodenonsolid*: Bool32
    depthbounds*: Bool32
    widelines*: Bool32
    largepoints*: Bool32
    alphatoone*: Bool32
    multiviewport*: Bool32
    sampleranisotropy*: Bool32
    texturecompressionetc2*: Bool32
    texturecompressionastcldr*: Bool32
    texturecompressionbc*: Bool32
    occlusionqueryprecise*: Bool32
    pipelinestatisticsquery*: Bool32
    vertexpipelinestoresandatomics*: Bool32
    fragmentstoresandatomics*: Bool32
    shadertessellationandgeometrypointsize*: Bool32
    shaderimagegatherextended*: Bool32
    shaderstorageimageextendedformats*: Bool32
    shaderstorageimagemultisample*: Bool32
    shaderstorageimagereadwithoutformat*: Bool32
    shaderstorageimagewritewithoutformat*: Bool32
    shaderuniformbufferarraydynamicindexing*: Bool32
    shadersampledimagearraydynamicindexing*: Bool32
    shaderstoragebufferarraydynamicindexing*: Bool32
    shaderstorageimagearraydynamicindexing*: Bool32
    shaderclipdistance*: Bool32
    shaderculldistance*: Bool32
    shaderfloat64*: Bool32
    shaderint64*: Bool32
    shaderint16*: Bool32
    shaderresourceresidency*: Bool32
    shaderresourceminlod*: Bool32
    sparsebinding*: Bool32
    sparseresidencybuffer*: Bool32
    sparseresidencyimage2d*: Bool32
    sparseresidencyimage3d*: Bool32
    sparseresidency2samples*: Bool32
    sparseresidency4samples*: Bool32
    sparseresidency8samples*: Bool32
    sparseresidency16samples*: Bool32
    sparseresidencyaliased*: Bool32
    variablemultisamplerate*: Bool32
    inheritedqueries*: Bool32

  Physicaldevicefeatures* = structvkphysicaldevicefeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:3068:3
  structvkphysicaldevicelimits* {.pure, inheritable, bycopy.} = object
    maximagedimension1d*: uint32 ## Generated based on /usr/include/vulkan/vulkan_core.h:3070:16
    maximagedimension2d*: uint32
    maximagedimension3d*: uint32
    maximagedimensioncube*: uint32
    maximagearraylayers*: uint32
    maxtexelbufferelements*: uint32
    maxuniformbufferrange*: uint32
    maxstoragebufferrange*: uint32
    maxpushconstantssize*: uint32
    maxmemoryallocationcount*: uint32
    maxsamplerallocationcount*: uint32
    bufferimagegranularity*: Devicesize
    sparseaddressspacesize*: Devicesize
    maxbounddescriptorsets*: uint32
    maxperstagedescriptorsamplers*: uint32
    maxperstagedescriptoruniformbuffers*: uint32
    maxperstagedescriptorstoragebuffers*: uint32
    maxperstagedescriptorsampledimages*: uint32
    maxperstagedescriptorstorageimages*: uint32
    maxperstagedescriptorinputattachments*: uint32
    maxperstageresources*: uint32
    maxdescriptorsetsamplers*: uint32
    maxdescriptorsetuniformbuffers*: uint32
    maxdescriptorsetuniformbuffersdynamic*: uint32
    maxdescriptorsetstoragebuffers*: uint32
    maxdescriptorsetstoragebuffersdynamic*: uint32
    maxdescriptorsetsampledimages*: uint32
    maxdescriptorsetstorageimages*: uint32
    maxdescriptorsetinputattachments*: uint32
    maxvertexinputattributes*: uint32
    maxvertexinputbindings*: uint32
    maxvertexinputattributeoffset*: uint32
    maxvertexinputbindingstride*: uint32
    maxvertexoutputcomponents*: uint32
    maxtessellationgenerationlevel*: uint32
    maxtessellationpatchsize*: uint32
    maxtessellationcontrolpervertexinputcomponents*: uint32
    maxtessellationcontrolpervertexoutputcomponents*: uint32
    maxtessellationcontrolperpatchoutputcomponents*: uint32
    maxtessellationcontroltotaloutputcomponents*: uint32
    maxtessellationevaluationinputcomponents*: uint32
    maxtessellationevaluationoutputcomponents*: uint32
    maxgeometryshaderinvocations*: uint32
    maxgeometryinputcomponents*: uint32
    maxgeometryoutputcomponents*: uint32
    maxgeometryoutputvertices*: uint32
    maxgeometrytotaloutputcomponents*: uint32
    maxfragmentinputcomponents*: uint32
    maxfragmentoutputattachments*: uint32
    maxfragmentdualsrcattachments*: uint32
    maxfragmentcombinedoutputresources*: uint32
    maxcomputesharedmemorysize*: uint32
    maxcomputeworkgroupcount*: array[3'i64, uint32]
    maxcomputeworkgroupinvocations*: uint32
    maxcomputeworkgroupsize*: array[3'i64, uint32]
    subpixelprecisionbits*: uint32
    subtexelprecisionbits*: uint32
    mipmapprecisionbits*: uint32
    maxdrawindexedindexvalue*: uint32
    maxdrawindirectcount*: uint32
    maxsamplerlodbias*: cfloat
    maxsampleranisotropy*: cfloat
    maxviewports*: uint32
    maxviewportdimensions*: array[2'i64, uint32]
    viewportboundsrange*: array[2'i64, cfloat]
    viewportsubpixelbits*: uint32
    minmemorymapalignment*: csize_t
    mintexelbufferoffsetalignment*: Devicesize
    minuniformbufferoffsetalignment*: Devicesize
    minstoragebufferoffsetalignment*: Devicesize
    mintexeloffset*: int32
    maxtexeloffset*: uint32
    mintexelgatheroffset*: int32
    maxtexelgatheroffset*: uint32
    mininterpolationoffset*: cfloat
    maxinterpolationoffset*: cfloat
    subpixelinterpolationoffsetbits*: uint32
    maxframebufferwidth*: uint32
    maxframebufferheight*: uint32
    maxframebufferlayers*: uint32
    framebuffercolorsamplecounts*: Samplecountflags
    framebufferdepthsamplecounts*: Samplecountflags
    framebufferstencilsamplecounts*: Samplecountflags
    framebuffernoattachmentssamplecounts*: Samplecountflags
    maxcolorattachments*: uint32
    sampledimagecolorsamplecounts*: Samplecountflags
    sampledimageintegersamplecounts*: Samplecountflags
    sampledimagedepthsamplecounts*: Samplecountflags
    sampledimagestencilsamplecounts*: Samplecountflags
    storageimagesamplecounts*: Samplecountflags
    maxsamplemaskwords*: uint32
    timestampcomputeandgraphics*: Bool32
    timestampperiod*: cfloat
    maxclipdistances*: uint32
    maxculldistances*: uint32
    maxcombinedclipandculldistances*: uint32
    discretequeuepriorities*: uint32
    pointsizerange*: array[2'i64, cfloat]
    linewidthrange*: array[2'i64, cfloat]
    pointsizegranularity*: cfloat
    linewidthgranularity*: cfloat
    strictlines*: Bool32
    standardsamplelocations*: Bool32
    optimalbuffercopyoffsetalignment*: Devicesize
    optimalbuffercopyrowpitchalignment*: Devicesize
    noncoherentatomsize*: Devicesize

  Physicaldevicelimits* = structvkphysicaldevicelimits ## Generated based on /usr/include/vulkan/vulkan_core.h:3177:3
  structvkphysicaldevicememoryproperties* {.pure, inheritable, bycopy.} = object
    memorytypecount*: uint32 ## Generated based on /usr/include/vulkan/vulkan_core.h:3179:16
    memorytypes*: array[32'i64, Memorytype]
    memoryheapcount*: uint32
    memoryheaps*: array[16'i64, Memoryheap]

  Physicaldevicememoryproperties* = structvkphysicaldevicememoryproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:3184:3
  structvkphysicaldevicesparseproperties* {.pure, inheritable, bycopy.} = object
    residencystandard2dblockshape*: Bool32 ## Generated based on /usr/include/vulkan/vulkan_core.h:3186:16
    residencystandard2dmultisampleblockshape*: Bool32
    residencystandard3dblockshape*: Bool32
    residencyalignedmipsize*: Bool32
    residencynonresidentstrict*: Bool32

  Physicaldevicesparseproperties* = structvkphysicaldevicesparseproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:3192:3
  structvkphysicaldeviceproperties* {.pure, inheritable, bycopy.} = object
    apiversion*: uint32      ## Generated based on /usr/include/vulkan/vulkan_core.h:3194:16
    driverversion*: uint32
    vendorid*: uint32
    deviceid*: uint32
    devicetype*: Physicaldevicetype
    devicename*: array[256'i64, cschar]
    pipelinecacheuuid*: array[16'i64, uint8]
    limits*: Physicaldevicelimits
    sparseproperties*: Physicaldevicesparseproperties

  Physicaldeviceproperties* = structvkphysicaldeviceproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:3204:3
  structvkqueuefamilyproperties* {.pure, inheritable, bycopy.} = object
    queueflags*: Queueflags  ## Generated based on /usr/include/vulkan/vulkan_core.h:3206:16
    queuecount*: uint32
    timestampvalidbits*: uint32
    minimagetransfergranularity*: Extent3d

  Queuefamilyproperties* = structvkqueuefamilyproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:3211:3
  structvkdevicequeuecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3213:16
    pnext*: pointer
    flags*: Devicequeuecreateflags
    queuefamilyindex*: uint32
    queuecount*: uint32
    pqueuepriorities*: ptr cfloat

  Devicequeuecreateinfo* = structvkdevicequeuecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3220:3
  structvkdevicecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3222:16
    pnext*: pointer
    flags*: Devicecreateflags
    queuecreateinfocount*: uint32
    pqueuecreateinfos*: ptr Devicequeuecreateinfo
    enabledlayercount*: uint32
    ppenabledlayernames*: ptr cstring
    enabledextensioncount*: uint32
    ppenabledextensionnames*: ptr cstring
    penabledfeatures*: ptr Physicaldevicefeatures

  Devicecreateinfo* = structvkdevicecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3233:3
  structvkextensionproperties* {.pure, inheritable, bycopy.} = object
    extensionname*: array[256'i64, cschar] ## Generated based on /usr/include/vulkan/vulkan_core.h:3235:16
    specversion*: uint32

  Extensionproperties* = structvkextensionproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:3238:3
  structvklayerproperties* {.pure, inheritable, bycopy.} = object
    layername*: array[256'i64, cschar] ## Generated based on /usr/include/vulkan/vulkan_core.h:3240:16
    specversion*: uint32
    implementationversion*: uint32
    description*: array[256'i64, cschar]

  Layerproperties* = structvklayerproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:3245:3
  structvksubmitinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3247:16
    pnext*: pointer
    waitsemaphorecount*: uint32
    pwaitsemaphores*: ptr Semaphore
    pwaitdststagemask*: ptr Pipelinestageflags
    commandbuffercount*: uint32
    pcommandbuffers*: ptr Commandbuffer
    signalsemaphorecount*: uint32
    psignalsemaphores*: ptr Semaphore

  Submitinfo* = structvksubmitinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3257:3
  structvkmappedmemoryrange* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3259:16
    pnext*: pointer
    memory*: Devicememory
    offset*: Devicesize
    size*: Devicesize

  Mappedmemoryrange* = structvkmappedmemoryrange ## Generated based on /usr/include/vulkan/vulkan_core.h:3265:3
  structvkmemoryallocateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3267:16
    pnext*: pointer
    allocationsize*: Devicesize
    memorytypeindex*: uint32

  Memoryallocateinfo* = structvkmemoryallocateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3272:3
  structvkmemoryrequirements* {.pure, inheritable, bycopy.} = object
    size*: Devicesize        ## Generated based on /usr/include/vulkan/vulkan_core.h:3274:16
    alignment*: Devicesize
    memorytypebits*: uint32

  Memoryrequirements* = structvkmemoryrequirements ## Generated based on /usr/include/vulkan/vulkan_core.h:3278:3
  structvksparsememorybind* {.pure, inheritable, bycopy.} = object
    resourceoffset*: Devicesize ## Generated based on /usr/include/vulkan/vulkan_core.h:3280:16
    size*: Devicesize
    memory*: Devicememory
    memoryoffset*: Devicesize
    flags*: Sparsememorybindflags

  Sparsememorybind* = structvksparsememorybind ## Generated based on /usr/include/vulkan/vulkan_core.h:3286:3
  structvksparsebuffermemorybindinfo* {.pure, inheritable, bycopy.} = object
    buffer*: Buffer          ## Generated based on /usr/include/vulkan/vulkan_core.h:3288:16
    bindcount*: uint32
    pbinds*: ptr Sparsememorybind

  Sparsebuffermemorybindinfo* = structvksparsebuffermemorybindinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3292:3
  structvksparseimageopaquememorybindinfo* {.pure, inheritable, bycopy.} = object
    image*: Image            ## Generated based on /usr/include/vulkan/vulkan_core.h:3294:16
    bindcount*: uint32
    pbinds*: ptr Sparsememorybind

  Sparseimageopaquememorybindinfo* = structvksparseimageopaquememorybindinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3298:3
  structvkimagesubresource* {.pure, inheritable, bycopy.} = object
    aspectmask*: Imageaspectflags ## Generated based on /usr/include/vulkan/vulkan_core.h:3300:16
    miplevel*: uint32
    arraylayer*: uint32

  Imagesubresource* = structvkimagesubresource ## Generated based on /usr/include/vulkan/vulkan_core.h:3304:3
  structvksparseimagememorybind* {.pure, inheritable, bycopy.} = object
    subresource*: Imagesubresource ## Generated based on /usr/include/vulkan/vulkan_core.h:3306:16
    offset*: Offset3d
    extent*: Extent3d
    memory*: Devicememory
    memoryoffset*: Devicesize
    flags*: Sparsememorybindflags

  Sparseimagememorybind* = structvksparseimagememorybind ## Generated based on /usr/include/vulkan/vulkan_core.h:3313:3
  structvksparseimagememorybindinfo* {.pure, inheritable, bycopy.} = object
    image*: Image            ## Generated based on /usr/include/vulkan/vulkan_core.h:3315:16
    bindcount*: uint32
    pbinds*: ptr Sparseimagememorybind

  Sparseimagememorybindinfo* = structvksparseimagememorybindinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3319:3
  structvkbindsparseinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3321:16
    pnext*: pointer
    waitsemaphorecount*: uint32
    pwaitsemaphores*: ptr Semaphore
    bufferbindcount*: uint32
    pbufferbinds*: ptr Sparsebuffermemorybindinfo
    imageopaquebindcount*: uint32
    pimageopaquebinds*: ptr Sparseimageopaquememorybindinfo
    imagebindcount*: uint32
    pimagebinds*: ptr Sparseimagememorybindinfo
    signalsemaphorecount*: uint32
    psignalsemaphores*: ptr Semaphore

  Bindsparseinfo* = structvkbindsparseinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3334:3
  structvksparseimageformatproperties* {.pure, inheritable, bycopy.} = object
    aspectmask*: Imageaspectflags ## Generated based on /usr/include/vulkan/vulkan_core.h:3336:16
    imagegranularity*: Extent3d
    flags*: Sparseimageformatflags

  Sparseimageformatproperties* = structvksparseimageformatproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:3340:3
  structvksparseimagememoryrequirements* {.pure, inheritable, bycopy.} = object
    formatproperties*: Sparseimageformatproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:3342:16
    imagemiptailfirstlod*: uint32
    imagemiptailsize*: Devicesize
    imagemiptailoffset*: Devicesize
    imagemiptailstride*: Devicesize

  Sparseimagememoryrequirements* = structvksparseimagememoryrequirements ## Generated based on /usr/include/vulkan/vulkan_core.h:3348:3
  structvkfencecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3350:16
    pnext*: pointer
    flags*: Fencecreateflags

  Fencecreateinfo* = structvkfencecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3354:3
  structvksemaphorecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3356:16
    pnext*: pointer
    flags*: Semaphorecreateflags

  Semaphorecreateinfo* = structvksemaphorecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3360:3
  structvkeventcreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3362:16
    pnext*: pointer
    flags*: Eventcreateflags

  Eventcreateinfo* = structvkeventcreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3366:3
  structvkquerypoolcreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3368:16
    pnext*: pointer
    flags*: Querypoolcreateflags
    querytype*: Querytype
    querycount*: uint32
    pipelinestatistics*: Querypipelinestatisticflags

  Querypoolcreateinfo* = structvkquerypoolcreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3375:3
  structvkbuffercreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3377:16
    pnext*: pointer
    flags*: Buffercreateflags
    size*: Devicesize
    usage*: Bufferusageflags
    sharingmode*: Sharingmode
    queuefamilyindexcount*: uint32
    pqueuefamilyindices*: ptr uint32

  Buffercreateinfo* = structvkbuffercreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3386:3
  structvkbufferviewcreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3388:16
    pnext*: pointer
    flags*: Bufferviewcreateflags
    buffer*: Buffer
    format*: Format
    offset*: Devicesize
    range*: Devicesize

  Bufferviewcreateinfo* = structvkbufferviewcreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3396:3
  structvkimagecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3398:16
    pnext*: pointer
    flags*: Imagecreateflags
    imagetype*: Imagetype
    format*: Format
    extent*: Extent3d
    miplevels*: uint32
    arraylayers*: uint32
    samples*: Samplecountflagbits
    tiling*: Imagetiling
    usage*: Imageusageflags
    sharingmode*: Sharingmode
    queuefamilyindexcount*: uint32
    pqueuefamilyindices*: ptr uint32
    initiallayout*: Imagelayout

  Imagecreateinfo* = structvkimagecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3414:3
  structvksubresourcelayout* {.pure, inheritable, bycopy.} = object
    offset*: Devicesize      ## Generated based on /usr/include/vulkan/vulkan_core.h:3416:16
    size*: Devicesize
    rowpitch*: Devicesize
    arraypitch*: Devicesize
    depthpitch*: Devicesize

  Subresourcelayout* = structvksubresourcelayout ## Generated based on /usr/include/vulkan/vulkan_core.h:3422:3
  structvkcomponentmapping* {.pure, inheritable, bycopy.} = object
    r*: Componentswizzle     ## Generated based on /usr/include/vulkan/vulkan_core.h:3424:16
    g*: Componentswizzle
    b*: Componentswizzle
    a*: Componentswizzle

  Componentmapping* = structvkcomponentmapping ## Generated based on /usr/include/vulkan/vulkan_core.h:3429:3
  structvkimageviewcreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3431:16
    pnext*: pointer
    flags*: Imageviewcreateflags
    image*: Image
    viewtype*: Imageviewtype
    format*: Format
    components*: Componentmapping
    subresourcerange*: Imagesubresourcerange

  Imageviewcreateinfo* = structvkimageviewcreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3440:3
  structvkshadermodulecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3442:16
    pnext*: pointer
    flags*: Shadermodulecreateflags
    codesize*: csize_t
    pcode*: ptr uint32

  Shadermodulecreateinfo* = structvkshadermodulecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3448:3
  structvkpipelinecachecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3450:16
    pnext*: pointer
    flags*: Pipelinecachecreateflags
    initialdatasize*: csize_t
    pinitialdata*: pointer

  Pipelinecachecreateinfo* = structvkpipelinecachecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3456:3
  structvkspecializationmapentry* {.pure, inheritable, bycopy.} = object
    constantid*: uint32      ## Generated based on /usr/include/vulkan/vulkan_core.h:3458:16
    offset*: uint32
    size*: csize_t

  Specializationmapentry* = structvkspecializationmapentry ## Generated based on /usr/include/vulkan/vulkan_core.h:3462:3
  structvkspecializationinfo* {.pure, inheritable, bycopy.} = object
    mapentrycount*: uint32   ## Generated based on /usr/include/vulkan/vulkan_core.h:3464:16
    pmapentries*: ptr Specializationmapentry
    datasize*: csize_t
    pdata*: pointer

  Specializationinfo* = structvkspecializationinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3469:3
  structvkpipelineshaderstagecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3471:16
    pnext*: pointer
    flags*: Pipelineshaderstagecreateflags
    stage*: Shaderstageflagbits
    module*: Shadermodule
    pname*: cstring
    pspecializationinfo*: ptr Specializationinfo

  Pipelineshaderstagecreateinfo* = structvkpipelineshaderstagecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3479:3
  structvkcomputepipelinecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3481:16
    pnext*: pointer
    flags*: Pipelinecreateflags
    stage*: Pipelineshaderstagecreateinfo
    layout*: Pipelinelayout
    basepipelinehandle*: Pipeline
    basepipelineindex*: int32

  Computepipelinecreateinfo* = structvkcomputepipelinecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3489:3
  structvkvertexinputbindingdescription* {.pure, inheritable, bycopy.} = object
    binding*: uint32         ## Generated based on /usr/include/vulkan/vulkan_core.h:3491:16
    stride*: uint32
    inputrate*: Vertexinputrate

  Vertexinputbindingdescription* = structvkvertexinputbindingdescription ## Generated based on /usr/include/vulkan/vulkan_core.h:3495:3
  structvkvertexinputattributedescription* {.pure, inheritable, bycopy.} = object
    location*: uint32        ## Generated based on /usr/include/vulkan/vulkan_core.h:3497:16
    binding*: uint32
    format*: Format
    offset*: uint32

  Vertexinputattributedescription* = structvkvertexinputattributedescription ## Generated based on /usr/include/vulkan/vulkan_core.h:3502:3
  structvkpipelinevertexinputstatecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3504:16
    pnext*: pointer
    flags*: Pipelinevertexinputstatecreateflags
    vertexbindingdescriptioncount*: uint32
    pvertexbindingdescriptions*: ptr Vertexinputbindingdescription
    vertexattributedescriptioncount*: uint32
    pvertexattributedescriptions*: ptr Vertexinputattributedescription

  Pipelinevertexinputstatecreateinfo* = structvkpipelinevertexinputstatecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3512:3
  structvkpipelineinputassemblystatecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3514:16
    pnext*: pointer
    flags*: Pipelineinputassemblystatecreateflags
    topology*: Primitivetopology
    primitiverestartenable*: Bool32

  Pipelineinputassemblystatecreateinfo* = structvkpipelineinputassemblystatecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3520:3
  structvkpipelinetessellationstatecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3522:16
    pnext*: pointer
    flags*: Pipelinetessellationstatecreateflags
    patchcontrolpoints*: uint32

  Pipelinetessellationstatecreateinfo* = structvkpipelinetessellationstatecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3527:3
  structvkviewport* {.pure, inheritable, bycopy.} = object
    x*: cfloat               ## Generated based on /usr/include/vulkan/vulkan_core.h:3529:16
    y*: cfloat
    width*: cfloat
    height*: cfloat
    mindepth*: cfloat
    maxdepth*: cfloat

  Viewport* = structvkviewport ## Generated based on /usr/include/vulkan/vulkan_core.h:3536:3
  structvkpipelineviewportstatecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3538:16
    pnext*: pointer
    flags*: Pipelineviewportstatecreateflags
    viewportcount*: uint32
    pviewports*: ptr Viewport
    scissorcount*: uint32
    pscissors*: ptr Rect2d

  Pipelineviewportstatecreateinfo* = structvkpipelineviewportstatecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3546:3
  structvkpipelinerasterizationstatecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3548:16
    pnext*: pointer
    flags*: Pipelinerasterizationstatecreateflags
    depthclampenable*: Bool32
    rasterizerdiscardenable*: Bool32
    polygonmode*: Polygonmode
    cullmode*: Cullmodeflags
    frontface*: Frontface
    depthbiasenable*: Bool32
    depthbiasconstantfactor*: cfloat
    depthbiasclamp*: cfloat
    depthbiasslopefactor*: cfloat
    linewidth*: cfloat

  Pipelinerasterizationstatecreateinfo* = structvkpipelinerasterizationstatecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3562:3
  structvkpipelinemultisamplestatecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3564:16
    pnext*: pointer
    flags*: Pipelinemultisamplestatecreateflags
    rasterizationsamples*: Samplecountflagbits
    sampleshadingenable*: Bool32
    minsampleshading*: cfloat
    psamplemask*: ptr Samplemask
    alphatocoverageenable*: Bool32
    alphatooneenable*: Bool32

  Pipelinemultisamplestatecreateinfo* = structvkpipelinemultisamplestatecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3574:3
  structvkstencilopstate* {.pure, inheritable, bycopy.} = object
    failop*: Stencilop       ## Generated based on /usr/include/vulkan/vulkan_core.h:3576:16
    passop*: Stencilop
    depthfailop*: Stencilop
    compareop*: Compareop
    comparemask*: uint32
    writemask*: uint32
    reference*: uint32

  Stencilopstate* = structvkstencilopstate ## Generated based on /usr/include/vulkan/vulkan_core.h:3584:3
  structvkpipelinedepthstencilstatecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3586:16
    pnext*: pointer
    flags*: Pipelinedepthstencilstatecreateflags
    depthtestenable*: Bool32
    depthwriteenable*: Bool32
    depthcompareop*: Compareop
    depthboundstestenable*: Bool32
    stenciltestenable*: Bool32
    front*: Stencilopstate
    back*: Stencilopstate
    mindepthbounds*: cfloat
    maxdepthbounds*: cfloat

  Pipelinedepthstencilstatecreateinfo* = structvkpipelinedepthstencilstatecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3599:3
  structvkpipelinecolorblendattachmentstate* {.pure, inheritable, bycopy.} = object
    blendenable*: Bool32     ## Generated based on /usr/include/vulkan/vulkan_core.h:3601:16
    srccolorblendfactor*: Blendfactor
    dstcolorblendfactor*: Blendfactor
    colorblendop*: Blendop
    srcalphablendfactor*: Blendfactor
    dstalphablendfactor*: Blendfactor
    alphablendop*: Blendop
    colorwritemask*: Colorcomponentflags

  Pipelinecolorblendattachmentstate* = structvkpipelinecolorblendattachmentstate ## Generated based on /usr/include/vulkan/vulkan_core.h:3610:3
  structvkpipelinecolorblendstatecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3612:16
    pnext*: pointer
    flags*: Pipelinecolorblendstatecreateflags
    logicopenable*: Bool32
    logicop*: Logicop
    attachmentcount*: uint32
    pattachments*: ptr Pipelinecolorblendattachmentstate
    blendconstants*: array[4'i64, cfloat]

  Pipelinecolorblendstatecreateinfo* = structvkpipelinecolorblendstatecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3621:3
  structvkpipelinedynamicstatecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3623:16
    pnext*: pointer
    flags*: Pipelinedynamicstatecreateflags
    dynamicstatecount*: uint32
    pdynamicstates*: ptr Dynamicstate

  Pipelinedynamicstatecreateinfo* = structvkpipelinedynamicstatecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3629:3
  structvkgraphicspipelinecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3631:16
    pnext*: pointer
    flags*: Pipelinecreateflags
    stagecount*: uint32
    pstages*: ptr Pipelineshaderstagecreateinfo
    pvertexinputstate*: ptr Pipelinevertexinputstatecreateinfo
    pinputassemblystate*: ptr Pipelineinputassemblystatecreateinfo
    ptessellationstate*: ptr Pipelinetessellationstatecreateinfo
    pviewportstate*: ptr Pipelineviewportstatecreateinfo
    prasterizationstate*: ptr Pipelinerasterizationstatecreateinfo
    pmultisamplestate*: ptr Pipelinemultisamplestatecreateinfo
    pdepthstencilstate*: ptr Pipelinedepthstencilstatecreateinfo
    pcolorblendstate*: ptr Pipelinecolorblendstatecreateinfo
    pdynamicstate*: ptr Pipelinedynamicstatecreateinfo
    layout*: Pipelinelayout
    renderpass*: Renderpass
    subpass*: uint32
    basepipelinehandle*: Pipeline
    basepipelineindex*: int32

  Graphicspipelinecreateinfo* = structvkgraphicspipelinecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3651:3
  structvkpushconstantrange* {.pure, inheritable, bycopy.} = object
    stageflags*: Shaderstageflags ## Generated based on /usr/include/vulkan/vulkan_core.h:3653:16
    offset*: uint32
    size*: uint32

  Pushconstantrange* = structvkpushconstantrange ## Generated based on /usr/include/vulkan/vulkan_core.h:3657:3
  structvkpipelinelayoutcreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3659:16
    pnext*: pointer
    flags*: Pipelinelayoutcreateflags
    setlayoutcount*: uint32
    psetlayouts*: ptr Descriptorsetlayout
    pushconstantrangecount*: uint32
    ppushconstantranges*: ptr Pushconstantrange

  Pipelinelayoutcreateinfo* = structvkpipelinelayoutcreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3667:3
  structvksamplercreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3669:16
    pnext*: pointer
    flags*: Samplercreateflags
    magfilter*: Filter
    minfilter*: Filter
    mipmapmode*: Samplermipmapmode
    addressmodeu*: Sampleraddressmode
    addressmodev*: Sampleraddressmode
    addressmodew*: Sampleraddressmode
    miplodbias*: cfloat
    anisotropyenable*: Bool32
    maxanisotropy*: cfloat
    compareenable*: Bool32
    compareop*: Compareop
    minlod*: cfloat
    maxlod*: cfloat
    bordercolor*: Bordercolor
    unnormalizedcoordinates*: Bool32

  Samplercreateinfo* = structvksamplercreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3688:3
  structvkcopydescriptorset* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3690:16
    pnext*: pointer
    srcset*: Descriptorset
    srcbinding*: uint32
    srcarrayelement*: uint32
    dstset*: Descriptorset
    dstbinding*: uint32
    dstarrayelement*: uint32
    descriptorcount*: uint32

  Copydescriptorset* = structvkcopydescriptorset ## Generated based on /usr/include/vulkan/vulkan_core.h:3700:3
  structvkdescriptorbufferinfo* {.pure, inheritable, bycopy.} = object
    buffer*: Buffer          ## Generated based on /usr/include/vulkan/vulkan_core.h:3702:16
    offset*: Devicesize
    range*: Devicesize

  Descriptorbufferinfo* = structvkdescriptorbufferinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3706:3
  structvkdescriptorimageinfo* {.pure, inheritable, bycopy.} = object
    sampler*: Sampler        ## Generated based on /usr/include/vulkan/vulkan_core.h:3708:16
    imageview*: Imageview
    imagelayout*: Imagelayout

  Descriptorimageinfo* = structvkdescriptorimageinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3712:3
  structvkdescriptorpoolsize* {.pure, inheritable, bycopy.} = object
    typefield*: Descriptortype ## Generated based on /usr/include/vulkan/vulkan_core.h:3714:16
    descriptorcount*: uint32

  Descriptorpoolsize* = structvkdescriptorpoolsize ## Generated based on /usr/include/vulkan/vulkan_core.h:3717:3
  structvkdescriptorpoolcreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3719:16
    pnext*: pointer
    flags*: Descriptorpoolcreateflags
    maxsets*: uint32
    poolsizecount*: uint32
    ppoolsizes*: ptr Descriptorpoolsize

  Descriptorpoolcreateinfo* = structvkdescriptorpoolcreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3726:3
  structvkdescriptorsetallocateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3728:16
    pnext*: pointer
    descriptorpool*: Descriptorpool
    descriptorsetcount*: uint32
    psetlayouts*: ptr Descriptorsetlayout

  Descriptorsetallocateinfo* = structvkdescriptorsetallocateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3734:3
  structvkdescriptorsetlayoutbinding* {.pure, inheritable, bycopy.} = object
    binding*: uint32         ## Generated based on /usr/include/vulkan/vulkan_core.h:3736:16
    descriptortype*: Descriptortype
    descriptorcount*: uint32
    stageflags*: Shaderstageflags
    pimmutablesamplers*: ptr Sampler

  Descriptorsetlayoutbinding* = structvkdescriptorsetlayoutbinding ## Generated based on /usr/include/vulkan/vulkan_core.h:3742:3
  structvkdescriptorsetlayoutcreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3744:16
    pnext*: pointer
    flags*: Descriptorsetlayoutcreateflags
    bindingcount*: uint32
    pbindings*: ptr Descriptorsetlayoutbinding

  Descriptorsetlayoutcreateinfo* = structvkdescriptorsetlayoutcreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3750:3
  structvkwritedescriptorset* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3752:16
    pnext*: pointer
    dstset*: Descriptorset
    dstbinding*: uint32
    dstarrayelement*: uint32
    descriptorcount*: uint32
    descriptortype*: Descriptortype
    pimageinfo*: ptr Descriptorimageinfo
    pbufferinfo*: ptr Descriptorbufferinfo
    ptexelbufferview*: ptr Bufferview

  Writedescriptorset* = structvkwritedescriptorset ## Generated based on /usr/include/vulkan/vulkan_core.h:3763:3
  structvkattachmentdescription* {.pure, inheritable, bycopy.} = object
    flags*: Attachmentdescriptionflags ## Generated based on /usr/include/vulkan/vulkan_core.h:3765:16
    format*: Format
    samples*: Samplecountflagbits
    loadop*: Attachmentloadop
    storeop*: Attachmentstoreop
    stencilloadop*: Attachmentloadop
    stencilstoreop*: Attachmentstoreop
    initiallayout*: Imagelayout
    finallayout*: Imagelayout

  Attachmentdescription* = structvkattachmentdescription ## Generated based on /usr/include/vulkan/vulkan_core.h:3775:3
  structvkattachmentreference* {.pure, inheritable, bycopy.} = object
    attachment*: uint32      ## Generated based on /usr/include/vulkan/vulkan_core.h:3777:16
    layout*: Imagelayout

  Attachmentreference* = structvkattachmentreference ## Generated based on /usr/include/vulkan/vulkan_core.h:3780:3
  structvkframebuffercreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3782:16
    pnext*: pointer
    flags*: Framebuffercreateflags
    renderpass*: Renderpass
    attachmentcount*: uint32
    pattachments*: ptr Imageview
    width*: uint32
    height*: uint32
    layers*: uint32

  Framebuffercreateinfo* = structvkframebuffercreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3792:3
  structvksubpassdescription* {.pure, inheritable, bycopy.} = object
    flags*: Subpassdescriptionflags ## Generated based on /usr/include/vulkan/vulkan_core.h:3794:16
    pipelinebindpoint*: Pipelinebindpoint
    inputattachmentcount*: uint32
    pinputattachments*: ptr Attachmentreference
    colorattachmentcount*: uint32
    pcolorattachments*: ptr Attachmentreference
    presolveattachments*: ptr Attachmentreference
    pdepthstencilattachment*: ptr Attachmentreference
    preserveattachmentcount*: uint32
    ppreserveattachments*: ptr uint32

  Subpassdescription* = structvksubpassdescription ## Generated based on /usr/include/vulkan/vulkan_core.h:3805:3
  structvksubpassdependency* {.pure, inheritable, bycopy.} = object
    srcsubpass*: uint32      ## Generated based on /usr/include/vulkan/vulkan_core.h:3807:16
    dstsubpass*: uint32
    srcstagemask*: Pipelinestageflags
    dststagemask*: Pipelinestageflags
    srcaccessmask*: Accessflags
    dstaccessmask*: Accessflags
    dependencyflags*: Dependencyflags

  Subpassdependency* = structvksubpassdependency ## Generated based on /usr/include/vulkan/vulkan_core.h:3815:3
  structvkrenderpasscreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3817:16
    pnext*: pointer
    flags*: Renderpasscreateflags
    attachmentcount*: uint32
    pattachments*: ptr Attachmentdescription
    subpasscount*: uint32
    psubpasses*: ptr Subpassdescription
    dependencycount*: uint32
    pdependencies*: ptr Subpassdependency

  Renderpasscreateinfo* = structvkrenderpasscreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3827:3
  structvkcommandpoolcreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3829:16
    pnext*: pointer
    flags*: Commandpoolcreateflags
    queuefamilyindex*: uint32

  Commandpoolcreateinfo* = structvkcommandpoolcreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3834:3
  structvkcommandbufferallocateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3836:16
    pnext*: pointer
    commandpool*: Commandpool
    level*: Commandbufferlevel
    commandbuffercount*: uint32

  Commandbufferallocateinfo* = structvkcommandbufferallocateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3842:3
  structvkcommandbufferinheritanceinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3844:16
    pnext*: pointer
    renderpass*: Renderpass
    subpass*: uint32
    framebuffer*: Framebuffer
    occlusionqueryenable*: Bool32
    queryflags*: Querycontrolflags
    pipelinestatistics*: Querypipelinestatisticflags

  Commandbufferinheritanceinfo* = structvkcommandbufferinheritanceinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3853:3
  structvkcommandbufferbegininfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3855:16
    pnext*: pointer
    flags*: Commandbufferusageflags
    pinheritanceinfo*: ptr Commandbufferinheritanceinfo

  Commandbufferbegininfo* = structvkcommandbufferbegininfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3860:3
  structvkbuffercopy* {.pure, inheritable, bycopy.} = object
    srcoffset*: Devicesize   ## Generated based on /usr/include/vulkan/vulkan_core.h:3862:16
    dstoffset*: Devicesize
    size*: Devicesize

  Buffercopy* = structvkbuffercopy ## Generated based on /usr/include/vulkan/vulkan_core.h:3866:3
  structvkimagesubresourcelayers* {.pure, inheritable, bycopy.} = object
    aspectmask*: Imageaspectflags ## Generated based on /usr/include/vulkan/vulkan_core.h:3868:16
    miplevel*: uint32
    basearraylayer*: uint32
    layercount*: uint32

  Imagesubresourcelayers* = structvkimagesubresourcelayers ## Generated based on /usr/include/vulkan/vulkan_core.h:3873:3
  structvkbufferimagecopy* {.pure, inheritable, bycopy.} = object
    bufferoffset*: Devicesize ## Generated based on /usr/include/vulkan/vulkan_core.h:3875:16
    bufferrowlength*: uint32
    bufferimageheight*: uint32
    imagesubresource*: Imagesubresourcelayers
    imageoffset*: Offset3d
    imageextent*: Extent3d

  Bufferimagecopy* = structvkbufferimagecopy ## Generated based on /usr/include/vulkan/vulkan_core.h:3882:3
  unionvkclearcolorvalue* {.union, bycopy.} = object
    float32*: array[4'i64, cfloat] ## Generated based on /usr/include/vulkan/vulkan_core.h:3884:15
    int32*: array[4'i64, int32]
    uint32*: array[4'i64, uint32]

  Clearcolorvalue* = unionvkclearcolorvalue ## Generated based on /usr/include/vulkan/vulkan_core.h:3888:3
  structvkcleardepthstencilvalue* {.pure, inheritable, bycopy.} = object
    depth*: cfloat           ## Generated based on /usr/include/vulkan/vulkan_core.h:3890:16
    stencil*: uint32

  Cleardepthstencilvalue* = structvkcleardepthstencilvalue ## Generated based on /usr/include/vulkan/vulkan_core.h:3893:3
  unionvkclearvalue* {.union, bycopy.} = object
    color*: Clearcolorvalue  ## Generated based on /usr/include/vulkan/vulkan_core.h:3895:15
    depthstencil*: Cleardepthstencilvalue

  Clearvalue* = unionvkclearvalue ## Generated based on /usr/include/vulkan/vulkan_core.h:3898:3
  structvkclearattachment* {.pure, inheritable, bycopy.} = object
    aspectmask*: Imageaspectflags ## Generated based on /usr/include/vulkan/vulkan_core.h:3900:16
    colorattachment*: uint32
    clearvalue*: Clearvalue

  Clearattachment* = structvkclearattachment ## Generated based on /usr/include/vulkan/vulkan_core.h:3904:3
  structvkclearrect* {.pure, inheritable, bycopy.} = object
    rect*: Rect2d            ## Generated based on /usr/include/vulkan/vulkan_core.h:3906:16
    basearraylayer*: uint32
    layercount*: uint32

  Clearrect* = structvkclearrect ## Generated based on /usr/include/vulkan/vulkan_core.h:3910:3
  structvkimageblit* {.pure, inheritable, bycopy.} = object
    srcsubresource*: Imagesubresourcelayers ## Generated based on /usr/include/vulkan/vulkan_core.h:3912:16
    srcoffsets*: array[2'i64, Offset3d]
    dstsubresource*: Imagesubresourcelayers
    dstoffsets*: array[2'i64, Offset3d]

  Imageblit* = structvkimageblit ## Generated based on /usr/include/vulkan/vulkan_core.h:3917:3
  structvkimagecopy* {.pure, inheritable, bycopy.} = object
    srcsubresource*: Imagesubresourcelayers ## Generated based on /usr/include/vulkan/vulkan_core.h:3919:16
    srcoffset*: Offset3d
    dstsubresource*: Imagesubresourcelayers
    dstoffset*: Offset3d
    extent*: Extent3d

  Imagecopy* = structvkimagecopy ## Generated based on /usr/include/vulkan/vulkan_core.h:3925:3
  structvkimageresolve* {.pure, inheritable, bycopy.} = object
    srcsubresource*: Imagesubresourcelayers ## Generated based on /usr/include/vulkan/vulkan_core.h:3927:16
    srcoffset*: Offset3d
    dstsubresource*: Imagesubresourcelayers
    dstoffset*: Offset3d
    extent*: Extent3d

  Imageresolve* = structvkimageresolve ## Generated based on /usr/include/vulkan/vulkan_core.h:3933:3
  structvkrenderpassbegininfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:3935:16
    pnext*: pointer
    renderpass*: Renderpass
    framebuffer*: Framebuffer
    renderarea*: Rect2d
    clearvaluecount*: uint32
    pclearvalues*: ptr Clearvalue

  Renderpassbegininfo* = structvkrenderpassbegininfo ## Generated based on /usr/include/vulkan/vulkan_core.h:3943:3
  Pfnvkcreateinstance* = proc (a0: ptr Instancecreateinfo;
                               a1: ptr Allocationcallbacks; a2: ptr Instance): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:3945:30
  Pfnvkdestroyinstance* = proc (a0: Instance; a1: ptr Allocationcallbacks): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:3946:26
  Pfnvkenumeratephysicaldevices* = proc (a0: Instance; a1: ptr uint32;
      a2: ptr Physicaldevice): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3947:30
  Pfnvkgetphysicaldevicefeatures* = proc (a0: Physicaldevice;
      a1: ptr Physicaldevicefeatures): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3948:26
  Pfnvkgetphysicaldeviceformatproperties* = proc (a0: Physicaldevice;
      a1: Format; a2: ptr Formatproperties): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3949:26
  Pfnvkgetphysicaldeviceimageformatproperties* = proc (a0: Physicaldevice;
      a1: Format; a2: Imagetype; a3: Imagetiling; a4: Imageusageflags;
      a5: Imagecreateflags; a6: ptr Imageformatproperties): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3950:30
  Pfnvkgetphysicaldeviceproperties* = proc (a0: Physicaldevice;
      a1: ptr Physicaldeviceproperties): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3951:26
  Pfnvkgetphysicaldevicequeuefamilyproperties* = proc (a0: Physicaldevice;
      a1: ptr uint32; a2: ptr Queuefamilyproperties): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3952:26
  Pfnvkgetphysicaldevicememoryproperties* = proc (a0: Physicaldevice;
      a1: ptr Physicaldevicememoryproperties): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3953:26
  Pfnvkgetinstanceprocaddr* = proc (a0: Instance; a1: cstring): Pfnvkvoidfunction {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:3954:40
  Pfnvkgetdeviceprocaddr* = proc (a0: Device; a1: cstring): Pfnvkvoidfunction {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:3955:40
  Pfnvkcreatedevice* = proc (a0: Physicaldevice; a1: ptr Devicecreateinfo;
                             a2: ptr Allocationcallbacks; a3: ptr Device): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:3956:30
  Pfnvkdestroydevice* = proc (a0: Device; a1: ptr Allocationcallbacks): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:3957:26
  Pfnvkenumerateinstanceextensionproperties* = proc (a0: cstring;
      a1: ptr uint32; a2: ptr Extensionproperties): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3958:30
  Pfnvkenumeratedeviceextensionproperties* = proc (a0: Physicaldevice;
      a1: cstring; a2: ptr uint32; a3: ptr Extensionproperties): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3959:30
  Pfnvkenumerateinstancelayerproperties* = proc (a0: ptr uint32;
      a1: ptr Layerproperties): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3960:30
  Pfnvkenumeratedevicelayerproperties* = proc (a0: Physicaldevice;
      a1: ptr uint32; a2: ptr Layerproperties): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3961:30
  Pfnvkgetdevicequeue* = proc (a0: Device; a1: uint32; a2: uint32; a3: ptr Queue): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:3962:26
  Pfnvkqueuesubmit* = proc (a0: Queue; a1: uint32; a2: ptr Submitinfo; a3: Fence): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:3963:30
  Pfnvkqueuewaitidle* = proc (a0: Queue): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3964:30
  Pfnvkdevicewaitidle* = proc (a0: Device): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3965:30
  Pfnvkallocatememory* = proc (a0: Device; a1: ptr Memoryallocateinfo;
                               a2: ptr Allocationcallbacks; a3: ptr Devicememory): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:3966:30
  Pfnvkfreememory* = proc (a0: Device; a1: Devicememory;
                           a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3967:26
  Pfnvkmapmemory* = proc (a0: Device; a1: Devicememory; a2: Devicesize;
                          a3: Devicesize; a4: Memorymapflags; a5: ptr pointer): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:3968:30
  Pfnvkunmapmemory* = proc (a0: Device; a1: Devicememory): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3969:26
  Pfnvkflushmappedmemoryranges* = proc (a0: Device; a1: uint32;
                                        a2: ptr Mappedmemoryrange): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:3970:30
  Pfnvkinvalidatemappedmemoryranges* = proc (a0: Device; a1: uint32;
      a2: ptr Mappedmemoryrange): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3971:30
  Pfnvkgetdevicememorycommitment* = proc (a0: Device; a1: Devicememory;
      a2: ptr Devicesize): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3972:26
  Pfnvkbindbuffermemory* = proc (a0: Device; a1: Buffer; a2: Devicememory;
                                 a3: Devicesize): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3973:30
  Pfnvkbindimagememory* = proc (a0: Device; a1: Image; a2: Devicememory;
                                a3: Devicesize): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3974:30
  Pfnvkgetbuffermemoryrequirements* = proc (a0: Device; a1: Buffer;
      a2: ptr Memoryrequirements): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3975:26
  Pfnvkgetimagememoryrequirements* = proc (a0: Device; a1: Image;
      a2: ptr Memoryrequirements): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3976:26
  Pfnvkgetimagesparsememoryrequirements* = proc (a0: Device; a1: Image;
      a2: ptr uint32; a3: ptr Sparseimagememoryrequirements): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3977:26
  Pfnvkgetphysicaldevicesparseimageformatproperties* = proc (a0: Physicaldevice;
      a1: Format; a2: Imagetype; a3: Samplecountflagbits; a4: Imageusageflags;
      a5: Imagetiling; a6: ptr uint32; a7: ptr Sparseimageformatproperties): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:3978:26
  Pfnvkqueuebindsparse* = proc (a0: Queue; a1: uint32; a2: ptr Bindsparseinfo;
                                a3: Fence): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3979:30
  Pfnvkcreatefence* = proc (a0: Device; a1: ptr Fencecreateinfo;
                            a2: ptr Allocationcallbacks; a3: ptr Fence): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:3980:30
  Pfnvkdestroyfence* = proc (a0: Device; a1: Fence; a2: ptr Allocationcallbacks): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:3981:26
  Pfnvkresetfences* = proc (a0: Device; a1: uint32; a2: ptr Fence): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:3982:30
  Pfnvkgetfencestatus* = proc (a0: Device; a1: Fence): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3983:30
  Pfnvkwaitforfences* = proc (a0: Device; a1: uint32; a2: ptr Fence; a3: Bool32;
                              a4: uint64): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3984:30
  Pfnvkcreatesemaphore* = proc (a0: Device; a1: ptr Semaphorecreateinfo;
                                a2: ptr Allocationcallbacks; a3: ptr Semaphore): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:3985:30
  Pfnvkdestroysemaphore* = proc (a0: Device; a1: Semaphore;
                                 a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3986:26
  Pfnvkcreateevent* = proc (a0: Device; a1: ptr Eventcreateinfo;
                            a2: ptr Allocationcallbacks; a3: ptr Event): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:3987:30
  Pfnvkdestroyevent* = proc (a0: Device; a1: Event; a2: ptr Allocationcallbacks): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:3988:26
  Pfnvkgeteventstatus* = proc (a0: Device; a1: Event): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3989:30
  Pfnvksetevent* = proc (a0: Device; a1: Event): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3990:30
  Pfnvkresetevent* = proc (a0: Device; a1: Event): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3991:30
  Pfnvkcreatequerypool* = proc (a0: Device; a1: ptr Querypoolcreateinfo;
                                a2: ptr Allocationcallbacks; a3: ptr Querypool): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:3992:30
  Pfnvkdestroyquerypool* = proc (a0: Device; a1: Querypool;
                                 a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3993:26
  Pfnvkgetquerypoolresults* = proc (a0: Device; a1: Querypool; a2: uint32;
                                    a3: uint32; a4: csize_t; a5: pointer;
                                    a6: Devicesize; a7: Queryresultflags): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:3994:30
  Pfnvkcreatebuffer* = proc (a0: Device; a1: ptr Buffercreateinfo;
                             a2: ptr Allocationcallbacks; a3: ptr Buffer): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:3995:30
  Pfnvkdestroybuffer* = proc (a0: Device; a1: Buffer;
                              a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3996:26
  Pfnvkcreatebufferview* = proc (a0: Device; a1: ptr Bufferviewcreateinfo;
                                 a2: ptr Allocationcallbacks; a3: ptr Bufferview): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:3997:30
  Pfnvkdestroybufferview* = proc (a0: Device; a1: Bufferview;
                                  a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:3998:26
  Pfnvkcreateimage* = proc (a0: Device; a1: ptr Imagecreateinfo;
                            a2: ptr Allocationcallbacks; a3: ptr Image): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:3999:30
  Pfnvkdestroyimage* = proc (a0: Device; a1: Image; a2: ptr Allocationcallbacks): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:4000:26
  Pfnvkgetimagesubresourcelayout* = proc (a0: Device; a1: Image;
      a2: ptr Imagesubresource; a3: ptr Subresourcelayout): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4001:26
  Pfnvkcreateimageview* = proc (a0: Device; a1: ptr Imageviewcreateinfo;
                                a2: ptr Allocationcallbacks; a3: ptr Imageview): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:4002:30
  Pfnvkdestroyimageview* = proc (a0: Device; a1: Imageview;
                                 a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4003:26
  Pfnvkcreateshadermodule* = proc (a0: Device; a1: ptr Shadermodulecreateinfo;
                                   a2: ptr Allocationcallbacks;
                                   a3: ptr Shadermodule): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4004:30
  Pfnvkdestroyshadermodule* = proc (a0: Device; a1: Shadermodule;
                                    a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4005:26
  Pfnvkcreatepipelinecache* = proc (a0: Device; a1: ptr Pipelinecachecreateinfo;
                                    a2: ptr Allocationcallbacks;
                                    a3: ptr Pipelinecache): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4006:30
  Pfnvkdestroypipelinecache* = proc (a0: Device; a1: Pipelinecache;
                                     a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4007:26
  Pfnvkgetpipelinecachedata* = proc (a0: Device; a1: Pipelinecache;
                                     a2: ptr csize_t; a3: pointer): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:4008:30
  Pfnvkmergepipelinecaches* = proc (a0: Device; a1: Pipelinecache; a2: uint32;
                                    a3: ptr Pipelinecache): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4009:30
  Pfnvkcreategraphicspipelines* = proc (a0: Device; a1: Pipelinecache;
                                        a2: uint32;
                                        a3: ptr Graphicspipelinecreateinfo;
                                        a4: ptr Allocationcallbacks;
                                        a5: ptr Pipeline): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4010:30
  Pfnvkcreatecomputepipelines* = proc (a0: Device; a1: Pipelinecache;
                                       a2: uint32;
                                       a3: ptr Computepipelinecreateinfo;
                                       a4: ptr Allocationcallbacks;
                                       a5: ptr Pipeline): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4011:30
  Pfnvkdestroypipeline* = proc (a0: Device; a1: Pipeline;
                                a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4012:26
  Pfnvkcreatepipelinelayout* = proc (a0: Device;
                                     a1: ptr Pipelinelayoutcreateinfo;
                                     a2: ptr Allocationcallbacks;
                                     a3: ptr Pipelinelayout): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4013:30
  Pfnvkdestroypipelinelayout* = proc (a0: Device; a1: Pipelinelayout;
                                      a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4014:26
  Pfnvkcreatesampler* = proc (a0: Device; a1: ptr Samplercreateinfo;
                              a2: ptr Allocationcallbacks; a3: ptr Sampler): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:4015:30
  Pfnvkdestroysampler* = proc (a0: Device; a1: Sampler;
                               a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4016:26
  Pfnvkcreatedescriptorsetlayout* = proc (a0: Device;
      a1: ptr Descriptorsetlayoutcreateinfo; a2: ptr Allocationcallbacks;
      a3: ptr Descriptorsetlayout): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4017:30
  Pfnvkdestroydescriptorsetlayout* = proc (a0: Device; a1: Descriptorsetlayout;
      a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4018:26
  Pfnvkcreatedescriptorpool* = proc (a0: Device;
                                     a1: ptr Descriptorpoolcreateinfo;
                                     a2: ptr Allocationcallbacks;
                                     a3: ptr Descriptorpool): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4019:30
  Pfnvkdestroydescriptorpool* = proc (a0: Device; a1: Descriptorpool;
                                      a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4020:26
  Pfnvkresetdescriptorpool* = proc (a0: Device; a1: Descriptorpool;
                                    a2: Descriptorpoolresetflags): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:4021:30
  Pfnvkallocatedescriptorsets* = proc (a0: Device;
                                       a1: ptr Descriptorsetallocateinfo;
                                       a2: ptr Descriptorset): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4022:30
  Pfnvkfreedescriptorsets* = proc (a0: Device; a1: Descriptorpool; a2: uint32;
                                   a3: ptr Descriptorset): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4023:30
  Pfnvkupdatedescriptorsets* = proc (a0: Device; a1: uint32;
                                     a2: ptr Writedescriptorset; a3: uint32;
                                     a4: ptr Copydescriptorset): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4024:26
  Pfnvkcreateframebuffer* = proc (a0: Device; a1: ptr Framebuffercreateinfo;
                                  a2: ptr Allocationcallbacks;
                                  a3: ptr Framebuffer): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4025:30
  Pfnvkdestroyframebuffer* = proc (a0: Device; a1: Framebuffer;
                                   a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4026:26
  Pfnvkcreaterenderpass* = proc (a0: Device; a1: ptr Renderpasscreateinfo;
                                 a2: ptr Allocationcallbacks; a3: ptr Renderpass): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:4027:30
  Pfnvkdestroyrenderpass* = proc (a0: Device; a1: Renderpass;
                                  a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4028:26
  Pfnvkgetrenderareagranularity* = proc (a0: Device; a1: Renderpass;
      a2: ptr Extent2d): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4029:26
  Pfnvkcreatecommandpool* = proc (a0: Device; a1: ptr Commandpoolcreateinfo;
                                  a2: ptr Allocationcallbacks;
                                  a3: ptr Commandpool): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4030:30
  Pfnvkdestroycommandpool* = proc (a0: Device; a1: Commandpool;
                                   a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4031:26
  Pfnvkresetcommandpool* = proc (a0: Device; a1: Commandpool;
                                 a2: Commandpoolresetflags): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4032:30
  Pfnvkallocatecommandbuffers* = proc (a0: Device;
                                       a1: ptr Commandbufferallocateinfo;
                                       a2: ptr Commandbuffer): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4033:30
  Pfnvkfreecommandbuffers* = proc (a0: Device; a1: Commandpool; a2: uint32;
                                   a3: ptr Commandbuffer): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4034:26
  Pfnvkbegincommandbuffer* = proc (a0: Commandbuffer;
                                   a1: ptr Commandbufferbegininfo): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:4035:30
  Pfnvkendcommandbuffer* = proc (a0: Commandbuffer): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4036:30
  Pfnvkresetcommandbuffer* = proc (a0: Commandbuffer;
                                   a1: Commandbufferresetflags): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4037:30
  Pfnvkcmdbindpipeline* = proc (a0: Commandbuffer; a1: Pipelinebindpoint;
                                a2: Pipeline): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4038:26
  Pfnvkcmdsetviewport* = proc (a0: Commandbuffer; a1: uint32; a2: uint32;
                               a3: ptr Viewport): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4039:26
  Pfnvkcmdsetscissor* = proc (a0: Commandbuffer; a1: uint32; a2: uint32;
                              a3: ptr Rect2d): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4040:26
  Pfnvkcmdsetlinewidth* = proc (a0: Commandbuffer; a1: cfloat): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4041:26
  Pfnvkcmdsetdepthbias* = proc (a0: Commandbuffer; a1: cfloat; a2: cfloat;
                                a3: cfloat): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4042:26
  Pfnvkcmdsetblendconstants* = proc (a0: Commandbuffer; a1: array[4'i64, cfloat]): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:4043:26
  Pfnvkcmdsetdepthbounds* = proc (a0: Commandbuffer; a1: cfloat; a2: cfloat): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:4044:26
  Pfnvkcmdsetstencilcomparemask* = proc (a0: Commandbuffer;
      a1: Stencilfaceflags; a2: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4045:26
  Pfnvkcmdsetstencilwritemask* = proc (a0: Commandbuffer; a1: Stencilfaceflags;
                                       a2: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4046:26
  Pfnvkcmdsetstencilreference* = proc (a0: Commandbuffer; a1: Stencilfaceflags;
                                       a2: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4047:26
  Pfnvkcmdbinddescriptorsets* = proc (a0: Commandbuffer; a1: Pipelinebindpoint;
                                      a2: Pipelinelayout; a3: uint32;
                                      a4: uint32; a5: ptr Descriptorset;
                                      a6: uint32; a7: ptr uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4048:26
  Pfnvkcmdbindindexbuffer* = proc (a0: Commandbuffer; a1: Buffer;
                                   a2: Devicesize; a3: Indextype): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4049:26
  Pfnvkcmdbindvertexbuffers* = proc (a0: Commandbuffer; a1: uint32; a2: uint32;
                                     a3: ptr Buffer; a4: ptr Devicesize): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:4050:26
  Pfnvkcmddraw* = proc (a0: Commandbuffer; a1: uint32; a2: uint32; a3: uint32;
                        a4: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4051:26
  Pfnvkcmddrawindexed* = proc (a0: Commandbuffer; a1: uint32; a2: uint32;
                               a3: uint32; a4: int32; a5: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4052:26
  Pfnvkcmddrawindirect* = proc (a0: Commandbuffer; a1: Buffer; a2: Devicesize;
                                a3: uint32; a4: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4053:26
  Pfnvkcmddrawindexedindirect* = proc (a0: Commandbuffer; a1: Buffer;
                                       a2: Devicesize; a3: uint32; a4: uint32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:4054:26
  Pfnvkcmddispatch* = proc (a0: Commandbuffer; a1: uint32; a2: uint32;
                            a3: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4055:26
  Pfnvkcmddispatchindirect* = proc (a0: Commandbuffer; a1: Buffer;
                                    a2: Devicesize): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4056:26
  Pfnvkcmdcopybuffer* = proc (a0: Commandbuffer; a1: Buffer; a2: Buffer;
                              a3: uint32; a4: ptr Buffercopy): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4057:26
  Pfnvkcmdcopyimage* = proc (a0: Commandbuffer; a1: Image; a2: Imagelayout;
                             a3: Image; a4: Imagelayout; a5: uint32;
                             a6: ptr Imagecopy): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4058:26
  Pfnvkcmdblitimage* = proc (a0: Commandbuffer; a1: Image; a2: Imagelayout;
                             a3: Image; a4: Imagelayout; a5: uint32;
                             a6: ptr Imageblit; a7: Filter): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4059:26
  Pfnvkcmdcopybuffertoimage* = proc (a0: Commandbuffer; a1: Buffer; a2: Image;
                                     a3: Imagelayout; a4: uint32;
                                     a5: ptr Bufferimagecopy): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4060:26
  Pfnvkcmdcopyimagetobuffer* = proc (a0: Commandbuffer; a1: Image;
                                     a2: Imagelayout; a3: Buffer; a4: uint32;
                                     a5: ptr Bufferimagecopy): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4061:26
  Pfnvkcmdupdatebuffer* = proc (a0: Commandbuffer; a1: Buffer; a2: Devicesize;
                                a3: Devicesize; a4: pointer): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4062:26
  Pfnvkcmdfillbuffer* = proc (a0: Commandbuffer; a1: Buffer; a2: Devicesize;
                              a3: Devicesize; a4: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4063:26
  Pfnvkcmdclearcolorimage* = proc (a0: Commandbuffer; a1: Image;
                                   a2: Imagelayout; a3: ptr Clearcolorvalue;
                                   a4: uint32; a5: ptr Imagesubresourcerange): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:4064:26
  Pfnvkcmdcleardepthstencilimage* = proc (a0: Commandbuffer; a1: Image;
      a2: Imagelayout; a3: ptr Cleardepthstencilvalue; a4: uint32;
      a5: ptr Imagesubresourcerange): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4065:26
  Pfnvkcmdclearattachments* = proc (a0: Commandbuffer; a1: uint32;
                                    a2: ptr Clearattachment; a3: uint32;
                                    a4: ptr Clearrect): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4066:26
  Pfnvkcmdresolveimage* = proc (a0: Commandbuffer; a1: Image; a2: Imagelayout;
                                a3: Image; a4: Imagelayout; a5: uint32;
                                a6: ptr Imageresolve): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4067:26
  Pfnvkcmdsetevent* = proc (a0: Commandbuffer; a1: Event; a2: Pipelinestageflags): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:4068:26
  Pfnvkcmdresetevent* = proc (a0: Commandbuffer; a1: Event;
                              a2: Pipelinestageflags): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4069:26
  Pfnvkcmdwaitevents* = proc (a0: Commandbuffer; a1: uint32; a2: ptr Event;
                              a3: Pipelinestageflags; a4: Pipelinestageflags;
                              a5: uint32; a6: ptr Memorybarrier; a7: uint32;
                              a8: ptr Buffermemorybarrier; a9: uint32;
                              a10: ptr Imagememorybarrier): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4070:26
  Pfnvkcmdpipelinebarrier* = proc (a0: Commandbuffer; a1: Pipelinestageflags;
                                   a2: Pipelinestageflags; a3: Dependencyflags;
                                   a4: uint32; a5: ptr Memorybarrier;
                                   a6: uint32; a7: ptr Buffermemorybarrier;
                                   a8: uint32; a9: ptr Imagememorybarrier): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:4071:26
  Pfnvkcmdbeginquery* = proc (a0: Commandbuffer; a1: Querypool; a2: uint32;
                              a3: Querycontrolflags): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4072:26
  Pfnvkcmdendquery* = proc (a0: Commandbuffer; a1: Querypool; a2: uint32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:4073:26
  Pfnvkcmdresetquerypool* = proc (a0: Commandbuffer; a1: Querypool; a2: uint32;
                                  a3: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4074:26
  Pfnvkcmdwritetimestamp* = proc (a0: Commandbuffer; a1: Pipelinestageflagbits;
                                  a2: Querypool; a3: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4075:26
  Pfnvkcmdcopyquerypoolresults* = proc (a0: Commandbuffer; a1: Querypool;
                                        a2: uint32; a3: uint32; a4: Buffer;
                                        a5: Devicesize; a6: Devicesize;
                                        a7: Queryresultflags): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4076:26
  Pfnvkcmdpushconstants* = proc (a0: Commandbuffer; a1: Pipelinelayout;
                                 a2: Shaderstageflags; a3: uint32; a4: uint32;
                                 a5: pointer): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4077:26
  Pfnvkcmdbeginrenderpass* = proc (a0: Commandbuffer;
                                   a1: ptr Renderpassbegininfo;
                                   a2: Subpasscontents): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4078:26
  Pfnvkcmdnextsubpass* = proc (a0: Commandbuffer; a1: Subpasscontents): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:4079:26
  Pfnvkcmdendrenderpass* = proc (a0: Commandbuffer): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4080:26
  Pfnvkcmdexecutecommands* = proc (a0: Commandbuffer; a1: uint32;
                                   a2: ptr Commandbuffer): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:4081:26
  Samplerycbcrconversion* = ptr structvksamplerycbcrconversiont ## Generated based on /usr/include/vulkan/vulkan_core.h:4888:1
  Descriptorupdatetemplate* = ptr structvkdescriptorupdatetemplatet ## Generated based on /usr/include/vulkan/vulkan_core.h:4889:1
  Pointclippingbehavior* = enumvkpointclippingbehavior ## Generated based on /usr/include/vulkan/vulkan_core.h:4900:3
  Tessellationdomainorigin* = enumvktessellationdomainorigin ## Generated based on /usr/include/vulkan/vulkan_core.h:4908:3
  Samplerycbcrmodelconversion* = enumvksamplerycbcrmodelconversion ## Generated based on /usr/include/vulkan/vulkan_core.h:4922:3
  Samplerycbcrrange* = enumvksamplerycbcrrange ## Generated based on /usr/include/vulkan/vulkan_core.h:4930:3
  Chromalocation* = enumvkchromalocation ## Generated based on /usr/include/vulkan/vulkan_core.h:4938:3
  Descriptorupdatetemplatetype* = enumvkdescriptorupdatetemplatetype ## Generated based on /usr/include/vulkan/vulkan_core.h:4945:3
  Subgroupfeatureflagbits* = enumvksubgroupfeatureflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:4960:3
  Subgroupfeatureflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:4961:17
  Peermemoryfeatureflagbits* = enumvkpeermemoryfeatureflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:4973:3
  Peermemoryfeatureflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:4974:17
  Memoryallocateflagbits* = enumvkmemoryallocateflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:4984:3
  Memoryallocateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:4985:17
  Commandpooltrimflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:4986:17
  Descriptorupdatetemplatecreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:4987:17
  Externalmemoryhandletypeflagbits* = enumvkexternalmemoryhandletypeflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:5012:3
  Externalmemoryhandletypeflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:5013:17
  Externalmemoryfeatureflagbits* = enumvkexternalmemoryfeatureflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:5023:3
  Externalmemoryfeatureflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:5024:17
  Externalfencehandletypeflagbits* = enumvkexternalfencehandletypeflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:5036:3
  Externalfencehandletypeflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:5037:17
  Externalfencefeatureflagbits* = enumvkexternalfencefeatureflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:5045:3
  Externalfencefeatureflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:5046:17
  Fenceimportflagbits* = enumvkfenceimportflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:5052:3
  Fenceimportflags* = Flags  ## Generated based on /usr/include/vulkan/vulkan_core.h:5053:17
  Semaphoreimportflagbits* = enumvksemaphoreimportflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:5059:3
  Semaphoreimportflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:5060:17
  Externalsemaphorehandletypeflagbits* = enumvkexternalsemaphorehandletypeflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:5076:3
  Externalsemaphorehandletypeflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:5077:17
  Externalsemaphorefeatureflagbits* = enumvkexternalsemaphorefeatureflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:5085:3
  Externalsemaphorefeatureflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:5086:17
  structvkphysicaldevicesubgroupproperties* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5087:16
    pnext*: pointer
    subgroupsize*: uint32
    supportedstages*: Shaderstageflags
    supportedoperations*: Subgroupfeatureflags
    quadoperationsinallstages*: Bool32

  Physicaldevicesubgroupproperties* = structvkphysicaldevicesubgroupproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:5094:3
  structvkbindbuffermemoryinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5096:16
    pnext*: pointer
    buffer*: Buffer
    memory*: Devicememory
    memoryoffset*: Devicesize

  Bindbuffermemoryinfo* = structvkbindbuffermemoryinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5102:3
  structvkbindimagememoryinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5104:16
    pnext*: pointer
    image*: Image
    memory*: Devicememory
    memoryoffset*: Devicesize

  Bindimagememoryinfo* = structvkbindimagememoryinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5110:3
  structvkphysicaldevice16bitstoragefeatures* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5112:16
    pnext*: pointer
    storagebuffer16bitaccess*: Bool32
    uniformandstoragebuffer16bitaccess*: Bool32
    storagepushconstant16*: Bool32
    storageinputoutput16*: Bool32

  Physicaldevice16bitstoragefeatures* = structvkphysicaldevice16bitstoragefeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:5119:3
  structvkmemorydedicatedrequirements* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5121:16
    pnext*: pointer
    prefersdedicatedallocation*: Bool32
    requiresdedicatedallocation*: Bool32

  Memorydedicatedrequirements* = structvkmemorydedicatedrequirements ## Generated based on /usr/include/vulkan/vulkan_core.h:5126:3
  structvkmemorydedicatedallocateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5128:16
    pnext*: pointer
    image*: Image
    buffer*: Buffer

  Memorydedicatedallocateinfo* = structvkmemorydedicatedallocateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5133:3
  structvkmemoryallocateflagsinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5135:16
    pnext*: pointer
    flags*: Memoryallocateflags
    devicemask*: uint32

  Memoryallocateflagsinfo* = structvkmemoryallocateflagsinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5140:3
  structvkdevicegrouprenderpassbegininfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5142:16
    pnext*: pointer
    devicemask*: uint32
    devicerenderareacount*: uint32
    pdevicerenderareas*: ptr Rect2d

  Devicegrouprenderpassbegininfo* = structvkdevicegrouprenderpassbegininfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5148:3
  structvkdevicegroupcommandbufferbegininfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5150:16
    pnext*: pointer
    devicemask*: uint32

  Devicegroupcommandbufferbegininfo* = structvkdevicegroupcommandbufferbegininfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5154:3
  structvkdevicegroupsubmitinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5156:16
    pnext*: pointer
    waitsemaphorecount*: uint32
    pwaitsemaphoredeviceindices*: ptr uint32
    commandbuffercount*: uint32
    pcommandbufferdevicemasks*: ptr uint32
    signalsemaphorecount*: uint32
    psignalsemaphoredeviceindices*: ptr uint32

  Devicegroupsubmitinfo* = structvkdevicegroupsubmitinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5165:3
  structvkdevicegroupbindsparseinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5167:16
    pnext*: pointer
    resourcedeviceindex*: uint32
    memorydeviceindex*: uint32

  Devicegroupbindsparseinfo* = structvkdevicegroupbindsparseinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5172:3
  structvkbindbuffermemorydevicegroupinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5174:16
    pnext*: pointer
    deviceindexcount*: uint32
    pdeviceindices*: ptr uint32

  Bindbuffermemorydevicegroupinfo* = structvkbindbuffermemorydevicegroupinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5179:3
  structvkbindimagememorydevicegroupinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5181:16
    pnext*: pointer
    deviceindexcount*: uint32
    pdeviceindices*: ptr uint32
    splitinstancebindregioncount*: uint32
    psplitinstancebindregions*: ptr Rect2d

  Bindimagememorydevicegroupinfo* = structvkbindimagememorydevicegroupinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5188:3
  structvkphysicaldevicegroupproperties* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5190:16
    pnext*: pointer
    physicaldevicecount*: uint32
    physicaldevices*: array[32'i64, Physicaldevice]
    subsetallocation*: Bool32

  Physicaldevicegroupproperties* = structvkphysicaldevicegroupproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:5196:3
  structvkdevicegroupdevicecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5198:16
    pnext*: pointer
    physicaldevicecount*: uint32
    pphysicaldevices*: ptr Physicaldevice

  Devicegroupdevicecreateinfo* = structvkdevicegroupdevicecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5203:3
  structvkbuffermemoryrequirementsinfo2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5205:16
    pnext*: pointer
    buffer*: Buffer

  Buffermemoryrequirementsinfo2* = structvkbuffermemoryrequirementsinfo2 ## Generated based on /usr/include/vulkan/vulkan_core.h:5209:3
  structvkimagememoryrequirementsinfo2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5211:16
    pnext*: pointer
    image*: Image

  Imagememoryrequirementsinfo2* = structvkimagememoryrequirementsinfo2 ## Generated based on /usr/include/vulkan/vulkan_core.h:5215:3
  structvkimagesparsememoryrequirementsinfo2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5217:16
    pnext*: pointer
    image*: Image

  Imagesparsememoryrequirementsinfo2* = structvkimagesparsememoryrequirementsinfo2 ## Generated based on /usr/include/vulkan/vulkan_core.h:5221:3
  structvkmemoryrequirements2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5223:16
    pnext*: pointer
    memoryrequirements*: Memoryrequirements

  Memoryrequirements2* = structvkmemoryrequirements2 ## Generated based on /usr/include/vulkan/vulkan_core.h:5227:3
  structvksparseimagememoryrequirements2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5229:16
    pnext*: pointer
    memoryrequirements*: Sparseimagememoryrequirements

  Sparseimagememoryrequirements2* = structvksparseimagememoryrequirements2 ## Generated based on /usr/include/vulkan/vulkan_core.h:5233:3
  structvkphysicaldevicefeatures2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5235:16
    pnext*: pointer
    features*: Physicaldevicefeatures

  Physicaldevicefeatures2* = structvkphysicaldevicefeatures2 ## Generated based on /usr/include/vulkan/vulkan_core.h:5239:3
  structvkphysicaldeviceproperties2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5241:16
    pnext*: pointer
    properties*: Physicaldeviceproperties

  Physicaldeviceproperties2* = structvkphysicaldeviceproperties2 ## Generated based on /usr/include/vulkan/vulkan_core.h:5245:3
  structvkformatproperties2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5247:16
    pnext*: pointer
    formatproperties*: Formatproperties

  Formatproperties2* = structvkformatproperties2 ## Generated based on /usr/include/vulkan/vulkan_core.h:5251:3
  structvkimageformatproperties2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5253:16
    pnext*: pointer
    imageformatproperties*: Imageformatproperties

  Imageformatproperties2* = structvkimageformatproperties2 ## Generated based on /usr/include/vulkan/vulkan_core.h:5257:3
  structvkphysicaldeviceimageformatinfo2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5259:16
    pnext*: pointer
    format*: Format
    typefield*: Imagetype
    tiling*: Imagetiling
    usage*: Imageusageflags
    flags*: Imagecreateflags

  Physicaldeviceimageformatinfo2* = structvkphysicaldeviceimageformatinfo2 ## Generated based on /usr/include/vulkan/vulkan_core.h:5267:3
  structvkqueuefamilyproperties2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5269:16
    pnext*: pointer
    queuefamilyproperties*: Queuefamilyproperties

  Queuefamilyproperties2* = structvkqueuefamilyproperties2 ## Generated based on /usr/include/vulkan/vulkan_core.h:5273:3
  structvkphysicaldevicememoryproperties2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5275:16
    pnext*: pointer
    memoryproperties*: Physicaldevicememoryproperties

  Physicaldevicememoryproperties2* = structvkphysicaldevicememoryproperties2 ## Generated based on /usr/include/vulkan/vulkan_core.h:5279:3
  structvksparseimageformatproperties2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5281:16
    pnext*: pointer
    properties*: Sparseimageformatproperties

  Sparseimageformatproperties2* = structvksparseimageformatproperties2 ## Generated based on /usr/include/vulkan/vulkan_core.h:5285:3
  structvkphysicaldevicesparseimageformatinfo2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5287:16
    pnext*: pointer
    format*: Format
    typefield*: Imagetype
    samples*: Samplecountflagbits
    usage*: Imageusageflags
    tiling*: Imagetiling

  Physicaldevicesparseimageformatinfo2* = structvkphysicaldevicesparseimageformatinfo2 ## Generated based on /usr/include/vulkan/vulkan_core.h:5295:3
  structvkphysicaldevicepointclippingproperties* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5297:16
    pnext*: pointer
    pointclippingbehavior*: Pointclippingbehavior

  Physicaldevicepointclippingproperties* = structvkphysicaldevicepointclippingproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:5301:3
  structvkinputattachmentaspectreference* {.pure, inheritable, bycopy.} = object
    subpass*: uint32         ## Generated based on /usr/include/vulkan/vulkan_core.h:5303:16
    inputattachmentindex*: uint32
    aspectmask*: Imageaspectflags

  Inputattachmentaspectreference* = structvkinputattachmentaspectreference ## Generated based on /usr/include/vulkan/vulkan_core.h:5307:3
  structvkrenderpassinputattachmentaspectcreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5309:16
    pnext*: pointer
    aspectreferencecount*: uint32
    paspectreferences*: ptr Inputattachmentaspectreference

  Renderpassinputattachmentaspectcreateinfo* = structvkrenderpassinputattachmentaspectcreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5314:3
  structvkimageviewusagecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5316:16
    pnext*: pointer
    usage*: Imageusageflags

  Imageviewusagecreateinfo* = structvkimageviewusagecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5320:3
  structvkpipelinetessellationdomainoriginstatecreateinfo* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5322:16
    pnext*: pointer
    domainorigin*: Tessellationdomainorigin

  Pipelinetessellationdomainoriginstatecreateinfo* = structvkpipelinetessellationdomainoriginstatecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5326:3
  structvkrenderpassmultiviewcreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5328:16
    pnext*: pointer
    subpasscount*: uint32
    pviewmasks*: ptr uint32
    dependencycount*: uint32
    pviewoffsets*: ptr int32
    correlationmaskcount*: uint32
    pcorrelationmasks*: ptr uint32

  Renderpassmultiviewcreateinfo* = structvkrenderpassmultiviewcreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5337:3
  structvkphysicaldevicemultiviewfeatures* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5339:16
    pnext*: pointer
    multiview*: Bool32
    multiviewgeometryshader*: Bool32
    multiviewtessellationshader*: Bool32

  Physicaldevicemultiviewfeatures* = structvkphysicaldevicemultiviewfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:5345:3
  structvkphysicaldevicemultiviewproperties* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5347:16
    pnext*: pointer
    maxmultiviewviewcount*: uint32
    maxmultiviewinstanceindex*: uint32

  Physicaldevicemultiviewproperties* = structvkphysicaldevicemultiviewproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:5352:3
  structvkphysicaldevicevariablepointersfeatures* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5354:16
    pnext*: pointer
    variablepointersstoragebuffer*: Bool32
    variablepointers*: Bool32

  Physicaldevicevariablepointersfeatures* = structvkphysicaldevicevariablepointersfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:5359:3
  Physicaldevicevariablepointerfeatures* = Physicaldevicevariablepointersfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:5361:50
  structvkphysicaldeviceprotectedmemoryfeatures* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5363:16
    pnext*: pointer
    protectedmemory*: Bool32

  Physicaldeviceprotectedmemoryfeatures* = structvkphysicaldeviceprotectedmemoryfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:5367:3
  structvkphysicaldeviceprotectedmemoryproperties* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5369:16
    pnext*: pointer
    protectednofault*: Bool32

  Physicaldeviceprotectedmemoryproperties* = structvkphysicaldeviceprotectedmemoryproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:5373:3
  structvkdevicequeueinfo2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5375:16
    pnext*: pointer
    flags*: Devicequeuecreateflags
    queuefamilyindex*: uint32
    queueindex*: uint32

  Devicequeueinfo2* = structvkdevicequeueinfo2 ## Generated based on /usr/include/vulkan/vulkan_core.h:5381:3
  structvkprotectedsubmitinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5383:16
    pnext*: pointer
    protectedsubmit*: Bool32

  Protectedsubmitinfo* = structvkprotectedsubmitinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5387:3
  structvksamplerycbcrconversioncreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5389:16
    pnext*: pointer
    format*: Format
    ycbcrmodel*: Samplerycbcrmodelconversion
    ycbcrrange*: Samplerycbcrrange
    components*: Componentmapping
    xchromaoffset*: Chromalocation
    ychromaoffset*: Chromalocation
    chromafilter*: Filter
    forceexplicitreconstruction*: Bool32

  Samplerycbcrconversioncreateinfo* = structvksamplerycbcrconversioncreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5400:3
  structvksamplerycbcrconversioninfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5402:16
    pnext*: pointer
    conversion*: Samplerycbcrconversion

  Samplerycbcrconversioninfo* = structvksamplerycbcrconversioninfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5406:3
  structvkbindimageplanememoryinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5408:16
    pnext*: pointer
    planeaspect*: Imageaspectflagbits

  Bindimageplanememoryinfo* = structvkbindimageplanememoryinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5412:3
  structvkimageplanememoryrequirementsinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5414:16
    pnext*: pointer
    planeaspect*: Imageaspectflagbits

  Imageplanememoryrequirementsinfo* = structvkimageplanememoryrequirementsinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5418:3
  structvkphysicaldevicesamplerycbcrconversionfeatures* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5420:16
    pnext*: pointer
    samplerycbcrconversion*: Bool32

  Physicaldevicesamplerycbcrconversionfeatures* = structvkphysicaldevicesamplerycbcrconversionfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:5424:3
  structvksamplerycbcrconversionimageformatproperties* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5426:16
    pnext*: pointer
    combinedimagesamplerdescriptorcount*: uint32

  Samplerycbcrconversionimageformatproperties* = structvksamplerycbcrconversionimageformatproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:5430:3
  structvkdescriptorupdatetemplateentry* {.pure, inheritable, bycopy.} = object
    dstbinding*: uint32      ## Generated based on /usr/include/vulkan/vulkan_core.h:5432:16
    dstarrayelement*: uint32
    descriptorcount*: uint32
    descriptortype*: Descriptortype
    offset*: csize_t
    stride*: csize_t

  Descriptorupdatetemplateentry* = structvkdescriptorupdatetemplateentry ## Generated based on /usr/include/vulkan/vulkan_core.h:5439:3
  structvkdescriptorupdatetemplatecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5441:16
    pnext*: pointer
    flags*: Descriptorupdatetemplatecreateflags
    descriptorupdateentrycount*: uint32
    pdescriptorupdateentries*: ptr Descriptorupdatetemplateentry
    templatetype*: Descriptorupdatetemplatetype
    descriptorsetlayout*: Descriptorsetlayout
    pipelinebindpoint*: Pipelinebindpoint
    pipelinelayout*: Pipelinelayout
    set*: uint32

  Descriptorupdatetemplatecreateinfo* = structvkdescriptorupdatetemplatecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5452:3
  structvkexternalmemoryproperties* {.pure, inheritable, bycopy.} = object
    externalmemoryfeatures*: Externalmemoryfeatureflags ## Generated based on /usr/include/vulkan/vulkan_core.h:5454:16
    exportfromimportedhandletypes*: Externalmemoryhandletypeflags
    compatiblehandletypes*: Externalmemoryhandletypeflags

  Externalmemoryproperties* = structvkexternalmemoryproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:5458:3
  structvkphysicaldeviceexternalimageformatinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5460:16
    pnext*: pointer
    handletype*: Externalmemoryhandletypeflagbits

  Physicaldeviceexternalimageformatinfo* = structvkphysicaldeviceexternalimageformatinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5464:3
  structvkexternalimageformatproperties* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5466:16
    pnext*: pointer
    externalmemoryproperties*: Externalmemoryproperties

  Externalimageformatproperties* = structvkexternalimageformatproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:5470:3
  structvkphysicaldeviceexternalbufferinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5472:16
    pnext*: pointer
    flags*: Buffercreateflags
    usage*: Bufferusageflags
    handletype*: Externalmemoryhandletypeflagbits

  Physicaldeviceexternalbufferinfo* = structvkphysicaldeviceexternalbufferinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5478:3
  structvkexternalbufferproperties* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5480:16
    pnext*: pointer
    externalmemoryproperties*: Externalmemoryproperties

  Externalbufferproperties* = structvkexternalbufferproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:5484:3
  structvkphysicaldeviceidproperties* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5486:16
    pnext*: pointer
    deviceuuid*: array[16'i64, uint8]
    driveruuid*: array[16'i64, uint8]
    deviceluid*: array[8'i64, uint8]
    devicenodemask*: uint32
    deviceluidvalid*: Bool32

  Physicaldeviceidproperties* = structvkphysicaldeviceidproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:5494:3
  structvkexternalmemoryimagecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5496:16
    pnext*: pointer
    handletypes*: Externalmemoryhandletypeflags

  Externalmemoryimagecreateinfo* = structvkexternalmemoryimagecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5500:3
  structvkexternalmemorybuffercreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5502:16
    pnext*: pointer
    handletypes*: Externalmemoryhandletypeflags

  Externalmemorybuffercreateinfo* = structvkexternalmemorybuffercreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5506:3
  structvkexportmemoryallocateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5508:16
    pnext*: pointer
    handletypes*: Externalmemoryhandletypeflags

  Exportmemoryallocateinfo* = structvkexportmemoryallocateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5512:3
  structvkphysicaldeviceexternalfenceinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5514:16
    pnext*: pointer
    handletype*: Externalfencehandletypeflagbits

  Physicaldeviceexternalfenceinfo* = structvkphysicaldeviceexternalfenceinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5518:3
  structvkexternalfenceproperties* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5520:16
    pnext*: pointer
    exportfromimportedhandletypes*: Externalfencehandletypeflags
    compatiblehandletypes*: Externalfencehandletypeflags
    externalfencefeatures*: Externalfencefeatureflags

  Externalfenceproperties* = structvkexternalfenceproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:5526:3
  structvkexportfencecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5528:16
    pnext*: pointer
    handletypes*: Externalfencehandletypeflags

  Exportfencecreateinfo* = structvkexportfencecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5532:3
  structvkexportsemaphorecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5534:16
    pnext*: pointer
    handletypes*: Externalsemaphorehandletypeflags

  Exportsemaphorecreateinfo* = structvkexportsemaphorecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5538:3
  structvkphysicaldeviceexternalsemaphoreinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5540:16
    pnext*: pointer
    handletype*: Externalsemaphorehandletypeflagbits

  Physicaldeviceexternalsemaphoreinfo* = structvkphysicaldeviceexternalsemaphoreinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:5544:3
  structvkexternalsemaphoreproperties* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5546:16
    pnext*: pointer
    exportfromimportedhandletypes*: Externalsemaphorehandletypeflags
    compatiblehandletypes*: Externalsemaphorehandletypeflags
    externalsemaphorefeatures*: Externalsemaphorefeatureflags

  Externalsemaphoreproperties* = structvkexternalsemaphoreproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:5552:3
  structvkphysicaldevicemaintenance3properties* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5554:16
    pnext*: pointer
    maxpersetdescriptors*: uint32
    maxmemoryallocationsize*: Devicesize

  Physicaldevicemaintenance3properties* = structvkphysicaldevicemaintenance3properties ## Generated based on /usr/include/vulkan/vulkan_core.h:5559:3
  structvkdescriptorsetlayoutsupport* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5561:16
    pnext*: pointer
    supported*: Bool32

  Descriptorsetlayoutsupport* = structvkdescriptorsetlayoutsupport ## Generated based on /usr/include/vulkan/vulkan_core.h:5565:3
  structvkphysicaldeviceshaderdrawparametersfeatures* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5567:16
    pnext*: pointer
    shaderdrawparameters*: Bool32

  Physicaldeviceshaderdrawparametersfeatures* = structvkphysicaldeviceshaderdrawparametersfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:5571:3
  Physicaldeviceshaderdrawparameterfeatures* = Physicaldeviceshaderdrawparametersfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:5573:54
  Pfnvkenumerateinstanceversion* = proc (a0: ptr uint32): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:5575:30
  Pfnvkbindbuffermemory2* = proc (a0: Device; a1: uint32;
                                  a2: ptr Bindbuffermemoryinfo): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:5576:30
  Pfnvkbindimagememory2* = proc (a0: Device; a1: uint32;
                                 a2: ptr Bindimagememoryinfo): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:5577:30
  Pfnvkgetdevicegrouppeermemoryfeatures* = proc (a0: Device; a1: uint32;
      a2: uint32; a3: uint32; a4: ptr Peermemoryfeatureflags): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:5578:26
  Pfnvkcmdsetdevicemask* = proc (a0: Commandbuffer; a1: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:5579:26
  Pfnvkcmddispatchbase* = proc (a0: Commandbuffer; a1: uint32; a2: uint32;
                                a3: uint32; a4: uint32; a5: uint32; a6: uint32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:5580:26
  Pfnvkenumeratephysicaldevicegroups* = proc (a0: Instance; a1: ptr uint32;
      a2: ptr Physicaldevicegroupproperties): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:5581:30
  Pfnvkgetimagememoryrequirements2* = proc (a0: Device;
      a1: ptr Imagememoryrequirementsinfo2; a2: ptr Memoryrequirements2): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:5582:26
  Pfnvkgetbuffermemoryrequirements2* = proc (a0: Device;
      a1: ptr Buffermemoryrequirementsinfo2; a2: ptr Memoryrequirements2): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:5583:26
  Pfnvkgetimagesparsememoryrequirements2* = proc (a0: Device;
      a1: ptr Imagesparsememoryrequirementsinfo2; a2: ptr uint32;
      a3: ptr Sparseimagememoryrequirements2): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:5584:26
  Pfnvkgetphysicaldevicefeatures2* = proc (a0: Physicaldevice;
      a1: ptr Physicaldevicefeatures2): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:5585:26
  Pfnvkgetphysicaldeviceproperties2* = proc (a0: Physicaldevice;
      a1: ptr Physicaldeviceproperties2): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:5586:26
  Pfnvkgetphysicaldeviceformatproperties2* = proc (a0: Physicaldevice;
      a1: Format; a2: ptr Formatproperties2): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:5587:26
  Pfnvkgetphysicaldeviceimageformatproperties2* = proc (a0: Physicaldevice;
      a1: ptr Physicaldeviceimageformatinfo2; a2: ptr Imageformatproperties2): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:5588:30
  Pfnvkgetphysicaldevicequeuefamilyproperties2* = proc (a0: Physicaldevice;
      a1: ptr uint32; a2: ptr Queuefamilyproperties2): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:5589:26
  Pfnvkgetphysicaldevicememoryproperties2* = proc (a0: Physicaldevice;
      a1: ptr Physicaldevicememoryproperties2): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:5590:26
  Pfnvkgetphysicaldevicesparseimageformatproperties2* = proc (
      a0: Physicaldevice; a1: ptr Physicaldevicesparseimageformatinfo2;
      a2: ptr uint32; a3: ptr Sparseimageformatproperties2): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:5591:26
  Pfnvktrimcommandpool* = proc (a0: Device; a1: Commandpool;
                                a2: Commandpooltrimflags): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:5592:26
  Pfnvkgetdevicequeue2* = proc (a0: Device; a1: ptr Devicequeueinfo2;
                                a2: ptr Queue): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:5593:26
  Pfnvkcreatesamplerycbcrconversion* = proc (a0: Device;
      a1: ptr Samplerycbcrconversioncreateinfo; a2: ptr Allocationcallbacks;
      a3: ptr Samplerycbcrconversion): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:5594:30
  Pfnvkdestroysamplerycbcrconversion* = proc (a0: Device;
      a1: Samplerycbcrconversion; a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:5595:26
  Pfnvkcreatedescriptorupdatetemplate* = proc (a0: Device;
      a1: ptr Descriptorupdatetemplatecreateinfo; a2: ptr Allocationcallbacks;
      a3: ptr Descriptorupdatetemplate): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:5596:30
  Pfnvkdestroydescriptorupdatetemplate* = proc (a0: Device;
      a1: Descriptorupdatetemplate; a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:5597:26
  Pfnvkupdatedescriptorsetwithtemplate* = proc (a0: Device; a1: Descriptorset;
      a2: Descriptorupdatetemplate; a3: pointer): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:5598:26
  Pfnvkgetphysicaldeviceexternalbufferproperties* = proc (a0: Physicaldevice;
      a1: ptr Physicaldeviceexternalbufferinfo; a2: ptr Externalbufferproperties): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:5599:26
  Pfnvkgetphysicaldeviceexternalfenceproperties* = proc (a0: Physicaldevice;
      a1: ptr Physicaldeviceexternalfenceinfo; a2: ptr Externalfenceproperties): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:5600:26
  Pfnvkgetphysicaldeviceexternalsemaphoreproperties* = proc (a0: Physicaldevice;
      a1: ptr Physicaldeviceexternalsemaphoreinfo;
      a2: ptr Externalsemaphoreproperties): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:5601:26
  Pfnvkgetdescriptorsetlayoutsupport* = proc (a0: Device;
      a1: ptr Descriptorsetlayoutcreateinfo; a2: ptr Descriptorsetlayoutsupport): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:5602:26
  Driverid* = enumvkdriverid ## Generated based on /usr/include/vulkan/vulkan_core.h:5800:3
  Shaderfloatcontrolsindependence* = enumvkshaderfloatcontrolsindependence ## Generated based on /usr/include/vulkan/vulkan_core.h:5810:3
  Samplerreductionmode* = enumvksamplerreductionmode ## Generated based on /usr/include/vulkan/vulkan_core.h:5821:3
  Semaphoretype* = enumvksemaphoretype ## Generated based on /usr/include/vulkan/vulkan_core.h:5829:3
  Resolvemodeflagbits* = enumvkresolvemodeflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:5844:3
  Resolvemodeflags* = Flags  ## Generated based on /usr/include/vulkan/vulkan_core.h:5845:17
  Descriptorbindingflagbits* = enumvkdescriptorbindingflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:5857:3
  Descriptorbindingflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:5858:17
  Semaphorewaitflagbits* = enumvksemaphorewaitflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:5864:3
  Semaphorewaitflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:5865:17
  structvkphysicaldevicevulkan11features* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5866:16
    pnext*: pointer
    storagebuffer16bitaccess*: Bool32
    uniformandstoragebuffer16bitaccess*: Bool32
    storagepushconstant16*: Bool32
    storageinputoutput16*: Bool32
    multiview*: Bool32
    multiviewgeometryshader*: Bool32
    multiviewtessellationshader*: Bool32
    variablepointersstoragebuffer*: Bool32
    variablepointers*: Bool32
    protectedmemory*: Bool32
    samplerycbcrconversion*: Bool32
    shaderdrawparameters*: Bool32

  Physicaldevicevulkan11features* = structvkphysicaldevicevulkan11features ## Generated based on /usr/include/vulkan/vulkan_core.h:5881:3
  structvkphysicaldevicevulkan11properties* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5883:16
    pnext*: pointer
    deviceuuid*: array[16'i64, uint8]
    driveruuid*: array[16'i64, uint8]
    deviceluid*: array[8'i64, uint8]
    devicenodemask*: uint32
    deviceluidvalid*: Bool32
    subgroupsize*: uint32
    subgroupsupportedstages*: Shaderstageflags
    subgroupsupportedoperations*: Subgroupfeatureflags
    subgroupquadoperationsinallstages*: Bool32
    pointclippingbehavior*: Pointclippingbehavior
    maxmultiviewviewcount*: uint32
    maxmultiviewinstanceindex*: uint32
    protectednofault*: Bool32
    maxpersetdescriptors*: uint32
    maxmemoryallocationsize*: Devicesize

  Physicaldevicevulkan11properties* = structvkphysicaldevicevulkan11properties ## Generated based on /usr/include/vulkan/vulkan_core.h:5901:3
  structvkphysicaldevicevulkan12features* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5903:16
    pnext*: pointer
    samplermirrorclamptoedge*: Bool32
    drawindirectcount*: Bool32
    storagebuffer8bitaccess*: Bool32
    uniformandstoragebuffer8bitaccess*: Bool32
    storagepushconstant8*: Bool32
    shaderbufferint64atomics*: Bool32
    shadersharedint64atomics*: Bool32
    shaderfloat16*: Bool32
    shaderint8*: Bool32
    descriptorindexing*: Bool32
    shaderinputattachmentarraydynamicindexing*: Bool32
    shaderuniformtexelbufferarraydynamicindexing*: Bool32
    shaderstoragetexelbufferarraydynamicindexing*: Bool32
    shaderuniformbufferarraynonuniformindexing*: Bool32
    shadersampledimagearraynonuniformindexing*: Bool32
    shaderstoragebufferarraynonuniformindexing*: Bool32
    shaderstorageimagearraynonuniformindexing*: Bool32
    shaderinputattachmentarraynonuniformindexing*: Bool32
    shaderuniformtexelbufferarraynonuniformindexing*: Bool32
    shaderstoragetexelbufferarraynonuniformindexing*: Bool32
    descriptorbindinguniformbufferupdateafterbind*: Bool32
    descriptorbindingsampledimageupdateafterbind*: Bool32
    descriptorbindingstorageimageupdateafterbind*: Bool32
    descriptorbindingstoragebufferupdateafterbind*: Bool32
    descriptorbindinguniformtexelbufferupdateafterbind*: Bool32
    descriptorbindingstoragetexelbufferupdateafterbind*: Bool32
    descriptorbindingupdateunusedwhilepending*: Bool32
    descriptorbindingpartiallybound*: Bool32
    descriptorbindingvariabledescriptorcount*: Bool32
    runtimedescriptorarray*: Bool32
    samplerfilterminmax*: Bool32
    scalarblocklayout*: Bool32
    imagelessframebuffer*: Bool32
    uniformbufferstandardlayout*: Bool32
    shadersubgroupextendedtypes*: Bool32
    separatedepthstencillayouts*: Bool32
    hostqueryreset*: Bool32
    timelinesemaphore*: Bool32
    bufferdeviceaddress*: Bool32
    bufferdeviceaddresscapturereplay*: Bool32
    bufferdeviceaddressmultidevice*: Bool32
    vulkanmemorymodel*: Bool32
    vulkanmemorymodeldevicescope*: Bool32
    vulkanmemorymodelavailabilityvisibilitychains*: Bool32
    shaderoutputviewportindex*: Bool32
    shaderoutputlayer*: Bool32
    subgroupbroadcastdynamicid*: Bool32

  Physicaldevicevulkan12features* = structvkphysicaldevicevulkan12features ## Generated based on /usr/include/vulkan/vulkan_core.h:5953:3
  structvkconformanceversion* {.pure, inheritable, bycopy.} = object
    major*: uint8            ## Generated based on /usr/include/vulkan/vulkan_core.h:5955:16
    minor*: uint8
    subminor*: uint8
    patch*: uint8

  Conformanceversion* = structvkconformanceversion ## Generated based on /usr/include/vulkan/vulkan_core.h:5960:3
  structvkphysicaldevicevulkan12properties* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:5962:16
    pnext*: pointer
    driverid*: Driverid
    drivername*: array[256'i64, cschar]
    driverinfo*: array[256'i64, cschar]
    conformanceversion*: Conformanceversion
    denormbehaviorindependence*: Shaderfloatcontrolsindependence
    roundingmodeindependence*: Shaderfloatcontrolsindependence
    shadersignedzeroinfnanpreservefloat16*: Bool32
    shadersignedzeroinfnanpreservefloat32*: Bool32
    shadersignedzeroinfnanpreservefloat64*: Bool32
    shaderdenormpreservefloat16*: Bool32
    shaderdenormpreservefloat32*: Bool32
    shaderdenormpreservefloat64*: Bool32
    shaderdenormflushtozerofloat16*: Bool32
    shaderdenormflushtozerofloat32*: Bool32
    shaderdenormflushtozerofloat64*: Bool32
    shaderroundingmodertefloat16*: Bool32
    shaderroundingmodertefloat32*: Bool32
    shaderroundingmodertefloat64*: Bool32
    shaderroundingmodertzfloat16*: Bool32
    shaderroundingmodertzfloat32*: Bool32
    shaderroundingmodertzfloat64*: Bool32
    maxupdateafterbinddescriptorsinallpools*: uint32
    shaderuniformbufferarraynonuniformindexingnative*: Bool32
    shadersampledimagearraynonuniformindexingnative*: Bool32
    shaderstoragebufferarraynonuniformindexingnative*: Bool32
    shaderstorageimagearraynonuniformindexingnative*: Bool32
    shaderinputattachmentarraynonuniformindexingnative*: Bool32
    robustbufferaccessupdateafterbind*: Bool32
    quaddivergentimplicitlod*: Bool32
    maxperstagedescriptorupdateafterbindsamplers*: uint32
    maxperstagedescriptorupdateafterbinduniformbuffers*: uint32
    maxperstagedescriptorupdateafterbindstoragebuffers*: uint32
    maxperstagedescriptorupdateafterbindsampledimages*: uint32
    maxperstagedescriptorupdateafterbindstorageimages*: uint32
    maxperstagedescriptorupdateafterbindinputattachments*: uint32
    maxperstageupdateafterbindresources*: uint32
    maxdescriptorsetupdateafterbindsamplers*: uint32
    maxdescriptorsetupdateafterbinduniformbuffers*: uint32
    maxdescriptorsetupdateafterbinduniformbuffersdynamic*: uint32
    maxdescriptorsetupdateafterbindstoragebuffers*: uint32
    maxdescriptorsetupdateafterbindstoragebuffersdynamic*: uint32
    maxdescriptorsetupdateafterbindsampledimages*: uint32
    maxdescriptorsetupdateafterbindstorageimages*: uint32
    maxdescriptorsetupdateafterbindinputattachments*: uint32
    supporteddepthresolvemodes*: Resolvemodeflags
    supportedstencilresolvemodes*: Resolvemodeflags
    independentresolvenone*: Bool32
    independentresolve*: Bool32
    filterminmaxsinglecomponentformats*: Bool32
    filterminmaximagecomponentmapping*: Bool32
    maxtimelinesemaphorevaluedifference*: uint64
    framebufferintegercolorsamplecounts*: Samplecountflags

  Physicaldevicevulkan12properties* = structvkphysicaldevicevulkan12properties ## Generated based on /usr/include/vulkan/vulkan_core.h:6017:3
  structvkimageformatlistcreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6019:16
    pnext*: pointer
    viewformatcount*: uint32
    pviewformats*: ptr Format

  Imageformatlistcreateinfo* = structvkimageformatlistcreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:6024:3
  structvkattachmentdescription2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6026:16
    pnext*: pointer
    flags*: Attachmentdescriptionflags
    format*: Format
    samples*: Samplecountflagbits
    loadop*: Attachmentloadop
    storeop*: Attachmentstoreop
    stencilloadop*: Attachmentloadop
    stencilstoreop*: Attachmentstoreop
    initiallayout*: Imagelayout
    finallayout*: Imagelayout

  Attachmentdescription2* = structvkattachmentdescription2 ## Generated based on /usr/include/vulkan/vulkan_core.h:6038:3
  structvkattachmentreference2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6040:16
    pnext*: pointer
    attachment*: uint32
    layout*: Imagelayout
    aspectmask*: Imageaspectflags

  Attachmentreference2* = structvkattachmentreference2 ## Generated based on /usr/include/vulkan/vulkan_core.h:6046:3
  structvksubpassdescription2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6048:16
    pnext*: pointer
    flags*: Subpassdescriptionflags
    pipelinebindpoint*: Pipelinebindpoint
    viewmask*: uint32
    inputattachmentcount*: uint32
    pinputattachments*: ptr Attachmentreference2
    colorattachmentcount*: uint32
    pcolorattachments*: ptr Attachmentreference2
    presolveattachments*: ptr Attachmentreference2
    pdepthstencilattachment*: ptr Attachmentreference2
    preserveattachmentcount*: uint32
    ppreserveattachments*: ptr uint32

  Subpassdescription2* = structvksubpassdescription2 ## Generated based on /usr/include/vulkan/vulkan_core.h:6062:3
  structvksubpassdependency2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6064:16
    pnext*: pointer
    srcsubpass*: uint32
    dstsubpass*: uint32
    srcstagemask*: Pipelinestageflags
    dststagemask*: Pipelinestageflags
    srcaccessmask*: Accessflags
    dstaccessmask*: Accessflags
    dependencyflags*: Dependencyflags
    viewoffset*: int32

  Subpassdependency2* = structvksubpassdependency2 ## Generated based on /usr/include/vulkan/vulkan_core.h:6075:3
  structvkrenderpasscreateinfo2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6077:16
    pnext*: pointer
    flags*: Renderpasscreateflags
    attachmentcount*: uint32
    pattachments*: ptr Attachmentdescription2
    subpasscount*: uint32
    psubpasses*: ptr Subpassdescription2
    dependencycount*: uint32
    pdependencies*: ptr Subpassdependency2
    correlatedviewmaskcount*: uint32
    pcorrelatedviewmasks*: ptr uint32

  Renderpasscreateinfo2* = structvkrenderpasscreateinfo2 ## Generated based on /usr/include/vulkan/vulkan_core.h:6089:3
  structvksubpassbegininfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6091:16
    pnext*: pointer
    contents*: Subpasscontents

  Subpassbegininfo* = structvksubpassbegininfo ## Generated based on /usr/include/vulkan/vulkan_core.h:6095:3
  structvksubpassendinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6097:16
    pnext*: pointer

  Subpassendinfo* = structvksubpassendinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:6100:3
  structvkphysicaldevice8bitstoragefeatures* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6102:16
    pnext*: pointer
    storagebuffer8bitaccess*: Bool32
    uniformandstoragebuffer8bitaccess*: Bool32
    storagepushconstant8*: Bool32

  Physicaldevice8bitstoragefeatures* = structvkphysicaldevice8bitstoragefeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:6108:3
  structvkphysicaldevicedriverproperties* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6110:16
    pnext*: pointer
    driverid*: Driverid
    drivername*: array[256'i64, cschar]
    driverinfo*: array[256'i64, cschar]
    conformanceversion*: Conformanceversion

  Physicaldevicedriverproperties* = structvkphysicaldevicedriverproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:6117:3
  structvkphysicaldeviceshaderatomicint64features* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6119:16
    pnext*: pointer
    shaderbufferint64atomics*: Bool32
    shadersharedint64atomics*: Bool32

  Physicaldeviceshaderatomicint64features* = structvkphysicaldeviceshaderatomicint64features ## Generated based on /usr/include/vulkan/vulkan_core.h:6124:3
  structvkphysicaldeviceshaderfloat16int8features* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6126:16
    pnext*: pointer
    shaderfloat16*: Bool32
    shaderint8*: Bool32

  Physicaldeviceshaderfloat16int8features* = structvkphysicaldeviceshaderfloat16int8features ## Generated based on /usr/include/vulkan/vulkan_core.h:6131:3
  structvkphysicaldevicefloatcontrolsproperties* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6133:16
    pnext*: pointer
    denormbehaviorindependence*: Shaderfloatcontrolsindependence
    roundingmodeindependence*: Shaderfloatcontrolsindependence
    shadersignedzeroinfnanpreservefloat16*: Bool32
    shadersignedzeroinfnanpreservefloat32*: Bool32
    shadersignedzeroinfnanpreservefloat64*: Bool32
    shaderdenormpreservefloat16*: Bool32
    shaderdenormpreservefloat32*: Bool32
    shaderdenormpreservefloat64*: Bool32
    shaderdenormflushtozerofloat16*: Bool32
    shaderdenormflushtozerofloat32*: Bool32
    shaderdenormflushtozerofloat64*: Bool32
    shaderroundingmodertefloat16*: Bool32
    shaderroundingmodertefloat32*: Bool32
    shaderroundingmodertefloat64*: Bool32
    shaderroundingmodertzfloat16*: Bool32
    shaderroundingmodertzfloat32*: Bool32
    shaderroundingmodertzfloat64*: Bool32

  Physicaldevicefloatcontrolsproperties* = structvkphysicaldevicefloatcontrolsproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:6153:3
  structvkdescriptorsetlayoutbindingflagscreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6155:16
    pnext*: pointer
    bindingcount*: uint32
    pbindingflags*: ptr Descriptorbindingflags

  Descriptorsetlayoutbindingflagscreateinfo* = structvkdescriptorsetlayoutbindingflagscreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:6160:3
  structvkphysicaldevicedescriptorindexingfeatures* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6162:16
    pnext*: pointer
    shaderinputattachmentarraydynamicindexing*: Bool32
    shaderuniformtexelbufferarraydynamicindexing*: Bool32
    shaderstoragetexelbufferarraydynamicindexing*: Bool32
    shaderuniformbufferarraynonuniformindexing*: Bool32
    shadersampledimagearraynonuniformindexing*: Bool32
    shaderstoragebufferarraynonuniformindexing*: Bool32
    shaderstorageimagearraynonuniformindexing*: Bool32
    shaderinputattachmentarraynonuniformindexing*: Bool32
    shaderuniformtexelbufferarraynonuniformindexing*: Bool32
    shaderstoragetexelbufferarraynonuniformindexing*: Bool32
    descriptorbindinguniformbufferupdateafterbind*: Bool32
    descriptorbindingsampledimageupdateafterbind*: Bool32
    descriptorbindingstorageimageupdateafterbind*: Bool32
    descriptorbindingstoragebufferupdateafterbind*: Bool32
    descriptorbindinguniformtexelbufferupdateafterbind*: Bool32
    descriptorbindingstoragetexelbufferupdateafterbind*: Bool32
    descriptorbindingupdateunusedwhilepending*: Bool32
    descriptorbindingpartiallybound*: Bool32
    descriptorbindingvariabledescriptorcount*: Bool32
    runtimedescriptorarray*: Bool32

  Physicaldevicedescriptorindexingfeatures* = structvkphysicaldevicedescriptorindexingfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:6185:3
  structvkphysicaldevicedescriptorindexingproperties* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6187:16
    pnext*: pointer
    maxupdateafterbinddescriptorsinallpools*: uint32
    shaderuniformbufferarraynonuniformindexingnative*: Bool32
    shadersampledimagearraynonuniformindexingnative*: Bool32
    shaderstoragebufferarraynonuniformindexingnative*: Bool32
    shaderstorageimagearraynonuniformindexingnative*: Bool32
    shaderinputattachmentarraynonuniformindexingnative*: Bool32
    robustbufferaccessupdateafterbind*: Bool32
    quaddivergentimplicitlod*: Bool32
    maxperstagedescriptorupdateafterbindsamplers*: uint32
    maxperstagedescriptorupdateafterbinduniformbuffers*: uint32
    maxperstagedescriptorupdateafterbindstoragebuffers*: uint32
    maxperstagedescriptorupdateafterbindsampledimages*: uint32
    maxperstagedescriptorupdateafterbindstorageimages*: uint32
    maxperstagedescriptorupdateafterbindinputattachments*: uint32
    maxperstageupdateafterbindresources*: uint32
    maxdescriptorsetupdateafterbindsamplers*: uint32
    maxdescriptorsetupdateafterbinduniformbuffers*: uint32
    maxdescriptorsetupdateafterbinduniformbuffersdynamic*: uint32
    maxdescriptorsetupdateafterbindstoragebuffers*: uint32
    maxdescriptorsetupdateafterbindstoragebuffersdynamic*: uint32
    maxdescriptorsetupdateafterbindsampledimages*: uint32
    maxdescriptorsetupdateafterbindstorageimages*: uint32
    maxdescriptorsetupdateafterbindinputattachments*: uint32

  Physicaldevicedescriptorindexingproperties* = structvkphysicaldevicedescriptorindexingproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:6213:3
  structvkdescriptorsetvariabledescriptorcountallocateinfo* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6215:16
    pnext*: pointer
    descriptorsetcount*: uint32
    pdescriptorcounts*: ptr uint32

  Descriptorsetvariabledescriptorcountallocateinfo* = structvkdescriptorsetvariabledescriptorcountallocateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:6220:3
  structvkdescriptorsetvariabledescriptorcountlayoutsupport* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6222:16
    pnext*: pointer
    maxvariabledescriptorcount*: uint32

  Descriptorsetvariabledescriptorcountlayoutsupport* = structvkdescriptorsetvariabledescriptorcountlayoutsupport ## Generated based on /usr/include/vulkan/vulkan_core.h:6226:3
  structvksubpassdescriptiondepthstencilresolve* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6228:16
    pnext*: pointer
    depthresolvemode*: Resolvemodeflagbits
    stencilresolvemode*: Resolvemodeflagbits
    pdepthstencilresolveattachment*: ptr Attachmentreference2

  Subpassdescriptiondepthstencilresolve* = structvksubpassdescriptiondepthstencilresolve ## Generated based on /usr/include/vulkan/vulkan_core.h:6234:3
  structvkphysicaldevicedepthstencilresolveproperties* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6236:16
    pnext*: pointer
    supporteddepthresolvemodes*: Resolvemodeflags
    supportedstencilresolvemodes*: Resolvemodeflags
    independentresolvenone*: Bool32
    independentresolve*: Bool32

  Physicaldevicedepthstencilresolveproperties* = structvkphysicaldevicedepthstencilresolveproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:6243:3
  structvkphysicaldevicescalarblocklayoutfeatures* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6245:16
    pnext*: pointer
    scalarblocklayout*: Bool32

  Physicaldevicescalarblocklayoutfeatures* = structvkphysicaldevicescalarblocklayoutfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:6249:3
  structvkimagestencilusagecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6251:16
    pnext*: pointer
    stencilusage*: Imageusageflags

  Imagestencilusagecreateinfo* = structvkimagestencilusagecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:6255:3
  structvksamplerreductionmodecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6257:16
    pnext*: pointer
    reductionmode*: Samplerreductionmode

  Samplerreductionmodecreateinfo* = structvksamplerreductionmodecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:6261:3
  structvkphysicaldevicesamplerfilterminmaxproperties* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6263:16
    pnext*: pointer
    filterminmaxsinglecomponentformats*: Bool32
    filterminmaximagecomponentmapping*: Bool32

  Physicaldevicesamplerfilterminmaxproperties* = structvkphysicaldevicesamplerfilterminmaxproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:6268:3
  structvkphysicaldevicevulkanmemorymodelfeatures* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6270:16
    pnext*: pointer
    vulkanmemorymodel*: Bool32
    vulkanmemorymodeldevicescope*: Bool32
    vulkanmemorymodelavailabilityvisibilitychains*: Bool32

  Physicaldevicevulkanmemorymodelfeatures* = structvkphysicaldevicevulkanmemorymodelfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:6276:3
  structvkphysicaldeviceimagelessframebufferfeatures* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6278:16
    pnext*: pointer
    imagelessframebuffer*: Bool32

  Physicaldeviceimagelessframebufferfeatures* = structvkphysicaldeviceimagelessframebufferfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:6282:3
  structvkframebufferattachmentimageinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6284:16
    pnext*: pointer
    flags*: Imagecreateflags
    usage*: Imageusageflags
    width*: uint32
    height*: uint32
    layercount*: uint32
    viewformatcount*: uint32
    pviewformats*: ptr Format

  Framebufferattachmentimageinfo* = structvkframebufferattachmentimageinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:6294:3
  structvkframebufferattachmentscreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6296:16
    pnext*: pointer
    attachmentimageinfocount*: uint32
    pattachmentimageinfos*: ptr Framebufferattachmentimageinfo

  Framebufferattachmentscreateinfo* = structvkframebufferattachmentscreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:6301:3
  structvkrenderpassattachmentbegininfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6303:16
    pnext*: pointer
    attachmentcount*: uint32
    pattachments*: ptr Imageview

  Renderpassattachmentbegininfo* = structvkrenderpassattachmentbegininfo ## Generated based on /usr/include/vulkan/vulkan_core.h:6308:3
  structvkphysicaldeviceuniformbufferstandardlayoutfeatures* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6310:16
    pnext*: pointer
    uniformbufferstandardlayout*: Bool32

  Physicaldeviceuniformbufferstandardlayoutfeatures* = structvkphysicaldeviceuniformbufferstandardlayoutfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:6314:3
  structvkphysicaldeviceshadersubgroupextendedtypesfeatures* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6316:16
    pnext*: pointer
    shadersubgroupextendedtypes*: Bool32

  Physicaldeviceshadersubgroupextendedtypesfeatures* = structvkphysicaldeviceshadersubgroupextendedtypesfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:6320:3
  structvkphysicaldeviceseparatedepthstencillayoutsfeatures* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6322:16
    pnext*: pointer
    separatedepthstencillayouts*: Bool32

  Physicaldeviceseparatedepthstencillayoutsfeatures* = structvkphysicaldeviceseparatedepthstencillayoutsfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:6326:3
  structvkattachmentreferencestencillayout* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6328:16
    pnext*: pointer
    stencillayout*: Imagelayout

  Attachmentreferencestencillayout* = structvkattachmentreferencestencillayout ## Generated based on /usr/include/vulkan/vulkan_core.h:6332:3
  structvkattachmentdescriptionstencillayout* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6334:16
    pnext*: pointer
    stencilinitiallayout*: Imagelayout
    stencilfinallayout*: Imagelayout

  Attachmentdescriptionstencillayout* = structvkattachmentdescriptionstencillayout ## Generated based on /usr/include/vulkan/vulkan_core.h:6339:3
  structvkphysicaldevicehostqueryresetfeatures* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6341:16
    pnext*: pointer
    hostqueryreset*: Bool32

  Physicaldevicehostqueryresetfeatures* = structvkphysicaldevicehostqueryresetfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:6345:3
  structvkphysicaldevicetimelinesemaphorefeatures* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6347:16
    pnext*: pointer
    timelinesemaphore*: Bool32

  Physicaldevicetimelinesemaphorefeatures* = structvkphysicaldevicetimelinesemaphorefeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:6351:3
  structvkphysicaldevicetimelinesemaphoreproperties* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6353:16
    pnext*: pointer
    maxtimelinesemaphorevaluedifference*: uint64

  Physicaldevicetimelinesemaphoreproperties* = structvkphysicaldevicetimelinesemaphoreproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:6357:3
  structvksemaphoretypecreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6359:16
    pnext*: pointer
    semaphoretype*: Semaphoretype
    initialvalue*: uint64

  Semaphoretypecreateinfo* = structvksemaphoretypecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:6364:3
  structvktimelinesemaphoresubmitinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6366:16
    pnext*: pointer
    waitsemaphorevaluecount*: uint32
    pwaitsemaphorevalues*: ptr uint64
    signalsemaphorevaluecount*: uint32
    psignalsemaphorevalues*: ptr uint64

  Timelinesemaphoresubmitinfo* = structvktimelinesemaphoresubmitinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:6373:3
  structvksemaphorewaitinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6375:16
    pnext*: pointer
    flags*: Semaphorewaitflags
    semaphorecount*: uint32
    psemaphores*: ptr Semaphore
    pvalues*: ptr uint64

  Semaphorewaitinfo* = structvksemaphorewaitinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:6382:3
  structvksemaphoresignalinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6384:16
    pnext*: pointer
    semaphore*: Semaphore
    value*: uint64

  Semaphoresignalinfo* = structvksemaphoresignalinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:6389:3
  structvkphysicaldevicebufferdeviceaddressfeatures* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6391:16
    pnext*: pointer
    bufferdeviceaddress*: Bool32
    bufferdeviceaddresscapturereplay*: Bool32
    bufferdeviceaddressmultidevice*: Bool32

  Physicaldevicebufferdeviceaddressfeatures* = structvkphysicaldevicebufferdeviceaddressfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:6397:3
  structvkbufferdeviceaddressinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6399:16
    pnext*: pointer
    buffer*: Buffer

  Bufferdeviceaddressinfo* = structvkbufferdeviceaddressinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:6403:3
  structvkbufferopaquecaptureaddresscreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6405:16
    pnext*: pointer
    opaquecaptureaddress*: uint64

  Bufferopaquecaptureaddresscreateinfo* = structvkbufferopaquecaptureaddresscreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:6409:3
  structvkmemoryopaquecaptureaddressallocateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6411:16
    pnext*: pointer
    opaquecaptureaddress*: uint64

  Memoryopaquecaptureaddressallocateinfo* = structvkmemoryopaquecaptureaddressallocateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:6415:3
  structvkdevicememoryopaquecaptureaddressinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6417:16
    pnext*: pointer
    memory*: Devicememory

  Devicememoryopaquecaptureaddressinfo* = structvkdevicememoryopaquecaptureaddressinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:6421:3
  Pfnvkcmddrawindirectcount* = proc (a0: Commandbuffer; a1: Buffer;
                                     a2: Devicesize; a3: Buffer; a4: Devicesize;
                                     a5: uint32; a6: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:6423:26
  Pfnvkcmddrawindexedindirectcount* = proc (a0: Commandbuffer; a1: Buffer;
      a2: Devicesize; a3: Buffer; a4: Devicesize; a5: uint32; a6: uint32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:6424:26
  Pfnvkcreaterenderpass2* = proc (a0: Device; a1: ptr Renderpasscreateinfo2;
                                  a2: ptr Allocationcallbacks;
                                  a3: ptr Renderpass): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:6425:30
  Pfnvkcmdbeginrenderpass2* = proc (a0: Commandbuffer;
                                    a1: ptr Renderpassbegininfo;
                                    a2: ptr Subpassbegininfo): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:6426:26
  Pfnvkcmdnextsubpass2* = proc (a0: Commandbuffer; a1: ptr Subpassbegininfo;
                                a2: ptr Subpassendinfo): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:6427:26
  Pfnvkcmdendrenderpass2* = proc (a0: Commandbuffer; a1: ptr Subpassendinfo): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:6428:26
  Pfnvkresetquerypool* = proc (a0: Device; a1: Querypool; a2: uint32; a3: uint32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:6429:26
  Pfnvkgetsemaphorecountervalue* = proc (a0: Device; a1: Semaphore;
      a2: ptr uint64): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:6430:30
  Pfnvkwaitsemaphores* = proc (a0: Device; a1: ptr Semaphorewaitinfo; a2: uint64): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:6431:30
  Pfnvksignalsemaphore* = proc (a0: Device; a1: ptr Semaphoresignalinfo): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:6432:30
  Pfnvkgetbufferdeviceaddress* = proc (a0: Device;
                                       a1: ptr Bufferdeviceaddressinfo): Deviceaddress {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:6433:37
  Pfnvkgetbufferopaquecaptureaddress* = proc (a0: Device;
      a1: ptr Bufferdeviceaddressinfo): uint64 {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:6434:30
  Pfnvkgetdevicememoryopaquecaptureaddress* = proc (a0: Device;
      a1: ptr Devicememoryopaquecaptureaddressinfo): uint64 {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:6435:30
  Flags64* = uint64          ## Generated based on /usr/include/vulkan/vulkan_core.h:6515:18
  Privatedataslot* = ptr structvkprivatedataslott ## Generated based on /usr/include/vulkan/vulkan_core.h:6516:1
  Pipelinecreationfeedbackflagbits* = enumvkpipelinecreationfeedbackflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:6526:3
  Pipelinecreationfeedbackflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:6527:17
  Toolpurposeflagbits* = enumvktoolpurposeflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:6543:3
  Toolpurposeflags* = Flags  ## Generated based on /usr/include/vulkan/vulkan_core.h:6544:17
  Privatedataslotcreateflags* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:6545:17
  Pipelinestageflags2* = Flags64 ## Generated based on /usr/include/vulkan/vulkan_core.h:6546:19
  Pipelinestageflagbits2* = Flags64 ## Generated based on /usr/include/vulkan/vulkan_core.h:6549:19
  Accessflags2* = Flags64    ## Generated based on /usr/include/vulkan/vulkan_core.h:6626:19
  Accessflagbits2* = Flags64 ## Generated based on /usr/include/vulkan/vulkan_core.h:6629:19
  Submitflagbits* = enumvksubmitflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:6703:3
  Submitflags* = Flags       ## Generated based on /usr/include/vulkan/vulkan_core.h:6704:17
  Renderingflagbits* = enumvkrenderingflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:6716:3
  Renderingflags* = Flags    ## Generated based on /usr/include/vulkan/vulkan_core.h:6717:17
  Formatfeatureflags2* = Flags64 ## Generated based on /usr/include/vulkan/vulkan_core.h:6718:19
  Formatfeatureflagbits2* = Flags64 ## Generated based on /usr/include/vulkan/vulkan_core.h:6721:19
  structvkphysicaldevicevulkan13features* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6793:16
    pnext*: pointer
    robustimageaccess*: Bool32
    inlineuniformblock*: Bool32
    descriptorbindinginlineuniformblockupdateafterbind*: Bool32
    pipelinecreationcachecontrol*: Bool32
    privatedata*: Bool32
    shaderdemotetohelperinvocation*: Bool32
    shaderterminateinvocation*: Bool32
    subgroupsizecontrol*: Bool32
    computefullsubgroups*: Bool32
    synchronization2*: Bool32
    texturecompressionastchdr*: Bool32
    shaderzeroinitializeworkgroupmemory*: Bool32
    dynamicrendering*: Bool32
    shaderintegerdotproduct*: Bool32
    maintenance4*: Bool32

  Physicaldevicevulkan13features* = structvkphysicaldevicevulkan13features ## Generated based on /usr/include/vulkan/vulkan_core.h:6811:3
  structvkphysicaldevicevulkan13properties* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6813:16
    pnext*: pointer
    minsubgroupsize*: uint32
    maxsubgroupsize*: uint32
    maxcomputeworkgroupsubgroups*: uint32
    requiredsubgroupsizestages*: Shaderstageflags
    maxinlineuniformblocksize*: uint32
    maxperstagedescriptorinlineuniformblocks*: uint32
    maxperstagedescriptorupdateafterbindinlineuniformblocks*: uint32
    maxdescriptorsetinlineuniformblocks*: uint32
    maxdescriptorsetupdateafterbindinlineuniformblocks*: uint32
    maxinlineuniformtotalsize*: uint32
    integerdotproduct8bitunsignedaccelerated*: Bool32
    integerdotproduct8bitsignedaccelerated*: Bool32
    integerdotproduct8bitmixedsignednessaccelerated*: Bool32
    integerdotproduct4x8bitpackedunsignedaccelerated*: Bool32
    integerdotproduct4x8bitpackedsignedaccelerated*: Bool32
    integerdotproduct4x8bitpackedmixedsignednessaccelerated*: Bool32
    integerdotproduct16bitunsignedaccelerated*: Bool32
    integerdotproduct16bitsignedaccelerated*: Bool32
    integerdotproduct16bitmixedsignednessaccelerated*: Bool32
    integerdotproduct32bitunsignedaccelerated*: Bool32
    integerdotproduct32bitsignedaccelerated*: Bool32
    integerdotproduct32bitmixedsignednessaccelerated*: Bool32
    integerdotproduct64bitunsignedaccelerated*: Bool32
    integerdotproduct64bitsignedaccelerated*: Bool32
    integerdotproduct64bitmixedsignednessaccelerated*: Bool32
    integerdotproductaccumulatingsaturating8bitunsignedaccelerated*: Bool32
    integerdotproductaccumulatingsaturating8bitsignedaccelerated*: Bool32
    integerdotproductaccumulatingsaturating8bitmixedsignednessaccelerated*: Bool32
    integerdotproductaccumulatingsaturating4x8bitpackedunsignedaccelerated*: Bool32
    integerdotproductaccumulatingsaturating4x8bitpackedsignedaccelerated*: Bool32
    integerdotproductaccumulatingsaturating4x8bitpackedmixedsignednessaccelerated*: Bool32
    integerdotproductaccumulatingsaturating16bitunsignedaccelerated*: Bool32
    integerdotproductaccumulatingsaturating16bitsignedaccelerated*: Bool32
    integerdotproductaccumulatingsaturating16bitmixedsignednessaccelerated*: Bool32
    integerdotproductaccumulatingsaturating32bitunsignedaccelerated*: Bool32
    integerdotproductaccumulatingsaturating32bitsignedaccelerated*: Bool32
    integerdotproductaccumulatingsaturating32bitmixedsignednessaccelerated*: Bool32
    integerdotproductaccumulatingsaturating64bitunsignedaccelerated*: Bool32
    integerdotproductaccumulatingsaturating64bitsignedaccelerated*: Bool32
    integerdotproductaccumulatingsaturating64bitmixedsignednessaccelerated*: Bool32
    storagetexelbufferoffsetalignmentbytes*: Devicesize
    storagetexelbufferoffsetsingletexelalignment*: Bool32
    uniformtexelbufferoffsetalignmentbytes*: Devicesize
    uniformtexelbufferoffsetsingletexelalignment*: Bool32
    maxbuffersize*: Devicesize

  Physicaldevicevulkan13properties* = structvkphysicaldevicevulkan13properties ## Generated based on /usr/include/vulkan/vulkan_core.h:6861:3
  structvkpipelinecreationfeedback* {.pure, inheritable, bycopy.} = object
    flags*: Pipelinecreationfeedbackflags ## Generated based on /usr/include/vulkan/vulkan_core.h:6863:16
    duration*: uint64

  Pipelinecreationfeedback* = structvkpipelinecreationfeedback ## Generated based on /usr/include/vulkan/vulkan_core.h:6866:3
  structvkpipelinecreationfeedbackcreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6868:16
    pnext*: pointer
    ppipelinecreationfeedback*: ptr Pipelinecreationfeedback
    pipelinestagecreationfeedbackcount*: uint32
    ppipelinestagecreationfeedbacks*: ptr Pipelinecreationfeedback

  Pipelinecreationfeedbackcreateinfo* = structvkpipelinecreationfeedbackcreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:6874:3
  structvkphysicaldeviceshaderterminateinvocationfeatures* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6876:16
    pnext*: pointer
    shaderterminateinvocation*: Bool32

  Physicaldeviceshaderterminateinvocationfeatures* = structvkphysicaldeviceshaderterminateinvocationfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:6880:3
  structvkphysicaldevicetoolproperties* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6882:16
    pnext*: pointer
    name*: array[256'i64, cschar]
    version*: array[256'i64, cschar]
    purposes*: Toolpurposeflags
    description*: array[256'i64, cschar]
    layer*: array[256'i64, cschar]

  Physicaldevicetoolproperties* = structvkphysicaldevicetoolproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:6890:3
  structvkphysicaldeviceshaderdemotetohelperinvocationfeatures* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6892:16
    pnext*: pointer
    shaderdemotetohelperinvocation*: Bool32

  Physicaldeviceshaderdemotetohelperinvocationfeatures* = structvkphysicaldeviceshaderdemotetohelperinvocationfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:6896:3
  structvkphysicaldeviceprivatedatafeatures* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6898:16
    pnext*: pointer
    privatedata*: Bool32

  Physicaldeviceprivatedatafeatures* = structvkphysicaldeviceprivatedatafeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:6902:3
  structvkdeviceprivatedatacreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6904:16
    pnext*: pointer
    privatedataslotrequestcount*: uint32

  Deviceprivatedatacreateinfo* = structvkdeviceprivatedatacreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:6908:3
  structvkprivatedataslotcreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6910:16
    pnext*: pointer
    flags*: Privatedataslotcreateflags

  Privatedataslotcreateinfo* = structvkprivatedataslotcreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:6914:3
  structvkphysicaldevicepipelinecreationcachecontrolfeatures* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6916:16
    pnext*: pointer
    pipelinecreationcachecontrol*: Bool32

  Physicaldevicepipelinecreationcachecontrolfeatures* = structvkphysicaldevicepipelinecreationcachecontrolfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:6920:3
  structvkmemorybarrier2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6922:16
    pnext*: pointer
    srcstagemask*: Pipelinestageflags2
    srcaccessmask*: Accessflags2
    dststagemask*: Pipelinestageflags2
    dstaccessmask*: Accessflags2

  Memorybarrier2* = structvkmemorybarrier2 ## Generated based on /usr/include/vulkan/vulkan_core.h:6929:3
  structvkbuffermemorybarrier2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6931:16
    pnext*: pointer
    srcstagemask*: Pipelinestageflags2
    srcaccessmask*: Accessflags2
    dststagemask*: Pipelinestageflags2
    dstaccessmask*: Accessflags2
    srcqueuefamilyindex*: uint32
    dstqueuefamilyindex*: uint32
    buffer*: Buffer
    offset*: Devicesize
    size*: Devicesize

  Buffermemorybarrier2* = structvkbuffermemorybarrier2 ## Generated based on /usr/include/vulkan/vulkan_core.h:6943:3
  structvkimagememorybarrier2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6945:16
    pnext*: pointer
    srcstagemask*: Pipelinestageflags2
    srcaccessmask*: Accessflags2
    dststagemask*: Pipelinestageflags2
    dstaccessmask*: Accessflags2
    oldlayout*: Imagelayout
    newlayout*: Imagelayout
    srcqueuefamilyindex*: uint32
    dstqueuefamilyindex*: uint32
    image*: Image
    subresourcerange*: Imagesubresourcerange

  Imagememorybarrier2* = structvkimagememorybarrier2 ## Generated based on /usr/include/vulkan/vulkan_core.h:6958:3
  structvkdependencyinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6960:16
    pnext*: pointer
    dependencyflags*: Dependencyflags
    memorybarriercount*: uint32
    pmemorybarriers*: ptr Memorybarrier2
    buffermemorybarriercount*: uint32
    pbuffermemorybarriers*: ptr Buffermemorybarrier2
    imagememorybarriercount*: uint32
    pimagememorybarriers*: ptr Imagememorybarrier2

  Dependencyinfo* = structvkdependencyinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:6970:3
  structvksemaphoresubmitinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6972:16
    pnext*: pointer
    semaphore*: Semaphore
    value*: uint64
    stagemask*: Pipelinestageflags2
    deviceindex*: uint32

  Semaphoresubmitinfo* = structvksemaphoresubmitinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:6979:3
  structvkcommandbuffersubmitinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6981:16
    pnext*: pointer
    commandbuffer*: Commandbuffer
    devicemask*: uint32

  Commandbuffersubmitinfo* = structvkcommandbuffersubmitinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:6986:3
  structvksubmitinfo2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:6988:16
    pnext*: pointer
    flags*: Submitflags
    waitsemaphoreinfocount*: uint32
    pwaitsemaphoreinfos*: ptr Semaphoresubmitinfo
    commandbufferinfocount*: uint32
    pcommandbufferinfos*: ptr Commandbuffersubmitinfo
    signalsemaphoreinfocount*: uint32
    psignalsemaphoreinfos*: ptr Semaphoresubmitinfo

  Submitinfo2* = structvksubmitinfo2 ## Generated based on /usr/include/vulkan/vulkan_core.h:6998:3
  structvkphysicaldevicesynchronization2features* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7000:16
    pnext*: pointer
    synchronization2*: Bool32

  Physicaldevicesynchronization2features* = structvkphysicaldevicesynchronization2features ## Generated based on /usr/include/vulkan/vulkan_core.h:7004:3
  structvkphysicaldevicezeroinitializeworkgroupmemoryfeatures* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7006:16
    pnext*: pointer
    shaderzeroinitializeworkgroupmemory*: Bool32

  Physicaldevicezeroinitializeworkgroupmemoryfeatures* = structvkphysicaldevicezeroinitializeworkgroupmemoryfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:7010:3
  structvkphysicaldeviceimagerobustnessfeatures* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7012:16
    pnext*: pointer
    robustimageaccess*: Bool32

  Physicaldeviceimagerobustnessfeatures* = structvkphysicaldeviceimagerobustnessfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:7016:3
  structvkbuffercopy2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7018:16
    pnext*: pointer
    srcoffset*: Devicesize
    dstoffset*: Devicesize
    size*: Devicesize

  Buffercopy2* = structvkbuffercopy2 ## Generated based on /usr/include/vulkan/vulkan_core.h:7024:3
  structvkcopybufferinfo2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7026:16
    pnext*: pointer
    srcbuffer*: Buffer
    dstbuffer*: Buffer
    regioncount*: uint32
    pregions*: ptr Buffercopy2

  Copybufferinfo2* = structvkcopybufferinfo2 ## Generated based on /usr/include/vulkan/vulkan_core.h:7033:3
  structvkimagecopy2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7035:16
    pnext*: pointer
    srcsubresource*: Imagesubresourcelayers
    srcoffset*: Offset3d
    dstsubresource*: Imagesubresourcelayers
    dstoffset*: Offset3d
    extent*: Extent3d

  Imagecopy2* = structvkimagecopy2 ## Generated based on /usr/include/vulkan/vulkan_core.h:7043:3
  structvkcopyimageinfo2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7045:16
    pnext*: pointer
    srcimage*: Image
    srcimagelayout*: Imagelayout
    dstimage*: Image
    dstimagelayout*: Imagelayout
    regioncount*: uint32
    pregions*: ptr Imagecopy2

  Copyimageinfo2* = structvkcopyimageinfo2 ## Generated based on /usr/include/vulkan/vulkan_core.h:7054:3
  structvkbufferimagecopy2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7056:16
    pnext*: pointer
    bufferoffset*: Devicesize
    bufferrowlength*: uint32
    bufferimageheight*: uint32
    imagesubresource*: Imagesubresourcelayers
    imageoffset*: Offset3d
    imageextent*: Extent3d

  Bufferimagecopy2* = structvkbufferimagecopy2 ## Generated based on /usr/include/vulkan/vulkan_core.h:7065:3
  structvkcopybuffertoimageinfo2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7067:16
    pnext*: pointer
    srcbuffer*: Buffer
    dstimage*: Image
    dstimagelayout*: Imagelayout
    regioncount*: uint32
    pregions*: ptr Bufferimagecopy2

  Copybuffertoimageinfo2* = structvkcopybuffertoimageinfo2 ## Generated based on /usr/include/vulkan/vulkan_core.h:7075:3
  structvkcopyimagetobufferinfo2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7077:16
    pnext*: pointer
    srcimage*: Image
    srcimagelayout*: Imagelayout
    dstbuffer*: Buffer
    regioncount*: uint32
    pregions*: ptr Bufferimagecopy2

  Copyimagetobufferinfo2* = structvkcopyimagetobufferinfo2 ## Generated based on /usr/include/vulkan/vulkan_core.h:7085:3
  structvkimageblit2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7087:16
    pnext*: pointer
    srcsubresource*: Imagesubresourcelayers
    srcoffsets*: array[2'i64, Offset3d]
    dstsubresource*: Imagesubresourcelayers
    dstoffsets*: array[2'i64, Offset3d]

  Imageblit2* = structvkimageblit2 ## Generated based on /usr/include/vulkan/vulkan_core.h:7094:3
  structvkblitimageinfo2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7096:16
    pnext*: pointer
    srcimage*: Image
    srcimagelayout*: Imagelayout
    dstimage*: Image
    dstimagelayout*: Imagelayout
    regioncount*: uint32
    pregions*: ptr Imageblit2
    filter*: Filter

  Blitimageinfo2* = structvkblitimageinfo2 ## Generated based on /usr/include/vulkan/vulkan_core.h:7106:3
  structvkimageresolve2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7108:16
    pnext*: pointer
    srcsubresource*: Imagesubresourcelayers
    srcoffset*: Offset3d
    dstsubresource*: Imagesubresourcelayers
    dstoffset*: Offset3d
    extent*: Extent3d

  Imageresolve2* = structvkimageresolve2 ## Generated based on /usr/include/vulkan/vulkan_core.h:7116:3
  structvkresolveimageinfo2* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7118:16
    pnext*: pointer
    srcimage*: Image
    srcimagelayout*: Imagelayout
    dstimage*: Image
    dstimagelayout*: Imagelayout
    regioncount*: uint32
    pregions*: ptr Imageresolve2

  Resolveimageinfo2* = structvkresolveimageinfo2 ## Generated based on /usr/include/vulkan/vulkan_core.h:7127:3
  structvkphysicaldevicesubgroupsizecontrolfeatures* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7129:16
    pnext*: pointer
    subgroupsizecontrol*: Bool32
    computefullsubgroups*: Bool32

  Physicaldevicesubgroupsizecontrolfeatures* = structvkphysicaldevicesubgroupsizecontrolfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:7134:3
  structvkphysicaldevicesubgroupsizecontrolproperties* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7136:16
    pnext*: pointer
    minsubgroupsize*: uint32
    maxsubgroupsize*: uint32
    maxcomputeworkgroupsubgroups*: uint32
    requiredsubgroupsizestages*: Shaderstageflags

  Physicaldevicesubgroupsizecontrolproperties* = structvkphysicaldevicesubgroupsizecontrolproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:7143:3
  structvkpipelineshaderstagerequiredsubgroupsizecreateinfo* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7145:16
    pnext*: pointer
    requiredsubgroupsize*: uint32

  Pipelineshaderstagerequiredsubgroupsizecreateinfo* = structvkpipelineshaderstagerequiredsubgroupsizecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:7149:3
  structvkphysicaldeviceinlineuniformblockfeatures* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7151:16
    pnext*: pointer
    inlineuniformblock*: Bool32
    descriptorbindinginlineuniformblockupdateafterbind*: Bool32

  Physicaldeviceinlineuniformblockfeatures* = structvkphysicaldeviceinlineuniformblockfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:7156:3
  structvkphysicaldeviceinlineuniformblockproperties* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7158:16
    pnext*: pointer
    maxinlineuniformblocksize*: uint32
    maxperstagedescriptorinlineuniformblocks*: uint32
    maxperstagedescriptorupdateafterbindinlineuniformblocks*: uint32
    maxdescriptorsetinlineuniformblocks*: uint32
    maxdescriptorsetupdateafterbindinlineuniformblocks*: uint32

  Physicaldeviceinlineuniformblockproperties* = structvkphysicaldeviceinlineuniformblockproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:7166:3
  structvkwritedescriptorsetinlineuniformblock* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7168:16
    pnext*: pointer
    datasize*: uint32
    pdata*: pointer

  Writedescriptorsetinlineuniformblock* = structvkwritedescriptorsetinlineuniformblock ## Generated based on /usr/include/vulkan/vulkan_core.h:7173:3
  structvkdescriptorpoolinlineuniformblockcreateinfo* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7175:16
    pnext*: pointer
    maxinlineuniformblockbindings*: uint32

  Descriptorpoolinlineuniformblockcreateinfo* = structvkdescriptorpoolinlineuniformblockcreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:7179:3
  structvkphysicaldevicetexturecompressionastchdrfeatures* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7181:16
    pnext*: pointer
    texturecompressionastchdr*: Bool32

  Physicaldevicetexturecompressionastchdrfeatures* = structvkphysicaldevicetexturecompressionastchdrfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:7185:3
  structvkrenderingattachmentinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7187:16
    pnext*: pointer
    imageview*: Imageview
    imagelayout*: Imagelayout
    resolvemode*: Resolvemodeflagbits
    resolveimageview*: Imageview
    resolveimagelayout*: Imagelayout
    loadop*: Attachmentloadop
    storeop*: Attachmentstoreop
    clearvalue*: Clearvalue

  Renderingattachmentinfo* = structvkrenderingattachmentinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:7198:3
  structvkrenderinginfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7200:16
    pnext*: pointer
    flags*: Renderingflags
    renderarea*: Rect2d
    layercount*: uint32
    viewmask*: uint32
    colorattachmentcount*: uint32
    pcolorattachments*: ptr Renderingattachmentinfo
    pdepthattachment*: ptr Renderingattachmentinfo
    pstencilattachment*: ptr Renderingattachmentinfo

  Renderinginfo* = structvkrenderinginfo ## Generated based on /usr/include/vulkan/vulkan_core.h:7211:3
  structvkpipelinerenderingcreateinfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7213:16
    pnext*: pointer
    viewmask*: uint32
    colorattachmentcount*: uint32
    pcolorattachmentformats*: ptr Format
    depthattachmentformat*: Format
    stencilattachmentformat*: Format

  Pipelinerenderingcreateinfo* = structvkpipelinerenderingcreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:7221:3
  structvkphysicaldevicedynamicrenderingfeatures* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7223:16
    pnext*: pointer
    dynamicrendering*: Bool32

  Physicaldevicedynamicrenderingfeatures* = structvkphysicaldevicedynamicrenderingfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:7227:3
  structvkcommandbufferinheritancerenderinginfo* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7229:16
    pnext*: pointer
    flags*: Renderingflags
    viewmask*: uint32
    colorattachmentcount*: uint32
    pcolorattachmentformats*: ptr Format
    depthattachmentformat*: Format
    stencilattachmentformat*: Format
    rasterizationsamples*: Samplecountflagbits

  Commandbufferinheritancerenderinginfo* = structvkcommandbufferinheritancerenderinginfo ## Generated based on /usr/include/vulkan/vulkan_core.h:7239:3
  structvkphysicaldeviceshaderintegerdotproductfeatures* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7241:16
    pnext*: pointer
    shaderintegerdotproduct*: Bool32

  Physicaldeviceshaderintegerdotproductfeatures* = structvkphysicaldeviceshaderintegerdotproductfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:7245:3
  structvkphysicaldeviceshaderintegerdotproductproperties* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7247:16
    pnext*: pointer
    integerdotproduct8bitunsignedaccelerated*: Bool32
    integerdotproduct8bitsignedaccelerated*: Bool32
    integerdotproduct8bitmixedsignednessaccelerated*: Bool32
    integerdotproduct4x8bitpackedunsignedaccelerated*: Bool32
    integerdotproduct4x8bitpackedsignedaccelerated*: Bool32
    integerdotproduct4x8bitpackedmixedsignednessaccelerated*: Bool32
    integerdotproduct16bitunsignedaccelerated*: Bool32
    integerdotproduct16bitsignedaccelerated*: Bool32
    integerdotproduct16bitmixedsignednessaccelerated*: Bool32
    integerdotproduct32bitunsignedaccelerated*: Bool32
    integerdotproduct32bitsignedaccelerated*: Bool32
    integerdotproduct32bitmixedsignednessaccelerated*: Bool32
    integerdotproduct64bitunsignedaccelerated*: Bool32
    integerdotproduct64bitsignedaccelerated*: Bool32
    integerdotproduct64bitmixedsignednessaccelerated*: Bool32
    integerdotproductaccumulatingsaturating8bitunsignedaccelerated*: Bool32
    integerdotproductaccumulatingsaturating8bitsignedaccelerated*: Bool32
    integerdotproductaccumulatingsaturating8bitmixedsignednessaccelerated*: Bool32
    integerdotproductaccumulatingsaturating4x8bitpackedunsignedaccelerated*: Bool32
    integerdotproductaccumulatingsaturating4x8bitpackedsignedaccelerated*: Bool32
    integerdotproductaccumulatingsaturating4x8bitpackedmixedsignednessaccelerated*: Bool32
    integerdotproductaccumulatingsaturating16bitunsignedaccelerated*: Bool32
    integerdotproductaccumulatingsaturating16bitsignedaccelerated*: Bool32
    integerdotproductaccumulatingsaturating16bitmixedsignednessaccelerated*: Bool32
    integerdotproductaccumulatingsaturating32bitunsignedaccelerated*: Bool32
    integerdotproductaccumulatingsaturating32bitsignedaccelerated*: Bool32
    integerdotproductaccumulatingsaturating32bitmixedsignednessaccelerated*: Bool32
    integerdotproductaccumulatingsaturating64bitunsignedaccelerated*: Bool32
    integerdotproductaccumulatingsaturating64bitsignedaccelerated*: Bool32
    integerdotproductaccumulatingsaturating64bitmixedsignednessaccelerated*: Bool32

  Physicaldeviceshaderintegerdotproductproperties* = structvkphysicaldeviceshaderintegerdotproductproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:7280:3
  structvkphysicaldevicetexelbufferalignmentproperties* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7282:16
    pnext*: pointer
    storagetexelbufferoffsetalignmentbytes*: Devicesize
    storagetexelbufferoffsetsingletexelalignment*: Bool32
    uniformtexelbufferoffsetalignmentbytes*: Devicesize
    uniformtexelbufferoffsetsingletexelalignment*: Bool32

  Physicaldevicetexelbufferalignmentproperties* = structvkphysicaldevicetexelbufferalignmentproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:7289:3
  structvkformatproperties3* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7291:16
    pnext*: pointer
    lineartilingfeatures*: Formatfeatureflags2
    optimaltilingfeatures*: Formatfeatureflags2
    bufferfeatures*: Formatfeatureflags2

  Formatproperties3* = structvkformatproperties3 ## Generated based on /usr/include/vulkan/vulkan_core.h:7297:3
  structvkphysicaldevicemaintenance4features* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7299:16
    pnext*: pointer
    maintenance4*: Bool32

  Physicaldevicemaintenance4features* = structvkphysicaldevicemaintenance4features ## Generated based on /usr/include/vulkan/vulkan_core.h:7303:3
  structvkphysicaldevicemaintenance4properties* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7305:16
    pnext*: pointer
    maxbuffersize*: Devicesize

  Physicaldevicemaintenance4properties* = structvkphysicaldevicemaintenance4properties ## Generated based on /usr/include/vulkan/vulkan_core.h:7309:3
  structvkdevicebuffermemoryrequirements* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7311:16
    pnext*: pointer
    pcreateinfo*: ptr Buffercreateinfo

  Devicebuffermemoryrequirements* = structvkdevicebuffermemoryrequirements ## Generated based on /usr/include/vulkan/vulkan_core.h:7315:3
  structvkdeviceimagememoryrequirements* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7317:16
    pnext*: pointer
    pcreateinfo*: ptr Imagecreateinfo
    planeaspect*: Imageaspectflagbits

  Deviceimagememoryrequirements* = structvkdeviceimagememoryrequirements ## Generated based on /usr/include/vulkan/vulkan_core.h:7322:3
  Pfnvkgetphysicaldevicetoolproperties* = proc (a0: Physicaldevice;
      a1: ptr uint32; a2: ptr Physicaldevicetoolproperties): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7324:30
  Pfnvkcreateprivatedataslot* = proc (a0: Device;
                                      a1: ptr Privatedataslotcreateinfo;
                                      a2: ptr Allocationcallbacks;
                                      a3: ptr Privatedataslot): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7325:30
  Pfnvkdestroyprivatedataslot* = proc (a0: Device; a1: Privatedataslot;
                                       a2: ptr Allocationcallbacks): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:7326:26
  Pfnvksetprivatedata* = proc (a0: Device; a1: Objecttype; a2: uint64;
                               a3: Privatedataslot; a4: uint64): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7327:30
  Pfnvkgetprivatedata* = proc (a0: Device; a1: Objecttype; a2: uint64;
                               a3: Privatedataslot; a4: ptr uint64): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:7328:26
  Pfnvkcmdsetevent2* = proc (a0: Commandbuffer; a1: Event;
                             a2: ptr Dependencyinfo): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7329:26
  Pfnvkcmdresetevent2* = proc (a0: Commandbuffer; a1: Event;
                               a2: Pipelinestageflags2): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7330:26
  Pfnvkcmdwaitevents2* = proc (a0: Commandbuffer; a1: uint32; a2: ptr Event;
                               a3: ptr Dependencyinfo): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7331:26
  Pfnvkcmdpipelinebarrier2* = proc (a0: Commandbuffer; a1: ptr Dependencyinfo): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:7332:26
  Pfnvkcmdwritetimestamp2* = proc (a0: Commandbuffer; a1: Pipelinestageflags2;
                                   a2: Querypool; a3: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7333:26
  Pfnvkqueuesubmit2* = proc (a0: Queue; a1: uint32; a2: ptr Submitinfo2;
                             a3: Fence): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7334:30
  Pfnvkcmdcopybuffer2* = proc (a0: Commandbuffer; a1: ptr Copybufferinfo2): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:7335:26
  Pfnvkcmdcopyimage2* = proc (a0: Commandbuffer; a1: ptr Copyimageinfo2): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:7336:26
  Pfnvkcmdcopybuffertoimage2* = proc (a0: Commandbuffer;
                                      a1: ptr Copybuffertoimageinfo2): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:7337:26
  Pfnvkcmdcopyimagetobuffer2* = proc (a0: Commandbuffer;
                                      a1: ptr Copyimagetobufferinfo2): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:7338:26
  Pfnvkcmdblitimage2* = proc (a0: Commandbuffer; a1: ptr Blitimageinfo2): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:7339:26
  Pfnvkcmdresolveimage2* = proc (a0: Commandbuffer; a1: ptr Resolveimageinfo2): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:7340:26
  Pfnvkcmdbeginrendering* = proc (a0: Commandbuffer; a1: ptr Renderinginfo): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:7341:26
  Pfnvkcmdendrendering* = proc (a0: Commandbuffer): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7342:26
  Pfnvkcmdsetcullmode* = proc (a0: Commandbuffer; a1: Cullmodeflags): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:7343:26
  Pfnvkcmdsetfrontface* = proc (a0: Commandbuffer; a1: Frontface): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7344:26
  Pfnvkcmdsetprimitivetopology* = proc (a0: Commandbuffer; a1: Primitivetopology): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:7345:26
  Pfnvkcmdsetviewportwithcount* = proc (a0: Commandbuffer; a1: uint32;
                                        a2: ptr Viewport): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7346:26
  Pfnvkcmdsetscissorwithcount* = proc (a0: Commandbuffer; a1: uint32;
                                       a2: ptr Rect2d): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7347:26
  Pfnvkcmdbindvertexbuffers2* = proc (a0: Commandbuffer; a1: uint32; a2: uint32;
                                      a3: ptr Buffer; a4: ptr Devicesize;
                                      a5: ptr Devicesize; a6: ptr Devicesize): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:7348:26
  Pfnvkcmdsetdepthtestenable* = proc (a0: Commandbuffer; a1: Bool32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:7349:26
  Pfnvkcmdsetdepthwriteenable* = proc (a0: Commandbuffer; a1: Bool32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:7350:26
  Pfnvkcmdsetdepthcompareop* = proc (a0: Commandbuffer; a1: Compareop): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:7351:26
  Pfnvkcmdsetdepthboundstestenable* = proc (a0: Commandbuffer; a1: Bool32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:7352:26
  Pfnvkcmdsetstenciltestenable* = proc (a0: Commandbuffer; a1: Bool32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:7353:26
  Pfnvkcmdsetstencilop* = proc (a0: Commandbuffer; a1: Stencilfaceflags;
                                a2: Stencilop; a3: Stencilop; a4: Stencilop;
                                a5: Compareop): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7354:26
  Pfnvkcmdsetrasterizerdiscardenable* = proc (a0: Commandbuffer; a1: Bool32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:7355:26
  Pfnvkcmdsetdepthbiasenable* = proc (a0: Commandbuffer; a1: Bool32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:7356:26
  Pfnvkcmdsetprimitiverestartenable* = proc (a0: Commandbuffer; a1: Bool32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:7357:26
  Pfnvkgetdevicebuffermemoryrequirements* = proc (a0: Device;
      a1: ptr Devicebuffermemoryrequirements; a2: ptr Memoryrequirements2): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:7358:26
  Pfnvkgetdeviceimagememoryrequirements* = proc (a0: Device;
      a1: ptr Deviceimagememoryrequirements; a2: ptr Memoryrequirements2): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:7359:26
  Pfnvkgetdeviceimagesparsememoryrequirements* = proc (a0: Device;
      a1: ptr Deviceimagememoryrequirements; a2: ptr uint32;
      a3: ptr Sparseimagememoryrequirements2): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7360:26
  Surfacekhr* = ptr structvksurfacekhrt ## Generated based on /usr/include/vulkan/vulkan_core.h:7547:1
  Presentmodekhr* = enumvkpresentmodekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7559:3
  Colorspacekhr* = enumvkcolorspacekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7581:3
  Surfacetransformflagbitskhr* = enumvksurfacetransformflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7594:3
  Compositealphaflagbitskhr* = enumvkcompositealphaflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7602:3
  Compositealphaflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:7603:17
  Surfacetransformflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:7604:17
  structvksurfacecapabilitieskhr* {.pure, inheritable, bycopy.} = object
    minimagecount*: uint32   ## Generated based on /usr/include/vulkan/vulkan_core.h:7605:16
    maximagecount*: uint32
    currentextent*: Extent2d
    minimageextent*: Extent2d
    maximageextent*: Extent2d
    maximagearraylayers*: uint32
    supportedtransforms*: Surfacetransformflagskhr
    currenttransform*: Surfacetransformflagbitskhr
    supportedcompositealpha*: Compositealphaflagskhr
    supportedusageflags*: Imageusageflags

  Surfacecapabilitieskhr* = structvksurfacecapabilitieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7616:3
  structvksurfaceformatkhr* {.pure, inheritable, bycopy.} = object
    format*: Format          ## Generated based on /usr/include/vulkan/vulkan_core.h:7618:16
    colorspace*: Colorspacekhr

  Surfaceformatkhr* = structvksurfaceformatkhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7621:3
  Pfnvkdestroysurfacekhr* = proc (a0: Instance; a1: Surfacekhr;
                                  a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7623:26
  Pfnvkgetphysicaldevicesurfacesupportkhr* = proc (a0: Physicaldevice;
      a1: uint32; a2: Surfacekhr; a3: ptr Bool32): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7624:30
  Pfnvkgetphysicaldevicesurfacecapabilitieskhr* = proc (a0: Physicaldevice;
      a1: Surfacekhr; a2: ptr Surfacecapabilitieskhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7625:30
  Pfnvkgetphysicaldevicesurfaceformatskhr* = proc (a0: Physicaldevice;
      a1: Surfacekhr; a2: ptr uint32; a3: ptr Surfaceformatkhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7626:30
  Pfnvkgetphysicaldevicesurfacepresentmodeskhr* = proc (a0: Physicaldevice;
      a1: Surfacekhr; a2: ptr uint32; a3: ptr Presentmodekhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7627:30
  Swapchainkhr* = ptr structvkswapchainkhrt ## Generated based on /usr/include/vulkan/vulkan_core.h:7662:1
  Swapchaincreateflagbitskhr* = enumvkswapchaincreateflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7672:3
  Swapchaincreateflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:7673:17
  Devicegrouppresentmodeflagbitskhr* = enumvkdevicegrouppresentmodeflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7681:3
  Devicegrouppresentmodeflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:7682:17
  structvkswapchaincreateinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7683:16
    pnext*: pointer
    flags*: Swapchaincreateflagskhr
    surface*: Surfacekhr
    minimagecount*: uint32
    imageformat*: Format
    imagecolorspace*: Colorspacekhr
    imageextent*: Extent2d
    imagearraylayers*: uint32
    imageusage*: Imageusageflags
    imagesharingmode*: Sharingmode
    queuefamilyindexcount*: uint32
    pqueuefamilyindices*: ptr uint32
    pretransform*: Surfacetransformflagbitskhr
    compositealpha*: Compositealphaflagbitskhr
    presentmode*: Presentmodekhr
    clipped*: Bool32
    oldswapchain*: Swapchainkhr

  Swapchaincreateinfokhr* = structvkswapchaincreateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7702:3
  structvkpresentinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7704:16
    pnext*: pointer
    waitsemaphorecount*: uint32
    pwaitsemaphores*: ptr Semaphore
    swapchaincount*: uint32
    pswapchains*: ptr Swapchainkhr
    pimageindices*: ptr uint32
    presults*: ptr Result

  Presentinfokhr* = structvkpresentinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7713:3
  structvkimageswapchaincreateinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7715:16
    pnext*: pointer
    swapchain*: Swapchainkhr

  Imageswapchaincreateinfokhr* = structvkimageswapchaincreateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7719:3
  structvkbindimagememoryswapchaininfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7721:16
    pnext*: pointer
    swapchain*: Swapchainkhr
    imageindex*: uint32

  Bindimagememoryswapchaininfokhr* = structvkbindimagememoryswapchaininfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7726:3
  structvkacquirenextimageinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7728:16
    pnext*: pointer
    swapchain*: Swapchainkhr
    timeout*: uint64
    semaphore*: Semaphore
    fence*: Fence
    devicemask*: uint32

  Acquirenextimageinfokhr* = structvkacquirenextimageinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7736:3
  structvkdevicegrouppresentcapabilitieskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7738:16
    pnext*: pointer
    presentmask*: array[32'i64, uint32]
    modes*: Devicegrouppresentmodeflagskhr

  Devicegrouppresentcapabilitieskhr* = structvkdevicegrouppresentcapabilitieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7743:3
  structvkdevicegrouppresentinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7745:16
    pnext*: pointer
    swapchaincount*: uint32
    pdevicemasks*: ptr uint32
    mode*: Devicegrouppresentmodeflagbitskhr

  Devicegrouppresentinfokhr* = structvkdevicegrouppresentinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7751:3
  structvkdevicegroupswapchaincreateinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7753:16
    pnext*: pointer
    modes*: Devicegrouppresentmodeflagskhr

  Devicegroupswapchaincreateinfokhr* = structvkdevicegroupswapchaincreateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7757:3
  Pfnvkcreateswapchainkhr* = proc (a0: Device; a1: ptr Swapchaincreateinfokhr;
                                   a2: ptr Allocationcallbacks;
                                   a3: ptr Swapchainkhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7759:30
  Pfnvkdestroyswapchainkhr* = proc (a0: Device; a1: Swapchainkhr;
                                    a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7760:26
  Pfnvkgetswapchainimageskhr* = proc (a0: Device; a1: Swapchainkhr;
                                      a2: ptr uint32; a3: ptr Image): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:7761:30
  Pfnvkacquirenextimagekhr* = proc (a0: Device; a1: Swapchainkhr; a2: uint64;
                                    a3: Semaphore; a4: Fence; a5: ptr uint32): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:7762:30
  Pfnvkqueuepresentkhr* = proc (a0: Queue; a1: ptr Presentinfokhr): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:7763:30
  Pfnvkgetdevicegrouppresentcapabilitieskhr* = proc (a0: Device;
      a1: ptr Devicegrouppresentcapabilitieskhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7764:30
  Pfnvkgetdevicegroupsurfacepresentmodeskhr* = proc (a0: Device; a1: Surfacekhr;
      a2: ptr Devicegrouppresentmodeflagskhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7765:30
  Pfnvkgetphysicaldevicepresentrectangleskhr* = proc (a0: Physicaldevice;
      a1: Surfacekhr; a2: ptr uint32; a3: ptr Rect2d): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7766:30
  Pfnvkacquirenextimage2khr* = proc (a0: Device;
                                     a1: ptr Acquirenextimageinfokhr;
                                     a2: ptr uint32): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7767:30
  Displaykhr* = ptr structvkdisplaykhrt ## Generated based on /usr/include/vulkan/vulkan_core.h:7823:1
  Displaymodekhr* = ptr structvkdisplaymodekhrt ## Generated based on /usr/include/vulkan/vulkan_core.h:7824:1
  Displaymodecreateflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:7827:17
  Displayplanealphaflagbitskhr* = enumvkdisplayplanealphaflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7835:3
  Displayplanealphaflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:7836:17
  Displaysurfacecreateflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:7837:17
  structvkdisplaymodeparameterskhr* {.pure, inheritable, bycopy.} = object
    visibleregion*: Extent2d ## Generated based on /usr/include/vulkan/vulkan_core.h:7838:16
    refreshrate*: uint32

  Displaymodeparameterskhr* = structvkdisplaymodeparameterskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7841:3
  structvkdisplaymodecreateinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7843:16
    pnext*: pointer
    flags*: Displaymodecreateflagskhr
    parameters*: Displaymodeparameterskhr

  Displaymodecreateinfokhr* = structvkdisplaymodecreateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7848:3
  structvkdisplaymodepropertieskhr* {.pure, inheritable, bycopy.} = object
    displaymode*: Displaymodekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7850:16
    parameters*: Displaymodeparameterskhr

  Displaymodepropertieskhr* = structvkdisplaymodepropertieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7853:3
  structvkdisplayplanecapabilitieskhr* {.pure, inheritable, bycopy.} = object
    supportedalpha*: Displayplanealphaflagskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7855:16
    minsrcposition*: Offset2d
    maxsrcposition*: Offset2d
    minsrcextent*: Extent2d
    maxsrcextent*: Extent2d
    mindstposition*: Offset2d
    maxdstposition*: Offset2d
    mindstextent*: Extent2d
    maxdstextent*: Extent2d

  Displayplanecapabilitieskhr* = structvkdisplayplanecapabilitieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7865:3
  structvkdisplayplanepropertieskhr* {.pure, inheritable, bycopy.} = object
    currentdisplay*: Displaykhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7867:16
    currentstackindex*: uint32

  Displayplanepropertieskhr* = structvkdisplayplanepropertieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7870:3
  structvkdisplaypropertieskhr* {.pure, inheritable, bycopy.} = object
    display*: Displaykhr     ## Generated based on /usr/include/vulkan/vulkan_core.h:7872:16
    displayname*: cstring
    physicaldimensions*: Extent2d
    physicalresolution*: Extent2d
    supportedtransforms*: Surfacetransformflagskhr
    planereorderpossible*: Bool32
    persistentcontent*: Bool32

  Displaypropertieskhr* = structvkdisplaypropertieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7880:3
  structvkdisplaysurfacecreateinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7882:16
    pnext*: pointer
    flags*: Displaysurfacecreateflagskhr
    displaymode*: Displaymodekhr
    planeindex*: uint32
    planestackindex*: uint32
    transform*: Surfacetransformflagbitskhr
    globalalpha*: cfloat
    alphamode*: Displayplanealphaflagbitskhr
    imageextent*: Extent2d

  Displaysurfacecreateinfokhr* = structvkdisplaysurfacecreateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7893:3
  Pfnvkgetphysicaldevicedisplaypropertieskhr* = proc (a0: Physicaldevice;
      a1: ptr uint32; a2: ptr Displaypropertieskhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7895:30
  Pfnvkgetphysicaldevicedisplayplanepropertieskhr* = proc (a0: Physicaldevice;
      a1: ptr uint32; a2: ptr Displayplanepropertieskhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7896:30
  Pfnvkgetdisplayplanesupporteddisplayskhr* = proc (a0: Physicaldevice;
      a1: uint32; a2: ptr uint32; a3: ptr Displaykhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7897:30
  Pfnvkgetdisplaymodepropertieskhr* = proc (a0: Physicaldevice; a1: Displaykhr;
      a2: ptr uint32; a3: ptr Displaymodepropertieskhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7898:30
  Pfnvkcreatedisplaymodekhr* = proc (a0: Physicaldevice; a1: Displaykhr;
                                     a2: ptr Displaymodecreateinfokhr;
                                     a3: ptr Allocationcallbacks;
                                     a4: ptr Displaymodekhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7899:30
  Pfnvkgetdisplayplanecapabilitieskhr* = proc (a0: Physicaldevice;
      a1: Displaymodekhr; a2: uint32; a3: ptr Displayplanecapabilitieskhr): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:7900:30
  Pfnvkcreatedisplayplanesurfacekhr* = proc (a0: Instance;
      a1: ptr Displaysurfacecreateinfokhr; a2: ptr Allocationcallbacks;
      a3: ptr Surfacekhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7901:30
  structvkdisplaypresentinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:7951:16
    pnext*: pointer
    srcrect*: Rect2d
    dstrect*: Rect2d
    persistent*: Bool32

  Displaypresentinfokhr* = structvkdisplaypresentinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7957:3
  Pfnvkcreatesharedswapchainskhr* = proc (a0: Device; a1: uint32;
      a2: ptr Swapchaincreateinfokhr; a3: ptr Allocationcallbacks;
      a4: ptr Swapchainkhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:7959:30
  Videosessionkhr* = ptr structvkvideosessionkhrt ## Generated based on /usr/include/vulkan/vulkan_core.h:7979:1
  Videosessionparameterskhr* = ptr structvkvideosessionparameterskhrt ## Generated based on /usr/include/vulkan/vulkan_core.h:7980:1
  Queryresultstatuskhr* = enumvkqueryresultstatuskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:7990:3
  Videocodecoperationflagbitskhr* = enumvkvideocodecoperationflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8000:3
  Videocodecoperationflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:8001:17
  Videochromasubsamplingflagbitskhr* = enumvkvideochromasubsamplingflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8010:3
  Videochromasubsamplingflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:8011:17
  Videocomponentbitdepthflagbitskhr* = enumvkvideocomponentbitdepthflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8019:3
  Videocomponentbitdepthflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:8020:17
  Videocapabilityflagbitskhr* = enumvkvideocapabilityflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8026:3
  Videocapabilityflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:8027:17
  Videosessioncreateflagbitskhr* = enumvkvideosessioncreateflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8034:3
  Videosessioncreateflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:8035:17
  Videosessionparameterscreateflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:8036:17
  Videobegincodingflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:8037:17
  Videoendcodingflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:8038:17
  Videocodingcontrolflagbitskhr* = enumvkvideocodingcontrolflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8045:3
  Videocodingcontrolflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:8046:17
  structvkqueuefamilyqueryresultstatuspropertieskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8047:16
    pnext*: pointer
    queryresultstatussupport*: Bool32

  Queuefamilyqueryresultstatuspropertieskhr* = structvkqueuefamilyqueryresultstatuspropertieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8051:3
  structvkqueuefamilyvideopropertieskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8053:16
    pnext*: pointer
    videocodecoperations*: Videocodecoperationflagskhr

  Queuefamilyvideopropertieskhr* = structvkqueuefamilyvideopropertieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8057:3
  structvkvideoprofileinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8059:16
    pnext*: pointer
    videocodecoperation*: Videocodecoperationflagbitskhr
    chromasubsampling*: Videochromasubsamplingflagskhr
    lumabitdepth*: Videocomponentbitdepthflagskhr
    chromabitdepth*: Videocomponentbitdepthflagskhr

  Videoprofileinfokhr* = structvkvideoprofileinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8066:3
  structvkvideoprofilelistinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8068:16
    pnext*: pointer
    profilecount*: uint32
    pprofiles*: ptr Videoprofileinfokhr

  Videoprofilelistinfokhr* = structvkvideoprofilelistinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8073:3
  structvkvideocapabilitieskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8075:16
    pnext*: pointer
    flags*: Videocapabilityflagskhr
    minbitstreambufferoffsetalignment*: Devicesize
    minbitstreambuffersizealignment*: Devicesize
    pictureaccessgranularity*: Extent2d
    mincodedextent*: Extent2d
    maxcodedextent*: Extent2d
    maxdpbslots*: uint32
    maxactivereferencepictures*: uint32
    stdheaderversion*: Extensionproperties

  Videocapabilitieskhr* = structvkvideocapabilitieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8087:3
  structvkphysicaldevicevideoformatinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8089:16
    pnext*: pointer
    imageusage*: Imageusageflags

  Physicaldevicevideoformatinfokhr* = structvkphysicaldevicevideoformatinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8093:3
  structvkvideoformatpropertieskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8095:16
    pnext*: pointer
    format*: Format
    componentmapping*: Componentmapping
    imagecreateflags*: Imagecreateflags
    imagetype*: Imagetype
    imagetiling*: Imagetiling
    imageusageflags*: Imageusageflags

  Videoformatpropertieskhr* = structvkvideoformatpropertieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8104:3
  structvkvideopictureresourceinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8106:16
    pnext*: pointer
    codedoffset*: Offset2d
    codedextent*: Extent2d
    basearraylayer*: uint32
    imageviewbinding*: Imageview

  Videopictureresourceinfokhr* = structvkvideopictureresourceinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8113:3
  structvkvideoreferenceslotinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8115:16
    pnext*: pointer
    slotindex*: int32
    ppictureresource*: ptr Videopictureresourceinfokhr

  Videoreferenceslotinfokhr* = structvkvideoreferenceslotinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8120:3
  structvkvideosessionmemoryrequirementskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8122:16
    pnext*: pointer
    memorybindindex*: uint32
    memoryrequirements*: Memoryrequirements

  Videosessionmemoryrequirementskhr* = structvkvideosessionmemoryrequirementskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8127:3
  structvkbindvideosessionmemoryinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8129:16
    pnext*: pointer
    memorybindindex*: uint32
    memory*: Devicememory
    memoryoffset*: Devicesize
    memorysize*: Devicesize

  Bindvideosessionmemoryinfokhr* = structvkbindvideosessionmemoryinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8136:3
  structvkvideosessioncreateinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8138:16
    pnext*: pointer
    queuefamilyindex*: uint32
    flags*: Videosessioncreateflagskhr
    pvideoprofile*: ptr Videoprofileinfokhr
    pictureformat*: Format
    maxcodedextent*: Extent2d
    referencepictureformat*: Format
    maxdpbslots*: uint32
    maxactivereferencepictures*: uint32
    pstdheaderversion*: ptr Extensionproperties

  Videosessioncreateinfokhr* = structvkvideosessioncreateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8150:3
  structvkvideosessionparameterscreateinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8152:16
    pnext*: pointer
    flags*: Videosessionparameterscreateflagskhr
    videosessionparameterstemplate*: Videosessionparameterskhr
    videosession*: Videosessionkhr

  Videosessionparameterscreateinfokhr* = structvkvideosessionparameterscreateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8158:3
  structvkvideosessionparametersupdateinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8160:16
    pnext*: pointer
    updatesequencecount*: uint32

  Videosessionparametersupdateinfokhr* = structvkvideosessionparametersupdateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8164:3
  structvkvideobegincodinginfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8166:16
    pnext*: pointer
    flags*: Videobegincodingflagskhr
    videosession*: Videosessionkhr
    videosessionparameters*: Videosessionparameterskhr
    referenceslotcount*: uint32
    preferenceslots*: ptr Videoreferenceslotinfokhr

  Videobegincodinginfokhr* = structvkvideobegincodinginfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8174:3
  structvkvideoendcodinginfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8176:16
    pnext*: pointer
    flags*: Videoendcodingflagskhr

  Videoendcodinginfokhr* = structvkvideoendcodinginfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8180:3
  structvkvideocodingcontrolinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8182:16
    pnext*: pointer
    flags*: Videocodingcontrolflagskhr

  Videocodingcontrolinfokhr* = structvkvideocodingcontrolinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8186:3
  Pfnvkgetphysicaldevicevideocapabilitieskhr* = proc (a0: Physicaldevice;
      a1: ptr Videoprofileinfokhr; a2: ptr Videocapabilitieskhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:8188:30
  Pfnvkgetphysicaldevicevideoformatpropertieskhr* = proc (a0: Physicaldevice;
      a1: ptr Physicaldevicevideoformatinfokhr; a2: ptr uint32;
      a3: ptr Videoformatpropertieskhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:8189:30
  Pfnvkcreatevideosessionkhr* = proc (a0: Device;
                                      a1: ptr Videosessioncreateinfokhr;
                                      a2: ptr Allocationcallbacks;
                                      a3: ptr Videosessionkhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:8190:30
  Pfnvkdestroyvideosessionkhr* = proc (a0: Device; a1: Videosessionkhr;
                                       a2: ptr Allocationcallbacks): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:8191:26
  Pfnvkgetvideosessionmemoryrequirementskhr* = proc (a0: Device;
      a1: Videosessionkhr; a2: ptr uint32;
      a3: ptr Videosessionmemoryrequirementskhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:8192:30
  Pfnvkbindvideosessionmemorykhr* = proc (a0: Device; a1: Videosessionkhr;
      a2: uint32; a3: ptr Bindvideosessionmemoryinfokhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:8193:30
  Pfnvkcreatevideosessionparameterskhr* = proc (a0: Device;
      a1: ptr Videosessionparameterscreateinfokhr; a2: ptr Allocationcallbacks;
      a3: ptr Videosessionparameterskhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:8194:30
  Pfnvkupdatevideosessionparameterskhr* = proc (a0: Device;
      a1: Videosessionparameterskhr; a2: ptr Videosessionparametersupdateinfokhr): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:8195:30
  Pfnvkdestroyvideosessionparameterskhr* = proc (a0: Device;
      a1: Videosessionparameterskhr; a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:8196:26
  Pfnvkcmdbeginvideocodingkhr* = proc (a0: Commandbuffer;
                                       a1: ptr Videobegincodinginfokhr): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:8197:26
  Pfnvkcmdendvideocodingkhr* = proc (a0: Commandbuffer;
                                     a1: ptr Videoendcodinginfokhr): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:8198:26
  Pfnvkcmdcontrolvideocodingkhr* = proc (a0: Commandbuffer;
      a1: ptr Videocodingcontrolinfokhr): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:8199:26
  Videodecodecapabilityflagbitskhr* = enumvkvideodecodecapabilityflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8275:3
  Videodecodecapabilityflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:8276:17
  Videodecodeusageflagbitskhr* = enumvkvideodecodeusageflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8284:3
  Videodecodeusageflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:8285:17
  Videodecodeflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:8286:17
  structvkvideodecodecapabilitieskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8287:16
    pnext*: pointer
    flags*: Videodecodecapabilityflagskhr

  Videodecodecapabilitieskhr* = structvkvideodecodecapabilitieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8291:3
  structvkvideodecodeusageinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8293:16
    pnext*: pointer
    videousagehints*: Videodecodeusageflagskhr

  Videodecodeusageinfokhr* = structvkvideodecodeusageinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8297:3
  structvkvideodecodeinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8299:16
    pnext*: pointer
    flags*: Videodecodeflagskhr
    srcbuffer*: Buffer
    srcbufferoffset*: Devicesize
    srcbufferrange*: Devicesize
    dstpictureresource*: Videopictureresourceinfokhr
    psetupreferenceslot*: ptr Videoreferenceslotinfokhr
    referenceslotcount*: uint32
    preferenceslots*: ptr Videoreferenceslotinfokhr

  Videodecodeinfokhr* = structvkvideodecodeinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8310:3
  Pfnvkcmddecodevideokhr* = proc (a0: Commandbuffer; a1: ptr Videodecodeinfokhr): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:8312:26
  Videoencodeh264capabilityflagbitskhr* = enumvkvideoencodeh264capabilityflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8339:3
  Videoencodeh264capabilityflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:8340:17
  Videoencodeh264stdflagbitskhr* = enumvkvideoencodeh264stdflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8364:3
  Videoencodeh264stdflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:8365:17
  Videoencodeh264ratecontrolflagbitskhr* = enumvkvideoencodeh264ratecontrolflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8374:3
  Videoencodeh264ratecontrolflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:8375:17
  structvkvideoencodeh264capabilitieskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8376:16
    pnext*: pointer
    flags*: Videoencodeh264capabilityflagskhr
    maxlevelidc*: Stdvideoh264levelidc
    maxslicecount*: uint32
    maxppicturel0referencecount*: uint32
    maxbpicturel0referencecount*: uint32
    maxl1referencecount*: uint32
    maxtemporallayercount*: uint32
    expectdyadictemporallayerpattern*: Bool32
    minqp*: int32
    maxqp*: int32
    prefersgopremainingframes*: Bool32
    requiresgopremainingframes*: Bool32
    stdsyntaxflags*: Videoencodeh264stdflagskhr

  Stdvideoh264levelidc* = enumstdvideoh264levelidc ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std.h:74:3
  Videoencodeh264capabilitieskhr* = structvkvideoencodeh264capabilitieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8392:3
  structvkvideoencodeh264qpkhr* {.pure, inheritable, bycopy.} = object
    qpi*: int32              ## Generated based on /usr/include/vulkan/vulkan_core.h:8394:16
    qpp*: int32
    qpb*: int32

  Videoencodeh264qpkhr* = structvkvideoencodeh264qpkhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8398:3
  structvkvideoencodeh264qualitylevelpropertieskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8400:16
    pnext*: pointer
    preferredratecontrolflags*: Videoencodeh264ratecontrolflagskhr
    preferredgopframecount*: uint32
    preferredidrperiod*: uint32
    preferredconsecutivebframecount*: uint32
    preferredtemporallayercount*: uint32
    preferredconstantqp*: Videoencodeh264qpkhr
    preferredmaxl0referencecount*: uint32
    preferredmaxl1referencecount*: uint32
    preferredstdentropycodingmodeflag*: Bool32

  Videoencodeh264qualitylevelpropertieskhr* = structvkvideoencodeh264qualitylevelpropertieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8412:3
  structvkvideoencodeh264sessioncreateinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8414:16
    pnext*: pointer
    usemaxlevelidc*: Bool32
    maxlevelidc*: Stdvideoh264levelidc

  Videoencodeh264sessioncreateinfokhr* = structvkvideoencodeh264sessioncreateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8419:3
  structvkvideoencodeh264sessionparametersaddinfokhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8421:16
    pnext*: pointer
    stdspscount*: uint32
    pstdspss*: ptr Stdvideoh264sequenceparameterset
    stdppscount*: uint32
    pstdppss*: ptr Stdvideoh264pictureparameterset

  Stdvideoh264sequenceparameterset* = structstdvideoh264sequenceparameterset ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std.h:280:3
  Stdvideoh264pictureparameterset* = structstdvideoh264pictureparameterset ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std.h:305:3
  Videoencodeh264sessionparametersaddinfokhr* = structvkvideoencodeh264sessionparametersaddinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8428:3
  structvkvideoencodeh264sessionparameterscreateinfokhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8430:16
    pnext*: pointer
    maxstdspscount*: uint32
    maxstdppscount*: uint32
    pparametersaddinfo*: ptr Videoencodeh264sessionparametersaddinfokhr

  Videoencodeh264sessionparameterscreateinfokhr* = structvkvideoencodeh264sessionparameterscreateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8436:3
  structvkvideoencodeh264sessionparametersgetinfokhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8438:16
    pnext*: pointer
    writestdsps*: Bool32
    writestdpps*: Bool32
    stdspsid*: uint32
    stdppsid*: uint32

  Videoencodeh264sessionparametersgetinfokhr* = structvkvideoencodeh264sessionparametersgetinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8445:3
  structvkvideoencodeh264sessionparametersfeedbackinfokhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8447:16
    pnext*: pointer
    hasstdspsoverrides*: Bool32
    hasstdppsoverrides*: Bool32

  Videoencodeh264sessionparametersfeedbackinfokhr* = structvkvideoencodeh264sessionparametersfeedbackinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8452:3
  structvkvideoencodeh264nalusliceinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8454:16
    pnext*: pointer
    constantqp*: int32
    pstdsliceheader*: ptr Stdvideoencodeh264sliceheader

  Stdvideoencodeh264sliceheader* = structstdvideoencodeh264sliceheader ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_encode.h:140:3
  Videoencodeh264nalusliceinfokhr* = structvkvideoencodeh264nalusliceinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8459:3
  structvkvideoencodeh264pictureinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8461:16
    pnext*: pointer
    nalusliceentrycount*: uint32
    pnalusliceentries*: ptr Videoencodeh264nalusliceinfokhr
    pstdpictureinfo*: ptr Stdvideoencodeh264pictureinfo
    generateprefixnalu*: Bool32

  Stdvideoencodeh264pictureinfo* = structstdvideoencodeh264pictureinfo ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_encode.h:117:3
  Videoencodeh264pictureinfokhr* = structvkvideoencodeh264pictureinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8468:3
  structvkvideoencodeh264dpbslotinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8470:16
    pnext*: pointer
    pstdreferenceinfo*: ptr Stdvideoencodeh264referenceinfo

  Stdvideoencodeh264referenceinfo* = structstdvideoencodeh264referenceinfo ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_encode.h:127:3
  Videoencodeh264dpbslotinfokhr* = structvkvideoencodeh264dpbslotinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8474:3
  structvkvideoencodeh264profileinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8476:16
    pnext*: pointer
    stdprofileidc*: Stdvideoh264profileidc

  Stdvideoh264profileidc* = enumstdvideoh264profileidc ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std.h:50:3
  Videoencodeh264profileinfokhr* = structvkvideoencodeh264profileinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8480:3
  structvkvideoencodeh264ratecontrolinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8482:16
    pnext*: pointer
    flags*: Videoencodeh264ratecontrolflagskhr
    gopframecount*: uint32
    idrperiod*: uint32
    consecutivebframecount*: uint32
    temporallayercount*: uint32

  Videoencodeh264ratecontrolinfokhr* = structvkvideoencodeh264ratecontrolinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8490:3
  structvkvideoencodeh264framesizekhr* {.pure, inheritable, bycopy.} = object
    frameisize*: uint32      ## Generated based on /usr/include/vulkan/vulkan_core.h:8492:16
    framepsize*: uint32
    framebsize*: uint32

  Videoencodeh264framesizekhr* = structvkvideoencodeh264framesizekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8496:3
  structvkvideoencodeh264ratecontrollayerinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8498:16
    pnext*: pointer
    useminqp*: Bool32
    minqp*: Videoencodeh264qpkhr
    usemaxqp*: Bool32
    maxqp*: Videoencodeh264qpkhr
    usemaxframesize*: Bool32
    maxframesize*: Videoencodeh264framesizekhr

  Videoencodeh264ratecontrollayerinfokhr* = structvkvideoencodeh264ratecontrollayerinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8507:3
  structvkvideoencodeh264gopremainingframeinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8509:16
    pnext*: pointer
    usegopremainingframes*: Bool32
    gopremainingi*: uint32
    gopremainingp*: uint32
    gopremainingb*: uint32

  Videoencodeh264gopremainingframeinfokhr* = structvkvideoencodeh264gopremainingframeinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8516:3
  Videoencodeh265capabilityflagbitskhr* = enumvkvideoencodeh265capabilityflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8539:3
  Videoencodeh265capabilityflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:8540:17
  Videoencodeh265stdflagbitskhr* = enumvkvideoencodeh265stdflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8565:3
  Videoencodeh265stdflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:8566:17
  Videoencodeh265ctbsizeflagbitskhr* = enumvkvideoencodeh265ctbsizeflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8573:3
  Videoencodeh265ctbsizeflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:8574:17
  Videoencodeh265transformblocksizeflagbitskhr* = enumvkvideoencodeh265transformblocksizeflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8582:3
  Videoencodeh265transformblocksizeflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:8583:17
  Videoencodeh265ratecontrolflagbitskhr* = enumvkvideoencodeh265ratecontrolflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8592:3
  Videoencodeh265ratecontrolflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:8593:17
  structvkvideoencodeh265capabilitieskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8594:16
    pnext*: pointer
    flags*: Videoencodeh265capabilityflagskhr
    maxlevelidc*: Stdvideoh265levelidc
    maxslicesegmentcount*: uint32
    maxtiles*: Extent2d
    ctbsizes*: Videoencodeh265ctbsizeflagskhr
    transformblocksizes*: Videoencodeh265transformblocksizeflagskhr
    maxppicturel0referencecount*: uint32
    maxbpicturel0referencecount*: uint32
    maxl1referencecount*: uint32
    maxsublayercount*: uint32
    expectdyadictemporalsublayerpattern*: Bool32
    minqp*: int32
    maxqp*: int32
    prefersgopremainingframes*: Bool32
    requiresgopremainingframes*: Bool32
    stdsyntaxflags*: Videoencodeh265stdflagskhr

  Stdvideoh265levelidc* = enumstdvideoh265levelidc ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:84:3
  Videoencodeh265capabilitieskhr* = structvkvideoencodeh265capabilitieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8613:3
  structvkvideoencodeh265sessioncreateinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8615:16
    pnext*: pointer
    usemaxlevelidc*: Bool32
    maxlevelidc*: Stdvideoh265levelidc

  Videoencodeh265sessioncreateinfokhr* = structvkvideoencodeh265sessioncreateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8620:3
  structvkvideoencodeh265qpkhr* {.pure, inheritable, bycopy.} = object
    qpi*: int32              ## Generated based on /usr/include/vulkan/vulkan_core.h:8622:16
    qpp*: int32
    qpb*: int32

  Videoencodeh265qpkhr* = structvkvideoencodeh265qpkhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8626:3
  structvkvideoencodeh265qualitylevelpropertieskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8628:16
    pnext*: pointer
    preferredratecontrolflags*: Videoencodeh265ratecontrolflagskhr
    preferredgopframecount*: uint32
    preferredidrperiod*: uint32
    preferredconsecutivebframecount*: uint32
    preferredsublayercount*: uint32
    preferredconstantqp*: Videoencodeh265qpkhr
    preferredmaxl0referencecount*: uint32
    preferredmaxl1referencecount*: uint32

  Videoencodeh265qualitylevelpropertieskhr* = structvkvideoencodeh265qualitylevelpropertieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8639:3
  structvkvideoencodeh265sessionparametersaddinfokhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8641:16
    pnext*: pointer
    stdvpscount*: uint32
    pstdvpss*: ptr Stdvideoh265videoparameterset
    stdspscount*: uint32
    pstdspss*: ptr Stdvideoh265sequenceparameterset
    stdppscount*: uint32
    pstdppss*: ptr Stdvideoh265pictureparameterset

  Stdvideoh265videoparameterset* = structstdvideoh265videoparameterset ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:201:3
  Stdvideoh265sequenceparameterset* = structstdvideoh265sequenceparameterset ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:366:3
  Stdvideoh265pictureparameterset* = structstdvideoh265pictureparameterset ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:439:3
  Videoencodeh265sessionparametersaddinfokhr* = structvkvideoencodeh265sessionparametersaddinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8650:3
  structvkvideoencodeh265sessionparameterscreateinfokhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8652:16
    pnext*: pointer
    maxstdvpscount*: uint32
    maxstdspscount*: uint32
    maxstdppscount*: uint32
    pparametersaddinfo*: ptr Videoencodeh265sessionparametersaddinfokhr

  Videoencodeh265sessionparameterscreateinfokhr* = structvkvideoencodeh265sessionparameterscreateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8659:3
  structvkvideoencodeh265sessionparametersgetinfokhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8661:16
    pnext*: pointer
    writestdvps*: Bool32
    writestdsps*: Bool32
    writestdpps*: Bool32
    stdvpsid*: uint32
    stdspsid*: uint32
    stdppsid*: uint32

  Videoencodeh265sessionparametersgetinfokhr* = structvkvideoencodeh265sessionparametersgetinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8670:3
  structvkvideoencodeh265sessionparametersfeedbackinfokhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8672:16
    pnext*: pointer
    hasstdvpsoverrides*: Bool32
    hasstdspsoverrides*: Bool32
    hasstdppsoverrides*: Bool32

  Videoencodeh265sessionparametersfeedbackinfokhr* = structvkvideoencodeh265sessionparametersfeedbackinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8678:3
  structvkvideoencodeh265naluslicesegmentinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8680:16
    pnext*: pointer
    constantqp*: int32
    pstdslicesegmentheader*: ptr Stdvideoencodeh265slicesegmentheader

  Stdvideoencodeh265slicesegmentheader* = structstdvideoencodeh265slicesegmentheader ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_encode.h:83:3
  Videoencodeh265naluslicesegmentinfokhr* = structvkvideoencodeh265naluslicesegmentinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8685:3
  structvkvideoencodeh265pictureinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8687:16
    pnext*: pointer
    naluslicesegmententrycount*: uint32
    pnaluslicesegmententries*: ptr Videoencodeh265naluslicesegmentinfokhr
    pstdpictureinfo*: ptr Stdvideoencodeh265pictureinfo

  Stdvideoencodeh265pictureinfo* = structstdvideoencodeh265pictureinfo ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_encode.h:137:3
  Videoencodeh265pictureinfokhr* = structvkvideoencodeh265pictureinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8693:3
  structvkvideoencodeh265dpbslotinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8695:16
    pnext*: pointer
    pstdreferenceinfo*: ptr Stdvideoencodeh265referenceinfo

  Stdvideoencodeh265referenceinfo* = structstdvideoencodeh265referenceinfo ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_encode.h:150:3
  Videoencodeh265dpbslotinfokhr* = structvkvideoencodeh265dpbslotinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8699:3
  structvkvideoencodeh265profileinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8701:16
    pnext*: pointer
    stdprofileidc*: Stdvideoh265profileidc

  Stdvideoh265profileidc* = enumstdvideoh265profileidc ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:66:3
  Videoencodeh265profileinfokhr* = structvkvideoencodeh265profileinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8705:3
  structvkvideoencodeh265ratecontrolinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8707:16
    pnext*: pointer
    flags*: Videoencodeh265ratecontrolflagskhr
    gopframecount*: uint32
    idrperiod*: uint32
    consecutivebframecount*: uint32
    sublayercount*: uint32

  Videoencodeh265ratecontrolinfokhr* = structvkvideoencodeh265ratecontrolinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8715:3
  structvkvideoencodeh265framesizekhr* {.pure, inheritable, bycopy.} = object
    frameisize*: uint32      ## Generated based on /usr/include/vulkan/vulkan_core.h:8717:16
    framepsize*: uint32
    framebsize*: uint32

  Videoencodeh265framesizekhr* = structvkvideoencodeh265framesizekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8721:3
  structvkvideoencodeh265ratecontrollayerinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8723:16
    pnext*: pointer
    useminqp*: Bool32
    minqp*: Videoencodeh265qpkhr
    usemaxqp*: Bool32
    maxqp*: Videoencodeh265qpkhr
    usemaxframesize*: Bool32
    maxframesize*: Videoencodeh265framesizekhr

  Videoencodeh265ratecontrollayerinfokhr* = structvkvideoencodeh265ratecontrollayerinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8732:3
  structvkvideoencodeh265gopremainingframeinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8734:16
    pnext*: pointer
    usegopremainingframes*: Bool32
    gopremainingi*: uint32
    gopremainingp*: uint32
    gopremainingb*: uint32

  Videoencodeh265gopremainingframeinfokhr* = structvkvideoencodeh265gopremainingframeinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8741:3
  Videodecodeh264picturelayoutflagbitskhr* = enumvkvideodecodeh264picturelayoutflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8756:3
  Videodecodeh264picturelayoutflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:8757:17
  structvkvideodecodeh264profileinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8758:16
    pnext*: pointer
    stdprofileidc*: Stdvideoh264profileidc
    picturelayout*: Videodecodeh264picturelayoutflagbitskhr

  Videodecodeh264profileinfokhr* = structvkvideodecodeh264profileinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8763:3
  structvkvideodecodeh264capabilitieskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8765:16
    pnext*: pointer
    maxlevelidc*: Stdvideoh264levelidc
    fieldoffsetgranularity*: Offset2d

  Videodecodeh264capabilitieskhr* = structvkvideodecodeh264capabilitieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8770:3
  structvkvideodecodeh264sessionparametersaddinfokhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8772:16
    pnext*: pointer
    stdspscount*: uint32
    pstdspss*: ptr Stdvideoh264sequenceparameterset
    stdppscount*: uint32
    pstdppss*: ptr Stdvideoh264pictureparameterset

  Videodecodeh264sessionparametersaddinfokhr* = structvkvideodecodeh264sessionparametersaddinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8779:3
  structvkvideodecodeh264sessionparameterscreateinfokhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8781:16
    pnext*: pointer
    maxstdspscount*: uint32
    maxstdppscount*: uint32
    pparametersaddinfo*: ptr Videodecodeh264sessionparametersaddinfokhr

  Videodecodeh264sessionparameterscreateinfokhr* = structvkvideodecodeh264sessionparameterscreateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8787:3
  structvkvideodecodeh264pictureinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8789:16
    pnext*: pointer
    pstdpictureinfo*: ptr Stdvideodecodeh264pictureinfo
    slicecount*: uint32
    psliceoffsets*: ptr uint32

  Stdvideodecodeh264pictureinfo* = structstdvideodecodeh264pictureinfo ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_decode.h:56:3
  Videodecodeh264pictureinfokhr* = structvkvideodecodeh264pictureinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8795:3
  structvkvideodecodeh264dpbslotinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8797:16
    pnext*: pointer
    pstdreferenceinfo*: ptr Stdvideodecodeh264referenceinfo

  Stdvideodecodeh264referenceinfo* = structstdvideodecodeh264referenceinfo ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_decode.h:70:3
  Videodecodeh264dpbslotinfokhr* = structvkvideodecodeh264dpbslotinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8801:3
  Renderingflagskhr* = Renderingflags ## Generated based on /usr/include/vulkan/vulkan_core.h:8809:26
  Renderingflagbitskhr* = Renderingflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:8811:29
  Renderinginfokhr* = Renderinginfo ## Generated based on /usr/include/vulkan/vulkan_core.h:8813:25
  Renderingattachmentinfokhr* = Renderingattachmentinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:8815:35
  Pipelinerenderingcreateinfokhr* = Pipelinerenderingcreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:8817:39
  Physicaldevicedynamicrenderingfeatureskhr* = Physicaldevicedynamicrenderingfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:8819:50
  Commandbufferinheritancerenderinginfokhr* = Commandbufferinheritancerenderinginfo ## Generated based on /usr/include/vulkan/vulkan_core.h:8821:49
  structvkrenderingfragmentshadingrateattachmentinfokhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8823:16
    pnext*: pointer
    imageview*: Imageview
    imagelayout*: Imagelayout
    shadingrateattachmenttexelsize*: Extent2d

  Renderingfragmentshadingrateattachmentinfokhr* = structvkrenderingfragmentshadingrateattachmentinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:8829:3
  structvkrenderingfragmentdensitymapattachmentinfoext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8831:16
    pnext*: pointer
    imageview*: Imageview
    imagelayout*: Imagelayout

  Renderingfragmentdensitymapattachmentinfoext* = structvkrenderingfragmentdensitymapattachmentinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:8836:3
  structvkattachmentsamplecountinfoamd* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8838:16
    pnext*: pointer
    colorattachmentcount*: uint32
    pcolorattachmentsamples*: ptr Samplecountflagbits
    depthstencilattachmentsamples*: Samplecountflagbits

  Attachmentsamplecountinfoamd* = structvkattachmentsamplecountinfoamd ## Generated based on /usr/include/vulkan/vulkan_core.h:8844:3
  Attachmentsamplecountinfonv* = Attachmentsamplecountinfoamd ## Generated based on /usr/include/vulkan/vulkan_core.h:8846:40
  structvkmultiviewperviewattributesinfonvx* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:8848:16
    pnext*: pointer
    perviewattributes*: Bool32
    perviewattributespositionxonly*: Bool32

  Multiviewperviewattributesinfonvx* = structvkmultiviewperviewattributesinfonvx ## Generated based on /usr/include/vulkan/vulkan_core.h:8853:3
  Pfnvkcmdbeginrenderingkhr* = proc (a0: Commandbuffer; a1: ptr Renderinginfo): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:8855:26
  Pfnvkcmdendrenderingkhr* = proc (a0: Commandbuffer): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:8856:26
  Renderpassmultiviewcreateinfokhr* = Renderpassmultiviewcreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:8872:41
  Physicaldevicemultiviewfeatureskhr* = Physicaldevicemultiviewfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:8874:43
  Physicaldevicemultiviewpropertieskhr* = Physicaldevicemultiviewproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:8876:45
  Physicaldevicefeatures2khr* = Physicaldevicefeatures2 ## Generated based on /usr/include/vulkan/vulkan_core.h:8884:35
  Physicaldeviceproperties2khr* = Physicaldeviceproperties2 ## Generated based on /usr/include/vulkan/vulkan_core.h:8886:37
  Formatproperties2khr* = Formatproperties2 ## Generated based on /usr/include/vulkan/vulkan_core.h:8888:29
  Imageformatproperties2khr* = Imageformatproperties2 ## Generated based on /usr/include/vulkan/vulkan_core.h:8890:34
  Physicaldeviceimageformatinfo2khr* = Physicaldeviceimageformatinfo2 ## Generated based on /usr/include/vulkan/vulkan_core.h:8892:42
  Queuefamilyproperties2khr* = Queuefamilyproperties2 ## Generated based on /usr/include/vulkan/vulkan_core.h:8894:34
  Physicaldevicememoryproperties2khr* = Physicaldevicememoryproperties2 ## Generated based on /usr/include/vulkan/vulkan_core.h:8896:43
  Sparseimageformatproperties2khr* = Sparseimageformatproperties2 ## Generated based on /usr/include/vulkan/vulkan_core.h:8898:40
  Physicaldevicesparseimageformatinfo2khr* = Physicaldevicesparseimageformatinfo2 ## Generated based on /usr/include/vulkan/vulkan_core.h:8900:48
  Pfnvkgetphysicaldevicefeatures2khr* = proc (a0: Physicaldevice;
      a1: ptr Physicaldevicefeatures2): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:8902:26
  Pfnvkgetphysicaldeviceproperties2khr* = proc (a0: Physicaldevice;
      a1: ptr Physicaldeviceproperties2): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:8903:26
  Pfnvkgetphysicaldeviceformatproperties2khr* = proc (a0: Physicaldevice;
      a1: Format; a2: ptr Formatproperties2): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:8904:26
  Pfnvkgetphysicaldeviceimageformatproperties2khr* = proc (a0: Physicaldevice;
      a1: ptr Physicaldeviceimageformatinfo2; a2: ptr Imageformatproperties2): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:8905:30
  Pfnvkgetphysicaldevicequeuefamilyproperties2khr* = proc (a0: Physicaldevice;
      a1: ptr uint32; a2: ptr Queuefamilyproperties2): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:8906:26
  Pfnvkgetphysicaldevicememoryproperties2khr* = proc (a0: Physicaldevice;
      a1: ptr Physicaldevicememoryproperties2): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:8907:26
  Pfnvkgetphysicaldevicesparseimageformatproperties2khr* = proc (
      a0: Physicaldevice; a1: ptr Physicaldevicesparseimageformatinfo2;
      a2: ptr uint32; a3: ptr Sparseimageformatproperties2): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:8908:26
  Peermemoryfeatureflagskhr* = Peermemoryfeatureflags ## Generated based on /usr/include/vulkan/vulkan_core.h:8950:34
  Peermemoryfeatureflagbitskhr* = Peermemoryfeatureflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:8952:37
  Memoryallocateflagskhr* = Memoryallocateflags ## Generated based on /usr/include/vulkan/vulkan_core.h:8954:31
  Memoryallocateflagbitskhr* = Memoryallocateflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:8956:34
  Memoryallocateflagsinfokhr* = Memoryallocateflagsinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:8958:35
  Devicegrouprenderpassbegininfokhr* = Devicegrouprenderpassbegininfo ## Generated based on /usr/include/vulkan/vulkan_core.h:8960:42
  Devicegroupcommandbufferbegininfokhr* = Devicegroupcommandbufferbegininfo ## Generated based on /usr/include/vulkan/vulkan_core.h:8962:45
  Devicegroupsubmitinfokhr* = Devicegroupsubmitinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:8964:33
  Devicegroupbindsparseinfokhr* = Devicegroupbindsparseinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:8966:37
  Bindbuffermemorydevicegroupinfokhr* = Bindbuffermemorydevicegroupinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:8968:43
  Bindimagememorydevicegroupinfokhr* = Bindimagememorydevicegroupinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:8970:42
  Pfnvkgetdevicegrouppeermemoryfeatureskhr* = proc (a0: Device; a1: uint32;
      a2: uint32; a3: uint32; a4: ptr Peermemoryfeatureflags): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:8972:26
  Pfnvkcmdsetdevicemaskkhr* = proc (a0: Commandbuffer; a1: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:8973:26
  Pfnvkcmddispatchbasekhr* = proc (a0: Commandbuffer; a1: uint32; a2: uint32;
                                   a3: uint32; a4: uint32; a5: uint32;
                                   a6: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:8974:26
  Commandpooltrimflagskhr* = Commandpooltrimflags ## Generated based on /usr/include/vulkan/vulkan_core.h:9011:32
  Pfnvktrimcommandpoolkhr* = proc (a0: Device; a1: Commandpool;
                                   a2: Commandpooltrimflags): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:9013:26
  Physicaldevicegrouppropertieskhr* = Physicaldevicegroupproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:9028:41
  Devicegroupdevicecreateinfokhr* = Devicegroupdevicecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:9030:39
  Pfnvkenumeratephysicaldevicegroupskhr* = proc (a0: Instance; a1: ptr uint32;
      a2: ptr Physicaldevicegroupproperties): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:9032:30
  Externalmemoryhandletypeflagskhr* = Externalmemoryhandletypeflags ## Generated based on /usr/include/vulkan/vulkan_core.h:9047:41
  Externalmemoryhandletypeflagbitskhr* = Externalmemoryhandletypeflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:9049:44
  Externalmemoryfeatureflagskhr* = Externalmemoryfeatureflags ## Generated based on /usr/include/vulkan/vulkan_core.h:9051:38
  Externalmemoryfeatureflagbitskhr* = Externalmemoryfeatureflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:9053:41
  Externalmemorypropertieskhr* = Externalmemoryproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:9055:36
  Physicaldeviceexternalimageformatinfokhr* = Physicaldeviceexternalimageformatinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:9057:49
  Externalimageformatpropertieskhr* = Externalimageformatproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:9059:41
  Physicaldeviceexternalbufferinfokhr* = Physicaldeviceexternalbufferinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:9061:44
  Externalbufferpropertieskhr* = Externalbufferproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:9063:36
  Physicaldeviceidpropertieskhr* = Physicaldeviceidproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:9065:38
  Pfnvkgetphysicaldeviceexternalbufferpropertieskhr* = proc (a0: Physicaldevice;
      a1: ptr Physicaldeviceexternalbufferinfo; a2: ptr Externalbufferproperties): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:9067:26
  Externalmemoryimagecreateinfokhr* = Externalmemoryimagecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:9082:41
  Externalmemorybuffercreateinfokhr* = Externalmemorybuffercreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:9084:42
  Exportmemoryallocateinfokhr* = Exportmemoryallocateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:9086:36
  structvkimportmemoryfdinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9094:16
    pnext*: pointer
    handletype*: Externalmemoryhandletypeflagbits
    fd*: cint

  Importmemoryfdinfokhr* = structvkimportmemoryfdinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9099:3
  structvkmemoryfdpropertieskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9101:16
    pnext*: pointer
    memorytypebits*: uint32

  Memoryfdpropertieskhr* = structvkmemoryfdpropertieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9105:3
  structvkmemorygetfdinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9107:16
    pnext*: pointer
    memory*: Devicememory
    handletype*: Externalmemoryhandletypeflagbits

  Memorygetfdinfokhr* = structvkmemorygetfdinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9112:3
  Pfnvkgetmemoryfdkhr* = proc (a0: Device; a1: ptr Memorygetfdinfokhr;
                               a2: ptr cint): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:9114:30
  Pfnvkgetmemoryfdpropertieskhr* = proc (a0: Device;
      a1: Externalmemoryhandletypeflagbits; a2: cint;
      a3: ptr Memoryfdpropertieskhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:9115:30
  Externalsemaphorehandletypeflagskhr* = Externalsemaphorehandletypeflags ## Generated based on /usr/include/vulkan/vulkan_core.h:9135:44
  Externalsemaphorehandletypeflagbitskhr* = Externalsemaphorehandletypeflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:9137:47
  Externalsemaphorefeatureflagskhr* = Externalsemaphorefeatureflags ## Generated based on /usr/include/vulkan/vulkan_core.h:9139:41
  Externalsemaphorefeatureflagbitskhr* = Externalsemaphorefeatureflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:9141:44
  Physicaldeviceexternalsemaphoreinfokhr* = Physicaldeviceexternalsemaphoreinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:9143:47
  Externalsemaphorepropertieskhr* = Externalsemaphoreproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:9145:39
  Pfnvkgetphysicaldeviceexternalsemaphorepropertieskhr* = proc (
      a0: Physicaldevice; a1: ptr Physicaldeviceexternalsemaphoreinfo;
      a2: ptr Externalsemaphoreproperties): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:9147:26
  Semaphoreimportflagskhr* = Semaphoreimportflags ## Generated based on /usr/include/vulkan/vulkan_core.h:9161:32
  Semaphoreimportflagbitskhr* = Semaphoreimportflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:9163:35
  Exportsemaphorecreateinfokhr* = Exportsemaphorecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:9165:37
  structvkimportsemaphorefdinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9173:16
    pnext*: pointer
    semaphore*: Semaphore
    flags*: Semaphoreimportflags
    handletype*: Externalsemaphorehandletypeflagbits
    fd*: cint

  Importsemaphorefdinfokhr* = structvkimportsemaphorefdinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9180:3
  structvksemaphoregetfdinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9182:16
    pnext*: pointer
    semaphore*: Semaphore
    handletype*: Externalsemaphorehandletypeflagbits

  Semaphoregetfdinfokhr* = structvksemaphoregetfdinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9187:3
  Pfnvkimportsemaphorefdkhr* = proc (a0: Device;
                                     a1: ptr Importsemaphorefdinfokhr): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:9189:30
  Pfnvkgetsemaphorefdkhr* = proc (a0: Device; a1: ptr Semaphoregetfdinfokhr;
                                  a2: ptr cint): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:9190:30
  structvkphysicaldevicepushdescriptorpropertieskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9208:16
    pnext*: pointer
    maxpushdescriptors*: uint32

  Physicaldevicepushdescriptorpropertieskhr* = structvkphysicaldevicepushdescriptorpropertieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9212:3
  Pfnvkcmdpushdescriptorsetkhr* = proc (a0: Commandbuffer;
                                        a1: Pipelinebindpoint;
                                        a2: Pipelinelayout; a3: uint32;
                                        a4: uint32; a5: ptr Writedescriptorset): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:9214:26
  Pfnvkcmdpushdescriptorsetwithtemplatekhr* = proc (a0: Commandbuffer;
      a1: Descriptorupdatetemplate; a2: Pipelinelayout; a3: uint32; a4: pointer): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:9215:26
  Physicaldeviceshaderfloat16int8featureskhr* = Physicaldeviceshaderfloat16int8features ## Generated based on /usr/include/vulkan/vulkan_core.h:9239:51
  Physicaldevicefloat16int8featureskhr* = Physicaldeviceshaderfloat16int8features ## Generated based on /usr/include/vulkan/vulkan_core.h:9241:51
  Physicaldevice16bitstoragefeatureskhr* = Physicaldevice16bitstoragefeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:9249:46
  structvkrectlayerkhr* {.pure, inheritable, bycopy.} = object
    offset*: Offset2d        ## Generated based on /usr/include/vulkan/vulkan_core.h:9257:16
    extent*: Extent2d
    layer*: uint32

  Rectlayerkhr* = structvkrectlayerkhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9261:3
  structvkpresentregionkhr* {.pure, inheritable, bycopy.} = object
    rectanglecount*: uint32  ## Generated based on /usr/include/vulkan/vulkan_core.h:9263:16
    prectangles*: ptr Rectlayerkhr

  Presentregionkhr* = structvkpresentregionkhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9266:3
  structvkpresentregionskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9268:16
    pnext*: pointer
    swapchaincount*: uint32
    pregions*: ptr Presentregionkhr

  Presentregionskhr* = structvkpresentregionskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9273:3
  Descriptorupdatetemplatekhr* = Descriptorupdatetemplate ## Generated based on /usr/include/vulkan/vulkan_core.h:9279:36
  Descriptorupdatetemplatetypekhr* = Descriptorupdatetemplatetype ## Generated based on /usr/include/vulkan/vulkan_core.h:9283:40
  Descriptorupdatetemplatecreateflagskhr* = Descriptorupdatetemplatecreateflags ## Generated based on /usr/include/vulkan/vulkan_core.h:9285:47
  Descriptorupdatetemplateentrykhr* = Descriptorupdatetemplateentry ## Generated based on /usr/include/vulkan/vulkan_core.h:9287:41
  Descriptorupdatetemplatecreateinfokhr* = Descriptorupdatetemplatecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:9289:46
  Pfnvkcreatedescriptorupdatetemplatekhr* = proc (a0: Device;
      a1: ptr Descriptorupdatetemplatecreateinfo; a2: ptr Allocationcallbacks;
      a3: ptr Descriptorupdatetemplate): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:9291:30
  Pfnvkdestroydescriptorupdatetemplatekhr* = proc (a0: Device;
      a1: Descriptorupdatetemplate; a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:9292:26
  Pfnvkupdatedescriptorsetwithtemplatekhr* = proc (a0: Device;
      a1: Descriptorset; a2: Descriptorupdatetemplate; a3: pointer): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:9293:26
  Physicaldeviceimagelessframebufferfeatureskhr* = Physicaldeviceimagelessframebufferfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:9319:54
  Framebufferattachmentscreateinfokhr* = Framebufferattachmentscreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:9321:44
  Framebufferattachmentimageinfokhr* = Framebufferattachmentimageinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:9323:42
  Renderpassattachmentbegininfokhr* = Renderpassattachmentbegininfo ## Generated based on /usr/include/vulkan/vulkan_core.h:9325:41
  Renderpasscreateinfo2khr* = Renderpasscreateinfo2 ## Generated based on /usr/include/vulkan/vulkan_core.h:9333:33
  Attachmentdescription2khr* = Attachmentdescription2 ## Generated based on /usr/include/vulkan/vulkan_core.h:9335:34
  Attachmentreference2khr* = Attachmentreference2 ## Generated based on /usr/include/vulkan/vulkan_core.h:9337:32
  Subpassdescription2khr* = Subpassdescription2 ## Generated based on /usr/include/vulkan/vulkan_core.h:9339:31
  Subpassdependency2khr* = Subpassdependency2 ## Generated based on /usr/include/vulkan/vulkan_core.h:9341:30
  Subpassbegininfokhr* = Subpassbegininfo ## Generated based on /usr/include/vulkan/vulkan_core.h:9343:28
  Subpassendinfokhr* = Subpassendinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:9345:26
  Pfnvkcreaterenderpass2khr* = proc (a0: Device; a1: ptr Renderpasscreateinfo2;
                                     a2: ptr Allocationcallbacks;
                                     a3: ptr Renderpass): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:9347:30
  Pfnvkcmdbeginrenderpass2khr* = proc (a0: Commandbuffer;
                                       a1: ptr Renderpassbegininfo;
                                       a2: ptr Subpassbegininfo): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:9348:26
  Pfnvkcmdnextsubpass2khr* = proc (a0: Commandbuffer; a1: ptr Subpassbegininfo;
                                   a2: ptr Subpassendinfo): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:9349:26
  Pfnvkcmdendrenderpass2khr* = proc (a0: Commandbuffer; a1: ptr Subpassendinfo): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:9350:26
  structvksharedpresentsurfacecapabilitieskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9379:16
    pnext*: pointer
    sharedpresentsupportedusageflags*: Imageusageflags

  Sharedpresentsurfacecapabilitieskhr* = structvksharedpresentsurfacecapabilitieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9383:3
  Pfnvkgetswapchainstatuskhr* = proc (a0: Device; a1: Swapchainkhr): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:9385:30
  Externalfencehandletypeflagskhr* = Externalfencehandletypeflags ## Generated based on /usr/include/vulkan/vulkan_core.h:9398:40
  Externalfencehandletypeflagbitskhr* = Externalfencehandletypeflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:9400:43
  Externalfencefeatureflagskhr* = Externalfencefeatureflags ## Generated based on /usr/include/vulkan/vulkan_core.h:9402:37
  Externalfencefeatureflagbitskhr* = Externalfencefeatureflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:9404:40
  Physicaldeviceexternalfenceinfokhr* = Physicaldeviceexternalfenceinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:9406:43
  Externalfencepropertieskhr* = Externalfenceproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:9408:35
  Pfnvkgetphysicaldeviceexternalfencepropertieskhr* = proc (a0: Physicaldevice;
      a1: ptr Physicaldeviceexternalfenceinfo; a2: ptr Externalfenceproperties): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:9410:26
  Fenceimportflagskhr* = Fenceimportflags ## Generated based on /usr/include/vulkan/vulkan_core.h:9424:28
  Fenceimportflagbitskhr* = Fenceimportflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:9426:31
  Exportfencecreateinfokhr* = Exportfencecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:9428:33
  structvkimportfencefdinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9436:16
    pnext*: pointer
    fence*: Fence
    flags*: Fenceimportflags
    handletype*: Externalfencehandletypeflagbits
    fd*: cint

  Importfencefdinfokhr* = structvkimportfencefdinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9443:3
  structvkfencegetfdinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9445:16
    pnext*: pointer
    fence*: Fence
    handletype*: Externalfencehandletypeflagbits

  Fencegetfdinfokhr* = structvkfencegetfdinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9450:3
  Pfnvkimportfencefdkhr* = proc (a0: Device; a1: ptr Importfencefdinfokhr): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:9452:30
  Pfnvkgetfencefdkhr* = proc (a0: Device; a1: ptr Fencegetfdinfokhr;
                              a2: ptr cint): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:9453:30
  Performancecounterunitkhr* = enumvkperformancecounterunitkhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9485:3
  Performancecounterscopekhr* = enumvkperformancecounterscopekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9495:3
  Performancecounterstoragekhr* = enumvkperformancecounterstoragekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9505:3
  Performancecounterdescriptionflagbitskhr* = enumvkperformancecounterdescriptionflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9513:3
  Performancecounterdescriptionflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:9514:17
  Acquireprofilinglockflagbitskhr* = enumvkacquireprofilinglockflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9518:3
  Acquireprofilinglockflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:9519:17
  structvkphysicaldeviceperformancequeryfeatureskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9520:16
    pnext*: pointer
    performancecounterquerypools*: Bool32
    performancecountermultiplequerypools*: Bool32

  Physicaldeviceperformancequeryfeatureskhr* = structvkphysicaldeviceperformancequeryfeatureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9525:3
  structvkphysicaldeviceperformancequerypropertieskhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9527:16
    pnext*: pointer
    allowcommandbufferquerycopies*: Bool32

  Physicaldeviceperformancequerypropertieskhr* = structvkphysicaldeviceperformancequerypropertieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9531:3
  structvkperformancecounterkhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9533:16
    pnext*: pointer
    unit*: Performancecounterunitkhr
    scope*: Performancecounterscopekhr
    storage*: Performancecounterstoragekhr
    uuid*: array[16'i64, uint8]

  Performancecounterkhr* = structvkperformancecounterkhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9540:3
  structvkperformancecounterdescriptionkhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9542:16
    pnext*: pointer
    flags*: Performancecounterdescriptionflagskhr
    name*: array[256'i64, cschar]
    category*: array[256'i64, cschar]
    description*: array[256'i64, cschar]

  Performancecounterdescriptionkhr* = structvkperformancecounterdescriptionkhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9549:3
  structvkquerypoolperformancecreateinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9551:16
    pnext*: pointer
    queuefamilyindex*: uint32
    counterindexcount*: uint32
    pcounterindices*: ptr uint32

  Querypoolperformancecreateinfokhr* = structvkquerypoolperformancecreateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9557:3
  unionvkperformancecounterresultkhr* {.union, bycopy.} = object
    int32*: int32            ## Generated based on /usr/include/vulkan/vulkan_core.h:9559:15
    int64*: int64
    uint32*: uint32
    uint64*: uint64
    float32*: cfloat
    float64*: cdouble

  Performancecounterresultkhr* = unionvkperformancecounterresultkhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9566:3
  structvkacquireprofilinglockinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9568:16
    pnext*: pointer
    flags*: Acquireprofilinglockflagskhr
    timeout*: uint64

  Acquireprofilinglockinfokhr* = structvkacquireprofilinglockinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9573:3
  structvkperformancequerysubmitinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9575:16
    pnext*: pointer
    counterpassindex*: uint32

  Performancequerysubmitinfokhr* = structvkperformancequerysubmitinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9579:3
  Pfnvkenumeratephysicaldevicequeuefamilyperformancequerycounterskhr* = proc (
      a0: Physicaldevice; a1: uint32; a2: ptr uint32;
      a3: ptr Performancecounterkhr; a4: ptr Performancecounterdescriptionkhr): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:9581:30
  Pfnvkgetphysicaldevicequeuefamilyperformancequerypasseskhr* = proc (
      a0: Physicaldevice; a1: ptr Querypoolperformancecreateinfokhr;
      a2: ptr uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:9582:26
  Pfnvkacquireprofilinglockkhr* = proc (a0: Device;
                                        a1: ptr Acquireprofilinglockinfokhr): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:9583:30
  Pfnvkreleaseprofilinglockkhr* = proc (a0: Device): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:9584:26
  Pointclippingbehaviorkhr* = Pointclippingbehavior ## Generated based on /usr/include/vulkan/vulkan_core.h:9614:33
  Tessellationdomainoriginkhr* = Tessellationdomainorigin ## Generated based on /usr/include/vulkan/vulkan_core.h:9616:36
  Physicaldevicepointclippingpropertieskhr* = Physicaldevicepointclippingproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:9618:49
  Renderpassinputattachmentaspectcreateinfokhr* = Renderpassinputattachmentaspectcreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:9620:53
  Inputattachmentaspectreferencekhr* = Inputattachmentaspectreference ## Generated based on /usr/include/vulkan/vulkan_core.h:9622:42
  Imageviewusagecreateinfokhr* = Imageviewusagecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:9624:36
  Pipelinetessellationdomainoriginstatecreateinfokhr* = Pipelinetessellationdomainoriginstatecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:9626:59
  structvkphysicaldevicesurfaceinfo2khr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9634:16
    pnext*: pointer
    surface*: Surfacekhr

  Physicaldevicesurfaceinfo2khr* = structvkphysicaldevicesurfaceinfo2khr ## Generated based on /usr/include/vulkan/vulkan_core.h:9638:3
  structvksurfacecapabilities2khr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9640:16
    pnext*: pointer
    surfacecapabilities*: Surfacecapabilitieskhr

  Surfacecapabilities2khr* = structvksurfacecapabilities2khr ## Generated based on /usr/include/vulkan/vulkan_core.h:9644:3
  structvksurfaceformat2khr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9646:16
    pnext*: pointer
    surfaceformat*: Surfaceformatkhr

  Surfaceformat2khr* = structvksurfaceformat2khr ## Generated based on /usr/include/vulkan/vulkan_core.h:9650:3
  Pfnvkgetphysicaldevicesurfacecapabilities2khr* = proc (a0: Physicaldevice;
      a1: ptr Physicaldevicesurfaceinfo2khr; a2: ptr Surfacecapabilities2khr): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:9652:30
  Pfnvkgetphysicaldevicesurfaceformats2khr* = proc (a0: Physicaldevice;
      a1: ptr Physicaldevicesurfaceinfo2khr; a2: ptr uint32;
      a3: ptr Surfaceformat2khr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:9653:30
  Physicaldevicevariablepointerfeatureskhr* = Physicaldevicevariablepointersfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:9673:50
  Physicaldevicevariablepointersfeatureskhr* = Physicaldevicevariablepointersfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:9675:50
  structvkdisplayproperties2khr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9683:16
    pnext*: pointer
    displayproperties*: Displaypropertieskhr

  Displayproperties2khr* = structvkdisplayproperties2khr ## Generated based on /usr/include/vulkan/vulkan_core.h:9687:3
  structvkdisplayplaneproperties2khr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9689:16
    pnext*: pointer
    displayplaneproperties*: Displayplanepropertieskhr

  Displayplaneproperties2khr* = structvkdisplayplaneproperties2khr ## Generated based on /usr/include/vulkan/vulkan_core.h:9693:3
  structvkdisplaymodeproperties2khr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9695:16
    pnext*: pointer
    displaymodeproperties*: Displaymodepropertieskhr

  Displaymodeproperties2khr* = structvkdisplaymodeproperties2khr ## Generated based on /usr/include/vulkan/vulkan_core.h:9699:3
  structvkdisplayplaneinfo2khr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9701:16
    pnext*: pointer
    mode*: Displaymodekhr
    planeindex*: uint32

  Displayplaneinfo2khr* = structvkdisplayplaneinfo2khr ## Generated based on /usr/include/vulkan/vulkan_core.h:9706:3
  structvkdisplayplanecapabilities2khr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9708:16
    pnext*: pointer
    capabilities*: Displayplanecapabilitieskhr

  Displayplanecapabilities2khr* = structvkdisplayplanecapabilities2khr ## Generated based on /usr/include/vulkan/vulkan_core.h:9712:3
  Pfnvkgetphysicaldevicedisplayproperties2khr* = proc (a0: Physicaldevice;
      a1: ptr uint32; a2: ptr Displayproperties2khr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:9714:30
  Pfnvkgetphysicaldevicedisplayplaneproperties2khr* = proc (a0: Physicaldevice;
      a1: ptr uint32; a2: ptr Displayplaneproperties2khr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:9715:30
  Pfnvkgetdisplaymodeproperties2khr* = proc (a0: Physicaldevice; a1: Displaykhr;
      a2: ptr uint32; a3: ptr Displaymodeproperties2khr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:9716:30
  Pfnvkgetdisplayplanecapabilities2khr* = proc (a0: Physicaldevice;
      a1: ptr Displayplaneinfo2khr; a2: ptr Displayplanecapabilities2khr): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:9717:30
  Memorydedicatedrequirementskhr* = Memorydedicatedrequirements ## Generated based on /usr/include/vulkan/vulkan_core.h:9747:39
  Memorydedicatedallocateinfokhr* = Memorydedicatedallocateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:9749:39
  Buffermemoryrequirementsinfo2khr* = Buffermemoryrequirementsinfo2 ## Generated based on /usr/include/vulkan/vulkan_core.h:9769:41
  Imagememoryrequirementsinfo2khr* = Imagememoryrequirementsinfo2 ## Generated based on /usr/include/vulkan/vulkan_core.h:9771:40
  Imagesparsememoryrequirementsinfo2khr* = Imagesparsememoryrequirementsinfo2 ## Generated based on /usr/include/vulkan/vulkan_core.h:9773:46
  Memoryrequirements2khr* = Memoryrequirements2 ## Generated based on /usr/include/vulkan/vulkan_core.h:9775:31
  Sparseimagememoryrequirements2khr* = Sparseimagememoryrequirements2 ## Generated based on /usr/include/vulkan/vulkan_core.h:9777:42
  Pfnvkgetimagememoryrequirements2khr* = proc (a0: Device;
      a1: ptr Imagememoryrequirementsinfo2; a2: ptr Memoryrequirements2): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:9779:26
  Pfnvkgetbuffermemoryrequirements2khr* = proc (a0: Device;
      a1: ptr Buffermemoryrequirementsinfo2; a2: ptr Memoryrequirements2): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:9780:26
  Pfnvkgetimagesparsememoryrequirements2khr* = proc (a0: Device;
      a1: ptr Imagesparsememoryrequirementsinfo2; a2: ptr uint32;
      a3: ptr Sparseimagememoryrequirements2): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:9781:26
  Imageformatlistcreateinfokhr* = Imageformatlistcreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:9806:37
  Samplerycbcrconversionkhr* = Samplerycbcrconversion ## Generated based on /usr/include/vulkan/vulkan_core.h:9812:34
  Samplerycbcrmodelconversionkhr* = Samplerycbcrmodelconversion ## Generated based on /usr/include/vulkan/vulkan_core.h:9816:39
  Samplerycbcrrangekhr* = Samplerycbcrrange ## Generated based on /usr/include/vulkan/vulkan_core.h:9818:29
  Chromalocationkhr* = Chromalocation ## Generated based on /usr/include/vulkan/vulkan_core.h:9820:26
  Samplerycbcrconversioncreateinfokhr* = Samplerycbcrconversioncreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:9822:44
  Samplerycbcrconversioninfokhr* = Samplerycbcrconversioninfo ## Generated based on /usr/include/vulkan/vulkan_core.h:9824:38
  Bindimageplanememoryinfokhr* = Bindimageplanememoryinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:9826:36
  Imageplanememoryrequirementsinfokhr* = Imageplanememoryrequirementsinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:9828:44
  Physicaldevicesamplerycbcrconversionfeatureskhr* = Physicaldevicesamplerycbcrconversionfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:9830:56
  Samplerycbcrconversionimageformatpropertieskhr* = Samplerycbcrconversionimageformatproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:9832:55
  Pfnvkcreatesamplerycbcrconversionkhr* = proc (a0: Device;
      a1: ptr Samplerycbcrconversioncreateinfo; a2: ptr Allocationcallbacks;
      a3: ptr Samplerycbcrconversion): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:9834:30
  Pfnvkdestroysamplerycbcrconversionkhr* = proc (a0: Device;
      a1: Samplerycbcrconversion; a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:9835:26
  Bindbuffermemoryinfokhr* = Bindbuffermemoryinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:9855:32
  Bindimagememoryinfokhr* = Bindimagememoryinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:9857:31
  Pfnvkbindbuffermemory2khr* = proc (a0: Device; a1: uint32;
                                     a2: ptr Bindbuffermemoryinfo): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:9859:30
  Pfnvkbindimagememory2khr* = proc (a0: Device; a1: uint32;
                                    a2: ptr Bindimagememoryinfo): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:9860:30
  Physicaldevicemaintenance3propertieskhr* = Physicaldevicemaintenance3properties ## Generated based on /usr/include/vulkan/vulkan_core.h:9881:48
  Descriptorsetlayoutsupportkhr* = Descriptorsetlayoutsupport ## Generated based on /usr/include/vulkan/vulkan_core.h:9883:38
  Pfnvkgetdescriptorsetlayoutsupportkhr* = proc (a0: Device;
      a1: ptr Descriptorsetlayoutcreateinfo; a2: ptr Descriptorsetlayoutsupport): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:9885:26
  Pfnvkcmddrawindirectcountkhr* = proc (a0: Commandbuffer; a1: Buffer;
                                        a2: Devicesize; a3: Buffer;
                                        a4: Devicesize; a5: uint32; a6: uint32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:9899:26
  Pfnvkcmddrawindexedindirectcountkhr* = proc (a0: Commandbuffer; a1: Buffer;
      a2: Devicesize; a3: Buffer; a4: Devicesize; a5: uint32; a6: uint32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:9900:26
  Physicaldeviceshadersubgroupextendedtypesfeatureskhr* = Physicaldeviceshadersubgroupextendedtypesfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:9927:61
  Physicaldevice8bitstoragefeatureskhr* = Physicaldevice8bitstoragefeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:9935:45
  Physicaldeviceshaderatomicint64featureskhr* = Physicaldeviceshaderatomicint64features ## Generated based on /usr/include/vulkan/vulkan_core.h:9943:51
  structvkphysicaldeviceshaderclockfeatureskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9951:16
    pnext*: pointer
    shadersubgroupclock*: Bool32
    shaderdeviceclock*: Bool32

  Physicaldeviceshaderclockfeatureskhr* = structvkphysicaldeviceshaderclockfeatureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9956:3
  structvkvideodecodeh265profileinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9965:16
    pnext*: pointer
    stdprofileidc*: Stdvideoh265profileidc

  Videodecodeh265profileinfokhr* = structvkvideodecodeh265profileinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9969:3
  structvkvideodecodeh265capabilitieskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9971:16
    pnext*: pointer
    maxlevelidc*: Stdvideoh265levelidc

  Videodecodeh265capabilitieskhr* = structvkvideodecodeh265capabilitieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9975:3
  structvkvideodecodeh265sessionparametersaddinfokhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9977:16
    pnext*: pointer
    stdvpscount*: uint32
    pstdvpss*: ptr Stdvideoh265videoparameterset
    stdspscount*: uint32
    pstdspss*: ptr Stdvideoh265sequenceparameterset
    stdppscount*: uint32
    pstdppss*: ptr Stdvideoh265pictureparameterset

  Videodecodeh265sessionparametersaddinfokhr* = structvkvideodecodeh265sessionparametersaddinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9986:3
  structvkvideodecodeh265sessionparameterscreateinfokhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9988:16
    pnext*: pointer
    maxstdvpscount*: uint32
    maxstdspscount*: uint32
    maxstdppscount*: uint32
    pparametersaddinfo*: ptr Videodecodeh265sessionparametersaddinfokhr

  Videodecodeh265sessionparameterscreateinfokhr* = structvkvideodecodeh265sessionparameterscreateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:9995:3
  structvkvideodecodeh265pictureinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:9997:16
    pnext*: pointer
    pstdpictureinfo*: ptr Stdvideodecodeh265pictureinfo
    slicesegmentcount*: uint32
    pslicesegmentoffsets*: ptr uint32

  Stdvideodecodeh265pictureinfo* = structstdvideodecodeh265pictureinfo ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_decode.h:50:3
  Videodecodeh265pictureinfokhr* = structvkvideodecodeh265pictureinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10003:3
  structvkvideodecodeh265dpbslotinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10005:16
    pnext*: pointer
    pstdreferenceinfo*: ptr Stdvideodecodeh265referenceinfo

  Stdvideodecodeh265referenceinfo* = structstdvideodecodeh265referenceinfo ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_decode.h:60:3
  Videodecodeh265dpbslotinfokhr* = structvkvideodecodeh265dpbslotinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10009:3
  Queueglobalprioritykhr* = enumvkqueueglobalprioritykhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10029:3
  structvkdevicequeueglobalprioritycreateinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10030:16
    pnext*: pointer
    globalpriority*: Queueglobalprioritykhr

  Devicequeueglobalprioritycreateinfokhr* = structvkdevicequeueglobalprioritycreateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10034:3
  structvkphysicaldeviceglobalpriorityqueryfeatureskhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10036:16
    pnext*: pointer
    globalpriorityquery*: Bool32

  Physicaldeviceglobalpriorityqueryfeatureskhr* = structvkphysicaldeviceglobalpriorityqueryfeatureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10040:3
  structvkqueuefamilyglobalprioritypropertieskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10042:16
    pnext*: pointer
    prioritycount*: uint32
    priorities*: array[16'i64, Queueglobalprioritykhr]

  Queuefamilyglobalprioritypropertieskhr* = structvkqueuefamilyglobalprioritypropertieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10047:3
  Driveridkhr* = Driverid    ## Generated based on /usr/include/vulkan/vulkan_core.h:10057:20
  Conformanceversionkhr* = Conformanceversion ## Generated based on /usr/include/vulkan/vulkan_core.h:10059:30
  Physicaldevicedriverpropertieskhr* = Physicaldevicedriverproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:10061:42
  Shaderfloatcontrolsindependencekhr* = Shaderfloatcontrolsindependence ## Generated based on /usr/include/vulkan/vulkan_core.h:10069:43
  Physicaldevicefloatcontrolspropertieskhr* = Physicaldevicefloatcontrolsproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:10071:49
  Resolvemodeflagbitskhr* = Resolvemodeflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:10079:31
  Resolvemodeflagskhr* = Resolvemodeflags ## Generated based on /usr/include/vulkan/vulkan_core.h:10081:28
  Subpassdescriptiondepthstencilresolvekhr* = Subpassdescriptiondepthstencilresolve ## Generated based on /usr/include/vulkan/vulkan_core.h:10083:49
  Physicaldevicedepthstencilresolvepropertieskhr* = Physicaldevicedepthstencilresolveproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:10085:55
  Semaphoretypekhr* = Semaphoretype ## Generated based on /usr/include/vulkan/vulkan_core.h:10099:25
  Semaphorewaitflagbitskhr* = Semaphorewaitflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:10101:33
  Semaphorewaitflagskhr* = Semaphorewaitflags ## Generated based on /usr/include/vulkan/vulkan_core.h:10103:30
  Physicaldevicetimelinesemaphorefeatureskhr* = Physicaldevicetimelinesemaphorefeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:10105:51
  Physicaldevicetimelinesemaphorepropertieskhr* = Physicaldevicetimelinesemaphoreproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:10107:53
  Semaphoretypecreateinfokhr* = Semaphoretypecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:10109:35
  Timelinesemaphoresubmitinfokhr* = Timelinesemaphoresubmitinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:10111:39
  Semaphorewaitinfokhr* = Semaphorewaitinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:10113:29
  Semaphoresignalinfokhr* = Semaphoresignalinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:10115:31
  Pfnvkgetsemaphorecountervaluekhr* = proc (a0: Device; a1: Semaphore;
      a2: ptr uint64): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:10117:30
  Pfnvkwaitsemaphoreskhr* = proc (a0: Device; a1: ptr Semaphorewaitinfo;
                                  a2: uint64): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:10118:30
  Pfnvksignalsemaphorekhr* = proc (a0: Device; a1: ptr Semaphoresignalinfo): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:10119:30
  Physicaldevicevulkanmemorymodelfeatureskhr* = Physicaldevicevulkanmemorymodelfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:10142:51
  Physicaldeviceshaderterminateinvocationfeatureskhr* = Physicaldeviceshaderterminateinvocationfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:10150:59
  Fragmentshadingratecombineropkhr* = enumvkfragmentshadingratecombineropkhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10166:3
  structvkfragmentshadingrateattachmentinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10167:16
    pnext*: pointer
    pfragmentshadingrateattachment*: ptr Attachmentreference2
    shadingrateattachmenttexelsize*: Extent2d

  Fragmentshadingrateattachmentinfokhr* = structvkfragmentshadingrateattachmentinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10172:3
  structvkpipelinefragmentshadingratestatecreateinfokhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10174:16
    pnext*: pointer
    fragmentsize*: Extent2d
    combinerops*: array[2'i64, Fragmentshadingratecombineropkhr]

  Pipelinefragmentshadingratestatecreateinfokhr* = structvkpipelinefragmentshadingratestatecreateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10179:3
  structvkphysicaldevicefragmentshadingratefeatureskhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10181:16
    pnext*: pointer
    pipelinefragmentshadingrate*: Bool32
    primitivefragmentshadingrate*: Bool32
    attachmentfragmentshadingrate*: Bool32

  Physicaldevicefragmentshadingratefeatureskhr* = structvkphysicaldevicefragmentshadingratefeatureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10187:3
  structvkphysicaldevicefragmentshadingratepropertieskhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10189:16
    pnext*: pointer
    minfragmentshadingrateattachmenttexelsize*: Extent2d
    maxfragmentshadingrateattachmenttexelsize*: Extent2d
    maxfragmentshadingrateattachmenttexelsizeaspectratio*: uint32
    primitivefragmentshadingratewithmultipleviewports*: Bool32
    layeredshadingrateattachments*: Bool32
    fragmentshadingratenontrivialcombinerops*: Bool32
    maxfragmentsize*: Extent2d
    maxfragmentsizeaspectratio*: uint32
    maxfragmentshadingratecoveragesamples*: uint32
    maxfragmentshadingraterasterizationsamples*: Samplecountflagbits
    fragmentshadingratewithshaderdepthstencilwrites*: Bool32
    fragmentshadingratewithsamplemask*: Bool32
    fragmentshadingratewithshadersamplemask*: Bool32
    fragmentshadingratewithconservativerasterization*: Bool32
    fragmentshadingratewithfragmentshaderinterlock*: Bool32
    fragmentshadingratewithcustomsamplelocations*: Bool32
    fragmentshadingratestrictmultiplycombiner*: Bool32

  Physicaldevicefragmentshadingratepropertieskhr* = structvkphysicaldevicefragmentshadingratepropertieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10209:3
  structvkphysicaldevicefragmentshadingratekhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10211:16
    pnext*: pointer
    samplecounts*: Samplecountflags
    fragmentsize*: Extent2d

  Physicaldevicefragmentshadingratekhr* = structvkphysicaldevicefragmentshadingratekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10216:3
  Pfnvkgetphysicaldevicefragmentshadingrateskhr* = proc (a0: Physicaldevice;
      a1: ptr uint32; a2: ptr Physicaldevicefragmentshadingratekhr): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:10218:30
  Pfnvkcmdsetfragmentshadingratekhr* = proc (a0: Commandbuffer;
      a1: ptr Extent2d; a2: array[2'i64, Fragmentshadingratecombineropkhr]): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:10219:26
  structvkphysicaldevicedynamicrenderinglocalreadfeatureskhr* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10238:16
    pnext*: pointer
    dynamicrenderinglocalread*: Bool32

  Physicaldevicedynamicrenderinglocalreadfeatureskhr* = structvkphysicaldevicedynamicrenderinglocalreadfeatureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10242:3
  structvkrenderingattachmentlocationinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10244:16
    pnext*: pointer
    colorattachmentcount*: uint32
    pcolorattachmentlocations*: ptr uint32

  Renderingattachmentlocationinfokhr* = structvkrenderingattachmentlocationinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10249:3
  structvkrenderinginputattachmentindexinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10251:16
    pnext*: pointer
    colorattachmentcount*: uint32
    pcolorattachmentinputindices*: ptr uint32
    pdepthinputattachmentindex*: ptr uint32
    pstencilinputattachmentindex*: ptr uint32

  Renderinginputattachmentindexinfokhr* = structvkrenderinginputattachmentindexinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10258:3
  Pfnvkcmdsetrenderingattachmentlocationskhr* = proc (a0: Commandbuffer;
      a1: ptr Renderingattachmentlocationinfokhr): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:10260:26
  Pfnvkcmdsetrenderinginputattachmentindiceskhr* = proc (a0: Commandbuffer;
      a1: ptr Renderinginputattachmentindexinfokhr): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:10261:26
  structvkphysicaldeviceshaderquadcontrolfeatureskhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10278:16
    pnext*: pointer
    shaderquadcontrol*: Bool32

  Physicaldeviceshaderquadcontrolfeatureskhr* = structvkphysicaldeviceshaderquadcontrolfeatureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10282:3
  structvksurfaceprotectedcapabilitieskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10296:16
    pnext*: pointer
    supportsprotected*: Bool32

  Surfaceprotectedcapabilitieskhr* = structvksurfaceprotectedcapabilitieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10300:3
  Physicaldeviceseparatedepthstencillayoutsfeatureskhr* = Physicaldeviceseparatedepthstencillayoutsfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:10308:61
  Attachmentreferencestencillayoutkhr* = Attachmentreferencestencillayout ## Generated based on /usr/include/vulkan/vulkan_core.h:10310:44
  Attachmentdescriptionstencillayoutkhr* = Attachmentdescriptionstencillayout ## Generated based on /usr/include/vulkan/vulkan_core.h:10312:46
  structvkphysicaldevicepresentwaitfeatureskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10320:16
    pnext*: pointer
    presentwait*: Bool32

  Physicaldevicepresentwaitfeatureskhr* = structvkphysicaldevicepresentwaitfeatureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10324:3
  Pfnvkwaitforpresentkhr* = proc (a0: Device; a1: Swapchainkhr; a2: uint64;
                                  a3: uint64): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:10326:30
  Physicaldeviceuniformbufferstandardlayoutfeatureskhr* = Physicaldeviceuniformbufferstandardlayoutfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:10341:61
  Physicaldevicebufferdeviceaddressfeatureskhr* = Physicaldevicebufferdeviceaddressfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:10349:53
  Bufferdeviceaddressinfokhr* = Bufferdeviceaddressinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:10351:35
  Bufferopaquecaptureaddresscreateinfokhr* = Bufferopaquecaptureaddresscreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:10353:48
  Memoryopaquecaptureaddressallocateinfokhr* = Memoryopaquecaptureaddressallocateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:10355:50
  Devicememoryopaquecaptureaddressinfokhr* = Devicememoryopaquecaptureaddressinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:10357:48
  Pfnvkgetbufferdeviceaddresskhr* = proc (a0: Device;
      a1: ptr Bufferdeviceaddressinfo): Deviceaddress {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:10359:37
  Pfnvkgetbufferopaquecaptureaddresskhr* = proc (a0: Device;
      a1: ptr Bufferdeviceaddressinfo): uint64 {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:10360:30
  Pfnvkgetdevicememoryopaquecaptureaddresskhr* = proc (a0: Device;
      a1: ptr Devicememoryopaquecaptureaddressinfo): uint64 {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:10361:30
  Deferredoperationkhr* = ptr structvkdeferredoperationkhrt ## Generated based on /usr/include/vulkan/vulkan_core.h:10380:1
  Pfnvkcreatedeferredoperationkhr* = proc (a0: Device;
      a1: ptr Allocationcallbacks; a2: ptr Deferredoperationkhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:10383:30
  Pfnvkdestroydeferredoperationkhr* = proc (a0: Device;
      a1: Deferredoperationkhr; a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:10384:26
  Pfnvkgetdeferredoperationmaxconcurrencykhr* = proc (a0: Device;
      a1: Deferredoperationkhr): uint32 {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:10385:30
  Pfnvkgetdeferredoperationresultkhr* = proc (a0: Device;
      a1: Deferredoperationkhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:10386:30
  Pfnvkdeferredoperationjoinkhr* = proc (a0: Device; a1: Deferredoperationkhr): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:10387:30
  Pipelineexecutablestatisticformatkhr* = enumvkpipelineexecutablestatisticformatkhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10425:3
  structvkphysicaldevicepipelineexecutablepropertiesfeatureskhr* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10426:16
    pnext*: pointer
    pipelineexecutableinfo*: Bool32

  Physicaldevicepipelineexecutablepropertiesfeatureskhr* = structvkphysicaldevicepipelineexecutablepropertiesfeatureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10430:3
  structvkpipelineinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10432:16
    pnext*: pointer
    pipeline*: Pipeline

  Pipelineinfokhr* = structvkpipelineinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10436:3
  structvkpipelineexecutablepropertieskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10438:16
    pnext*: pointer
    stages*: Shaderstageflags
    name*: array[256'i64, cschar]
    description*: array[256'i64, cschar]
    subgroupsize*: uint32

  Pipelineexecutablepropertieskhr* = structvkpipelineexecutablepropertieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10445:3
  structvkpipelineexecutableinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10447:16
    pnext*: pointer
    pipeline*: Pipeline
    executableindex*: uint32

  Pipelineexecutableinfokhr* = structvkpipelineexecutableinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10452:3
  unionvkpipelineexecutablestatisticvaluekhr* {.union, bycopy.} = object
    b32*: Bool32             ## Generated based on /usr/include/vulkan/vulkan_core.h:10454:15
    i64*: int64
    u64*: uint64
    f64*: cdouble

  Pipelineexecutablestatisticvaluekhr* = unionvkpipelineexecutablestatisticvaluekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10459:3
  structvkpipelineexecutablestatistickhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10461:16
    pnext*: pointer
    name*: array[256'i64, cschar]
    description*: array[256'i64, cschar]
    format*: Pipelineexecutablestatisticformatkhr
    value*: Pipelineexecutablestatisticvaluekhr

  Pipelineexecutablestatistickhr* = structvkpipelineexecutablestatistickhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10468:3
  structvkpipelineexecutableinternalrepresentationkhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10470:16
    pnext*: pointer
    name*: array[256'i64, cschar]
    description*: array[256'i64, cschar]
    istext*: Bool32
    datasize*: csize_t
    pdata*: pointer

  Pipelineexecutableinternalrepresentationkhr* = structvkpipelineexecutableinternalrepresentationkhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10478:3
  Pfnvkgetpipelineexecutablepropertieskhr* = proc (a0: Device;
      a1: ptr Pipelineinfokhr; a2: ptr uint32;
      a3: ptr Pipelineexecutablepropertieskhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:10480:30
  Pfnvkgetpipelineexecutablestatisticskhr* = proc (a0: Device;
      a1: ptr Pipelineexecutableinfokhr; a2: ptr uint32;
      a3: ptr Pipelineexecutablestatistickhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:10481:30
  Pfnvkgetpipelineexecutableinternalrepresentationskhr* = proc (a0: Device;
      a1: ptr Pipelineexecutableinfokhr; a2: ptr uint32;
      a3: ptr Pipelineexecutableinternalrepresentationkhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:10482:30
  Memoryunmapflagbitskhr* = enumvkmemoryunmapflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10513:3
  Memoryunmapflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:10514:17
  structvkmemorymapinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10515:16
    pnext*: pointer
    flags*: Memorymapflags
    memory*: Devicememory
    offset*: Devicesize
    size*: Devicesize

  Memorymapinfokhr* = structvkmemorymapinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10522:3
  structvkmemoryunmapinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10524:16
    pnext*: pointer
    flags*: Memoryunmapflagskhr
    memory*: Devicememory

  Memoryunmapinfokhr* = structvkmemoryunmapinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10529:3
  Pfnvkmapmemory2khr* = proc (a0: Device; a1: ptr Memorymapinfokhr;
                              a2: ptr pointer): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:10531:30
  Pfnvkunmapmemory2khr* = proc (a0: Device; a1: ptr Memoryunmapinfokhr): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:10532:30
  Physicaldeviceshaderintegerdotproductfeatureskhr* = Physicaldeviceshaderintegerdotproductfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:10550:57
  Physicaldeviceshaderintegerdotproductpropertieskhr* = Physicaldeviceshaderintegerdotproductproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:10552:59
  structvkpipelinelibrarycreateinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10560:16
    pnext*: pointer
    librarycount*: uint32
    plibraries*: ptr Pipeline

  Pipelinelibrarycreateinfokhr* = structvkpipelinelibrarycreateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10565:3
  structvkpresentidkhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10579:16
    pnext*: pointer
    swapchaincount*: uint32
    ppresentids*: ptr uint64

  Presentidkhr* = structvkpresentidkhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10584:3
  structvkphysicaldevicepresentidfeatureskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10586:16
    pnext*: pointer
    presentid*: Bool32

  Physicaldevicepresentidfeatureskhr* = structvkphysicaldevicepresentidfeatureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10590:3
  Videoencodetuningmodekhr* = enumvkvideoencodetuningmodekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10606:3
  Videoencodeflagbitskhr* = enumvkvideoencodeflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10610:3
  Videoencodeflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:10611:17
  Videoencodecapabilityflagbitskhr* = enumvkvideoencodecapabilityflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10617:3
  Videoencodecapabilityflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:10618:17
  Videoencoderatecontrolmodeflagbitskhr* = enumvkvideoencoderatecontrolmodeflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10626:3
  Videoencoderatecontrolmodeflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:10627:17
  Videoencodefeedbackflagbitskhr* = enumvkvideoencodefeedbackflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10634:3
  Videoencodefeedbackflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:10635:17
  Videoencodeusageflagbitskhr* = enumvkvideoencodeusageflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10644:3
  Videoencodeusageflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:10645:17
  Videoencodecontentflagbitskhr* = enumvkvideoencodecontentflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10653:3
  Videoencodecontentflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:10654:17
  Videoencoderatecontrolflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:10655:17
  structvkvideoencodeinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10656:16
    pnext*: pointer
    flags*: Videoencodeflagskhr
    dstbuffer*: Buffer
    dstbufferoffset*: Devicesize
    dstbufferrange*: Devicesize
    srcpictureresource*: Videopictureresourceinfokhr
    psetupreferenceslot*: ptr Videoreferenceslotinfokhr
    referenceslotcount*: uint32
    preferenceslots*: ptr Videoreferenceslotinfokhr
    precedingexternallyencodedbytes*: uint32

  Videoencodeinfokhr* = structvkvideoencodeinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10668:3
  structvkvideoencodecapabilitieskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10670:16
    pnext*: pointer
    flags*: Videoencodecapabilityflagskhr
    ratecontrolmodes*: Videoencoderatecontrolmodeflagskhr
    maxratecontrollayers*: uint32
    maxbitrate*: uint64
    maxqualitylevels*: uint32
    encodeinputpicturegranularity*: Extent2d
    supportedencodefeedbackflags*: Videoencodefeedbackflagskhr

  Videoencodecapabilitieskhr* = structvkvideoencodecapabilitieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10680:3
  structvkquerypoolvideoencodefeedbackcreateinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10682:16
    pnext*: pointer
    encodefeedbackflags*: Videoencodefeedbackflagskhr

  Querypoolvideoencodefeedbackcreateinfokhr* = structvkquerypoolvideoencodefeedbackcreateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10686:3
  structvkvideoencodeusageinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10688:16
    pnext*: pointer
    videousagehints*: Videoencodeusageflagskhr
    videocontenthints*: Videoencodecontentflagskhr
    tuningmode*: Videoencodetuningmodekhr

  Videoencodeusageinfokhr* = structvkvideoencodeusageinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10694:3
  structvkvideoencoderatecontrollayerinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10696:16
    pnext*: pointer
    averagebitrate*: uint64
    maxbitrate*: uint64
    frameratenumerator*: uint32
    frameratedenominator*: uint32

  Videoencoderatecontrollayerinfokhr* = structvkvideoencoderatecontrollayerinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10703:3
  structvkvideoencoderatecontrolinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10705:16
    pnext*: pointer
    flags*: Videoencoderatecontrolflagskhr
    ratecontrolmode*: Videoencoderatecontrolmodeflagbitskhr
    layercount*: uint32
    players*: ptr Videoencoderatecontrollayerinfokhr
    virtualbuffersizeinms*: uint32
    initialvirtualbuffersizeinms*: uint32

  Videoencoderatecontrolinfokhr* = structvkvideoencoderatecontrolinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10714:3
  structvkphysicaldevicevideoencodequalitylevelinfokhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10716:16
    pnext*: pointer
    pvideoprofile*: ptr Videoprofileinfokhr
    qualitylevel*: uint32

  Physicaldevicevideoencodequalitylevelinfokhr* = structvkphysicaldevicevideoencodequalitylevelinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10721:3
  structvkvideoencodequalitylevelpropertieskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10723:16
    pnext*: pointer
    preferredratecontrolmode*: Videoencoderatecontrolmodeflagbitskhr
    preferredratecontrollayercount*: uint32

  Videoencodequalitylevelpropertieskhr* = structvkvideoencodequalitylevelpropertieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10728:3
  structvkvideoencodequalitylevelinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10730:16
    pnext*: pointer
    qualitylevel*: uint32

  Videoencodequalitylevelinfokhr* = structvkvideoencodequalitylevelinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10734:3
  structvkvideoencodesessionparametersgetinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10736:16
    pnext*: pointer
    videosessionparameters*: Videosessionparameterskhr

  Videoencodesessionparametersgetinfokhr* = structvkvideoencodesessionparametersgetinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10740:3
  structvkvideoencodesessionparametersfeedbackinfokhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10742:16
    pnext*: pointer
    hasoverrides*: Bool32

  Videoencodesessionparametersfeedbackinfokhr* = structvkvideoencodesessionparametersfeedbackinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10746:3
  Pfnvkgetphysicaldevicevideoencodequalitylevelpropertieskhr* = proc (
      a0: Physicaldevice; a1: ptr Physicaldevicevideoencodequalitylevelinfokhr;
      a2: ptr Videoencodequalitylevelpropertieskhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:10748:30
  Pfnvkgetencodedvideosessionparameterskhr* = proc (a0: Device;
      a1: ptr Videoencodesessionparametersgetinfokhr;
      a2: ptr Videoencodesessionparametersfeedbackinfokhr; a3: ptr csize_t;
      a4: pointer): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:10749:30
  Pfnvkcmdencodevideokhr* = proc (a0: Commandbuffer; a1: ptr Videoencodeinfokhr): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:10750:26
  Pipelinestageflags2khr* = Pipelinestageflags2 ## Generated based on /usr/include/vulkan/vulkan_core.h:10775:31
  Pipelinestageflagbits2khr* = Pipelinestageflagbits2 ## Generated based on /usr/include/vulkan/vulkan_core.h:10777:34
  Accessflags2khr* = Accessflags2 ## Generated based on /usr/include/vulkan/vulkan_core.h:10779:24
  Accessflagbits2khr* = Accessflagbits2 ## Generated based on /usr/include/vulkan/vulkan_core.h:10781:27
  Submitflagbitskhr* = Submitflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:10783:26
  Submitflagskhr* = Submitflags ## Generated based on /usr/include/vulkan/vulkan_core.h:10785:23
  Memorybarrier2khr* = Memorybarrier2 ## Generated based on /usr/include/vulkan/vulkan_core.h:10787:26
  Buffermemorybarrier2khr* = Buffermemorybarrier2 ## Generated based on /usr/include/vulkan/vulkan_core.h:10789:32
  Imagememorybarrier2khr* = Imagememorybarrier2 ## Generated based on /usr/include/vulkan/vulkan_core.h:10791:31
  Dependencyinfokhr* = Dependencyinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:10793:26
  Submitinfo2khr* = Submitinfo2 ## Generated based on /usr/include/vulkan/vulkan_core.h:10795:23
  Semaphoresubmitinfokhr* = Semaphoresubmitinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:10797:31
  Commandbuffersubmitinfokhr* = Commandbuffersubmitinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:10799:35
  Physicaldevicesynchronization2featureskhr* = Physicaldevicesynchronization2features ## Generated based on /usr/include/vulkan/vulkan_core.h:10801:50
  structvkqueuefamilycheckpointproperties2nv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10803:16
    pnext*: pointer
    checkpointexecutionstagemask*: Pipelinestageflags2

  Queuefamilycheckpointproperties2nv* = structvkqueuefamilycheckpointproperties2nv ## Generated based on /usr/include/vulkan/vulkan_core.h:10807:3
  structvkcheckpointdata2nv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10809:16
    pnext*: pointer
    stage*: Pipelinestageflags2
    pcheckpointmarker*: pointer

  Checkpointdata2nv* = structvkcheckpointdata2nv ## Generated based on /usr/include/vulkan/vulkan_core.h:10814:3
  Pfnvkcmdsetevent2khr* = proc (a0: Commandbuffer; a1: Event;
                                a2: ptr Dependencyinfo): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:10816:26
  Pfnvkcmdresetevent2khr* = proc (a0: Commandbuffer; a1: Event;
                                  a2: Pipelinestageflags2): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:10817:26
  Pfnvkcmdwaitevents2khr* = proc (a0: Commandbuffer; a1: uint32; a2: ptr Event;
                                  a3: ptr Dependencyinfo): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:10818:26
  Pfnvkcmdpipelinebarrier2khr* = proc (a0: Commandbuffer; a1: ptr Dependencyinfo): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:10819:26
  Pfnvkcmdwritetimestamp2khr* = proc (a0: Commandbuffer;
                                      a1: Pipelinestageflags2; a2: Querypool;
                                      a3: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:10820:26
  Pfnvkqueuesubmit2khr* = proc (a0: Queue; a1: uint32; a2: ptr Submitinfo2;
                                a3: Fence): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:10821:30
  Pfnvkcmdwritebuffermarker2amd* = proc (a0: Commandbuffer;
      a1: Pipelinestageflags2; a2: Buffer; a3: Devicesize; a4: uint32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:10822:26
  Pfnvkgetqueuecheckpointdata2nv* = proc (a0: Queue; a1: ptr uint32;
      a2: ptr Checkpointdata2nv): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:10823:26
  structvkphysicaldevicefragmentshaderbarycentricfeatureskhr* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10876:16
    pnext*: pointer
    fragmentshaderbarycentric*: Bool32

  Physicaldevicefragmentshaderbarycentricfeatureskhr* = structvkphysicaldevicefragmentshaderbarycentricfeatureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10880:3
  structvkphysicaldevicefragmentshaderbarycentricpropertieskhr* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10882:16
    pnext*: pointer
    tristripvertexorderindependentofprovokingvertex*: Bool32

  Physicaldevicefragmentshaderbarycentricpropertieskhr* = structvkphysicaldevicefragmentshaderbarycentricpropertieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10886:3
  structvkphysicaldeviceshadersubgroupuniformcontrolflowfeatureskhr* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10894:16
    pnext*: pointer
    shadersubgroupuniformcontrolflow*: Bool32

  Physicaldeviceshadersubgroupuniformcontrolflowfeatureskhr* = structvkphysicaldeviceshadersubgroupuniformcontrolflowfeatureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10898:3
  Physicaldevicezeroinitializeworkgroupmemoryfeatureskhr* = Physicaldevicezeroinitializeworkgroupmemoryfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:10906:63
  structvkphysicaldeviceworkgroupmemoryexplicitlayoutfeatureskhr* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:10914:16
    pnext*: pointer
    workgroupmemoryexplicitlayout*: Bool32
    workgroupmemoryexplicitlayoutscalarblocklayout*: Bool32
    workgroupmemoryexplicitlayout8bitaccess*: Bool32
    workgroupmemoryexplicitlayout16bitaccess*: Bool32

  Physicaldeviceworkgroupmemoryexplicitlayoutfeatureskhr* = structvkphysicaldeviceworkgroupmemoryexplicitlayoutfeatureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:10921:3
  Copybufferinfo2khr* = Copybufferinfo2 ## Generated based on /usr/include/vulkan/vulkan_core.h:10929:27
  Copyimageinfo2khr* = Copyimageinfo2 ## Generated based on /usr/include/vulkan/vulkan_core.h:10931:26
  Copybuffertoimageinfo2khr* = Copybuffertoimageinfo2 ## Generated based on /usr/include/vulkan/vulkan_core.h:10933:34
  Copyimagetobufferinfo2khr* = Copyimagetobufferinfo2 ## Generated based on /usr/include/vulkan/vulkan_core.h:10935:34
  Blitimageinfo2khr* = Blitimageinfo2 ## Generated based on /usr/include/vulkan/vulkan_core.h:10937:26
  Resolveimageinfo2khr* = Resolveimageinfo2 ## Generated based on /usr/include/vulkan/vulkan_core.h:10939:29
  Buffercopy2khr* = Buffercopy2 ## Generated based on /usr/include/vulkan/vulkan_core.h:10941:23
  Imagecopy2khr* = Imagecopy2 ## Generated based on /usr/include/vulkan/vulkan_core.h:10943:22
  Imageblit2khr* = Imageblit2 ## Generated based on /usr/include/vulkan/vulkan_core.h:10945:22
  Bufferimagecopy2khr* = Bufferimagecopy2 ## Generated based on /usr/include/vulkan/vulkan_core.h:10947:28
  Imageresolve2khr* = Imageresolve2 ## Generated based on /usr/include/vulkan/vulkan_core.h:10949:25
  Pfnvkcmdcopybuffer2khr* = proc (a0: Commandbuffer; a1: ptr Copybufferinfo2): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:10951:26
  Pfnvkcmdcopyimage2khr* = proc (a0: Commandbuffer; a1: ptr Copyimageinfo2): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:10952:26
  Pfnvkcmdcopybuffertoimage2khr* = proc (a0: Commandbuffer;
      a1: ptr Copybuffertoimageinfo2): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:10953:26
  Pfnvkcmdcopyimagetobuffer2khr* = proc (a0: Commandbuffer;
      a1: ptr Copyimagetobufferinfo2): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:10954:26
  Pfnvkcmdblitimage2khr* = proc (a0: Commandbuffer; a1: ptr Blitimageinfo2): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:10955:26
  Pfnvkcmdresolveimage2khr* = proc (a0: Commandbuffer; a1: ptr Resolveimageinfo2): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:10956:26
  Formatfeatureflags2khr* = Formatfeatureflags2 ## Generated based on /usr/include/vulkan/vulkan_core.h:10989:31
  Formatfeatureflagbits2khr* = Formatfeatureflagbits2 ## Generated based on /usr/include/vulkan/vulkan_core.h:10991:34
  Formatproperties3khr* = Formatproperties3 ## Generated based on /usr/include/vulkan/vulkan_core.h:10993:29
  structvkphysicaldeviceraytracingmaintenance1featureskhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11001:16
    pnext*: pointer
    raytracingmaintenance1*: Bool32
    raytracingpipelinetraceraysindirect2*: Bool32

  Physicaldeviceraytracingmaintenance1featureskhr* = structvkphysicaldeviceraytracingmaintenance1featureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11006:3
  structvktraceraysindirectcommand2khr* {.pure, inheritable, bycopy.} = object
    raygenshaderrecordaddress*: Deviceaddress ## Generated based on /usr/include/vulkan/vulkan_core.h:11008:16
    raygenshaderrecordsize*: Devicesize
    missshaderbindingtableaddress*: Deviceaddress
    missshaderbindingtablesize*: Devicesize
    missshaderbindingtablestride*: Devicesize
    hitshaderbindingtableaddress*: Deviceaddress
    hitshaderbindingtablesize*: Devicesize
    hitshaderbindingtablestride*: Devicesize
    callableshaderbindingtableaddress*: Deviceaddress
    callableshaderbindingtablesize*: Devicesize
    callableshaderbindingtablestride*: Devicesize
    width*: uint32
    height*: uint32
    depth*: uint32

  Traceraysindirectcommand2khr* = structvktraceraysindirectcommand2khr ## Generated based on /usr/include/vulkan/vulkan_core.h:11023:3
  Pfnvkcmdtraceraysindirect2khr* = proc (a0: Commandbuffer; a1: Deviceaddress): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:11025:26
  Physicaldevicemaintenance4featureskhr* = Physicaldevicemaintenance4features ## Generated based on /usr/include/vulkan/vulkan_core.h:11044:46
  Physicaldevicemaintenance4propertieskhr* = Physicaldevicemaintenance4properties ## Generated based on /usr/include/vulkan/vulkan_core.h:11046:48
  Devicebuffermemoryrequirementskhr* = Devicebuffermemoryrequirements ## Generated based on /usr/include/vulkan/vulkan_core.h:11048:42
  Deviceimagememoryrequirementskhr* = Deviceimagememoryrequirements ## Generated based on /usr/include/vulkan/vulkan_core.h:11050:41
  Pfnvkgetdevicebuffermemoryrequirementskhr* = proc (a0: Device;
      a1: ptr Devicebuffermemoryrequirements; a2: ptr Memoryrequirements2): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:11052:26
  Pfnvkgetdeviceimagememoryrequirementskhr* = proc (a0: Device;
      a1: ptr Deviceimagememoryrequirements; a2: ptr Memoryrequirements2): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:11053:26
  Pfnvkgetdeviceimagesparsememoryrequirementskhr* = proc (a0: Device;
      a1: ptr Deviceimagememoryrequirements; a2: ptr uint32;
      a3: ptr Sparseimagememoryrequirements2): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:11054:26
  structvkphysicaldeviceshadersubgrouprotatefeatureskhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11079:16
    pnext*: pointer
    shadersubgrouprotate*: Bool32
    shadersubgrouprotateclustered*: Bool32

  Physicaldeviceshadersubgrouprotatefeatureskhr* = structvkphysicaldeviceshadersubgrouprotatefeatureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11084:3
  structvkphysicaldeviceshadermaximalreconvergencefeatureskhr* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11092:16
    pnext*: pointer
    shadermaximalreconvergence*: Bool32

  Physicaldeviceshadermaximalreconvergencefeatureskhr* = structvkphysicaldeviceshadermaximalreconvergencefeatureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11096:3
  Pipelinecreateflags2khr* = Flags64 ## Generated based on /usr/include/vulkan/vulkan_core.h:11104:19
  Pipelinecreateflagbits2khr* = Flags64 ## Generated based on /usr/include/vulkan/vulkan_core.h:11107:19
  Bufferusageflags2khr* = Flags64 ## Generated based on /usr/include/vulkan/vulkan_core.h:11140:19
  Bufferusageflagbits2khr* = Flags64 ## Generated based on /usr/include/vulkan/vulkan_core.h:11143:19
  structvkphysicaldevicemaintenance5featureskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11172:16
    pnext*: pointer
    maintenance5*: Bool32

  Physicaldevicemaintenance5featureskhr* = structvkphysicaldevicemaintenance5featureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11176:3
  structvkphysicaldevicemaintenance5propertieskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11178:16
    pnext*: pointer
    earlyfragmentmultisamplecoverageaftersamplecounting*: Bool32
    earlyfragmentsamplemasktestbeforesamplecounting*: Bool32
    depthstencilswizzleonesupport*: Bool32
    polygonmodepointsize*: Bool32
    nonstrictsinglepixelwidelinesuseparallelogram*: Bool32
    nonstrictwidelinesuseparallelogram*: Bool32

  Physicaldevicemaintenance5propertieskhr* = structvkphysicaldevicemaintenance5propertieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11187:3
  structvkrenderingareainfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11189:16
    pnext*: pointer
    viewmask*: uint32
    colorattachmentcount*: uint32
    pcolorattachmentformats*: ptr Format
    depthattachmentformat*: Format
    stencilattachmentformat*: Format

  Renderingareainfokhr* = structvkrenderingareainfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11197:3
  structvkimagesubresource2khr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11199:16
    pnext*: pointer
    imagesubresource*: Imagesubresource

  Imagesubresource2khr* = structvkimagesubresource2khr ## Generated based on /usr/include/vulkan/vulkan_core.h:11203:3
  structvkdeviceimagesubresourceinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11205:16
    pnext*: pointer
    pcreateinfo*: ptr Imagecreateinfo
    psubresource*: ptr Imagesubresource2khr

  Deviceimagesubresourceinfokhr* = structvkdeviceimagesubresourceinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11210:3
  structvksubresourcelayout2khr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11212:16
    pnext*: pointer
    subresourcelayout*: Subresourcelayout

  Subresourcelayout2khr* = structvksubresourcelayout2khr ## Generated based on /usr/include/vulkan/vulkan_core.h:11216:3
  structvkpipelinecreateflags2createinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11218:16
    pnext*: pointer
    flags*: Pipelinecreateflags2khr

  Pipelinecreateflags2createinfokhr* = structvkpipelinecreateflags2createinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11222:3
  structvkbufferusageflags2createinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11224:16
    pnext*: pointer
    usage*: Bufferusageflags2khr

  Bufferusageflags2createinfokhr* = structvkbufferusageflags2createinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11228:3
  Pfnvkcmdbindindexbuffer2khr* = proc (a0: Commandbuffer; a1: Buffer;
                                       a2: Devicesize; a3: Devicesize;
                                       a4: Indextype): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:11230:26
  Pfnvkgetrenderingareagranularitykhr* = proc (a0: Device;
      a1: ptr Renderingareainfokhr; a2: ptr Extent2d): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:11231:26
  Pfnvkgetdeviceimagesubresourcelayoutkhr* = proc (a0: Device;
      a1: ptr Deviceimagesubresourceinfokhr; a2: ptr Subresourcelayout2khr): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:11232:26
  Pfnvkgetimagesubresourcelayout2khr* = proc (a0: Device; a1: Image;
      a2: ptr Imagesubresource2khr; a3: ptr Subresourcelayout2khr): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:11233:26
  structvkphysicaldeviceraytracingpositionfetchfeatureskhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11265:16
    pnext*: pointer
    raytracingpositionfetch*: Bool32

  Physicaldeviceraytracingpositionfetchfeatureskhr* = structvkphysicaldeviceraytracingpositionfetchfeatureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11269:3
  Componenttypekhr* = enumvkcomponenttypekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11302:3
  Scopekhr* = enumvkscopekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11314:3
  structvkcooperativematrixpropertieskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11315:16
    pnext*: pointer
    Msize*: uint32
    Nsize*: uint32
    Ksize*: uint32
    Atype*: Componenttypekhr
    Btype*: Componenttypekhr
    Ctype*: Componenttypekhr
    Resulttype*: Componenttypekhr
    saturatingaccumulation*: Bool32
    scope*: Scopekhr

  Cooperativematrixpropertieskhr* = structvkcooperativematrixpropertieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11327:3
  structvkphysicaldevicecooperativematrixfeatureskhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11329:16
    pnext*: pointer
    cooperativematrix*: Bool32
    cooperativematrixrobustbufferaccess*: Bool32

  Physicaldevicecooperativematrixfeatureskhr* = structvkphysicaldevicecooperativematrixfeatureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11334:3
  structvkphysicaldevicecooperativematrixpropertieskhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11336:16
    pnext*: pointer
    cooperativematrixsupportedstages*: Shaderstageflags

  Physicaldevicecooperativematrixpropertieskhr* = structvkphysicaldevicecooperativematrixpropertieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11340:3
  Pfnvkgetphysicaldevicecooperativematrixpropertieskhr* = proc (
      a0: Physicaldevice; a1: ptr uint32; a2: ptr Cooperativematrixpropertieskhr): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:11342:30
  structvkvideodecodeav1profileinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11359:16
    pnext*: pointer
    stdprofile*: Stdvideoav1profile
    filmgrainsupport*: Bool32

  Stdvideoav1profile* = enumstdvideoav1profile ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:53:3
  Videodecodeav1profileinfokhr* = structvkvideodecodeav1profileinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11364:3
  structvkvideodecodeav1capabilitieskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11366:16
    pnext*: pointer
    maxlevel*: Stdvideoav1level

  Stdvideoav1level* = enumstdvideoav1level ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:82:3
  Videodecodeav1capabilitieskhr* = structvkvideodecodeav1capabilitieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11370:3
  structvkvideodecodeav1sessionparameterscreateinfokhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11372:16
    pnext*: pointer
    pstdsequenceheader*: ptr Stdvideoav1sequenceheader

  Stdvideoav1sequenceheader* = structstdvideoav1sequenceheader ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:385:3
  Videodecodeav1sessionparameterscreateinfokhr* = structvkvideodecodeav1sessionparameterscreateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11376:3
  structvkvideodecodeav1pictureinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11378:16
    pnext*: pointer
    pstdpictureinfo*: ptr Stdvideodecodeav1pictureinfo
    referencenameslotindices*: array[7'i64, int32]
    frameheaderoffset*: uint32
    tilecount*: uint32
    ptileoffsets*: ptr uint32
    ptilesizes*: ptr uint32

  Stdvideodecodeav1pictureinfo* = structstdvideodecodeav1pictureinfo ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std_decode.h:88:3
  Videodecodeav1pictureinfokhr* = structvkvideodecodeav1pictureinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11387:3
  structvkvideodecodeav1dpbslotinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11389:16
    pnext*: pointer
    pstdreferenceinfo*: ptr Stdvideodecodeav1referenceinfo

  Stdvideodecodeav1referenceinfo* = structstdvideodecodeav1referenceinfo ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std_decode.h:102:3
  Videodecodeav1dpbslotinfokhr* = structvkvideodecodeav1dpbslotinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11393:3
  structvkphysicaldevicevideomaintenance1featureskhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11401:16
    pnext*: pointer
    videomaintenance1*: Bool32

  Physicaldevicevideomaintenance1featureskhr* = structvkphysicaldevicevideomaintenance1featureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11405:3
  structvkvideoinlinequeryinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11407:16
    pnext*: pointer
    querypool*: Querypool
    firstquery*: uint32
    querycount*: uint32

  Videoinlinequeryinfokhr* = structvkvideoinlinequeryinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11413:3
  structvkphysicaldevicevertexattributedivisorpropertieskhr* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11421:16
    pnext*: pointer
    maxvertexattribdivisor*: uint32
    supportsnonzerofirstinstance*: Bool32

  Physicaldevicevertexattributedivisorpropertieskhr* = structvkphysicaldevicevertexattributedivisorpropertieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11426:3
  structvkvertexinputbindingdivisordescriptionkhr* {.pure, inheritable, bycopy.} = object
    binding*: uint32         ## Generated based on /usr/include/vulkan/vulkan_core.h:11428:16
    divisor*: uint32

  Vertexinputbindingdivisordescriptionkhr* = structvkvertexinputbindingdivisordescriptionkhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11431:3
  structvkpipelinevertexinputdivisorstatecreateinfokhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11433:16
    pnext*: pointer
    vertexbindingdivisorcount*: uint32
    pvertexbindingdivisors*: ptr Vertexinputbindingdivisordescriptionkhr

  Pipelinevertexinputdivisorstatecreateinfokhr* = structvkpipelinevertexinputdivisorstatecreateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11438:3
  structvkphysicaldevicevertexattributedivisorfeatureskhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11440:16
    pnext*: pointer
    vertexattributeinstanceratedivisor*: Bool32
    vertexattributeinstanceratezerodivisor*: Bool32

  Physicaldevicevertexattributedivisorfeatureskhr* = structvkphysicaldevicevertexattributedivisorfeatureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11445:3
  structvkphysicaldeviceshaderfloatcontrols2featureskhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11459:16
    pnext*: pointer
    shaderfloatcontrols2*: Bool32

  Physicaldeviceshaderfloatcontrols2featureskhr* = structvkphysicaldeviceshaderfloatcontrols2featureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11463:3
  structvkphysicaldeviceindextypeuint8featureskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11471:16
    pnext*: pointer
    indextypeuint8*: Bool32

  Physicaldeviceindextypeuint8featureskhr* = structvkphysicaldeviceindextypeuint8featureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11475:3
  Linerasterizationmodekhr* = enumvklinerasterizationmodekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11494:3
  structvkphysicaldevicelinerasterizationfeatureskhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11495:16
    pnext*: pointer
    rectangularlines*: Bool32
    bresenhamlines*: Bool32
    smoothlines*: Bool32
    stippledrectangularlines*: Bool32
    stippledbresenhamlines*: Bool32
    stippledsmoothlines*: Bool32

  Physicaldevicelinerasterizationfeatureskhr* = structvkphysicaldevicelinerasterizationfeatureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11504:3
  structvkphysicaldevicelinerasterizationpropertieskhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11506:16
    pnext*: pointer
    linesubpixelprecisionbits*: uint32

  Physicaldevicelinerasterizationpropertieskhr* = structvkphysicaldevicelinerasterizationpropertieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11510:3
  structvkpipelinerasterizationlinestatecreateinfokhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11512:16
    pnext*: pointer
    linerasterizationmode*: Linerasterizationmodekhr
    stippledlineenable*: Bool32
    linestipplefactor*: uint32
    linestipplepattern*: uint16

  Pipelinerasterizationlinestatecreateinfokhr* = structvkpipelinerasterizationlinestatecreateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11519:3
  Pfnvkcmdsetlinestipplekhr* = proc (a0: Commandbuffer; a1: uint32; a2: uint16): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:11521:26
  Timedomainkhr* = enumvktimedomainkhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11546:3
  structvkcalibratedtimestampinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11547:16
    pnext*: pointer
    timedomain*: Timedomainkhr

  Calibratedtimestampinfokhr* = structvkcalibratedtimestampinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11551:3
  Pfnvkgetphysicaldevicecalibrateabletimedomainskhr* = proc (a0: Physicaldevice;
      a1: ptr uint32; a2: ptr Timedomainkhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:11553:30
  Pfnvkgetcalibratedtimestampskhr* = proc (a0: Device; a1: uint32;
      a2: ptr Calibratedtimestampinfokhr; a3: ptr uint64; a4: ptr uint64): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:11554:30
  structvkphysicaldeviceshaderexpectassumefeatureskhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11575:16
    pnext*: pointer
    shaderexpectassume*: Bool32

  Physicaldeviceshaderexpectassumefeatureskhr* = structvkphysicaldeviceshaderexpectassumefeatureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11579:3
  structvkphysicaldevicemaintenance6featureskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11587:16
    pnext*: pointer
    maintenance6*: Bool32

  Physicaldevicemaintenance6featureskhr* = structvkphysicaldevicemaintenance6featureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11591:3
  structvkphysicaldevicemaintenance6propertieskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11593:16
    pnext*: pointer
    blocktexelviewcompatiblemultiplelayers*: Bool32
    maxcombinedimagesamplerdescriptorcount*: uint32
    fragmentshadingrateclampcombinerinputs*: Bool32

  Physicaldevicemaintenance6propertieskhr* = structvkphysicaldevicemaintenance6propertieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11599:3
  structvkbindmemorystatuskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11601:16
    pnext*: pointer
    presult*: ptr Result

  Bindmemorystatuskhr* = structvkbindmemorystatuskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11605:3
  structvkbinddescriptorsetsinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11607:16
    pnext*: pointer
    stageflags*: Shaderstageflags
    layout*: Pipelinelayout
    firstset*: uint32
    descriptorsetcount*: uint32
    pdescriptorsets*: ptr Descriptorset
    dynamicoffsetcount*: uint32
    pdynamicoffsets*: ptr uint32

  Binddescriptorsetsinfokhr* = structvkbinddescriptorsetsinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11617:3
  structvkpushconstantsinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11619:16
    pnext*: pointer
    layout*: Pipelinelayout
    stageflags*: Shaderstageflags
    offset*: uint32
    size*: uint32
    pvalues*: pointer

  Pushconstantsinfokhr* = structvkpushconstantsinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11627:3
  structvkpushdescriptorsetinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11629:16
    pnext*: pointer
    stageflags*: Shaderstageflags
    layout*: Pipelinelayout
    set*: uint32
    descriptorwritecount*: uint32
    pdescriptorwrites*: ptr Writedescriptorset

  Pushdescriptorsetinfokhr* = structvkpushdescriptorsetinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11637:3
  structvkpushdescriptorsetwithtemplateinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11639:16
    pnext*: pointer
    descriptorupdatetemplate*: Descriptorupdatetemplate
    layout*: Pipelinelayout
    set*: uint32
    pdata*: pointer

  Pushdescriptorsetwithtemplateinfokhr* = structvkpushdescriptorsetwithtemplateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:11646:3
  structvksetdescriptorbufferoffsetsinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11648:16
    pnext*: pointer
    stageflags*: Shaderstageflags
    layout*: Pipelinelayout
    firstset*: uint32
    setcount*: uint32
    pbufferindices*: ptr uint32
    poffsets*: ptr Devicesize

  Setdescriptorbufferoffsetsinfoext* = structvksetdescriptorbufferoffsetsinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:11657:3
  structvkbinddescriptorbufferembeddedsamplersinfoext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11659:16
    pnext*: pointer
    stageflags*: Shaderstageflags
    layout*: Pipelinelayout
    set*: uint32

  Binddescriptorbufferembeddedsamplersinfoext* = structvkbinddescriptorbufferembeddedsamplersinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:11665:3
  Pfnvkcmdbinddescriptorsets2khr* = proc (a0: Commandbuffer;
      a1: ptr Binddescriptorsetsinfokhr): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:11667:26
  Pfnvkcmdpushconstants2khr* = proc (a0: Commandbuffer;
                                     a1: ptr Pushconstantsinfokhr): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:11668:26
  Pfnvkcmdpushdescriptorset2khr* = proc (a0: Commandbuffer;
      a1: ptr Pushdescriptorsetinfokhr): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:11669:26
  Pfnvkcmdpushdescriptorsetwithtemplate2khr* = proc (a0: Commandbuffer;
      a1: ptr Pushdescriptorsetwithtemplateinfokhr): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:11670:26
  Pfnvkcmdsetdescriptorbufferoffsets2ext* = proc (a0: Commandbuffer;
      a1: ptr Setdescriptorbufferoffsetsinfoext): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:11671:26
  Pfnvkcmdbinddescriptorbufferembeddedsamplers2ext* = proc (a0: Commandbuffer;
      a1: ptr Binddescriptorbufferembeddedsamplersinfoext): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:11672:26
  Debugreportcallbackext* = ptr structvkdebugreportcallbackextt ## Generated based on /usr/include/vulkan/vulkan_core.h:11703:1
  Debugreportobjecttypeext* = enumvkdebugreportobjecttypeext ## Generated based on /usr/include/vulkan/vulkan_core.h:11754:3
  Debugreportflagbitsext* = enumvkdebugreportflagbitsext ## Generated based on /usr/include/vulkan/vulkan_core.h:11763:3
  Debugreportflagsext* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:11764:17
  Pfnvkdebugreportcallbackext* = proc (a0: Debugreportflagsext;
                                       a1: Debugreportobjecttypeext; a2: uint64;
                                       a3: csize_t; a4: int32; a5: cstring;
                                       a6: cstring; a7: pointer): Bool32 {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:11765:30
  structvkdebugreportcallbackcreateinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11775:16
    pnext*: pointer
    flags*: Debugreportflagsext
    pfncallback*: Pfnvkdebugreportcallbackext
    puserdata*: pointer

  Debugreportcallbackcreateinfoext* = structvkdebugreportcallbackcreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:11781:3
  Pfnvkcreatedebugreportcallbackext* = proc (a0: Instance;
      a1: ptr Debugreportcallbackcreateinfoext; a2: ptr Allocationcallbacks;
      a3: ptr Debugreportcallbackext): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:11783:30
  Pfnvkdestroydebugreportcallbackext* = proc (a0: Instance;
      a1: Debugreportcallbackext; a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:11784:26
  Pfnvkdebugreportmessageext* = proc (a0: Instance; a1: Debugreportflagsext;
                                      a2: Debugreportobjecttypeext; a3: uint64;
                                      a4: csize_t; a5: int32; a6: cstring;
                                      a7: cstring): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:11785:26
  Rasterizationorderamd* = enumvkrasterizationorderamd ## Generated based on /usr/include/vulkan/vulkan_core.h:11838:3
  structvkpipelinerasterizationstaterasterizationorderamd* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11839:16
    pnext*: pointer
    rasterizationorder*: Rasterizationorderamd

  Pipelinerasterizationstaterasterizationorderamd* = structvkpipelinerasterizationstaterasterizationorderamd ## Generated based on /usr/include/vulkan/vulkan_core.h:11843:3
  structvkdebugmarkerobjectnameinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11863:16
    pnext*: pointer
    objecttype*: Debugreportobjecttypeext
    objectfield*: uint64
    pobjectname*: cstring

  Debugmarkerobjectnameinfoext* = structvkdebugmarkerobjectnameinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:11869:3
  structvkdebugmarkerobjecttaginfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11871:16
    pnext*: pointer
    objecttype*: Debugreportobjecttypeext
    objectfield*: uint64
    tagname*: uint64
    tagsize*: csize_t
    ptag*: pointer

  Debugmarkerobjecttaginfoext* = structvkdebugmarkerobjecttaginfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:11879:3
  structvkdebugmarkermarkerinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11881:16
    pnext*: pointer
    pmarkername*: cstring
    color*: array[4'i64, cfloat]

  Debugmarkermarkerinfoext* = structvkdebugmarkermarkerinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:11886:3
  Pfnvkdebugmarkersetobjecttagext* = proc (a0: Device;
      a1: ptr Debugmarkerobjecttaginfoext): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:11888:30
  Pfnvkdebugmarkersetobjectnameext* = proc (a0: Device;
      a1: ptr Debugmarkerobjectnameinfoext): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:11889:30
  Pfnvkcmddebugmarkerbeginext* = proc (a0: Commandbuffer;
                                       a1: ptr Debugmarkermarkerinfoext): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:11890:26
  Pfnvkcmddebugmarkerendext* = proc (a0: Commandbuffer): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:11891:26
  Pfnvkcmddebugmarkerinsertext* = proc (a0: Commandbuffer;
                                        a1: ptr Debugmarkermarkerinfoext): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:11892:26
  structvkdedicatedallocationimagecreateinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11926:16
    pnext*: pointer
    dedicatedallocation*: Bool32

  Dedicatedallocationimagecreateinfonv* = structvkdedicatedallocationimagecreateinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:11930:3
  structvkdedicatedallocationbuffercreateinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11932:16
    pnext*: pointer
    dedicatedallocation*: Bool32

  Dedicatedallocationbuffercreateinfonv* = structvkdedicatedallocationbuffercreateinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:11936:3
  structvkdedicatedallocationmemoryallocateinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11938:16
    pnext*: pointer
    image*: Image
    buffer*: Buffer

  Dedicatedallocationmemoryallocateinfonv* = structvkdedicatedallocationmemoryallocateinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:11943:3
  Pipelinerasterizationstatestreamcreateflagsext* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:11951:17
  structvkphysicaldevicetransformfeedbackfeaturesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11952:16
    pnext*: pointer
    transformfeedback*: Bool32
    geometrystreams*: Bool32

  Physicaldevicetransformfeedbackfeaturesext* = structvkphysicaldevicetransformfeedbackfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:11957:3
  structvkphysicaldevicetransformfeedbackpropertiesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11959:16
    pnext*: pointer
    maxtransformfeedbackstreams*: uint32
    maxtransformfeedbackbuffers*: uint32
    maxtransformfeedbackbuffersize*: Devicesize
    maxtransformfeedbackstreamdatasize*: uint32
    maxtransformfeedbackbufferdatasize*: uint32
    maxtransformfeedbackbufferdatastride*: uint32
    transformfeedbackqueries*: Bool32
    transformfeedbackstreamslinestriangles*: Bool32
    transformfeedbackrasterizationstreamselect*: Bool32
    transformfeedbackdraw*: Bool32

  Physicaldevicetransformfeedbackpropertiesext* = structvkphysicaldevicetransformfeedbackpropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:11972:3
  structvkpipelinerasterizationstatestreamcreateinfoext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:11974:16
    pnext*: pointer
    flags*: Pipelinerasterizationstatestreamcreateflagsext
    rasterizationstream*: uint32

  Pipelinerasterizationstatestreamcreateinfoext* = structvkpipelinerasterizationstatestreamcreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:11979:3
  Pfnvkcmdbindtransformfeedbackbuffersext* = proc (a0: Commandbuffer;
      a1: uint32; a2: uint32; a3: ptr Buffer; a4: ptr Devicesize;
      a5: ptr Devicesize): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:11981:26
  Pfnvkcmdbegintransformfeedbackext* = proc (a0: Commandbuffer; a1: uint32;
      a2: uint32; a3: ptr Buffer; a4: ptr Devicesize): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:11982:26
  Pfnvkcmdendtransformfeedbackext* = proc (a0: Commandbuffer; a1: uint32;
      a2: uint32; a3: ptr Buffer; a4: ptr Devicesize): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:11983:26
  Pfnvkcmdbeginqueryindexedext* = proc (a0: Commandbuffer; a1: Querypool;
                                        a2: uint32; a3: Querycontrolflags;
                                        a4: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:11984:26
  Pfnvkcmdendqueryindexedext* = proc (a0: Commandbuffer; a1: Querypool;
                                      a2: uint32; a3: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:11985:26
  Pfnvkcmddrawindirectbytecountext* = proc (a0: Commandbuffer; a1: uint32;
      a2: uint32; a3: Buffer; a4: Devicesize; a5: uint32; a6: uint32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:11986:26
  Cumodulenvx* = ptr structvkcumodulenvxt ## Generated based on /usr/include/vulkan/vulkan_core.h:12037:1
  Cufunctionnvx* = ptr structvkcufunctionnvxt ## Generated based on /usr/include/vulkan/vulkan_core.h:12038:1
  structvkcumodulecreateinfonvx* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12041:16
    pnext*: pointer
    datasize*: csize_t
    pdata*: pointer

  Cumodulecreateinfonvx* = structvkcumodulecreateinfonvx ## Generated based on /usr/include/vulkan/vulkan_core.h:12046:3
  structvkcufunctioncreateinfonvx* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12048:16
    pnext*: pointer
    module*: Cumodulenvx
    pname*: cstring

  Cufunctioncreateinfonvx* = structvkcufunctioncreateinfonvx ## Generated based on /usr/include/vulkan/vulkan_core.h:12053:3
  structvkculaunchinfonvx* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12055:16
    pnext*: pointer
    function*: Cufunctionnvx
    griddimx*: uint32
    griddimy*: uint32
    griddimz*: uint32
    blockdimx*: uint32
    blockdimy*: uint32
    blockdimz*: uint32
    sharedmembytes*: uint32
    paramcount*: csize_t
    pparams*: ptr pointer
    extracount*: csize_t
    pextras*: ptr pointer

  Culaunchinfonvx* = structvkculaunchinfonvx ## Generated based on /usr/include/vulkan/vulkan_core.h:12070:3
  Pfnvkcreatecumodulenvx* = proc (a0: Device; a1: ptr Cumodulecreateinfonvx;
                                  a2: ptr Allocationcallbacks;
                                  a3: ptr Cumodulenvx): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12072:30
  Pfnvkcreatecufunctionnvx* = proc (a0: Device; a1: ptr Cufunctioncreateinfonvx;
                                    a2: ptr Allocationcallbacks;
                                    a3: ptr Cufunctionnvx): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12073:30
  Pfnvkdestroycumodulenvx* = proc (a0: Device; a1: Cumodulenvx;
                                   a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12074:26
  Pfnvkdestroycufunctionnvx* = proc (a0: Device; a1: Cufunctionnvx;
                                     a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12075:26
  Pfnvkcmdculaunchkernelnvx* = proc (a0: Commandbuffer; a1: ptr Culaunchinfonvx): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:12076:26
  structvkimageviewhandleinfonvx* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12111:16
    pnext*: pointer
    imageview*: Imageview
    descriptortype*: Descriptortype
    sampler*: Sampler

  Imageviewhandleinfonvx* = structvkimageviewhandleinfonvx ## Generated based on /usr/include/vulkan/vulkan_core.h:12117:3
  structvkimageviewaddresspropertiesnvx* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12119:16
    pnext*: pointer
    deviceaddress*: Deviceaddress
    size*: Devicesize

  Imageviewaddresspropertiesnvx* = structvkimageviewaddresspropertiesnvx ## Generated based on /usr/include/vulkan/vulkan_core.h:12124:3
  Pfnvkgetimageviewhandlenvx* = proc (a0: Device; a1: ptr Imageviewhandleinfonvx): uint32 {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:12126:30
  Pfnvkgetimageviewaddressnvx* = proc (a0: Device; a1: Imageview;
                                       a2: ptr Imageviewaddresspropertiesnvx): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:12127:30
  Pfnvkcmddrawindirectcountamd* = proc (a0: Commandbuffer; a1: Buffer;
                                        a2: Devicesize; a3: Buffer;
                                        a4: Devicesize; a5: uint32; a6: uint32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:12145:26
  Pfnvkcmddrawindexedindirectcountamd* = proc (a0: Commandbuffer; a1: Buffer;
      a2: Devicesize; a3: Buffer; a4: Devicesize; a5: uint32; a6: uint32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:12146:26
  structvktexturelodgatherformatpropertiesamd* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12191:16
    pnext*: pointer
    supportstexturegatherlodbiasamd*: Bool32

  Texturelodgatherformatpropertiesamd* = structvktexturelodgatherformatpropertiesamd ## Generated based on /usr/include/vulkan/vulkan_core.h:12195:3
  Shaderinfotypeamd* = enumvkshaderinfotypeamd ## Generated based on /usr/include/vulkan/vulkan_core.h:12209:3
  structvkshaderresourceusageamd* {.pure, inheritable, bycopy.} = object
    numusedvgprs*: uint32    ## Generated based on /usr/include/vulkan/vulkan_core.h:12210:16
    numusedsgprs*: uint32
    ldssizeperlocalworkgroup*: uint32
    ldsusagesizeinbytes*: csize_t
    scratchmemusageinbytes*: csize_t

  Shaderresourceusageamd* = structvkshaderresourceusageamd ## Generated based on /usr/include/vulkan/vulkan_core.h:12216:3
  structvkshaderstatisticsinfoamd* {.pure, inheritable, bycopy.} = object
    shaderstagemask*: Shaderstageflags ## Generated based on /usr/include/vulkan/vulkan_core.h:12218:16
    resourceusage*: Shaderresourceusageamd
    numphysicalvgprs*: uint32
    numphysicalsgprs*: uint32
    numavailablevgprs*: uint32
    numavailablesgprs*: uint32
    computeworkgroupsize*: array[3'i64, uint32]

  Shaderstatisticsinfoamd* = structvkshaderstatisticsinfoamd ## Generated based on /usr/include/vulkan/vulkan_core.h:12226:3
  Pfnvkgetshaderinfoamd* = proc (a0: Device; a1: Pipeline;
                                 a2: Shaderstageflagbits; a3: Shaderinfotypeamd;
                                 a4: ptr csize_t; a5: pointer): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12228:30
  structvkphysicaldevicecornersampledimagefeaturesnv* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12251:16
    pnext*: pointer
    cornersampledimage*: Bool32

  Physicaldevicecornersampledimagefeaturesnv* = structvkphysicaldevicecornersampledimagefeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:12255:3
  Externalmemoryhandletypeflagbitsnv* = enumvkexternalmemoryhandletypeflagbitsnv ## Generated based on /usr/include/vulkan/vulkan_core.h:12276:3
  Externalmemoryhandletypeflagsnv* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:12277:17
  Externalmemoryfeatureflagbitsnv* = enumvkexternalmemoryfeatureflagbitsnv ## Generated based on /usr/include/vulkan/vulkan_core.h:12284:3
  Externalmemoryfeatureflagsnv* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:12285:17
  structvkexternalimageformatpropertiesnv* {.pure, inheritable, bycopy.} = object
    imageformatproperties*: Imageformatproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:12286:16
    externalmemoryfeatures*: Externalmemoryfeatureflagsnv
    exportfromimportedhandletypes*: Externalmemoryhandletypeflagsnv
    compatiblehandletypes*: Externalmemoryhandletypeflagsnv

  Externalimageformatpropertiesnv* = structvkexternalimageformatpropertiesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:12291:3
  Pfnvkgetphysicaldeviceexternalimageformatpropertiesnv* = proc (
      a0: Physicaldevice; a1: Format; a2: Imagetype; a3: Imagetiling;
      a4: Imageusageflags; a5: Imagecreateflags;
      a6: Externalmemoryhandletypeflagsnv;
      a7: ptr Externalimageformatpropertiesnv): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12293:30
  structvkexternalmemoryimagecreateinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12312:16
    pnext*: pointer
    handletypes*: Externalmemoryhandletypeflagsnv

  Externalmemoryimagecreateinfonv* = structvkexternalmemoryimagecreateinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:12316:3
  structvkexportmemoryallocateinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12318:16
    pnext*: pointer
    handletypes*: Externalmemoryhandletypeflagsnv

  Exportmemoryallocateinfonv* = structvkexportmemoryallocateinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:12322:3
  Validationcheckext* = enumvkvalidationcheckext ## Generated based on /usr/include/vulkan/vulkan_core.h:12335:3
  structvkvalidationflagsext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12336:16
    pnext*: pointer
    disabledvalidationcheckcount*: uint32
    pdisabledvalidationchecks*: ptr Validationcheckext

  Validationflagsext* = structvkvalidationflagsext ## Generated based on /usr/include/vulkan/vulkan_core.h:12341:3
  Physicaldevicetexturecompressionastchdrfeaturesext* = Physicaldevicetexturecompressionastchdrfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:12361:59
  structvkimageviewastcdecodemodeext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12369:16
    pnext*: pointer
    decodemode*: Format

  Imageviewastcdecodemodeext* = structvkimageviewastcdecodemodeext ## Generated based on /usr/include/vulkan/vulkan_core.h:12373:3
  structvkphysicaldeviceastcdecodefeaturesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12375:16
    pnext*: pointer
    decodemodesharedexponent*: Bool32

  Physicaldeviceastcdecodefeaturesext* = structvkphysicaldeviceastcdecodefeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:12379:3
  Pipelinerobustnessbufferbehaviorext* = enumvkpipelinerobustnessbufferbehaviorext ## Generated based on /usr/include/vulkan/vulkan_core.h:12394:3
  Pipelinerobustnessimagebehaviorext* = enumvkpipelinerobustnessimagebehaviorext ## Generated based on /usr/include/vulkan/vulkan_core.h:12402:3
  structvkphysicaldevicepipelinerobustnessfeaturesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12403:16
    pnext*: pointer
    pipelinerobustness*: Bool32

  Physicaldevicepipelinerobustnessfeaturesext* = structvkphysicaldevicepipelinerobustnessfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:12407:3
  structvkphysicaldevicepipelinerobustnesspropertiesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12409:16
    pnext*: pointer
    defaultrobustnessstoragebuffers*: Pipelinerobustnessbufferbehaviorext
    defaultrobustnessuniformbuffers*: Pipelinerobustnessbufferbehaviorext
    defaultrobustnessvertexinputs*: Pipelinerobustnessbufferbehaviorext
    defaultrobustnessimages*: Pipelinerobustnessimagebehaviorext

  Physicaldevicepipelinerobustnesspropertiesext* = structvkphysicaldevicepipelinerobustnesspropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:12416:3
  structvkpipelinerobustnesscreateinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12418:16
    pnext*: pointer
    storagebuffers*: Pipelinerobustnessbufferbehaviorext
    uniformbuffers*: Pipelinerobustnessbufferbehaviorext
    vertexinputs*: Pipelinerobustnessbufferbehaviorext
    images*: Pipelinerobustnessimagebehaviorext

  Pipelinerobustnesscreateinfoext* = structvkpipelinerobustnesscreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:12425:3
  Conditionalrenderingflagbitsext* = enumvkconditionalrenderingflagbitsext ## Generated based on /usr/include/vulkan/vulkan_core.h:12437:3
  Conditionalrenderingflagsext* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:12438:17
  structvkconditionalrenderingbegininfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12439:16
    pnext*: pointer
    buffer*: Buffer
    offset*: Devicesize
    flags*: Conditionalrenderingflagsext

  Conditionalrenderingbegininfoext* = structvkconditionalrenderingbegininfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:12445:3
  structvkphysicaldeviceconditionalrenderingfeaturesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12447:16
    pnext*: pointer
    conditionalrendering*: Bool32
    inheritedconditionalrendering*: Bool32

  Physicaldeviceconditionalrenderingfeaturesext* = structvkphysicaldeviceconditionalrenderingfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:12452:3
  structvkcommandbufferinheritanceconditionalrenderinginfoext* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12454:16
    pnext*: pointer
    conditionalrenderingenable*: Bool32

  Commandbufferinheritanceconditionalrenderinginfoext* = structvkcommandbufferinheritanceconditionalrenderinginfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:12458:3
  Pfnvkcmdbeginconditionalrenderingext* = proc (a0: Commandbuffer;
      a1: ptr Conditionalrenderingbegininfoext): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12460:26
  Pfnvkcmdendconditionalrenderingext* = proc (a0: Commandbuffer): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12461:26
  structvkviewportwscalingnv* {.pure, inheritable, bycopy.} = object
    xcoeff*: cfloat          ## Generated based on /usr/include/vulkan/vulkan_core.h:12477:16
    ycoeff*: cfloat

  Viewportwscalingnv* = structvkviewportwscalingnv ## Generated based on /usr/include/vulkan/vulkan_core.h:12480:3
  structvkpipelineviewportwscalingstatecreateinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12482:16
    pnext*: pointer
    viewportwscalingenable*: Bool32
    viewportcount*: uint32
    pviewportwscalings*: ptr Viewportwscalingnv

  Pipelineviewportwscalingstatecreateinfonv* = structvkpipelineviewportwscalingstatecreateinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:12488:3
  Pfnvkcmdsetviewportwscalingnv* = proc (a0: Commandbuffer; a1: uint32;
      a2: uint32; a3: ptr Viewportwscalingnv): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12490:26
  Pfnvkreleasedisplayext* = proc (a0: Physicaldevice; a1: Displaykhr): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:12505:30
  Surfacecounterflagbitsext* = enumvksurfacecounterflagbitsext ## Generated based on /usr/include/vulkan/vulkan_core.h:12523:3
  Surfacecounterflagsext* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:12524:17
  structvksurfacecapabilities2ext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12525:16
    pnext*: pointer
    minimagecount*: uint32
    maximagecount*: uint32
    currentextent*: Extent2d
    minimageextent*: Extent2d
    maximageextent*: Extent2d
    maximagearraylayers*: uint32
    supportedtransforms*: Surfacetransformflagskhr
    currenttransform*: Surfacetransformflagbitskhr
    supportedcompositealpha*: Compositealphaflagskhr
    supportedusageflags*: Imageusageflags
    supportedsurfacecounters*: Surfacecounterflagsext

  Surfacecapabilities2ext* = structvksurfacecapabilities2ext ## Generated based on /usr/include/vulkan/vulkan_core.h:12539:3
  Pfnvkgetphysicaldevicesurfacecapabilities2ext* = proc (a0: Physicaldevice;
      a1: Surfacekhr; a2: ptr Surfacecapabilities2ext): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12541:30
  Displaypowerstateext* = enumvkdisplaypowerstateext ## Generated based on /usr/include/vulkan/vulkan_core.h:12561:3
  Deviceeventtypeext* = enumvkdeviceeventtypeext ## Generated based on /usr/include/vulkan/vulkan_core.h:12566:3
  Displayeventtypeext* = enumvkdisplayeventtypeext ## Generated based on /usr/include/vulkan/vulkan_core.h:12571:3
  structvkdisplaypowerinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12572:16
    pnext*: pointer
    powerstate*: Displaypowerstateext

  Displaypowerinfoext* = structvkdisplaypowerinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:12576:3
  structvkdeviceeventinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12578:16
    pnext*: pointer
    deviceevent*: Deviceeventtypeext

  Deviceeventinfoext* = structvkdeviceeventinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:12582:3
  structvkdisplayeventinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12584:16
    pnext*: pointer
    displayevent*: Displayeventtypeext

  Displayeventinfoext* = structvkdisplayeventinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:12588:3
  structvkswapchaincountercreateinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12590:16
    pnext*: pointer
    surfacecounters*: Surfacecounterflagsext

  Swapchaincountercreateinfoext* = structvkswapchaincountercreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:12594:3
  Pfnvkdisplaypowercontrolext* = proc (a0: Device; a1: Displaykhr;
                                       a2: ptr Displaypowerinfoext): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:12596:30
  Pfnvkregisterdeviceeventext* = proc (a0: Device; a1: ptr Deviceeventinfoext;
                                       a2: ptr Allocationcallbacks;
                                       a3: ptr Fence): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12597:30
  Pfnvkregisterdisplayeventext* = proc (a0: Device; a1: Displaykhr;
                                        a2: ptr Displayeventinfoext;
                                        a3: ptr Allocationcallbacks;
                                        a4: ptr Fence): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12598:30
  Pfnvkgetswapchaincounterext* = proc (a0: Device; a1: Swapchainkhr;
                                       a2: Surfacecounterflagbitsext;
                                       a3: ptr uint64): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12599:30
  structvkrefreshcycledurationgoogle* {.pure, inheritable, bycopy.} = object
    refreshduration*: uint64 ## Generated based on /usr/include/vulkan/vulkan_core.h:12632:16
  
  Refreshcycledurationgoogle* = structvkrefreshcycledurationgoogle ## Generated based on /usr/include/vulkan/vulkan_core.h:12634:3
  structvkpastpresentationtiminggoogle* {.pure, inheritable, bycopy.} = object
    presentid*: uint32       ## Generated based on /usr/include/vulkan/vulkan_core.h:12636:16
    desiredpresenttime*: uint64
    actualpresenttime*: uint64
    earliestpresenttime*: uint64
    presentmargin*: uint64

  Pastpresentationtiminggoogle* = structvkpastpresentationtiminggoogle ## Generated based on /usr/include/vulkan/vulkan_core.h:12642:3
  structvkpresenttimegoogle* {.pure, inheritable, bycopy.} = object
    presentid*: uint32       ## Generated based on /usr/include/vulkan/vulkan_core.h:12644:16
    desiredpresenttime*: uint64

  Presenttimegoogle* = structvkpresenttimegoogle ## Generated based on /usr/include/vulkan/vulkan_core.h:12647:3
  structvkpresenttimesinfogoogle* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12649:16
    pnext*: pointer
    swapchaincount*: uint32
    ptimes*: ptr Presenttimegoogle

  Presenttimesinfogoogle* = structvkpresenttimesinfogoogle ## Generated based on /usr/include/vulkan/vulkan_core.h:12654:3
  Pfnvkgetrefreshcycledurationgoogle* = proc (a0: Device; a1: Swapchainkhr;
      a2: ptr Refreshcycledurationgoogle): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12656:30
  Pfnvkgetpastpresentationtiminggoogle* = proc (a0: Device; a1: Swapchainkhr;
      a2: ptr uint32; a3: ptr Pastpresentationtiminggoogle): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12657:30
  structvkphysicaldevicemultiviewperviewattributespropertiesnvx* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12697:16
    pnext*: pointer
    perviewpositionallcomponents*: Bool32

  Physicaldevicemultiviewperviewattributespropertiesnvx* = structvkphysicaldevicemultiviewperviewattributespropertiesnvx ## Generated based on /usr/include/vulkan/vulkan_core.h:12701:3
  Viewportcoordinateswizzlenv* = enumvkviewportcoordinateswizzlenv ## Generated based on /usr/include/vulkan/vulkan_core.h:12720:3
  Pipelineviewportswizzlestatecreateflagsnv* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:12721:17
  structvkviewportswizzlenv* {.pure, inheritable, bycopy.} = object
    x*: Viewportcoordinateswizzlenv ## Generated based on /usr/include/vulkan/vulkan_core.h:12722:16
    y*: Viewportcoordinateswizzlenv
    z*: Viewportcoordinateswizzlenv
    w*: Viewportcoordinateswizzlenv

  Viewportswizzlenv* = structvkviewportswizzlenv ## Generated based on /usr/include/vulkan/vulkan_core.h:12727:3
  structvkpipelineviewportswizzlestatecreateinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12729:16
    pnext*: pointer
    flags*: Pipelineviewportswizzlestatecreateflagsnv
    viewportcount*: uint32
    pviewportswizzles*: ptr Viewportswizzlenv

  Pipelineviewportswizzlestatecreateinfonv* = structvkpipelineviewportswizzlestatecreateinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:12735:3
  Discardrectanglemodeext* = enumvkdiscardrectanglemodeext ## Generated based on /usr/include/vulkan/vulkan_core.h:12748:3
  Pipelinediscardrectanglestatecreateflagsext* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:12749:17
  structvkphysicaldevicediscardrectanglepropertiesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12750:16
    pnext*: pointer
    maxdiscardrectangles*: uint32

  Physicaldevicediscardrectanglepropertiesext* = structvkphysicaldevicediscardrectanglepropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:12754:3
  structvkpipelinediscardrectanglestatecreateinfoext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12756:16
    pnext*: pointer
    flags*: Pipelinediscardrectanglestatecreateflagsext
    discardrectanglemode*: Discardrectanglemodeext
    discardrectanglecount*: uint32
    pdiscardrectangles*: ptr Rect2d

  Pipelinediscardrectanglestatecreateinfoext* = structvkpipelinediscardrectanglestatecreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:12763:3
  Pfnvkcmdsetdiscardrectangleext* = proc (a0: Commandbuffer; a1: uint32;
      a2: uint32; a3: ptr Rect2d): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12765:26
  Pfnvkcmdsetdiscardrectangleenableext* = proc (a0: Commandbuffer; a1: Bool32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:12766:26
  Pfnvkcmdsetdiscardrectanglemodeext* = proc (a0: Commandbuffer;
      a1: Discardrectanglemodeext): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12767:26
  Conservativerasterizationmodeext* = enumvkconservativerasterizationmodeext ## Generated based on /usr/include/vulkan/vulkan_core.h:12796:3
  Pipelinerasterizationconservativestatecreateflagsext* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:12797:17
  structvkphysicaldeviceconservativerasterizationpropertiesext* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12798:16
    pnext*: pointer
    primitiveoverestimationsize*: cfloat
    maxextraprimitiveoverestimationsize*: cfloat
    extraprimitiveoverestimationsizegranularity*: cfloat
    primitiveunderestimation*: Bool32
    conservativepointandlinerasterization*: Bool32
    degeneratetrianglesrasterized*: Bool32
    degeneratelinesrasterized*: Bool32
    fullycoveredfragmentshaderinputvariable*: Bool32
    conservativerasterizationpostdepthcoverage*: Bool32

  Physicaldeviceconservativerasterizationpropertiesext* = structvkphysicaldeviceconservativerasterizationpropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:12810:3
  structvkpipelinerasterizationconservativestatecreateinfoext* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12812:16
    pnext*: pointer
    flags*: Pipelinerasterizationconservativestatecreateflagsext
    conservativerasterizationmode*: Conservativerasterizationmodeext
    extraprimitiveoverestimationsize*: cfloat

  Pipelinerasterizationconservativestatecreateinfoext* = structvkpipelinerasterizationconservativestatecreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:12818:3
  Pipelinerasterizationdepthclipstatecreateflagsext* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:12826:17
  structvkphysicaldevicedepthclipenablefeaturesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12827:16
    pnext*: pointer
    depthclipenable*: Bool32

  Physicaldevicedepthclipenablefeaturesext* = structvkphysicaldevicedepthclipenablefeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:12831:3
  structvkpipelinerasterizationdepthclipstatecreateinfoext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12833:16
    pnext*: pointer
    flags*: Pipelinerasterizationdepthclipstatecreateflagsext
    depthclipenable*: Bool32

  Pipelinerasterizationdepthclipstatecreateinfoext* = structvkpipelinerasterizationdepthclipstatecreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:12838:3
  structvkxycolorext* {.pure, inheritable, bycopy.} = object
    x*: cfloat               ## Generated based on /usr/include/vulkan/vulkan_core.h:12852:16
    y*: cfloat

  Xycolorext* = structvkxycolorext ## Generated based on /usr/include/vulkan/vulkan_core.h:12855:3
  structvkhdrmetadataext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12857:16
    pnext*: pointer
    displayprimaryred*: Xycolorext
    displayprimarygreen*: Xycolorext
    displayprimaryblue*: Xycolorext
    whitepoint*: Xycolorext
    maxluminance*: cfloat
    minluminance*: cfloat
    maxcontentlightlevel*: cfloat
    maxframeaveragelightlevel*: cfloat

  Hdrmetadataext* = structvkhdrmetadataext ## Generated based on /usr/include/vulkan/vulkan_core.h:12868:3
  Pfnvksethdrmetadataext* = proc (a0: Device; a1: uint32; a2: ptr Swapchainkhr;
                                  a3: ptr Hdrmetadataext): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12870:26
  structvkphysicaldevicerelaxedlinerasterizationfeaturesimg* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12885:16
    pnext*: pointer
    relaxedlinerasterization*: Bool32

  Physicaldevicerelaxedlinerasterizationfeaturesimg* = structvkphysicaldevicerelaxedlinerasterizationfeaturesimg ## Generated based on /usr/include/vulkan/vulkan_core.h:12889:3
  Debugutilsmessengerext* = ptr structvkdebugutilsmessengerextt ## Generated based on /usr/include/vulkan/vulkan_core.h:12908:1
  Debugutilsmessengercallbackdataflagsext* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:12911:17
  Debugutilsmessageseverityflagbitsext* = enumvkdebugutilsmessageseverityflagbitsext ## Generated based on /usr/include/vulkan/vulkan_core.h:12919:3
  Debugutilsmessagetypeflagbitsext* = enumvkdebugutilsmessagetypeflagbitsext ## Generated based on /usr/include/vulkan/vulkan_core.h:12927:3
  Debugutilsmessagetypeflagsext* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:12928:17
  Debugutilsmessageseverityflagsext* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:12929:17
  Debugutilsmessengercreateflagsext* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:12930:17
  structvkdebugutilslabelext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12931:16
    pnext*: pointer
    plabelname*: cstring
    color*: array[4'i64, cfloat]

  Debugutilslabelext* = structvkdebugutilslabelext ## Generated based on /usr/include/vulkan/vulkan_core.h:12936:3
  structvkdebugutilsobjectnameinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12938:16
    pnext*: pointer
    objecttype*: Objecttype
    objecthandle*: uint64
    pobjectname*: cstring

  Debugutilsobjectnameinfoext* = structvkdebugutilsobjectnameinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:12944:3
  structvkdebugutilsmessengercallbackdataext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12946:16
    pnext*: pointer
    flags*: Debugutilsmessengercallbackdataflagsext
    pmessageidname*: cstring
    messageidnumber*: int32
    pmessage*: cstring
    queuelabelcount*: uint32
    pqueuelabels*: ptr Debugutilslabelext
    cmdbuflabelcount*: uint32
    pcmdbuflabels*: ptr Debugutilslabelext
    objectcount*: uint32
    pobjects*: ptr Debugutilsobjectnameinfoext

  Debugutilsmessengercallbackdataext* = structvkdebugutilsmessengercallbackdataext ## Generated based on /usr/include/vulkan/vulkan_core.h:12959:3
  Pfnvkdebugutilsmessengercallbackext* = proc (
      a0: Debugutilsmessageseverityflagbitsext;
      a1: Debugutilsmessagetypeflagsext;
      a2: ptr Debugutilsmessengercallbackdataext; a3: pointer): Bool32 {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12961:30
  structvkdebugutilsmessengercreateinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12967:16
    pnext*: pointer
    flags*: Debugutilsmessengercreateflagsext
    messageseverity*: Debugutilsmessageseverityflagsext
    messagetype*: Debugutilsmessagetypeflagsext
    pfnusercallback*: Pfnvkdebugutilsmessengercallbackext
    puserdata*: pointer

  Debugutilsmessengercreateinfoext* = structvkdebugutilsmessengercreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:12975:3
  structvkdebugutilsobjecttaginfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:12977:16
    pnext*: pointer
    objecttype*: Objecttype
    objecthandle*: uint64
    tagname*: uint64
    tagsize*: csize_t
    ptag*: pointer

  Debugutilsobjecttaginfoext* = structvkdebugutilsobjecttaginfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:12985:3
  Pfnvksetdebugutilsobjectnameext* = proc (a0: Device;
      a1: ptr Debugutilsobjectnameinfoext): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12987:30
  Pfnvksetdebugutilsobjecttagext* = proc (a0: Device;
      a1: ptr Debugutilsobjecttaginfoext): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12988:30
  Pfnvkqueuebegindebugutilslabelext* = proc (a0: Queue;
      a1: ptr Debugutilslabelext): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12989:26
  Pfnvkqueueenddebugutilslabelext* = proc (a0: Queue): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12990:26
  Pfnvkqueueinsertdebugutilslabelext* = proc (a0: Queue;
      a1: ptr Debugutilslabelext): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12991:26
  Pfnvkcmdbegindebugutilslabelext* = proc (a0: Commandbuffer;
      a1: ptr Debugutilslabelext): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12992:26
  Pfnvkcmdenddebugutilslabelext* = proc (a0: Commandbuffer): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12993:26
  Pfnvkcmdinsertdebugutilslabelext* = proc (a0: Commandbuffer;
      a1: ptr Debugutilslabelext): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12994:26
  Pfnvkcreatedebugutilsmessengerext* = proc (a0: Instance;
      a1: ptr Debugutilsmessengercreateinfoext; a2: ptr Allocationcallbacks;
      a3: ptr Debugutilsmessengerext): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12995:30
  Pfnvkdestroydebugutilsmessengerext* = proc (a0: Instance;
      a1: Debugutilsmessengerext; a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12996:26
  Pfnvksubmitdebugutilsmessageext* = proc (a0: Instance;
      a1: Debugutilsmessageseverityflagbitsext;
      a2: Debugutilsmessagetypeflagsext;
      a3: ptr Debugutilsmessengercallbackdataext): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:12997:26
  Samplerreductionmodeext* = Samplerreductionmode ## Generated based on /usr/include/vulkan/vulkan_core.h:13053:32
  Samplerreductionmodecreateinfoext* = Samplerreductionmodecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:13055:42
  Physicaldevicesamplerfilterminmaxpropertiesext* = Physicaldevicesamplerfilterminmaxproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:13057:55
  Physicaldeviceinlineuniformblockfeaturesext* = Physicaldeviceinlineuniformblockfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:13083:52
  Physicaldeviceinlineuniformblockpropertiesext* = Physicaldeviceinlineuniformblockproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:13085:54
  Writedescriptorsetinlineuniformblockext* = Writedescriptorsetinlineuniformblock ## Generated based on /usr/include/vulkan/vulkan_core.h:13087:48
  Descriptorpoolinlineuniformblockcreateinfoext* = Descriptorpoolinlineuniformblockcreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:13089:54
  structvksamplelocationext* {.pure, inheritable, bycopy.} = object
    x*: cfloat               ## Generated based on /usr/include/vulkan/vulkan_core.h:13103:16
    y*: cfloat

  Samplelocationext* = structvksamplelocationext ## Generated based on /usr/include/vulkan/vulkan_core.h:13106:3
  structvksamplelocationsinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13108:16
    pnext*: pointer
    samplelocationsperpixel*: Samplecountflagbits
    samplelocationgridsize*: Extent2d
    samplelocationscount*: uint32
    psamplelocations*: ptr Samplelocationext

  Samplelocationsinfoext* = structvksamplelocationsinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:13115:3
  structvkattachmentsamplelocationsext* {.pure, inheritable, bycopy.} = object
    attachmentindex*: uint32 ## Generated based on /usr/include/vulkan/vulkan_core.h:13117:16
    samplelocationsinfo*: Samplelocationsinfoext

  Attachmentsamplelocationsext* = structvkattachmentsamplelocationsext ## Generated based on /usr/include/vulkan/vulkan_core.h:13120:3
  structvksubpasssamplelocationsext* {.pure, inheritable, bycopy.} = object
    subpassindex*: uint32    ## Generated based on /usr/include/vulkan/vulkan_core.h:13122:16
    samplelocationsinfo*: Samplelocationsinfoext

  Subpasssamplelocationsext* = structvksubpasssamplelocationsext ## Generated based on /usr/include/vulkan/vulkan_core.h:13125:3
  structvkrenderpasssamplelocationsbegininfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13127:16
    pnext*: pointer
    attachmentinitialsamplelocationscount*: uint32
    pattachmentinitialsamplelocations*: ptr Attachmentsamplelocationsext
    postsubpasssamplelocationscount*: uint32
    ppostsubpasssamplelocations*: ptr Subpasssamplelocationsext

  Renderpasssamplelocationsbegininfoext* = structvkrenderpasssamplelocationsbegininfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:13134:3
  structvkpipelinesamplelocationsstatecreateinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13136:16
    pnext*: pointer
    samplelocationsenable*: Bool32
    samplelocationsinfo*: Samplelocationsinfoext

  Pipelinesamplelocationsstatecreateinfoext* = structvkpipelinesamplelocationsstatecreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:13141:3
  structvkphysicaldevicesamplelocationspropertiesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13143:16
    pnext*: pointer
    samplelocationsamplecounts*: Samplecountflags
    maxsamplelocationgridsize*: Extent2d
    samplelocationcoordinaterange*: array[2'i64, cfloat]
    samplelocationsubpixelbits*: uint32
    variablesamplelocations*: Bool32

  Physicaldevicesamplelocationspropertiesext* = structvkphysicaldevicesamplelocationspropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:13151:3
  structvkmultisamplepropertiesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13153:16
    pnext*: pointer
    maxsamplelocationgridsize*: Extent2d

  Multisamplepropertiesext* = structvkmultisamplepropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:13157:3
  Pfnvkcmdsetsamplelocationsext* = proc (a0: Commandbuffer;
      a1: ptr Samplelocationsinfoext): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:13159:26
  Pfnvkgetphysicaldevicemultisamplepropertiesext* = proc (a0: Physicaldevice;
      a1: Samplecountflagbits; a2: ptr Multisamplepropertiesext): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:13160:26
  Blendoverlapext* = enumvkblendoverlapext ## Generated based on /usr/include/vulkan/vulkan_core.h:13184:3
  structvkphysicaldeviceblendoperationadvancedfeaturesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13185:16
    pnext*: pointer
    advancedblendcoherentoperations*: Bool32

  Physicaldeviceblendoperationadvancedfeaturesext* = structvkphysicaldeviceblendoperationadvancedfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:13189:3
  structvkphysicaldeviceblendoperationadvancedpropertiesext* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13191:16
    pnext*: pointer
    advancedblendmaxcolorattachments*: uint32
    advancedblendindependentblend*: Bool32
    advancedblendnonpremultipliedsrccolor*: Bool32
    advancedblendnonpremultiplieddstcolor*: Bool32
    advancedblendcorrelatedoverlap*: Bool32
    advancedblendalloperations*: Bool32

  Physicaldeviceblendoperationadvancedpropertiesext* = structvkphysicaldeviceblendoperationadvancedpropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:13200:3
  structvkpipelinecolorblendadvancedstatecreateinfoext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13202:16
    pnext*: pointer
    srcpremultiplied*: Bool32
    dstpremultiplied*: Bool32
    blendoverlap*: Blendoverlapext

  Pipelinecolorblendadvancedstatecreateinfoext* = structvkpipelinecolorblendadvancedstatecreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:13208:3
  Pipelinecoveragetocolorstatecreateflagsnv* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:13216:17
  structvkpipelinecoveragetocolorstatecreateinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13217:16
    pnext*: pointer
    flags*: Pipelinecoveragetocolorstatecreateflagsnv
    coveragetocolorenable*: Bool32
    coveragetocolorlocation*: uint32

  Pipelinecoveragetocolorstatecreateinfonv* = structvkpipelinecoveragetocolorstatecreateinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:13223:3
  Coveragemodulationmodenv* = enumvkcoveragemodulationmodenv ## Generated based on /usr/include/vulkan/vulkan_core.h:13238:3
  Pipelinecoveragemodulationstatecreateflagsnv* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:13239:17
  structvkpipelinecoveragemodulationstatecreateinfonv* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13240:16
    pnext*: pointer
    flags*: Pipelinecoveragemodulationstatecreateflagsnv
    coveragemodulationmode*: Coveragemodulationmodenv
    coveragemodulationtableenable*: Bool32
    coveragemodulationtablecount*: uint32
    pcoveragemodulationtable*: ptr cfloat

  Pipelinecoveragemodulationstatecreateinfonv* = structvkpipelinecoveragemodulationstatecreateinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:13248:3
  structvkphysicaldeviceshadersmbuiltinspropertiesnv* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13262:16
    pnext*: pointer
    shadersmcount*: uint32
    shaderwarpspersm*: uint32

  Physicaldeviceshadersmbuiltinspropertiesnv* = structvkphysicaldeviceshadersmbuiltinspropertiesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:13267:3
  structvkphysicaldeviceshadersmbuiltinsfeaturesnv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13269:16
    pnext*: pointer
    shadersmbuiltins*: Bool32

  Physicaldeviceshadersmbuiltinsfeaturesnv* = structvkphysicaldeviceshadersmbuiltinsfeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:13273:3
  structvkdrmformatmodifierpropertiesext* {.pure, inheritable, bycopy.} = object
    drmformatmodifier*: uint64 ## Generated based on /usr/include/vulkan/vulkan_core.h:13287:16
    drmformatmodifierplanecount*: uint32
    drmformatmodifiertilingfeatures*: Formatfeatureflags

  Drmformatmodifierpropertiesext* = structvkdrmformatmodifierpropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:13291:3
  structvkdrmformatmodifierpropertieslistext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13293:16
    pnext*: pointer
    drmformatmodifiercount*: uint32
    pdrmformatmodifierproperties*: ptr Drmformatmodifierpropertiesext

  Drmformatmodifierpropertieslistext* = structvkdrmformatmodifierpropertieslistext ## Generated based on /usr/include/vulkan/vulkan_core.h:13298:3
  structvkphysicaldeviceimagedrmformatmodifierinfoext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13300:16
    pnext*: pointer
    drmformatmodifier*: uint64
    sharingmode*: Sharingmode
    queuefamilyindexcount*: uint32
    pqueuefamilyindices*: ptr uint32

  Physicaldeviceimagedrmformatmodifierinfoext* = structvkphysicaldeviceimagedrmformatmodifierinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:13307:3
  structvkimagedrmformatmodifierlistcreateinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13309:16
    pnext*: pointer
    drmformatmodifiercount*: uint32
    pdrmformatmodifiers*: ptr uint64

  Imagedrmformatmodifierlistcreateinfoext* = structvkimagedrmformatmodifierlistcreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:13314:3
  structvkimagedrmformatmodifierexplicitcreateinfoext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13316:16
    pnext*: pointer
    drmformatmodifier*: uint64
    drmformatmodifierplanecount*: uint32
    pplanelayouts*: ptr Subresourcelayout

  Imagedrmformatmodifierexplicitcreateinfoext* = structvkimagedrmformatmodifierexplicitcreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:13322:3
  structvkimagedrmformatmodifierpropertiesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13324:16
    pnext*: pointer
    drmformatmodifier*: uint64

  Imagedrmformatmodifierpropertiesext* = structvkimagedrmformatmodifierpropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:13328:3
  structvkdrmformatmodifierproperties2ext* {.pure, inheritable, bycopy.} = object
    drmformatmodifier*: uint64 ## Generated based on /usr/include/vulkan/vulkan_core.h:13330:16
    drmformatmodifierplanecount*: uint32
    drmformatmodifiertilingfeatures*: Formatfeatureflags2

  Drmformatmodifierproperties2ext* = structvkdrmformatmodifierproperties2ext ## Generated based on /usr/include/vulkan/vulkan_core.h:13334:3
  structvkdrmformatmodifierpropertieslist2ext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13336:16
    pnext*: pointer
    drmformatmodifiercount*: uint32
    pdrmformatmodifierproperties*: ptr Drmformatmodifierproperties2ext

  Drmformatmodifierpropertieslist2ext* = structvkdrmformatmodifierpropertieslist2ext ## Generated based on /usr/include/vulkan/vulkan_core.h:13341:3
  Pfnvkgetimagedrmformatmodifierpropertiesext* = proc (a0: Device; a1: Image;
      a2: ptr Imagedrmformatmodifierpropertiesext): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:13343:30
  Validationcacheext* = ptr structvkvalidationcacheextt ## Generated based on /usr/include/vulkan/vulkan_core.h:13355:1
  Validationcacheheaderversionext* = enumvkvalidationcacheheaderversionext ## Generated based on /usr/include/vulkan/vulkan_core.h:13362:3
  Validationcachecreateflagsext* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:13363:17
  structvkvalidationcachecreateinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13364:16
    pnext*: pointer
    flags*: Validationcachecreateflagsext
    initialdatasize*: csize_t
    pinitialdata*: pointer

  Validationcachecreateinfoext* = structvkvalidationcachecreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:13370:3
  structvkshadermodulevalidationcachecreateinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13372:16
    pnext*: pointer
    validationcache*: Validationcacheext

  Shadermodulevalidationcachecreateinfoext* = structvkshadermodulevalidationcachecreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:13376:3
  Pfnvkcreatevalidationcacheext* = proc (a0: Device;
      a1: ptr Validationcachecreateinfoext; a2: ptr Allocationcallbacks;
      a3: ptr Validationcacheext): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:13378:30
  Pfnvkdestroyvalidationcacheext* = proc (a0: Device; a1: Validationcacheext;
      a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:13379:26
  Pfnvkmergevalidationcachesext* = proc (a0: Device; a1: Validationcacheext;
      a2: uint32; a3: ptr Validationcacheext): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:13380:30
  Pfnvkgetvalidationcachedataext* = proc (a0: Device; a1: Validationcacheext;
      a2: ptr csize_t; a3: pointer): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:13381:30
  Descriptorbindingflagbitsext* = Descriptorbindingflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:13413:37
  Descriptorbindingflagsext* = Descriptorbindingflags ## Generated based on /usr/include/vulkan/vulkan_core.h:13415:34
  Descriptorsetlayoutbindingflagscreateinfoext* = Descriptorsetlayoutbindingflagscreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:13417:53
  Physicaldevicedescriptorindexingfeaturesext* = Physicaldevicedescriptorindexingfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:13419:52
  Physicaldevicedescriptorindexingpropertiesext* = Physicaldevicedescriptorindexingproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:13421:54
  Descriptorsetvariabledescriptorcountallocateinfoext* = Descriptorsetvariabledescriptorcountallocateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:13423:60
  Descriptorsetvariabledescriptorcountlayoutsupportext* = Descriptorsetvariabledescriptorcountlayoutsupport ## Generated based on /usr/include/vulkan/vulkan_core.h:13425:61
  Shadingratepaletteentrynv* = enumvkshadingratepaletteentrynv ## Generated based on /usr/include/vulkan/vulkan_core.h:13454:3
  Coarsesampleordertypenv* = enumvkcoarsesampleordertypenv ## Generated based on /usr/include/vulkan/vulkan_core.h:13462:3
  structvkshadingratepalettenv* {.pure, inheritable, bycopy.} = object
    shadingratepaletteentrycount*: uint32 ## Generated based on /usr/include/vulkan/vulkan_core.h:13463:16
    pshadingratepaletteentries*: ptr Shadingratepaletteentrynv

  Shadingratepalettenv* = structvkshadingratepalettenv ## Generated based on /usr/include/vulkan/vulkan_core.h:13466:3
  structvkpipelineviewportshadingrateimagestatecreateinfonv* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13468:16
    pnext*: pointer
    shadingrateimageenable*: Bool32
    viewportcount*: uint32
    pshadingratepalettes*: ptr Shadingratepalettenv

  Pipelineviewportshadingrateimagestatecreateinfonv* = structvkpipelineviewportshadingrateimagestatecreateinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:13474:3
  structvkphysicaldeviceshadingrateimagefeaturesnv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13476:16
    pnext*: pointer
    shadingrateimage*: Bool32
    shadingratecoarsesampleorder*: Bool32

  Physicaldeviceshadingrateimagefeaturesnv* = structvkphysicaldeviceshadingrateimagefeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:13481:3
  structvkphysicaldeviceshadingrateimagepropertiesnv* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13483:16
    pnext*: pointer
    shadingratetexelsize*: Extent2d
    shadingratepalettesize*: uint32
    shadingratemaxcoarsesamples*: uint32

  Physicaldeviceshadingrateimagepropertiesnv* = structvkphysicaldeviceshadingrateimagepropertiesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:13489:3
  structvkcoarsesamplelocationnv* {.pure, inheritable, bycopy.} = object
    pixelx*: uint32          ## Generated based on /usr/include/vulkan/vulkan_core.h:13491:16
    pixely*: uint32
    sample*: uint32

  Coarsesamplelocationnv* = structvkcoarsesamplelocationnv ## Generated based on /usr/include/vulkan/vulkan_core.h:13495:3
  structvkcoarsesampleordercustomnv* {.pure, inheritable, bycopy.} = object
    shadingrate*: Shadingratepaletteentrynv ## Generated based on /usr/include/vulkan/vulkan_core.h:13497:16
    samplecount*: uint32
    samplelocationcount*: uint32
    psamplelocations*: ptr Coarsesamplelocationnv

  Coarsesampleordercustomnv* = structvkcoarsesampleordercustomnv ## Generated based on /usr/include/vulkan/vulkan_core.h:13502:3
  structvkpipelineviewportcoarsesampleorderstatecreateinfonv* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13504:16
    pnext*: pointer
    sampleordertype*: Coarsesampleordertypenv
    customsampleordercount*: uint32
    pcustomsampleorders*: ptr Coarsesampleordercustomnv

  Pipelineviewportcoarsesampleorderstatecreateinfonv* = structvkpipelineviewportcoarsesampleorderstatecreateinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:13510:3
  Pfnvkcmdbindshadingrateimagenv* = proc (a0: Commandbuffer; a1: Imageview;
      a2: Imagelayout): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:13512:26
  Pfnvkcmdsetviewportshadingratepalettenv* = proc (a0: Commandbuffer;
      a1: uint32; a2: uint32; a3: ptr Shadingratepalettenv): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:13513:26
  Pfnvkcmdsetcoarsesampleordernv* = proc (a0: Commandbuffer;
      a1: Coarsesampleordertypenv; a2: uint32; a3: ptr Coarsesampleordercustomnv): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:13514:26
  Accelerationstructurenv* = ptr structvkaccelerationstructurenvt ## Generated based on /usr/include/vulkan/vulkan_core.h:13538:1
  Raytracingshadergrouptypekhr* = enumvkraytracingshadergrouptypekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:13552:3
  Raytracingshadergrouptypenv* = Raytracingshadergrouptypekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:13553:40
  Geometrytypekhr* = enumvkgeometrytypekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:13563:3
  Geometrytypenv* = Geometrytypekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:13564:27
  Accelerationstructuretypekhr* = enumvkaccelerationstructuretypekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:13574:3
  Accelerationstructuretypenv* = Accelerationstructuretypekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:13575:40
  Copyaccelerationstructuremodekhr* = enumvkcopyaccelerationstructuremodekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:13586:3
  Copyaccelerationstructuremodenv* = Copyaccelerationstructuremodekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:13587:44
  Accelerationstructurememoryrequirementstypenv* = enumvkaccelerationstructurememoryrequirementstypenv ## Generated based on /usr/include/vulkan/vulkan_core.h:13595:3
  Geometryflagbitskhr* = enumvkgeometryflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:13603:3
  Geometryflagskhr* = Flags  ## Generated based on /usr/include/vulkan/vulkan_core.h:13604:17
  Geometryflagsnv* = Geometryflagskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:13605:28
  Geometryflagbitsnv* = Geometryflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:13607:31
  Geometryinstanceflagbitskhr* = enumvkgeometryinstanceflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:13623:3
  Geometryinstanceflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:13624:17
  Geometryinstanceflagsnv* = Geometryinstanceflagskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:13625:36
  Geometryinstanceflagbitsnv* = Geometryinstanceflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:13627:39
  Buildaccelerationstructureflagbitskhr* = enumvkbuildaccelerationstructureflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:13650:3
  Buildaccelerationstructureflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:13651:17
  Buildaccelerationstructureflagsnv* = Buildaccelerationstructureflagskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:13652:46
  Buildaccelerationstructureflagbitsnv* = Buildaccelerationstructureflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:13654:49
  structvkraytracingshadergroupcreateinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13656:16
    pnext*: pointer
    typefield*: Raytracingshadergrouptypekhr
    generalshader*: uint32
    closesthitshader*: uint32
    anyhitshader*: uint32
    intersectionshader*: uint32

  Raytracingshadergroupcreateinfonv* = structvkraytracingshadergroupcreateinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:13664:3
  structvkraytracingpipelinecreateinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13666:16
    pnext*: pointer
    flags*: Pipelinecreateflags
    stagecount*: uint32
    pstages*: ptr Pipelineshaderstagecreateinfo
    groupcount*: uint32
    pgroups*: ptr Raytracingshadergroupcreateinfonv
    maxrecursiondepth*: uint32
    layout*: Pipelinelayout
    basepipelinehandle*: Pipeline
    basepipelineindex*: int32

  Raytracingpipelinecreateinfonv* = structvkraytracingpipelinecreateinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:13678:3
  structvkgeometrytrianglesnv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13680:16
    pnext*: pointer
    vertexdata*: Buffer
    vertexoffset*: Devicesize
    vertexcount*: uint32
    vertexstride*: Devicesize
    vertexformat*: Format
    indexdata*: Buffer
    indexoffset*: Devicesize
    indexcount*: uint32
    indextype*: Indextype
    transformdata*: Buffer
    transformoffset*: Devicesize

  Geometrytrianglesnv* = structvkgeometrytrianglesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:13694:3
  structvkgeometryaabbnv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13696:16
    pnext*: pointer
    aabbdata*: Buffer
    numaabbs*: uint32
    stride*: uint32
    offset*: Devicesize

  Geometryaabbnv* = structvkgeometryaabbnv ## Generated based on /usr/include/vulkan/vulkan_core.h:13703:3
  structvkgeometrydatanv* {.pure, inheritable, bycopy.} = object
    triangles*: Geometrytrianglesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:13705:16
    aabbs*: Geometryaabbnv

  Geometrydatanv* = structvkgeometrydatanv ## Generated based on /usr/include/vulkan/vulkan_core.h:13708:3
  structvkgeometrynv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13710:16
    pnext*: pointer
    geometrytype*: Geometrytypekhr
    geometry*: Geometrydatanv
    flags*: Geometryflagskhr

  Geometrynv* = structvkgeometrynv ## Generated based on /usr/include/vulkan/vulkan_core.h:13716:3
  structvkaccelerationstructureinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13718:16
    pnext*: pointer
    typefield*: Accelerationstructuretypenv
    flags*: Buildaccelerationstructureflagsnv
    instancecount*: uint32
    geometrycount*: uint32
    pgeometries*: ptr Geometrynv

  Accelerationstructureinfonv* = structvkaccelerationstructureinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:13726:3
  structvkaccelerationstructurecreateinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13728:16
    pnext*: pointer
    compactedsize*: Devicesize
    info*: Accelerationstructureinfonv

  Accelerationstructurecreateinfonv* = structvkaccelerationstructurecreateinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:13733:3
  structvkbindaccelerationstructurememoryinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13735:16
    pnext*: pointer
    accelerationstructure*: Accelerationstructurenv
    memory*: Devicememory
    memoryoffset*: Devicesize
    deviceindexcount*: uint32
    pdeviceindices*: ptr uint32

  Bindaccelerationstructurememoryinfonv* = structvkbindaccelerationstructurememoryinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:13743:3
  structvkwritedescriptorsetaccelerationstructurenv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13745:16
    pnext*: pointer
    accelerationstructurecount*: uint32
    paccelerationstructures*: ptr Accelerationstructurenv

  Writedescriptorsetaccelerationstructurenv* = structvkwritedescriptorsetaccelerationstructurenv ## Generated based on /usr/include/vulkan/vulkan_core.h:13750:3
  structvkaccelerationstructurememoryrequirementsinfonv* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13752:16
    pnext*: pointer
    typefield*: Accelerationstructurememoryrequirementstypenv
    accelerationstructure*: Accelerationstructurenv

  Accelerationstructurememoryrequirementsinfonv* = structvkaccelerationstructurememoryrequirementsinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:13757:3
  structvkphysicaldeviceraytracingpropertiesnv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13759:16
    pnext*: pointer
    shadergrouphandlesize*: uint32
    maxrecursiondepth*: uint32
    maxshadergroupstride*: uint32
    shadergroupbasealignment*: uint32
    maxgeometrycount*: uint64
    maxinstancecount*: uint64
    maxtrianglecount*: uint64
    maxdescriptorsetaccelerationstructures*: uint32

  Physicaldeviceraytracingpropertiesnv* = structvkphysicaldeviceraytracingpropertiesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:13770:3
  structvktransformmatrixkhr* {.pure, inheritable, bycopy.} = object
    matrix*: array[3'i64, array[4'i64, cfloat]] ## Generated based on /usr/include/vulkan/vulkan_core.h:13772:16
  
  Transformmatrixkhr* = structvktransformmatrixkhr ## Generated based on /usr/include/vulkan/vulkan_core.h:13774:3
  Transformmatrixnv* = Transformmatrixkhr ## Generated based on /usr/include/vulkan/vulkan_core.h:13776:30
  structvkaabbpositionskhr* {.pure, inheritable, bycopy.} = object
    minx*: cfloat            ## Generated based on /usr/include/vulkan/vulkan_core.h:13778:16
    miny*: cfloat
    minz*: cfloat
    maxx*: cfloat
    maxy*: cfloat
    maxz*: cfloat

  Aabbpositionskhr* = structvkaabbpositionskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:13785:3
  Aabbpositionsnv* = Aabbpositionskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:13787:28
  structvkaccelerationstructureinstancekhr* {.pure, inheritable, bycopy.} = object
    transform*: Transformmatrixkhr ## Generated based on /usr/include/vulkan/vulkan_core.h:13789:16
    instancecustomindex*: uint32
    mask*: uint32
    instanceshaderbindingtablerecordoffset*: uint32
    flags*: Geometryinstanceflagskhr
    accelerationstructurereference*: uint64

  Accelerationstructureinstancekhr* = structvkaccelerationstructureinstancekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:13796:3
  Accelerationstructureinstancenv* = Accelerationstructureinstancekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:13798:44
  Pfnvkcreateaccelerationstructurenv* = proc (a0: Device;
      a1: ptr Accelerationstructurecreateinfonv; a2: ptr Allocationcallbacks;
      a3: ptr Accelerationstructurenv): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:13800:30
  Pfnvkdestroyaccelerationstructurenv* = proc (a0: Device;
      a1: Accelerationstructurenv; a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:13801:26
  Pfnvkgetaccelerationstructurememoryrequirementsnv* = proc (a0: Device;
      a1: ptr Accelerationstructurememoryrequirementsinfonv;
      a2: ptr Memoryrequirements2khr): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:13802:26
  Pfnvkbindaccelerationstructurememorynv* = proc (a0: Device; a1: uint32;
      a2: ptr Bindaccelerationstructurememoryinfonv): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:13803:30
  Pfnvkcmdbuildaccelerationstructurenv* = proc (a0: Commandbuffer;
      a1: ptr Accelerationstructureinfonv; a2: Buffer; a3: Devicesize;
      a4: Bool32; a5: Accelerationstructurenv; a6: Accelerationstructurenv;
      a7: Buffer; a8: Devicesize): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:13804:26
  Pfnvkcmdcopyaccelerationstructurenv* = proc (a0: Commandbuffer;
      a1: Accelerationstructurenv; a2: Accelerationstructurenv;
      a3: Copyaccelerationstructuremodekhr): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:13805:26
  Pfnvkcmdtraceraysnv* = proc (a0: Commandbuffer; a1: Buffer; a2: Devicesize;
                               a3: Buffer; a4: Devicesize; a5: Devicesize;
                               a6: Buffer; a7: Devicesize; a8: Devicesize;
                               a9: Buffer; a10: Devicesize; a11: Devicesize;
                               a12: uint32; a13: uint32; a14: uint32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:13806:26
  Pfnvkcreateraytracingpipelinesnv* = proc (a0: Device; a1: Pipelinecache;
      a2: uint32; a3: ptr Raytracingpipelinecreateinfonv;
      a4: ptr Allocationcallbacks; a5: ptr Pipeline): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:13807:30
  Pfnvkgetraytracingshadergrouphandleskhr* = proc (a0: Device; a1: Pipeline;
      a2: uint32; a3: uint32; a4: csize_t; a5: pointer): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:13808:30
  Pfnvkgetraytracingshadergrouphandlesnv* = proc (a0: Device; a1: Pipeline;
      a2: uint32; a3: uint32; a4: csize_t; a5: pointer): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:13809:30
  Pfnvkgetaccelerationstructurehandlenv* = proc (a0: Device;
      a1: Accelerationstructurenv; a2: csize_t; a3: pointer): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:13810:30
  Pfnvkcmdwriteaccelerationstructurespropertiesnv* = proc (a0: Commandbuffer;
      a1: uint32; a2: ptr Accelerationstructurenv; a3: Querytype; a4: Querypool;
      a5: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:13811:26
  Pfnvkcompiledeferrednv* = proc (a0: Device; a1: Pipeline; a2: uint32): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:13812:30
  structvkphysicaldevicerepresentativefragmenttestfeaturesnv* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13919:16
    pnext*: pointer
    representativefragmenttest*: Bool32

  Physicaldevicerepresentativefragmenttestfeaturesnv* = structvkphysicaldevicerepresentativefragmenttestfeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:13923:3
  structvkpipelinerepresentativefragmentteststatecreateinfonv* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13925:16
    pnext*: pointer
    representativefragmenttestenable*: Bool32

  Pipelinerepresentativefragmentteststatecreateinfonv* = structvkpipelinerepresentativefragmentteststatecreateinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:13929:3
  structvkphysicaldeviceimageviewimageformatinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13937:16
    pnext*: pointer
    imageviewtype*: Imageviewtype

  Physicaldeviceimageviewimageformatinfoext* = structvkphysicaldeviceimageviewimageformatinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:13941:3
  structvkfiltercubicimageviewimageformatpropertiesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13943:16
    pnext*: pointer
    filtercubic*: Bool32
    filtercubicminmax*: Bool32

  Filtercubicimageviewimageformatpropertiesext* = structvkfiltercubicimageviewimageformatpropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:13948:3
  Queueglobalpriorityext* = Queueglobalprioritykhr ## Generated based on /usr/include/vulkan/vulkan_core.h:13962:34
  Devicequeueglobalprioritycreateinfoext* = Devicequeueglobalprioritycreateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:13964:50
  structvkimportmemoryhostpointerinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13972:16
    pnext*: pointer
    handletype*: Externalmemoryhandletypeflagbits
    phostpointer*: pointer

  Importmemoryhostpointerinfoext* = structvkimportmemoryhostpointerinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:13977:3
  structvkmemoryhostpointerpropertiesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13979:16
    pnext*: pointer
    memorytypebits*: uint32

  Memoryhostpointerpropertiesext* = structvkmemoryhostpointerpropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:13983:3
  structvkphysicaldeviceexternalmemoryhostpropertiesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:13985:16
    pnext*: pointer
    minimportedhostpointeralignment*: Devicesize

  Physicaldeviceexternalmemoryhostpropertiesext* = structvkphysicaldeviceexternalmemoryhostpropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:13989:3
  Pfnvkgetmemoryhostpointerpropertiesext* = proc (a0: Device;
      a1: Externalmemoryhandletypeflagbits; a2: pointer;
      a3: ptr Memoryhostpointerpropertiesext): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:13991:30
  Pfnvkcmdwritebuffermarkeramd* = proc (a0: Commandbuffer;
                                        a1: Pipelinestageflagbits; a2: Buffer;
                                        a3: Devicesize; a4: uint32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:14006:26
  Pipelinecompilercontrolflagbitsamd* = enumvkpipelinecompilercontrolflagbitsamd ## Generated based on /usr/include/vulkan/vulkan_core.h:14025:3
  Pipelinecompilercontrolflagsamd* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:14026:17
  structvkpipelinecompilercontrolcreateinfoamd* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14027:16
    pnext*: pointer
    compilercontrolflags*: Pipelinecompilercontrolflagsamd

  Pipelinecompilercontrolcreateinfoamd* = structvkpipelinecompilercontrolcreateinfoamd ## Generated based on /usr/include/vulkan/vulkan_core.h:14031:3
  Timedomainext* = Timedomainkhr ## Generated based on /usr/include/vulkan/vulkan_core.h:14039:25
  Calibratedtimestampinfoext* = Calibratedtimestampinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:14041:38
  Pfnvkgetphysicaldevicecalibrateabletimedomainsext* = proc (a0: Physicaldevice;
      a1: ptr uint32; a2: ptr Timedomainkhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:14043:30
  Pfnvkgetcalibratedtimestampsext* = proc (a0: Device; a1: uint32;
      a2: ptr Calibratedtimestampinfokhr; a3: ptr uint64; a4: ptr uint64): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:14044:30
  structvkphysicaldeviceshadercorepropertiesamd* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14065:16
    pnext*: pointer
    shaderenginecount*: uint32
    shaderarraysperenginecount*: uint32
    computeunitspershaderarray*: uint32
    simdpercomputeunit*: uint32
    wavefrontspersimd*: uint32
    wavefrontsize*: uint32
    sgprspersimd*: uint32
    minsgprallocation*: uint32
    maxsgprallocation*: uint32
    sgprallocationgranularity*: uint32
    vgprspersimd*: uint32
    minvgprallocation*: uint32
    maxvgprallocation*: uint32
    vgprallocationgranularity*: uint32

  Physicaldeviceshadercorepropertiesamd* = structvkphysicaldeviceshadercorepropertiesamd ## Generated based on /usr/include/vulkan/vulkan_core.h:14082:3
  Memoryoverallocationbehavioramd* = enumvkmemoryoverallocationbehavioramd ## Generated based on /usr/include/vulkan/vulkan_core.h:14096:3
  structvkdevicememoryoverallocationcreateinfoamd* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14097:16
    pnext*: pointer
    overallocationbehavior*: Memoryoverallocationbehavioramd

  Devicememoryoverallocationcreateinfoamd* = structvkdevicememoryoverallocationcreateinfoamd ## Generated based on /usr/include/vulkan/vulkan_core.h:14101:3
  structvkphysicaldevicevertexattributedivisorpropertiesext* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14109:16
    pnext*: pointer
    maxvertexattribdivisor*: uint32

  Physicaldevicevertexattributedivisorpropertiesext* = structvkphysicaldevicevertexattributedivisorpropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:14113:3
  Vertexinputbindingdivisordescriptionext* = Vertexinputbindingdivisordescriptionkhr ## Generated based on /usr/include/vulkan/vulkan_core.h:14115:51
  Pipelinevertexinputdivisorstatecreateinfoext* = Pipelinevertexinputdivisorstatecreateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:14117:56
  Physicaldevicevertexattributedivisorfeaturesext* = Physicaldevicevertexattributedivisorfeatureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:14119:59
  Pipelinecreationfeedbackflagbitsext* = Pipelinecreationfeedbackflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:14127:44
  Pipelinecreationfeedbackflagsext* = Pipelinecreationfeedbackflags ## Generated based on /usr/include/vulkan/vulkan_core.h:14129:41
  Pipelinecreationfeedbackcreateinfoext* = Pipelinecreationfeedbackcreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:14131:46
  Pipelinecreationfeedbackext* = Pipelinecreationfeedback ## Generated based on /usr/include/vulkan/vulkan_core.h:14133:36
  structvkphysicaldevicecomputeshaderderivativesfeaturesnv* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14147:16
    pnext*: pointer
    computederivativegroupquads*: Bool32
    computederivativegrouplinear*: Bool32

  Physicaldevicecomputeshaderderivativesfeaturesnv* = structvkphysicaldevicecomputeshaderderivativesfeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:14152:3
  structvkphysicaldevicemeshshaderfeaturesnv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14160:16
    pnext*: pointer
    taskshader*: Bool32
    meshshader*: Bool32

  Physicaldevicemeshshaderfeaturesnv* = structvkphysicaldevicemeshshaderfeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:14165:3
  structvkphysicaldevicemeshshaderpropertiesnv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14167:16
    pnext*: pointer
    maxdrawmeshtaskscount*: uint32
    maxtaskworkgroupinvocations*: uint32
    maxtaskworkgroupsize*: array[3'i64, uint32]
    maxtasktotalmemorysize*: uint32
    maxtaskoutputcount*: uint32
    maxmeshworkgroupinvocations*: uint32
    maxmeshworkgroupsize*: array[3'i64, uint32]
    maxmeshtotalmemorysize*: uint32
    maxmeshoutputvertices*: uint32
    maxmeshoutputprimitives*: uint32
    maxmeshmultiviewviewcount*: uint32
    meshoutputpervertexgranularity*: uint32
    meshoutputperprimitivegranularity*: uint32

  Physicaldevicemeshshaderpropertiesnv* = structvkphysicaldevicemeshshaderpropertiesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:14183:3
  structvkdrawmeshtasksindirectcommandnv* {.pure, inheritable, bycopy.} = object
    taskcount*: uint32       ## Generated based on /usr/include/vulkan/vulkan_core.h:14185:16
    firsttask*: uint32

  Drawmeshtasksindirectcommandnv* = structvkdrawmeshtasksindirectcommandnv ## Generated based on /usr/include/vulkan/vulkan_core.h:14188:3
  Pfnvkcmddrawmeshtasksnv* = proc (a0: Commandbuffer; a1: uint32; a2: uint32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:14190:26
  Pfnvkcmddrawmeshtasksindirectnv* = proc (a0: Commandbuffer; a1: Buffer;
      a2: Devicesize; a3: uint32; a4: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:14191:26
  Pfnvkcmddrawmeshtasksindirectcountnv* = proc (a0: Commandbuffer; a1: Buffer;
      a2: Devicesize; a3: Buffer; a4: Devicesize; a5: uint32; a6: uint32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:14192:26
  Physicaldevicefragmentshaderbarycentricfeaturesnv* = Physicaldevicefragmentshaderbarycentricfeatureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:14222:62
  structvkphysicaldeviceshaderimagefootprintfeaturesnv* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14230:16
    pnext*: pointer
    imagefootprint*: Bool32

  Physicaldeviceshaderimagefootprintfeaturesnv* = structvkphysicaldeviceshaderimagefootprintfeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:14234:3
  structvkpipelineviewportexclusivescissorstatecreateinfonv* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14242:16
    pnext*: pointer
    exclusivescissorcount*: uint32
    pexclusivescissors*: ptr Rect2d

  Pipelineviewportexclusivescissorstatecreateinfonv* = structvkpipelineviewportexclusivescissorstatecreateinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:14247:3
  structvkphysicaldeviceexclusivescissorfeaturesnv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14249:16
    pnext*: pointer
    exclusivescissor*: Bool32

  Physicaldeviceexclusivescissorfeaturesnv* = structvkphysicaldeviceexclusivescissorfeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:14253:3
  Pfnvkcmdsetexclusivescissorenablenv* = proc (a0: Commandbuffer; a1: uint32;
      a2: uint32; a3: ptr Bool32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:14255:26
  Pfnvkcmdsetexclusivescissornv* = proc (a0: Commandbuffer; a1: uint32;
      a2: uint32; a3: ptr Rect2d): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:14256:26
  structvkqueuefamilycheckpointpropertiesnv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14277:16
    pnext*: pointer
    checkpointexecutionstagemask*: Pipelinestageflags

  Queuefamilycheckpointpropertiesnv* = structvkqueuefamilycheckpointpropertiesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:14281:3
  structvkcheckpointdatanv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14283:16
    pnext*: pointer
    stage*: Pipelinestageflagbits
    pcheckpointmarker*: pointer

  Checkpointdatanv* = structvkcheckpointdatanv ## Generated based on /usr/include/vulkan/vulkan_core.h:14288:3
  Pfnvkcmdsetcheckpointnv* = proc (a0: Commandbuffer; a1: pointer): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:14290:26
  Pfnvkgetqueuecheckpointdatanv* = proc (a0: Queue; a1: ptr uint32;
      a2: ptr Checkpointdatanv): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:14291:26
  structvkphysicaldeviceshaderintegerfunctions2featuresintel* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14309:16
    pnext*: pointer
    shaderintegerfunctions2*: Bool32

  Physicaldeviceshaderintegerfunctions2featuresintel* = structvkphysicaldeviceshaderintegerfunctions2featuresintel ## Generated based on /usr/include/vulkan/vulkan_core.h:14313:3
  Performanceconfigurationintel* = ptr structvkperformanceconfigurationintelt ## Generated based on /usr/include/vulkan/vulkan_core.h:14319:1
  Performanceconfigurationtypeintel* = enumvkperformanceconfigurationtypeintel ## Generated based on /usr/include/vulkan/vulkan_core.h:14326:3
  Querypoolsamplingmodeintel* = enumvkquerypoolsamplingmodeintel ## Generated based on /usr/include/vulkan/vulkan_core.h:14331:3
  Performanceoverridetypeintel* = enumvkperformanceoverridetypeintel ## Generated based on /usr/include/vulkan/vulkan_core.h:14337:3
  Performanceparametertypeintel* = enumvkperformanceparametertypeintel ## Generated based on /usr/include/vulkan/vulkan_core.h:14343:3
  Performancevaluetypeintel* = enumvkperformancevaluetypeintel ## Generated based on /usr/include/vulkan/vulkan_core.h:14352:3
  unionvkperformancevaluedataintel* {.union, bycopy.} = object
    value32*: uint32         ## Generated based on /usr/include/vulkan/vulkan_core.h:14353:15
    value64*: uint64
    valuefloat*: cfloat
    valuebool*: Bool32
    valuestring*: cstring

  Performancevaluedataintel* = unionvkperformancevaluedataintel ## Generated based on /usr/include/vulkan/vulkan_core.h:14359:3
  structvkperformancevalueintel* {.pure, inheritable, bycopy.} = object
    typefield*: Performancevaluetypeintel ## Generated based on /usr/include/vulkan/vulkan_core.h:14361:16
    data*: Performancevaluedataintel

  Performancevalueintel* = structvkperformancevalueintel ## Generated based on /usr/include/vulkan/vulkan_core.h:14364:3
  structvkinitializeperformanceapiinfointel* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14366:16
    pnext*: pointer
    puserdata*: pointer

  Initializeperformanceapiinfointel* = structvkinitializeperformanceapiinfointel ## Generated based on /usr/include/vulkan/vulkan_core.h:14370:3
  structvkquerypoolperformancequerycreateinfointel* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14372:16
    pnext*: pointer
    performancecounterssampling*: Querypoolsamplingmodeintel

  Querypoolperformancequerycreateinfointel* = structvkquerypoolperformancequerycreateinfointel ## Generated based on /usr/include/vulkan/vulkan_core.h:14376:3
  Querypoolcreateinfointel* = Querypoolperformancequerycreateinfointel ## Generated based on /usr/include/vulkan/vulkan_core.h:14378:52
  structvkperformancemarkerinfointel* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14380:16
    pnext*: pointer
    marker*: uint64

  Performancemarkerinfointel* = structvkperformancemarkerinfointel ## Generated based on /usr/include/vulkan/vulkan_core.h:14384:3
  structvkperformancestreammarkerinfointel* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14386:16
    pnext*: pointer
    marker*: uint32

  Performancestreammarkerinfointel* = structvkperformancestreammarkerinfointel ## Generated based on /usr/include/vulkan/vulkan_core.h:14390:3
  structvkperformanceoverrideinfointel* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14392:16
    pnext*: pointer
    typefield*: Performanceoverridetypeintel
    enable*: Bool32
    parameter*: uint64

  Performanceoverrideinfointel* = structvkperformanceoverrideinfointel ## Generated based on /usr/include/vulkan/vulkan_core.h:14398:3
  structvkperformanceconfigurationacquireinfointel* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14400:16
    pnext*: pointer
    typefield*: Performanceconfigurationtypeintel

  Performanceconfigurationacquireinfointel* = structvkperformanceconfigurationacquireinfointel ## Generated based on /usr/include/vulkan/vulkan_core.h:14404:3
  Pfnvkinitializeperformanceapiintel* = proc (a0: Device;
      a1: ptr Initializeperformanceapiinfointel): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:14406:30
  Pfnvkuninitializeperformanceapiintel* = proc (a0: Device): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:14407:26
  Pfnvkcmdsetperformancemarkerintel* = proc (a0: Commandbuffer;
      a1: ptr Performancemarkerinfointel): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:14408:30
  Pfnvkcmdsetperformancestreammarkerintel* = proc (a0: Commandbuffer;
      a1: ptr Performancestreammarkerinfointel): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:14409:30
  Pfnvkcmdsetperformanceoverrideintel* = proc (a0: Commandbuffer;
      a1: ptr Performanceoverrideinfointel): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:14410:30
  Pfnvkacquireperformanceconfigurationintel* = proc (a0: Device;
      a1: ptr Performanceconfigurationacquireinfointel;
      a2: ptr Performanceconfigurationintel): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:14411:30
  Pfnvkreleaseperformanceconfigurationintel* = proc (a0: Device;
      a1: Performanceconfigurationintel): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:14412:30
  Pfnvkqueuesetperformanceconfigurationintel* = proc (a0: Queue;
      a1: Performanceconfigurationintel): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:14413:30
  Pfnvkgetperformanceparameterintel* = proc (a0: Device;
      a1: Performanceparametertypeintel; a2: ptr Performancevalueintel): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:14414:30
  structvkphysicaldevicepcibusinfopropertiesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14460:16
    pnext*: pointer
    pcidomain*: uint32
    pcibus*: uint32
    pcidevice*: uint32
    pcifunction*: uint32

  Physicaldevicepcibusinfopropertiesext* = structvkphysicaldevicepcibusinfopropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:14467:3
  structvkdisplaynativehdrsurfacecapabilitiesamd* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14475:16
    pnext*: pointer
    localdimmingsupport*: Bool32

  Displaynativehdrsurfacecapabilitiesamd* = structvkdisplaynativehdrsurfacecapabilitiesamd ## Generated based on /usr/include/vulkan/vulkan_core.h:14479:3
  structvkswapchaindisplaynativehdrcreateinfoamd* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14481:16
    pnext*: pointer
    localdimmingenable*: Bool32

  Swapchaindisplaynativehdrcreateinfoamd* = structvkswapchaindisplaynativehdrcreateinfoamd ## Generated based on /usr/include/vulkan/vulkan_core.h:14485:3
  Pfnvksetlocaldimmingamd* = proc (a0: Device; a1: Swapchainkhr; a2: Bool32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:14487:26
  structvkphysicaldevicefragmentdensitymapfeaturesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14501:16
    pnext*: pointer
    fragmentdensitymap*: Bool32
    fragmentdensitymapdynamic*: Bool32
    fragmentdensitymapnonsubsampledimages*: Bool32

  Physicaldevicefragmentdensitymapfeaturesext* = structvkphysicaldevicefragmentdensitymapfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:14507:3
  structvkphysicaldevicefragmentdensitymappropertiesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14509:16
    pnext*: pointer
    minfragmentdensitytexelsize*: Extent2d
    maxfragmentdensitytexelsize*: Extent2d
    fragmentdensityinvocations*: Bool32

  Physicaldevicefragmentdensitymappropertiesext* = structvkphysicaldevicefragmentdensitymappropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:14515:3
  structvkrenderpassfragmentdensitymapcreateinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14517:16
    pnext*: pointer
    fragmentdensitymapattachment*: Attachmentreference

  Renderpassfragmentdensitymapcreateinfoext* = structvkrenderpassfragmentdensitymapcreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:14521:3
  Physicaldevicescalarblocklayoutfeaturesext* = Physicaldevicescalarblocklayoutfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:14529:51
  Physicaldevicesubgroupsizecontrolfeaturesext* = Physicaldevicesubgroupsizecontrolfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:14551:53
  Physicaldevicesubgroupsizecontrolpropertiesext* = Physicaldevicesubgroupsizecontrolproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:14553:55
  Pipelineshaderstagerequiredsubgroupsizecreateinfoext* = Pipelineshaderstagerequiredsubgroupsizecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:14555:61
  Shadercorepropertiesflagbitsamd* = enumvkshadercorepropertiesflagbitsamd ## Generated based on /usr/include/vulkan/vulkan_core.h:14566:3
  Shadercorepropertiesflagsamd* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:14567:17
  structvkphysicaldeviceshadercoreproperties2amd* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14568:16
    pnext*: pointer
    shadercorefeatures*: Shadercorepropertiesflagsamd
    activecomputeunitcount*: uint32

  Physicaldeviceshadercoreproperties2amd* = structvkphysicaldeviceshadercoreproperties2amd ## Generated based on /usr/include/vulkan/vulkan_core.h:14573:3
  structvkphysicaldevicecoherentmemoryfeaturesamd* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14581:16
    pnext*: pointer
    devicecoherentmemory*: Bool32

  Physicaldevicecoherentmemoryfeaturesamd* = structvkphysicaldevicecoherentmemoryfeaturesamd ## Generated based on /usr/include/vulkan/vulkan_core.h:14585:3
  structvkphysicaldeviceshaderimageatomicint64featuresext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14593:16
    pnext*: pointer
    shaderimageint64atomics*: Bool32
    sparseimageint64atomics*: Bool32

  Physicaldeviceshaderimageatomicint64featuresext* = structvkphysicaldeviceshaderimageatomicint64featuresext ## Generated based on /usr/include/vulkan/vulkan_core.h:14598:3
  structvkphysicaldevicememorybudgetpropertiesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14606:16
    pnext*: pointer
    heapbudget*: array[16'i64, Devicesize]
    heapusage*: array[16'i64, Devicesize]

  Physicaldevicememorybudgetpropertiesext* = structvkphysicaldevicememorybudgetpropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:14611:3
  structvkphysicaldevicememorypriorityfeaturesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14619:16
    pnext*: pointer
    memorypriority*: Bool32

  Physicaldevicememorypriorityfeaturesext* = structvkphysicaldevicememorypriorityfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:14623:3
  structvkmemorypriorityallocateinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14625:16
    pnext*: pointer
    priority*: cfloat

  Memorypriorityallocateinfoext* = structvkmemorypriorityallocateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:14629:3
  structvkphysicaldevicededicatedallocationimagealiasingfeaturesnv* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14637:16
    pnext*: pointer
    dedicatedallocationimagealiasing*: Bool32

  Physicaldevicededicatedallocationimagealiasingfeaturesnv* = structvkphysicaldevicededicatedallocationimagealiasingfeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:14641:3
  structvkphysicaldevicebufferdeviceaddressfeaturesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14649:16
    pnext*: pointer
    bufferdeviceaddress*: Bool32
    bufferdeviceaddresscapturereplay*: Bool32
    bufferdeviceaddressmultidevice*: Bool32

  Physicaldevicebufferdeviceaddressfeaturesext* = structvkphysicaldevicebufferdeviceaddressfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:14655:3
  Physicaldevicebufferaddressfeaturesext* = Physicaldevicebufferdeviceaddressfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:14657:56
  Bufferdeviceaddressinfoext* = Bufferdeviceaddressinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:14659:35
  structvkbufferdeviceaddresscreateinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14661:16
    pnext*: pointer
    deviceaddress*: Deviceaddress

  Bufferdeviceaddresscreateinfoext* = structvkbufferdeviceaddresscreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:14665:3
  Pfnvkgetbufferdeviceaddressext* = proc (a0: Device;
      a1: ptr Bufferdeviceaddressinfo): Deviceaddress {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:14667:37
  Toolpurposeflagbitsext* = Toolpurposeflagbits ## Generated based on /usr/include/vulkan/vulkan_core.h:14680:31
  Toolpurposeflagsext* = Toolpurposeflags ## Generated based on /usr/include/vulkan/vulkan_core.h:14682:28
  Physicaldevicetoolpropertiesext* = Physicaldevicetoolproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:14684:40
  Pfnvkgetphysicaldevicetoolpropertiesext* = proc (a0: Physicaldevice;
      a1: ptr uint32; a2: ptr Physicaldevicetoolproperties): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:14686:30
  Imagestencilusagecreateinfoext* = Imagestencilusagecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:14700:39
  Validationfeatureenableext* = enumvkvalidationfeatureenableext ## Generated based on /usr/include/vulkan/vulkan_core.h:14716:3
  Validationfeaturedisableext* = enumvkvalidationfeaturedisableext ## Generated based on /usr/include/vulkan/vulkan_core.h:14728:3
  structvkvalidationfeaturesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14729:16
    pnext*: pointer
    enabledvalidationfeaturecount*: uint32
    penabledvalidationfeatures*: ptr Validationfeatureenableext
    disabledvalidationfeaturecount*: uint32
    pdisabledvalidationfeatures*: ptr Validationfeaturedisableext

  Validationfeaturesext* = structvkvalidationfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:14736:3
  Componenttypenv* = Componenttypekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:14744:28
  Scopenv* = Scopekhr        ## Generated based on /usr/include/vulkan/vulkan_core.h:14746:20
  structvkcooperativematrixpropertiesnv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14748:16
    pnext*: pointer
    Msize*: uint32
    Nsize*: uint32
    Ksize*: uint32
    Atype*: Componenttypenv
    Btype*: Componenttypenv
    Ctype*: Componenttypenv
    Dtype*: Componenttypenv
    scope*: Scopenv

  Cooperativematrixpropertiesnv* = structvkcooperativematrixpropertiesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:14759:3
  structvkphysicaldevicecooperativematrixfeaturesnv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14761:16
    pnext*: pointer
    cooperativematrix*: Bool32
    cooperativematrixrobustbufferaccess*: Bool32

  Physicaldevicecooperativematrixfeaturesnv* = structvkphysicaldevicecooperativematrixfeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:14766:3
  structvkphysicaldevicecooperativematrixpropertiesnv* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14768:16
    pnext*: pointer
    cooperativematrixsupportedstages*: Shaderstageflags

  Physicaldevicecooperativematrixpropertiesnv* = structvkphysicaldevicecooperativematrixpropertiesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:14772:3
  Pfnvkgetphysicaldevicecooperativematrixpropertiesnv* = proc (
      a0: Physicaldevice; a1: ptr uint32; a2: ptr Cooperativematrixpropertiesnv): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:14774:30
  Coveragereductionmodenv* = enumvkcoveragereductionmodenv ## Generated based on /usr/include/vulkan/vulkan_core.h:14793:3
  Pipelinecoveragereductionstatecreateflagsnv* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:14794:17
  structvkphysicaldevicecoveragereductionmodefeaturesnv* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14795:16
    pnext*: pointer
    coveragereductionmode*: Bool32

  Physicaldevicecoveragereductionmodefeaturesnv* = structvkphysicaldevicecoveragereductionmodefeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:14799:3
  structvkpipelinecoveragereductionstatecreateinfonv* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14801:16
    pnext*: pointer
    flags*: Pipelinecoveragereductionstatecreateflagsnv
    coveragereductionmode*: Coveragereductionmodenv

  Pipelinecoveragereductionstatecreateinfonv* = structvkpipelinecoveragereductionstatecreateinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:14806:3
  structvkframebuffermixedsamplescombinationnv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14808:16
    pnext*: pointer
    coveragereductionmode*: Coveragereductionmodenv
    rasterizationsamples*: Samplecountflagbits
    depthstencilsamples*: Samplecountflags
    colorsamples*: Samplecountflags

  Framebuffermixedsamplescombinationnv* = structvkframebuffermixedsamplescombinationnv ## Generated based on /usr/include/vulkan/vulkan_core.h:14815:3
  Pfnvkgetphysicaldevicesupportedframebuffermixedsamplescombinationsnv* = proc (
      a0: Physicaldevice; a1: ptr uint32;
      a2: ptr Framebuffermixedsamplescombinationnv): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:14817:30
  structvkphysicaldevicefragmentshaderinterlockfeaturesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14831:16
    pnext*: pointer
    fragmentshadersampleinterlock*: Bool32
    fragmentshaderpixelinterlock*: Bool32
    fragmentshadershadingrateinterlock*: Bool32

  Physicaldevicefragmentshaderinterlockfeaturesext* = structvkphysicaldevicefragmentshaderinterlockfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:14837:3
  structvkphysicaldeviceycbcrimagearraysfeaturesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14845:16
    pnext*: pointer
    ycbcrimagearrays*: Bool32

  Physicaldeviceycbcrimagearraysfeaturesext* = structvkphysicaldeviceycbcrimagearraysfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:14849:3
  Provokingvertexmodeext* = enumvkprovokingvertexmodeext ## Generated based on /usr/include/vulkan/vulkan_core.h:14862:3
  structvkphysicaldeviceprovokingvertexfeaturesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14863:16
    pnext*: pointer
    provokingvertexlast*: Bool32
    transformfeedbackpreservesprovokingvertex*: Bool32

  Physicaldeviceprovokingvertexfeaturesext* = structvkphysicaldeviceprovokingvertexfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:14868:3
  structvkphysicaldeviceprovokingvertexpropertiesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14870:16
    pnext*: pointer
    provokingvertexmodeperpipeline*: Bool32
    transformfeedbackpreservestrianglefanprovokingvertex*: Bool32

  Physicaldeviceprovokingvertexpropertiesext* = structvkphysicaldeviceprovokingvertexpropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:14875:3
  structvkpipelinerasterizationprovokingvertexstatecreateinfoext* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14877:16
    pnext*: pointer
    provokingvertexmode*: Provokingvertexmodeext

  Pipelinerasterizationprovokingvertexstatecreateinfoext* = structvkpipelinerasterizationprovokingvertexstatecreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:14881:3
  Headlesssurfacecreateflagsext* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:14889:17
  structvkheadlesssurfacecreateinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14890:16
    pnext*: pointer
    flags*: Headlesssurfacecreateflagsext

  Headlesssurfacecreateinfoext* = structvkheadlesssurfacecreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:14894:3
  Pfnvkcreateheadlesssurfaceext* = proc (a0: Instance;
      a1: ptr Headlesssurfacecreateinfoext; a2: ptr Allocationcallbacks;
      a3: ptr Surfacekhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:14896:30
  Linerasterizationmodeext* = Linerasterizationmodekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:14911:36
  Physicaldevicelinerasterizationfeaturesext* = Physicaldevicelinerasterizationfeatureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:14913:54
  Physicaldevicelinerasterizationpropertiesext* = Physicaldevicelinerasterizationpropertieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:14915:56
  Pipelinerasterizationlinestatecreateinfoext* = Pipelinerasterizationlinestatecreateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:14917:55
  Pfnvkcmdsetlinestippleext* = proc (a0: Commandbuffer; a1: uint32; a2: uint16): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:14919:26
  structvkphysicaldeviceshaderatomicfloatfeaturesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14933:16
    pnext*: pointer
    shaderbufferfloat32atomics*: Bool32
    shaderbufferfloat32atomicadd*: Bool32
    shaderbufferfloat64atomics*: Bool32
    shaderbufferfloat64atomicadd*: Bool32
    shadersharedfloat32atomics*: Bool32
    shadersharedfloat32atomicadd*: Bool32
    shadersharedfloat64atomics*: Bool32
    shadersharedfloat64atomicadd*: Bool32
    shaderimagefloat32atomics*: Bool32
    shaderimagefloat32atomicadd*: Bool32
    sparseimagefloat32atomics*: Bool32
    sparseimagefloat32atomicadd*: Bool32

  Physicaldeviceshaderatomicfloatfeaturesext* = structvkphysicaldeviceshaderatomicfloatfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:14948:3
  Physicaldevicehostqueryresetfeaturesext* = Physicaldevicehostqueryresetfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:14956:48
  Pfnvkresetquerypoolext* = proc (a0: Device; a1: Querypool; a2: uint32;
                                  a3: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:14958:26
  Physicaldeviceindextypeuint8featuresext* = Physicaldeviceindextypeuint8featureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:14973:51
  structvkphysicaldeviceextendeddynamicstatefeaturesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:14981:16
    pnext*: pointer
    extendeddynamicstate*: Bool32

  Physicaldeviceextendeddynamicstatefeaturesext* = structvkphysicaldeviceextendeddynamicstatefeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:14985:3
  Pfnvkcmdsetcullmodeext* = proc (a0: Commandbuffer; a1: Cullmodeflags): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:14987:26
  Pfnvkcmdsetfrontfaceext* = proc (a0: Commandbuffer; a1: Frontface): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:14988:26
  Pfnvkcmdsetprimitivetopologyext* = proc (a0: Commandbuffer;
      a1: Primitivetopology): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:14989:26
  Pfnvkcmdsetviewportwithcountext* = proc (a0: Commandbuffer; a1: uint32;
      a2: ptr Viewport): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:14990:26
  Pfnvkcmdsetscissorwithcountext* = proc (a0: Commandbuffer; a1: uint32;
      a2: ptr Rect2d): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:14991:26
  Pfnvkcmdbindvertexbuffers2ext* = proc (a0: Commandbuffer; a1: uint32;
      a2: uint32; a3: ptr Buffer; a4: ptr Devicesize; a5: ptr Devicesize;
      a6: ptr Devicesize): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:14992:26
  Pfnvkcmdsetdepthtestenableext* = proc (a0: Commandbuffer; a1: Bool32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:14993:26
  Pfnvkcmdsetdepthwriteenableext* = proc (a0: Commandbuffer; a1: Bool32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:14994:26
  Pfnvkcmdsetdepthcompareopext* = proc (a0: Commandbuffer; a1: Compareop): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:14995:26
  Pfnvkcmdsetdepthboundstestenableext* = proc (a0: Commandbuffer; a1: Bool32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:14996:26
  Pfnvkcmdsetstenciltestenableext* = proc (a0: Commandbuffer; a1: Bool32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:14997:26
  Pfnvkcmdsetstencilopext* = proc (a0: Commandbuffer; a1: Stencilfaceflags;
                                   a2: Stencilop; a3: Stencilop; a4: Stencilop;
                                   a5: Compareop): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:14998:26
  Hostimagecopyflagbitsext* = enumvkhostimagecopyflagbitsext ## Generated based on /usr/include/vulkan/vulkan_core.h:15070:3
  Hostimagecopyflagsext* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:15071:17
  structvkphysicaldevicehostimagecopyfeaturesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15072:16
    pnext*: pointer
    hostimagecopy*: Bool32

  Physicaldevicehostimagecopyfeaturesext* = structvkphysicaldevicehostimagecopyfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:15076:3
  structvkphysicaldevicehostimagecopypropertiesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15078:16
    pnext*: pointer
    copysrclayoutcount*: uint32
    pcopysrclayouts*: ptr Imagelayout
    copydstlayoutcount*: uint32
    pcopydstlayouts*: ptr Imagelayout
    optimaltilinglayoutuuid*: array[16'i64, uint8]
    identicalmemorytyperequirements*: Bool32

  Physicaldevicehostimagecopypropertiesext* = structvkphysicaldevicehostimagecopypropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:15087:3
  structvkmemorytoimagecopyext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15089:16
    pnext*: pointer
    phostpointer*: pointer
    memoryrowlength*: uint32
    memoryimageheight*: uint32
    imagesubresource*: Imagesubresourcelayers
    imageoffset*: Offset3d
    imageextent*: Extent3d

  Memorytoimagecopyext* = structvkmemorytoimagecopyext ## Generated based on /usr/include/vulkan/vulkan_core.h:15098:3
  structvkimagetomemorycopyext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15100:16
    pnext*: pointer
    phostpointer*: pointer
    memoryrowlength*: uint32
    memoryimageheight*: uint32
    imagesubresource*: Imagesubresourcelayers
    imageoffset*: Offset3d
    imageextent*: Extent3d

  Imagetomemorycopyext* = structvkimagetomemorycopyext ## Generated based on /usr/include/vulkan/vulkan_core.h:15109:3
  structvkcopymemorytoimageinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15111:16
    pnext*: pointer
    flags*: Hostimagecopyflagsext
    dstimage*: Image
    dstimagelayout*: Imagelayout
    regioncount*: uint32
    pregions*: ptr Memorytoimagecopyext

  Copymemorytoimageinfoext* = structvkcopymemorytoimageinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:15119:3
  structvkcopyimagetomemoryinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15121:16
    pnext*: pointer
    flags*: Hostimagecopyflagsext
    srcimage*: Image
    srcimagelayout*: Imagelayout
    regioncount*: uint32
    pregions*: ptr Imagetomemorycopyext

  Copyimagetomemoryinfoext* = structvkcopyimagetomemoryinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:15129:3
  structvkcopyimagetoimageinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15131:16
    pnext*: pointer
    flags*: Hostimagecopyflagsext
    srcimage*: Image
    srcimagelayout*: Imagelayout
    dstimage*: Image
    dstimagelayout*: Imagelayout
    regioncount*: uint32
    pregions*: ptr Imagecopy2

  Copyimagetoimageinfoext* = structvkcopyimagetoimageinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:15141:3
  structvkhostimagelayouttransitioninfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15143:16
    pnext*: pointer
    image*: Image
    oldlayout*: Imagelayout
    newlayout*: Imagelayout
    subresourcerange*: Imagesubresourcerange

  Hostimagelayouttransitioninfoext* = structvkhostimagelayouttransitioninfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:15150:3
  structvksubresourcehostmemcpysizeext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15152:16
    pnext*: pointer
    size*: Devicesize

  Subresourcehostmemcpysizeext* = structvksubresourcehostmemcpysizeext ## Generated based on /usr/include/vulkan/vulkan_core.h:15156:3
  structvkhostimagecopydeviceperformancequeryext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15158:16
    pnext*: pointer
    optimaldeviceaccess*: Bool32
    identicalmemorylayout*: Bool32

  Hostimagecopydeviceperformancequeryext* = structvkhostimagecopydeviceperformancequeryext ## Generated based on /usr/include/vulkan/vulkan_core.h:15163:3
  Subresourcelayout2ext* = Subresourcelayout2khr ## Generated based on /usr/include/vulkan/vulkan_core.h:15165:33
  Imagesubresource2ext* = Imagesubresource2khr ## Generated based on /usr/include/vulkan/vulkan_core.h:15167:32
  Pfnvkcopymemorytoimageext* = proc (a0: Device;
                                     a1: ptr Copymemorytoimageinfoext): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:15169:30
  Pfnvkcopyimagetomemoryext* = proc (a0: Device;
                                     a1: ptr Copyimagetomemoryinfoext): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:15170:30
  Pfnvkcopyimagetoimageext* = proc (a0: Device; a1: ptr Copyimagetoimageinfoext): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:15171:30
  Pfnvktransitionimagelayoutext* = proc (a0: Device; a1: uint32;
      a2: ptr Hostimagelayouttransitioninfoext): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:15172:30
  Pfnvkgetimagesubresourcelayout2ext* = proc (a0: Device; a1: Image;
      a2: ptr Imagesubresource2khr; a3: ptr Subresourcelayout2khr): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:15173:26
  structvkphysicaldevicemapmemoryplacedfeaturesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15205:16
    pnext*: pointer
    memorymapplaced*: Bool32
    memorymaprangeplaced*: Bool32
    memoryunmapreserve*: Bool32

  Physicaldevicemapmemoryplacedfeaturesext* = structvkphysicaldevicemapmemoryplacedfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:15211:3
  structvkphysicaldevicemapmemoryplacedpropertiesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15213:16
    pnext*: pointer
    minplacedmemorymapalignment*: Devicesize

  Physicaldevicemapmemoryplacedpropertiesext* = structvkphysicaldevicemapmemoryplacedpropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:15217:3
  structvkmemorymapplacedinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15219:16
    pnext*: pointer
    pplacedaddress*: pointer

  Memorymapplacedinfoext* = structvkmemorymapplacedinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:15223:3
  structvkphysicaldeviceshaderatomicfloat2featuresext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15231:16
    pnext*: pointer
    shaderbufferfloat16atomics*: Bool32
    shaderbufferfloat16atomicadd*: Bool32
    shaderbufferfloat16atomicminmax*: Bool32
    shaderbufferfloat32atomicminmax*: Bool32
    shaderbufferfloat64atomicminmax*: Bool32
    shadersharedfloat16atomics*: Bool32
    shadersharedfloat16atomicadd*: Bool32
    shadersharedfloat16atomicminmax*: Bool32
    shadersharedfloat32atomicminmax*: Bool32
    shadersharedfloat64atomicminmax*: Bool32
    shaderimagefloat32atomicminmax*: Bool32
    sparseimagefloat32atomicminmax*: Bool32

  Physicaldeviceshaderatomicfloat2featuresext* = structvkphysicaldeviceshaderatomicfloat2featuresext ## Generated based on /usr/include/vulkan/vulkan_core.h:15246:3
  Presentscalingflagbitsext* = enumvkpresentscalingflagbitsext ## Generated based on /usr/include/vulkan/vulkan_core.h:15260:3
  Presentscalingflagsext* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:15261:17
  Presentgravityflagbitsext* = enumvkpresentgravityflagbitsext ## Generated based on /usr/include/vulkan/vulkan_core.h:15268:3
  Presentgravityflagsext* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:15269:17
  structvksurfacepresentmodeext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15270:16
    pnext*: pointer
    presentmode*: Presentmodekhr

  Surfacepresentmodeext* = structvksurfacepresentmodeext ## Generated based on /usr/include/vulkan/vulkan_core.h:15274:3
  structvksurfacepresentscalingcapabilitiesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15276:16
    pnext*: pointer
    supportedpresentscaling*: Presentscalingflagsext
    supportedpresentgravityx*: Presentgravityflagsext
    supportedpresentgravityy*: Presentgravityflagsext
    minscaledimageextent*: Extent2d
    maxscaledimageextent*: Extent2d

  Surfacepresentscalingcapabilitiesext* = structvksurfacepresentscalingcapabilitiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:15284:3
  structvksurfacepresentmodecompatibilityext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15286:16
    pnext*: pointer
    presentmodecount*: uint32
    ppresentmodes*: ptr Presentmodekhr

  Surfacepresentmodecompatibilityext* = structvksurfacepresentmodecompatibilityext ## Generated based on /usr/include/vulkan/vulkan_core.h:15291:3
  structvkphysicaldeviceswapchainmaintenance1featuresext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15299:16
    pnext*: pointer
    swapchainmaintenance1*: Bool32

  Physicaldeviceswapchainmaintenance1featuresext* = structvkphysicaldeviceswapchainmaintenance1featuresext ## Generated based on /usr/include/vulkan/vulkan_core.h:15303:3
  structvkswapchainpresentfenceinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15305:16
    pnext*: pointer
    swapchaincount*: uint32
    pfences*: ptr Fence

  Swapchainpresentfenceinfoext* = structvkswapchainpresentfenceinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:15310:3
  structvkswapchainpresentmodescreateinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15312:16
    pnext*: pointer
    presentmodecount*: uint32
    ppresentmodes*: ptr Presentmodekhr

  Swapchainpresentmodescreateinfoext* = structvkswapchainpresentmodescreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:15317:3
  structvkswapchainpresentmodeinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15319:16
    pnext*: pointer
    swapchaincount*: uint32
    ppresentmodes*: ptr Presentmodekhr

  Swapchainpresentmodeinfoext* = structvkswapchainpresentmodeinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:15324:3
  structvkswapchainpresentscalingcreateinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15326:16
    pnext*: pointer
    scalingbehavior*: Presentscalingflagsext
    presentgravityx*: Presentgravityflagsext
    presentgravityy*: Presentgravityflagsext

  Swapchainpresentscalingcreateinfoext* = structvkswapchainpresentscalingcreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:15332:3
  structvkreleaseswapchainimagesinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15334:16
    pnext*: pointer
    swapchain*: Swapchainkhr
    imageindexcount*: uint32
    pimageindices*: ptr uint32

  Releaseswapchainimagesinfoext* = structvkreleaseswapchainimagesinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:15340:3
  Pfnvkreleaseswapchainimagesext* = proc (a0: Device;
      a1: ptr Releaseswapchainimagesinfoext): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:15342:30
  Physicaldeviceshaderdemotetohelperinvocationfeaturesext* = Physicaldeviceshaderdemotetohelperinvocationfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:15355:64
  Indirectcommandslayoutnv* = ptr structvkindirectcommandslayoutnvt ## Generated based on /usr/include/vulkan/vulkan_core.h:15361:1
  Indirectcommandstokentypenv* = enumvkindirectcommandstokentypenv ## Generated based on /usr/include/vulkan/vulkan_core.h:15378:3
  Indirectstateflagbitsnv* = enumvkindirectstateflagbitsnv ## Generated based on /usr/include/vulkan/vulkan_core.h:15383:3
  Indirectstateflagsnv* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:15384:17
  Indirectcommandslayoutusageflagbitsnv* = enumvkindirectcommandslayoutusageflagbitsnv ## Generated based on /usr/include/vulkan/vulkan_core.h:15391:3
  Indirectcommandslayoutusageflagsnv* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:15392:17
  structvkphysicaldevicedevicegeneratedcommandspropertiesnv* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15393:16
    pnext*: pointer
    maxgraphicsshadergroupcount*: uint32
    maxindirectsequencecount*: uint32
    maxindirectcommandstokencount*: uint32
    maxindirectcommandsstreamcount*: uint32
    maxindirectcommandstokenoffset*: uint32
    maxindirectcommandsstreamstride*: uint32
    minsequencescountbufferoffsetalignment*: uint32
    minsequencesindexbufferoffsetalignment*: uint32
    minindirectcommandsbufferoffsetalignment*: uint32

  Physicaldevicedevicegeneratedcommandspropertiesnv* = structvkphysicaldevicedevicegeneratedcommandspropertiesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:15405:3
  structvkphysicaldevicedevicegeneratedcommandsfeaturesnv* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15407:16
    pnext*: pointer
    devicegeneratedcommands*: Bool32

  Physicaldevicedevicegeneratedcommandsfeaturesnv* = structvkphysicaldevicedevicegeneratedcommandsfeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:15411:3
  structvkgraphicsshadergroupcreateinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15413:16
    pnext*: pointer
    stagecount*: uint32
    pstages*: ptr Pipelineshaderstagecreateinfo
    pvertexinputstate*: ptr Pipelinevertexinputstatecreateinfo
    ptessellationstate*: ptr Pipelinetessellationstatecreateinfo

  Graphicsshadergroupcreateinfonv* = structvkgraphicsshadergroupcreateinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:15420:3
  structvkgraphicspipelineshadergroupscreateinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15422:16
    pnext*: pointer
    groupcount*: uint32
    pgroups*: ptr Graphicsshadergroupcreateinfonv
    pipelinecount*: uint32
    ppipelines*: ptr Pipeline

  Graphicspipelineshadergroupscreateinfonv* = structvkgraphicspipelineshadergroupscreateinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:15429:3
  structvkbindshadergroupindirectcommandnv* {.pure, inheritable, bycopy.} = object
    groupindex*: uint32      ## Generated based on /usr/include/vulkan/vulkan_core.h:15431:16
  
  Bindshadergroupindirectcommandnv* = structvkbindshadergroupindirectcommandnv ## Generated based on /usr/include/vulkan/vulkan_core.h:15433:3
  structvkbindindexbufferindirectcommandnv* {.pure, inheritable, bycopy.} = object
    bufferaddress*: Deviceaddress ## Generated based on /usr/include/vulkan/vulkan_core.h:15435:16
    size*: uint32
    indextype*: Indextype

  Bindindexbufferindirectcommandnv* = structvkbindindexbufferindirectcommandnv ## Generated based on /usr/include/vulkan/vulkan_core.h:15439:3
  structvkbindvertexbufferindirectcommandnv* {.pure, inheritable, bycopy.} = object
    bufferaddress*: Deviceaddress ## Generated based on /usr/include/vulkan/vulkan_core.h:15441:16
    size*: uint32
    stride*: uint32

  Bindvertexbufferindirectcommandnv* = structvkbindvertexbufferindirectcommandnv ## Generated based on /usr/include/vulkan/vulkan_core.h:15445:3
  structvksetstateflagsindirectcommandnv* {.pure, inheritable, bycopy.} = object
    data*: uint32            ## Generated based on /usr/include/vulkan/vulkan_core.h:15447:16
  
  Setstateflagsindirectcommandnv* = structvksetstateflagsindirectcommandnv ## Generated based on /usr/include/vulkan/vulkan_core.h:15449:3
  structvkindirectcommandsstreamnv* {.pure, inheritable, bycopy.} = object
    buffer*: Buffer          ## Generated based on /usr/include/vulkan/vulkan_core.h:15451:16
    offset*: Devicesize

  Indirectcommandsstreamnv* = structvkindirectcommandsstreamnv ## Generated based on /usr/include/vulkan/vulkan_core.h:15454:3
  structvkindirectcommandslayouttokennv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15456:16
    pnext*: pointer
    tokentype*: Indirectcommandstokentypenv
    stream*: uint32
    offset*: uint32
    vertexbindingunit*: uint32
    vertexdynamicstride*: Bool32
    pushconstantpipelinelayout*: Pipelinelayout
    pushconstantshaderstageflags*: Shaderstageflags
    pushconstantoffset*: uint32
    pushconstantsize*: uint32
    indirectstateflags*: Indirectstateflagsnv
    indextypecount*: uint32
    pindextypes*: ptr Indextype
    pindextypevalues*: ptr uint32

  Indirectcommandslayouttokennv* = structvkindirectcommandslayouttokennv ## Generated based on /usr/include/vulkan/vulkan_core.h:15472:3
  structvkindirectcommandslayoutcreateinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15474:16
    pnext*: pointer
    flags*: Indirectcommandslayoutusageflagsnv
    pipelinebindpoint*: Pipelinebindpoint
    tokencount*: uint32
    ptokens*: ptr Indirectcommandslayouttokennv
    streamcount*: uint32
    pstreamstrides*: ptr uint32

  Indirectcommandslayoutcreateinfonv* = structvkindirectcommandslayoutcreateinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:15483:3
  structvkgeneratedcommandsinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15485:16
    pnext*: pointer
    pipelinebindpoint*: Pipelinebindpoint
    pipeline*: Pipeline
    indirectcommandslayout*: Indirectcommandslayoutnv
    streamcount*: uint32
    pstreams*: ptr Indirectcommandsstreamnv
    sequencescount*: uint32
    preprocessbuffer*: Buffer
    preprocessoffset*: Devicesize
    preprocesssize*: Devicesize
    sequencescountbuffer*: Buffer
    sequencescountoffset*: Devicesize
    sequencesindexbuffer*: Buffer
    sequencesindexoffset*: Devicesize

  Generatedcommandsinfonv* = structvkgeneratedcommandsinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:15501:3
  structvkgeneratedcommandsmemoryrequirementsinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15503:16
    pnext*: pointer
    pipelinebindpoint*: Pipelinebindpoint
    pipeline*: Pipeline
    indirectcommandslayout*: Indirectcommandslayoutnv
    maxsequencescount*: uint32

  Generatedcommandsmemoryrequirementsinfonv* = structvkgeneratedcommandsmemoryrequirementsinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:15510:3
  Pfnvkgetgeneratedcommandsmemoryrequirementsnv* = proc (a0: Device;
      a1: ptr Generatedcommandsmemoryrequirementsinfonv;
      a2: ptr Memoryrequirements2): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:15512:26
  Pfnvkcmdpreprocessgeneratedcommandsnv* = proc (a0: Commandbuffer;
      a1: ptr Generatedcommandsinfonv): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:15513:26
  Pfnvkcmdexecutegeneratedcommandsnv* = proc (a0: Commandbuffer; a1: Bool32;
      a2: ptr Generatedcommandsinfonv): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:15514:26
  Pfnvkcmdbindpipelineshadergroupnv* = proc (a0: Commandbuffer;
      a1: Pipelinebindpoint; a2: Pipeline; a3: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:15515:26
  Pfnvkcreateindirectcommandslayoutnv* = proc (a0: Device;
      a1: ptr Indirectcommandslayoutcreateinfonv; a2: ptr Allocationcallbacks;
      a3: ptr Indirectcommandslayoutnv): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:15516:30
  Pfnvkdestroyindirectcommandslayoutnv* = proc (a0: Device;
      a1: Indirectcommandslayoutnv; a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:15517:26
  structvkphysicaldeviceinheritedviewportscissorfeaturesnv* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15557:16
    pnext*: pointer
    inheritedviewportscissor2d*: Bool32

  Physicaldeviceinheritedviewportscissorfeaturesnv* = structvkphysicaldeviceinheritedviewportscissorfeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:15561:3
  structvkcommandbufferinheritanceviewportscissorinfonv* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15563:16
    pnext*: pointer
    viewportscissor2d*: Bool32
    viewportdepthcount*: uint32
    pviewportdepths*: ptr Viewport

  Commandbufferinheritanceviewportscissorinfonv* = structvkcommandbufferinheritanceviewportscissorinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:15569:3
  structvkphysicaldevicetexelbufferalignmentfeaturesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15577:16
    pnext*: pointer
    texelbufferalignment*: Bool32

  Physicaldevicetexelbufferalignmentfeaturesext* = structvkphysicaldevicetexelbufferalignmentfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:15581:3
  Physicaldevicetexelbufferalignmentpropertiesext* = Physicaldevicetexelbufferalignmentproperties ## Generated based on /usr/include/vulkan/vulkan_core.h:15583:56
  structvkrenderpasstransformbegininfoqcom* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15591:16
    pnext*: pointer
    transform*: Surfacetransformflagbitskhr

  Renderpasstransformbegininfoqcom* = structvkrenderpasstransformbegininfoqcom ## Generated based on /usr/include/vulkan/vulkan_core.h:15595:3
  structvkcommandbufferinheritancerenderpasstransforminfoqcom* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15597:16
    pnext*: pointer
    transform*: Surfacetransformflagbitskhr
    renderarea*: Rect2d

  Commandbufferinheritancerenderpasstransforminfoqcom* = structvkcommandbufferinheritancerenderpasstransforminfoqcom ## Generated based on /usr/include/vulkan/vulkan_core.h:15602:3
  Depthbiasrepresentationext* = enumvkdepthbiasrepresentationext ## Generated based on /usr/include/vulkan/vulkan_core.h:15616:3
  structvkphysicaldevicedepthbiascontrolfeaturesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15617:16
    pnext*: pointer
    depthbiascontrol*: Bool32
    leastrepresentablevalueforceunormrepresentation*: Bool32
    floatrepresentation*: Bool32
    depthbiasexact*: Bool32

  Physicaldevicedepthbiascontrolfeaturesext* = structvkphysicaldevicedepthbiascontrolfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:15624:3
  structvkdepthbiasinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15626:16
    pnext*: pointer
    depthbiasconstantfactor*: cfloat
    depthbiasclamp*: cfloat
    depthbiasslopefactor*: cfloat

  Depthbiasinfoext* = structvkdepthbiasinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:15632:3
  structvkdepthbiasrepresentationinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15634:16
    pnext*: pointer
    depthbiasrepresentation*: Depthbiasrepresentationext
    depthbiasexact*: Bool32

  Depthbiasrepresentationinfoext* = structvkdepthbiasrepresentationinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:15639:3
  Pfnvkcmdsetdepthbias2ext* = proc (a0: Commandbuffer; a1: ptr Depthbiasinfoext): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:15641:26
  Devicememoryreporteventtypeext* = enumvkdevicememoryreporteventtypeext ## Generated based on /usr/include/vulkan/vulkan_core.h:15662:3
  Devicememoryreportflagsext* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:15663:17
  structvkphysicaldevicedevicememoryreportfeaturesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15664:16
    pnext*: pointer
    devicememoryreport*: Bool32

  Physicaldevicedevicememoryreportfeaturesext* = structvkphysicaldevicedevicememoryreportfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:15668:3
  structvkdevicememoryreportcallbackdataext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15670:16
    pnext*: pointer
    flags*: Devicememoryreportflagsext
    typefield*: Devicememoryreporteventtypeext
    memoryobjectid*: uint64
    size*: Devicesize
    objecttype*: Objecttype
    objecthandle*: uint64
    heapindex*: uint32

  Devicememoryreportcallbackdataext* = structvkdevicememoryreportcallbackdataext ## Generated based on /usr/include/vulkan/vulkan_core.h:15680:3
  Pfnvkdevicememoryreportcallbackext* = proc (
      a0: ptr Devicememoryreportcallbackdataext; a1: pointer): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:15682:26
  structvkdevicedevicememoryreportcreateinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15686:16
    pnext*: pointer
    flags*: Devicememoryreportflagsext
    pfnusercallback*: Pfnvkdevicememoryreportcallbackext
    puserdata*: pointer

  Devicedevicememoryreportcreateinfoext* = structvkdevicedevicememoryreportcreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:15692:3
  Pfnvkacquiredrmdisplayext* = proc (a0: Physicaldevice; a1: int32;
                                     a2: Displaykhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:15700:30
  Pfnvkgetdrmdisplayext* = proc (a0: Physicaldevice; a1: int32; a2: uint32;
                                 a3: ptr Displaykhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:15701:30
  structvkphysicaldevicerobustness2featuresext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15721:16
    pnext*: pointer
    robustbufferaccess2*: Bool32
    robustimageaccess2*: Bool32
    nulldescriptor*: Bool32

  Physicaldevicerobustness2featuresext* = structvkphysicaldevicerobustness2featuresext ## Generated based on /usr/include/vulkan/vulkan_core.h:15727:3
  structvkphysicaldevicerobustness2propertiesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15729:16
    pnext*: pointer
    robuststoragebufferaccesssizealignment*: Devicesize
    robustuniformbufferaccesssizealignment*: Devicesize

  Physicaldevicerobustness2propertiesext* = structvkphysicaldevicerobustness2propertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:15734:3
  structvksamplercustombordercolorcreateinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15742:16
    pnext*: pointer
    custombordercolor*: Clearcolorvalue
    format*: Format

  Samplercustombordercolorcreateinfoext* = structvksamplercustombordercolorcreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:15747:3
  structvkphysicaldevicecustombordercolorpropertiesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15749:16
    pnext*: pointer
    maxcustombordercolorsamplers*: uint32

  Physicaldevicecustombordercolorpropertiesext* = structvkphysicaldevicecustombordercolorpropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:15753:3
  structvkphysicaldevicecustombordercolorfeaturesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15755:16
    pnext*: pointer
    custombordercolors*: Bool32
    custombordercolorwithoutformat*: Bool32

  Physicaldevicecustombordercolorfeaturesext* = structvkphysicaldevicecustombordercolorfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:15760:3
  structvkphysicaldevicepresentbarrierfeaturesnv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15774:16
    pnext*: pointer
    presentbarrier*: Bool32

  Physicaldevicepresentbarrierfeaturesnv* = structvkphysicaldevicepresentbarrierfeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:15778:3
  structvksurfacecapabilitiespresentbarriernv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15780:16
    pnext*: pointer
    presentbarriersupported*: Bool32

  Surfacecapabilitiespresentbarriernv* = structvksurfacecapabilitiespresentbarriernv ## Generated based on /usr/include/vulkan/vulkan_core.h:15784:3
  structvkswapchainpresentbarriercreateinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15786:16
    pnext*: pointer
    presentbarrierenable*: Bool32

  Swapchainpresentbarriercreateinfonv* = structvkswapchainpresentbarriercreateinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:15790:3
  Privatedataslotext* = Privatedataslot ## Generated based on /usr/include/vulkan/vulkan_core.h:15796:27
  Privatedataslotcreateflagsext* = Privatedataslotcreateflags ## Generated based on /usr/include/vulkan/vulkan_core.h:15800:38
  Physicaldeviceprivatedatafeaturesext* = Physicaldeviceprivatedatafeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:15802:45
  Deviceprivatedatacreateinfoext* = Deviceprivatedatacreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:15804:39
  Privatedataslotcreateinfoext* = Privatedataslotcreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:15806:37
  Pfnvkcreateprivatedataslotext* = proc (a0: Device;
      a1: ptr Privatedataslotcreateinfo; a2: ptr Allocationcallbacks;
      a3: ptr Privatedataslot): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:15808:30
  Pfnvkdestroyprivatedataslotext* = proc (a0: Device; a1: Privatedataslot;
      a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:15809:26
  Pfnvksetprivatedataext* = proc (a0: Device; a1: Objecttype; a2: uint64;
                                  a3: Privatedataslot; a4: uint64): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:15810:30
  Pfnvkgetprivatedataext* = proc (a0: Device; a1: Objecttype; a2: uint64;
                                  a3: Privatedataslot; a4: ptr uint64): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:15811:26
  Physicaldevicepipelinecreationcachecontrolfeaturesext* = Physicaldevicepipelinecreationcachecontrolfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:15845:62
  Devicediagnosticsconfigflagbitsnv* = enumvkdevicediagnosticsconfigflagbitsnv ## Generated based on /usr/include/vulkan/vulkan_core.h:15860:3
  Devicediagnosticsconfigflagsnv* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:15861:17
  structvkphysicaldevicediagnosticsconfigfeaturesnv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15862:16
    pnext*: pointer
    diagnosticsconfig*: Bool32

  Physicaldevicediagnosticsconfigfeaturesnv* = structvkphysicaldevicediagnosticsconfigfeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:15866:3
  structvkdevicediagnosticsconfigcreateinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15868:16
    pnext*: pointer
    flags*: Devicediagnosticsconfigflagsnv

  Devicediagnosticsconfigcreateinfonv* = structvkdevicediagnosticsconfigcreateinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:15872:3
  Cudamodulenv* = ptr structvkcudamodulenvt ## Generated based on /usr/include/vulkan/vulkan_core.h:15884:1
  Cudafunctionnv* = ptr structvkcudafunctionnvt ## Generated based on /usr/include/vulkan/vulkan_core.h:15885:1
  structvkcudamodulecreateinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15888:16
    pnext*: pointer
    datasize*: csize_t
    pdata*: pointer

  Cudamodulecreateinfonv* = structvkcudamodulecreateinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:15893:3
  structvkcudafunctioncreateinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15895:16
    pnext*: pointer
    module*: Cudamodulenv
    pname*: cstring

  Cudafunctioncreateinfonv* = structvkcudafunctioncreateinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:15900:3
  structvkcudalaunchinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15902:16
    pnext*: pointer
    function*: Cudafunctionnv
    griddimx*: uint32
    griddimy*: uint32
    griddimz*: uint32
    blockdimx*: uint32
    blockdimy*: uint32
    blockdimz*: uint32
    sharedmembytes*: uint32
    paramcount*: csize_t
    pparams*: ptr pointer
    extracount*: csize_t
    pextras*: ptr pointer

  Cudalaunchinfonv* = structvkcudalaunchinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:15917:3
  structvkphysicaldevicecudakernellaunchfeaturesnv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15919:16
    pnext*: pointer
    cudakernellaunchfeatures*: Bool32

  Physicaldevicecudakernellaunchfeaturesnv* = structvkphysicaldevicecudakernellaunchfeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:15923:3
  structvkphysicaldevicecudakernellaunchpropertiesnv* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15925:16
    pnext*: pointer
    computecapabilityminor*: uint32
    computecapabilitymajor*: uint32

  Physicaldevicecudakernellaunchpropertiesnv* = structvkphysicaldevicecudakernellaunchpropertiesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:15930:3
  Pfnvkcreatecudamodulenv* = proc (a0: Device; a1: ptr Cudamodulecreateinfonv;
                                   a2: ptr Allocationcallbacks;
                                   a3: ptr Cudamodulenv): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:15932:30
  Pfnvkgetcudamodulecachenv* = proc (a0: Device; a1: Cudamodulenv;
                                     a2: ptr csize_t; a3: pointer): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:15933:30
  Pfnvkcreatecudafunctionnv* = proc (a0: Device;
                                     a1: ptr Cudafunctioncreateinfonv;
                                     a2: ptr Allocationcallbacks;
                                     a3: ptr Cudafunctionnv): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:15934:30
  Pfnvkdestroycudamodulenv* = proc (a0: Device; a1: Cudamodulenv;
                                    a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:15935:26
  Pfnvkdestroycudafunctionnv* = proc (a0: Device; a1: Cudafunctionnv;
                                      a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:15936:26
  Pfnvkcmdcudalaunchkernelnv* = proc (a0: Commandbuffer;
                                      a1: ptr Cudalaunchinfonv): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:15937:26
  structvkquerylowlatencysupportnv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15978:16
    pnext*: pointer
    pqueriedlowlatencydata*: pointer

  Querylowlatencysupportnv* = structvkquerylowlatencysupportnv ## Generated based on /usr/include/vulkan/vulkan_core.h:15982:3
  Accelerationstructurekhr* = ptr structvkaccelerationstructurekhrt ## Generated based on /usr/include/vulkan/vulkan_core.h:15988:1
  structvkphysicaldevicedescriptorbufferpropertiesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:15991:16
    pnext*: pointer
    combinedimagesamplerdescriptorsinglearray*: Bool32
    bufferlesspushdescriptors*: Bool32
    allowsamplerimageviewpostsubmitcreation*: Bool32
    descriptorbufferoffsetalignment*: Devicesize
    maxdescriptorbufferbindings*: uint32
    maxresourcedescriptorbufferbindings*: uint32
    maxsamplerdescriptorbufferbindings*: uint32
    maxembeddedimmutablesamplerbindings*: uint32
    maxembeddedimmutablesamplers*: uint32
    buffercapturereplaydescriptordatasize*: csize_t
    imagecapturereplaydescriptordatasize*: csize_t
    imageviewcapturereplaydescriptordatasize*: csize_t
    samplercapturereplaydescriptordatasize*: csize_t
    accelerationstructurecapturereplaydescriptordatasize*: csize_t
    samplerdescriptorsize*: csize_t
    combinedimagesamplerdescriptorsize*: csize_t
    sampledimagedescriptorsize*: csize_t
    storageimagedescriptorsize*: csize_t
    uniformtexelbufferdescriptorsize*: csize_t
    robustuniformtexelbufferdescriptorsize*: csize_t
    storagetexelbufferdescriptorsize*: csize_t
    robuststoragetexelbufferdescriptorsize*: csize_t
    uniformbufferdescriptorsize*: csize_t
    robustuniformbufferdescriptorsize*: csize_t
    storagebufferdescriptorsize*: csize_t
    robuststoragebufferdescriptorsize*: csize_t
    inputattachmentdescriptorsize*: csize_t
    accelerationstructuredescriptorsize*: csize_t
    maxsamplerdescriptorbufferrange*: Devicesize
    maxresourcedescriptorbufferrange*: Devicesize
    samplerdescriptorbufferaddressspacesize*: Devicesize
    resourcedescriptorbufferaddressspacesize*: Devicesize
    descriptorbufferaddressspacesize*: Devicesize

  Physicaldevicedescriptorbufferpropertiesext* = structvkphysicaldevicedescriptorbufferpropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:16027:3
  structvkphysicaldevicedescriptorbufferdensitymappropertiesext* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16029:16
    pnext*: pointer
    combinedimagesamplerdensitymapdescriptorsize*: csize_t

  Physicaldevicedescriptorbufferdensitymappropertiesext* = structvkphysicaldevicedescriptorbufferdensitymappropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:16033:3
  structvkphysicaldevicedescriptorbufferfeaturesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16035:16
    pnext*: pointer
    descriptorbuffer*: Bool32
    descriptorbuffercapturereplay*: Bool32
    descriptorbufferimagelayoutignored*: Bool32
    descriptorbufferpushdescriptors*: Bool32

  Physicaldevicedescriptorbufferfeaturesext* = structvkphysicaldevicedescriptorbufferfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:16042:3
  structvkdescriptoraddressinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16044:16
    pnext*: pointer
    address*: Deviceaddress
    range*: Devicesize
    format*: Format

  Descriptoraddressinfoext* = structvkdescriptoraddressinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:16050:3
  structvkdescriptorbufferbindinginfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16052:16
    pnext*: pointer
    address*: Deviceaddress
    usage*: Bufferusageflags

  Descriptorbufferbindinginfoext* = structvkdescriptorbufferbindinginfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:16057:3
  structvkdescriptorbufferbindingpushdescriptorbufferhandleext* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16059:16
    pnext*: pointer
    buffer*: Buffer

  Descriptorbufferbindingpushdescriptorbufferhandleext* = structvkdescriptorbufferbindingpushdescriptorbufferhandleext ## Generated based on /usr/include/vulkan/vulkan_core.h:16063:3
  unionvkdescriptordataext* {.union, bycopy.} = object
    psampler*: ptr Sampler   ## Generated based on /usr/include/vulkan/vulkan_core.h:16065:15
    pcombinedimagesampler*: ptr Descriptorimageinfo
    pinputattachmentimage*: ptr Descriptorimageinfo
    psampledimage*: ptr Descriptorimageinfo
    pstorageimage*: ptr Descriptorimageinfo
    puniformtexelbuffer*: ptr Descriptoraddressinfoext
    pstoragetexelbuffer*: ptr Descriptoraddressinfoext
    puniformbuffer*: ptr Descriptoraddressinfoext
    pstoragebuffer*: ptr Descriptoraddressinfoext
    accelerationstructure*: Deviceaddress

  Descriptordataext* = unionvkdescriptordataext ## Generated based on /usr/include/vulkan/vulkan_core.h:16076:3
  structvkdescriptorgetinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16078:16
    pnext*: pointer
    typefield*: Descriptortype
    data*: Descriptordataext

  Descriptorgetinfoext* = structvkdescriptorgetinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:16083:3
  structvkbuffercapturedescriptordatainfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16085:16
    pnext*: pointer
    buffer*: Buffer

  Buffercapturedescriptordatainfoext* = structvkbuffercapturedescriptordatainfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:16089:3
  structvkimagecapturedescriptordatainfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16091:16
    pnext*: pointer
    image*: Image

  Imagecapturedescriptordatainfoext* = structvkimagecapturedescriptordatainfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:16095:3
  structvkimageviewcapturedescriptordatainfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16097:16
    pnext*: pointer
    imageview*: Imageview

  Imageviewcapturedescriptordatainfoext* = structvkimageviewcapturedescriptordatainfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:16101:3
  structvksamplercapturedescriptordatainfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16103:16
    pnext*: pointer
    sampler*: Sampler

  Samplercapturedescriptordatainfoext* = structvksamplercapturedescriptordatainfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:16107:3
  structvkopaquecapturedescriptordatacreateinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16109:16
    pnext*: pointer
    opaquecapturedescriptordata*: pointer

  Opaquecapturedescriptordatacreateinfoext* = structvkopaquecapturedescriptordatacreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:16113:3
  structvkaccelerationstructurecapturedescriptordatainfoext* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16115:16
    pnext*: pointer
    accelerationstructure*: Accelerationstructurekhr
    accelerationstructurenv*: Accelerationstructurenv

  Accelerationstructurecapturedescriptordatainfoext* = structvkaccelerationstructurecapturedescriptordatainfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:16120:3
  Pfnvkgetdescriptorsetlayoutsizeext* = proc (a0: Device;
      a1: Descriptorsetlayout; a2: ptr Devicesize): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:16122:26
  Pfnvkgetdescriptorsetlayoutbindingoffsetext* = proc (a0: Device;
      a1: Descriptorsetlayout; a2: uint32; a3: ptr Devicesize): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:16123:26
  Pfnvkgetdescriptorext* = proc (a0: Device; a1: ptr Descriptorgetinfoext;
                                 a2: csize_t; a3: pointer): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:16124:26
  Pfnvkcmdbinddescriptorbuffersext* = proc (a0: Commandbuffer; a1: uint32;
      a2: ptr Descriptorbufferbindinginfoext): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:16125:26
  Pfnvkcmdsetdescriptorbufferoffsetsext* = proc (a0: Commandbuffer;
      a1: Pipelinebindpoint; a2: Pipelinelayout; a3: uint32; a4: uint32;
      a5: ptr uint32; a6: ptr Devicesize): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:16126:26
  Pfnvkcmdbinddescriptorbufferembeddedsamplersext* = proc (a0: Commandbuffer;
      a1: Pipelinebindpoint; a2: Pipelinelayout; a3: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:16127:26
  Pfnvkgetbufferopaquecapturedescriptordataext* = proc (a0: Device;
      a1: ptr Buffercapturedescriptordatainfoext; a2: pointer): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:16128:30
  Pfnvkgetimageopaquecapturedescriptordataext* = proc (a0: Device;
      a1: ptr Imagecapturedescriptordatainfoext; a2: pointer): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:16129:30
  Pfnvkgetimageviewopaquecapturedescriptordataext* = proc (a0: Device;
      a1: ptr Imageviewcapturedescriptordatainfoext; a2: pointer): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:16130:30
  Pfnvkgetsampleropaquecapturedescriptordataext* = proc (a0: Device;
      a1: ptr Samplercapturedescriptordatainfoext; a2: pointer): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:16131:30
  Pfnvkgetaccelerationstructureopaquecapturedescriptordataext* = proc (
      a0: Device; a1: ptr Accelerationstructurecapturedescriptordatainfoext;
      a2: pointer): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:16132:30
  Graphicspipelinelibraryflagbitsext* = enumvkgraphicspipelinelibraryflagbitsext ## Generated based on /usr/include/vulkan/vulkan_core.h:16210:3
  Graphicspipelinelibraryflagsext* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:16211:17
  structvkphysicaldevicegraphicspipelinelibraryfeaturesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16212:16
    pnext*: pointer
    graphicspipelinelibrary*: Bool32

  Physicaldevicegraphicspipelinelibraryfeaturesext* = structvkphysicaldevicegraphicspipelinelibraryfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:16216:3
  structvkphysicaldevicegraphicspipelinelibrarypropertiesext* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16218:16
    pnext*: pointer
    graphicspipelinelibraryfastlinking*: Bool32
    graphicspipelinelibraryindependentinterpolationdecoration*: Bool32

  Physicaldevicegraphicspipelinelibrarypropertiesext* = structvkphysicaldevicegraphicspipelinelibrarypropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:16223:3
  structvkgraphicspipelinelibrarycreateinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16225:16
    pnext*: pointer
    flags*: Graphicspipelinelibraryflagsext

  Graphicspipelinelibrarycreateinfoext* = structvkgraphicspipelinelibrarycreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:16229:3
  structvkphysicaldeviceshaderearlyandlatefragmenttestsfeaturesamd* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16237:16
    pnext*: pointer
    shaderearlyandlatefragmenttests*: Bool32

  Physicaldeviceshaderearlyandlatefragmenttestsfeaturesamd* = structvkphysicaldeviceshaderearlyandlatefragmenttestsfeaturesamd ## Generated based on /usr/include/vulkan/vulkan_core.h:16241:3
  Fragmentshadingratetypenv* = enumvkfragmentshadingratetypenv ## Generated based on /usr/include/vulkan/vulkan_core.h:16254:3
  Fragmentshadingratenv* = enumvkfragmentshadingratenv ## Generated based on /usr/include/vulkan/vulkan_core.h:16270:3
  structvkphysicaldevicefragmentshadingrateenumsfeaturesnv* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16271:16
    pnext*: pointer
    fragmentshadingrateenums*: Bool32
    supersamplefragmentshadingrates*: Bool32
    noinvocationfragmentshadingrates*: Bool32

  Physicaldevicefragmentshadingrateenumsfeaturesnv* = structvkphysicaldevicefragmentshadingrateenumsfeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:16277:3
  structvkphysicaldevicefragmentshadingrateenumspropertiesnv* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16279:16
    pnext*: pointer
    maxfragmentshadingrateinvocationcount*: Samplecountflagbits

  Physicaldevicefragmentshadingrateenumspropertiesnv* = structvkphysicaldevicefragmentshadingrateenumspropertiesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:16283:3
  structvkpipelinefragmentshadingrateenumstatecreateinfonv* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16285:16
    pnext*: pointer
    shadingratetype*: Fragmentshadingratetypenv
    shadingrate*: Fragmentshadingratenv
    combinerops*: array[2'i64, Fragmentshadingratecombineropkhr]

  Pipelinefragmentshadingrateenumstatecreateinfonv* = structvkpipelinefragmentshadingrateenumstatecreateinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:16291:3
  Pfnvkcmdsetfragmentshadingrateenumnv* = proc (a0: Commandbuffer;
      a1: Fragmentshadingratenv;
      a2: array[2'i64, Fragmentshadingratecombineropkhr]): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:16293:26
  Accelerationstructuremotioninstancetypenv* = enumvkaccelerationstructuremotioninstancetypenv ## Generated based on /usr/include/vulkan/vulkan_core.h:16313:3
  Accelerationstructuremotioninfoflagsnv* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:16314:17
  Accelerationstructuremotioninstanceflagsnv* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:16315:17
  unionvkdeviceorhostaddressconstkhr* {.union, bycopy.} = object
    deviceaddress*: Deviceaddress ## Generated based on /usr/include/vulkan/vulkan_core.h:16316:15
    hostaddress*: pointer

  Deviceorhostaddressconstkhr* = unionvkdeviceorhostaddressconstkhr ## Generated based on /usr/include/vulkan/vulkan_core.h:16319:3
  structvkaccelerationstructuregeometrymotiontrianglesdatanv* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16321:16
    pnext*: pointer
    vertexdata*: Deviceorhostaddressconstkhr

  Accelerationstructuregeometrymotiontrianglesdatanv* = structvkaccelerationstructuregeometrymotiontrianglesdatanv ## Generated based on /usr/include/vulkan/vulkan_core.h:16325:3
  structvkaccelerationstructuremotioninfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16327:16
    pnext*: pointer
    maxinstances*: uint32
    flags*: Accelerationstructuremotioninfoflagsnv

  Accelerationstructuremotioninfonv* = structvkaccelerationstructuremotioninfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:16332:3
  structvkaccelerationstructurematrixmotioninstancenv* {.pure, inheritable,
      bycopy.} = object
    transformt0*: Transformmatrixkhr ## Generated based on /usr/include/vulkan/vulkan_core.h:16334:16
    transformt1*: Transformmatrixkhr
    instancecustomindex*: uint32
    mask*: uint32
    instanceshaderbindingtablerecordoffset*: uint32
    flags*: Geometryinstanceflagskhr
    accelerationstructurereference*: uint64

  Accelerationstructurematrixmotioninstancenv* = structvkaccelerationstructurematrixmotioninstancenv ## Generated based on /usr/include/vulkan/vulkan_core.h:16342:3
  structvksrtdatanv* {.pure, inheritable, bycopy.} = object
    sx*: cfloat              ## Generated based on /usr/include/vulkan/vulkan_core.h:16344:16
    a*: cfloat
    b*: cfloat
    pvx*: cfloat
    sy*: cfloat
    c*: cfloat
    pvy*: cfloat
    sz*: cfloat
    pvz*: cfloat
    qx*: cfloat
    qy*: cfloat
    qz*: cfloat
    qw*: cfloat
    tx*: cfloat
    ty*: cfloat
    tz*: cfloat

  Srtdatanv* = structvksrtdatanv ## Generated based on /usr/include/vulkan/vulkan_core.h:16361:3
  structvkaccelerationstructuresrtmotioninstancenv* {.pure, inheritable, bycopy.} = object
    transformt0*: Srtdatanv  ## Generated based on /usr/include/vulkan/vulkan_core.h:16363:16
    transformt1*: Srtdatanv
    instancecustomindex*: uint32
    mask*: uint32
    instanceshaderbindingtablerecordoffset*: uint32
    flags*: Geometryinstanceflagskhr
    accelerationstructurereference*: uint64

  Accelerationstructuresrtmotioninstancenv* = structvkaccelerationstructuresrtmotioninstancenv ## Generated based on /usr/include/vulkan/vulkan_core.h:16371:3
  unionvkaccelerationstructuremotioninstancedatanv* {.union, bycopy.} = object
    staticinstance*: Accelerationstructureinstancekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:16373:15
    matrixmotioninstance*: Accelerationstructurematrixmotioninstancenv
    srtmotioninstance*: Accelerationstructuresrtmotioninstancenv

  Accelerationstructuremotioninstancedatanv* = unionvkaccelerationstructuremotioninstancedatanv ## Generated based on /usr/include/vulkan/vulkan_core.h:16377:3
  structvkaccelerationstructuremotioninstancenv* {.pure, inheritable, bycopy.} = object
    typefield*: Accelerationstructuremotioninstancetypenv ## Generated based on /usr/include/vulkan/vulkan_core.h:16379:16
    flags*: Accelerationstructuremotioninstanceflagsnv
    data*: Accelerationstructuremotioninstancedatanv

  Accelerationstructuremotioninstancenv* = structvkaccelerationstructuremotioninstancenv ## Generated based on /usr/include/vulkan/vulkan_core.h:16383:3
  structvkphysicaldeviceraytracingmotionblurfeaturesnv* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16385:16
    pnext*: pointer
    raytracingmotionblur*: Bool32
    raytracingmotionblurpipelinetraceraysindirect*: Bool32

  Physicaldeviceraytracingmotionblurfeaturesnv* = structvkphysicaldeviceraytracingmotionblurfeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:16390:3
  structvkphysicaldeviceycbcr2plane444formatsfeaturesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16398:16
    pnext*: pointer
    ycbcr2plane444formats*: Bool32

  Physicaldeviceycbcr2plane444formatsfeaturesext* = structvkphysicaldeviceycbcr2plane444formatsfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:16402:3
  structvkphysicaldevicefragmentdensitymap2featuresext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16410:16
    pnext*: pointer
    fragmentdensitymapdeferred*: Bool32

  Physicaldevicefragmentdensitymap2featuresext* = structvkphysicaldevicefragmentdensitymap2featuresext ## Generated based on /usr/include/vulkan/vulkan_core.h:16414:3
  structvkphysicaldevicefragmentdensitymap2propertiesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16416:16
    pnext*: pointer
    subsampledloads*: Bool32
    subsampledcoarsereconstructionearlyaccess*: Bool32
    maxsubsampledarraylayers*: uint32
    maxdescriptorsetsubsampledsamplers*: uint32

  Physicaldevicefragmentdensitymap2propertiesext* = structvkphysicaldevicefragmentdensitymap2propertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:16423:3
  structvkcopycommandtransforminfoqcom* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16431:16
    pnext*: pointer
    transform*: Surfacetransformflagbitskhr

  Copycommandtransforminfoqcom* = structvkcopycommandtransforminfoqcom ## Generated based on /usr/include/vulkan/vulkan_core.h:16435:3
  Physicaldeviceimagerobustnessfeaturesext* = Physicaldeviceimagerobustnessfeatures ## Generated based on /usr/include/vulkan/vulkan_core.h:16443:49
  Imagecompressionflagbitsext* = enumvkimagecompressionflagbitsext ## Generated based on /usr/include/vulkan/vulkan_core.h:16458:3
  Imagecompressionflagsext* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:16459:17
  Imagecompressionfixedrateflagbitsext* = enumvkimagecompressionfixedrateflagbitsext ## Generated based on /usr/include/vulkan/vulkan_core.h:16488:3
  Imagecompressionfixedrateflagsext* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:16489:17
  structvkphysicaldeviceimagecompressioncontrolfeaturesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16490:16
    pnext*: pointer
    imagecompressioncontrol*: Bool32

  Physicaldeviceimagecompressioncontrolfeaturesext* = structvkphysicaldeviceimagecompressioncontrolfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:16494:3
  structvkimagecompressioncontrolext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16496:16
    pnext*: pointer
    flags*: Imagecompressionflagsext
    compressioncontrolplanecount*: uint32
    pfixedrateflags*: ptr Imagecompressionfixedrateflagsext

  Imagecompressioncontrolext* = structvkimagecompressioncontrolext ## Generated based on /usr/include/vulkan/vulkan_core.h:16502:3
  structvkimagecompressionpropertiesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16504:16
    pnext*: pointer
    imagecompressionflags*: Imagecompressionflagsext
    imagecompressionfixedrateflags*: Imagecompressionfixedrateflagsext

  Imagecompressionpropertiesext* = structvkimagecompressionpropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:16509:3
  structvkphysicaldeviceattachmentfeedbacklooplayoutfeaturesext* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16517:16
    pnext*: pointer
    attachmentfeedbacklooplayout*: Bool32

  Physicaldeviceattachmentfeedbacklooplayoutfeaturesext* = structvkphysicaldeviceattachmentfeedbacklooplayoutfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:16521:3
  structvkphysicaldevice4444formatsfeaturesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16529:16
    pnext*: pointer
    formata4r4g4b4*: Bool32
    formata4b4g4r4*: Bool32

  Physicaldevice4444formatsfeaturesext* = structvkphysicaldevice4444formatsfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:16534:3
  Devicefaultaddresstypeext* = enumvkdevicefaultaddresstypeext ## Generated based on /usr/include/vulkan/vulkan_core.h:16552:3
  Devicefaultvendorbinaryheaderversionext* = enumvkdevicefaultvendorbinaryheaderversionext ## Generated based on /usr/include/vulkan/vulkan_core.h:16557:3
  structvkphysicaldevicefaultfeaturesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16558:16
    pnext*: pointer
    devicefault*: Bool32
    devicefaultvendorbinary*: Bool32

  Physicaldevicefaultfeaturesext* = structvkphysicaldevicefaultfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:16563:3
  structvkdevicefaultcountsext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16565:16
    pnext*: pointer
    addressinfocount*: uint32
    vendorinfocount*: uint32
    vendorbinarysize*: Devicesize

  Devicefaultcountsext* = structvkdevicefaultcountsext ## Generated based on /usr/include/vulkan/vulkan_core.h:16571:3
  structvkdevicefaultaddressinfoext* {.pure, inheritable, bycopy.} = object
    addresstype*: Devicefaultaddresstypeext ## Generated based on /usr/include/vulkan/vulkan_core.h:16573:16
    reportedaddress*: Deviceaddress
    addressprecision*: Devicesize

  Devicefaultaddressinfoext* = structvkdevicefaultaddressinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:16577:3
  structvkdevicefaultvendorinfoext* {.pure, inheritable, bycopy.} = object
    description*: array[256'i64, cschar] ## Generated based on /usr/include/vulkan/vulkan_core.h:16579:16
    vendorfaultcode*: uint64
    vendorfaultdata*: uint64

  Devicefaultvendorinfoext* = structvkdevicefaultvendorinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:16583:3
  structvkdevicefaultinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16585:16
    pnext*: pointer
    description*: array[256'i64, cschar]
    paddressinfos*: ptr Devicefaultaddressinfoext
    pvendorinfos*: ptr Devicefaultvendorinfoext
    pvendorbinarydata*: pointer

  Devicefaultinfoext* = structvkdevicefaultinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:16592:3
  structvkdevicefaultvendorbinaryheaderversiononeext* {.pure, inheritable,
      bycopy.} = object
    headersize*: uint32      ## Generated based on /usr/include/vulkan/vulkan_core.h:16594:16
    headerversion*: Devicefaultvendorbinaryheaderversionext
    vendorid*: uint32
    deviceid*: uint32
    driverversion*: uint32
    pipelinecacheuuid*: array[16'i64, uint8]
    applicationnameoffset*: uint32
    applicationversion*: uint32
    enginenameoffset*: uint32
    engineversion*: uint32
    apiversion*: uint32

  Devicefaultvendorbinaryheaderversiononeext* = structvkdevicefaultvendorbinaryheaderversiononeext ## Generated based on /usr/include/vulkan/vulkan_core.h:16606:3
  Pfnvkgetdevicefaultinfoext* = proc (a0: Device; a1: ptr Devicefaultcountsext;
                                      a2: ptr Devicefaultinfoext): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:16608:30
  structvkphysicaldevicerasterizationorderattachmentaccessfeaturesext* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16622:16
    pnext*: pointer
    rasterizationordercolorattachmentaccess*: Bool32
    rasterizationorderdepthattachmentaccess*: Bool32
    rasterizationorderstencilattachmentaccess*: Bool32

  Physicaldevicerasterizationorderattachmentaccessfeaturesext* = structvkphysicaldevicerasterizationorderattachmentaccessfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:16628:3
  Physicaldevicerasterizationorderattachmentaccessfeaturesarm* = Physicaldevicerasterizationorderattachmentaccessfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:16630:71
  structvkphysicaldevicergba10x6formatsfeaturesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16638:16
    pnext*: pointer
    formatrgba10x6withoutycbcrsampler*: Bool32

  Physicaldevicergba10x6formatsfeaturesext* = structvkphysicaldevicergba10x6formatsfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:16642:3
  structvkphysicaldevicemutabledescriptortypefeaturesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16650:16
    pnext*: pointer
    mutabledescriptortype*: Bool32

  Physicaldevicemutabledescriptortypefeaturesext* = structvkphysicaldevicemutabledescriptortypefeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:16654:3
  Physicaldevicemutabledescriptortypefeaturesvalve* = Physicaldevicemutabledescriptortypefeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:16656:58
  structvkmutabledescriptortypelistext* {.pure, inheritable, bycopy.} = object
    descriptortypecount*: uint32 ## Generated based on /usr/include/vulkan/vulkan_core.h:16658:16
    pdescriptortypes*: ptr Descriptortype

  Mutabledescriptortypelistext* = structvkmutabledescriptortypelistext ## Generated based on /usr/include/vulkan/vulkan_core.h:16661:3
  Mutabledescriptortypelistvalve* = Mutabledescriptortypelistext ## Generated based on /usr/include/vulkan/vulkan_core.h:16663:40
  structvkmutabledescriptortypecreateinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16665:16
    pnext*: pointer
    mutabledescriptortypelistcount*: uint32
    pmutabledescriptortypelists*: ptr Mutabledescriptortypelistext

  Mutabledescriptortypecreateinfoext* = structvkmutabledescriptortypecreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:16670:3
  Mutabledescriptortypecreateinfovalve* = Mutabledescriptortypecreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:16672:46
  structvkphysicaldevicevertexinputdynamicstatefeaturesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16680:16
    pnext*: pointer
    vertexinputdynamicstate*: Bool32

  Physicaldevicevertexinputdynamicstatefeaturesext* = structvkphysicaldevicevertexinputdynamicstatefeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:16684:3
  structvkvertexinputbindingdescription2ext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16686:16
    pnext*: pointer
    binding*: uint32
    stride*: uint32
    inputrate*: Vertexinputrate
    divisor*: uint32

  Vertexinputbindingdescription2ext* = structvkvertexinputbindingdescription2ext ## Generated based on /usr/include/vulkan/vulkan_core.h:16693:3
  structvkvertexinputattributedescription2ext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16695:16
    pnext*: pointer
    location*: uint32
    binding*: uint32
    format*: Format
    offset*: uint32

  Vertexinputattributedescription2ext* = structvkvertexinputattributedescription2ext ## Generated based on /usr/include/vulkan/vulkan_core.h:16702:3
  Pfnvkcmdsetvertexinputext* = proc (a0: Commandbuffer; a1: uint32;
                                     a2: ptr Vertexinputbindingdescription2ext;
                                     a3: uint32; a4: ptr Vertexinputattributedescription2ext): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:16704:26
  structvkphysicaldevicedrmpropertiesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16720:16
    pnext*: pointer
    hasprimary*: Bool32
    hasrender*: Bool32
    primarymajor*: int64
    primaryminor*: int64
    rendermajor*: int64
    renderminor*: int64

  Physicaldevicedrmpropertiesext* = structvkphysicaldevicedrmpropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:16729:3
  Deviceaddressbindingtypeext* = enumvkdeviceaddressbindingtypeext ## Generated based on /usr/include/vulkan/vulkan_core.h:16742:3
  Deviceaddressbindingflagbitsext* = enumvkdeviceaddressbindingflagbitsext ## Generated based on /usr/include/vulkan/vulkan_core.h:16747:3
  Deviceaddressbindingflagsext* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:16748:17
  structvkphysicaldeviceaddressbindingreportfeaturesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16749:16
    pnext*: pointer
    reportaddressbinding*: Bool32

  Physicaldeviceaddressbindingreportfeaturesext* = structvkphysicaldeviceaddressbindingreportfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:16753:3
  structvkdeviceaddressbindingcallbackdataext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16755:16
    pnext*: pointer
    flags*: Deviceaddressbindingflagsext
    baseaddress*: Deviceaddress
    size*: Devicesize
    bindingtype*: Deviceaddressbindingtypeext

  Deviceaddressbindingcallbackdataext* = structvkdeviceaddressbindingcallbackdataext ## Generated based on /usr/include/vulkan/vulkan_core.h:16762:3
  structvkphysicaldevicedepthclipcontrolfeaturesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16770:16
    pnext*: pointer
    depthclipcontrol*: Bool32

  Physicaldevicedepthclipcontrolfeaturesext* = structvkphysicaldevicedepthclipcontrolfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:16774:3
  structvkpipelineviewportdepthclipcontrolcreateinfoext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16776:16
    pnext*: pointer
    negativeonetoone*: Bool32

  Pipelineviewportdepthclipcontrolcreateinfoext* = structvkpipelineviewportdepthclipcontrolcreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:16780:3
  structvkphysicaldeviceprimitivetopologylistrestartfeaturesext* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16788:16
    pnext*: pointer
    primitivetopologylistrestart*: Bool32
    primitivetopologypatchlistrestart*: Bool32

  Physicaldeviceprimitivetopologylistrestartfeaturesext* = structvkphysicaldeviceprimitivetopologylistrestartfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:16793:3
  structvksubpassshadingpipelinecreateinfohuawei* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16801:16
    pnext*: pointer
    renderpass*: Renderpass
    subpass*: uint32

  Subpassshadingpipelinecreateinfohuawei* = structvksubpassshadingpipelinecreateinfohuawei ## Generated based on /usr/include/vulkan/vulkan_core.h:16806:3
  structvkphysicaldevicesubpassshadingfeatureshuawei* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16808:16
    pnext*: pointer
    subpassshading*: Bool32

  Physicaldevicesubpassshadingfeatureshuawei* = structvkphysicaldevicesubpassshadingfeatureshuawei ## Generated based on /usr/include/vulkan/vulkan_core.h:16812:3
  structvkphysicaldevicesubpassshadingpropertieshuawei* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16814:16
    pnext*: pointer
    maxsubpassshadingworkgroupsizeaspectratio*: uint32

  Physicaldevicesubpassshadingpropertieshuawei* = structvkphysicaldevicesubpassshadingpropertieshuawei ## Generated based on /usr/include/vulkan/vulkan_core.h:16818:3
  Pfnvkgetdevicesubpassshadingmaxworkgroupsizehuawei* = proc (a0: Device;
      a1: Renderpass; a2: ptr Extent2d): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:16820:30
  Pfnvkcmdsubpassshadinghuawei* = proc (a0: Commandbuffer): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:16821:26
  structvkphysicaldeviceinvocationmaskfeatureshuawei* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16838:16
    pnext*: pointer
    invocationmask*: Bool32

  Physicaldeviceinvocationmaskfeatureshuawei* = structvkphysicaldeviceinvocationmaskfeatureshuawei ## Generated based on /usr/include/vulkan/vulkan_core.h:16842:3
  Pfnvkcmdbindinvocationmaskhuawei* = proc (a0: Commandbuffer; a1: Imageview;
      a2: Imagelayout): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:16844:26
  Remoteaddressnv* = pointer ## Generated based on /usr/include/vulkan/vulkan_core.h:16856:15
  structvkmemorygetremoteaddressinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16859:16
    pnext*: pointer
    memory*: Devicememory
    handletype*: Externalmemoryhandletypeflagbits

  Memorygetremoteaddressinfonv* = structvkmemorygetremoteaddressinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:16864:3
  structvkphysicaldeviceexternalmemoryrdmafeaturesnv* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16866:16
    pnext*: pointer
    externalmemoryrdma*: Bool32

  Physicaldeviceexternalmemoryrdmafeaturesnv* = structvkphysicaldeviceexternalmemoryrdmafeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:16870:3
  Pfnvkgetmemoryremoteaddressnv* = proc (a0: Device;
      a1: ptr Memorygetremoteaddressinfonv; a2: ptr Remoteaddressnv): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:16872:30
  Pipelineinfoext* = Pipelineinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:16886:27
  structvkpipelinepropertiesidentifierext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16888:16
    pnext*: pointer
    pipelineidentifier*: array[16'i64, uint8]

  Pipelinepropertiesidentifierext* = structvkpipelinepropertiesidentifierext ## Generated based on /usr/include/vulkan/vulkan_core.h:16892:3
  structvkphysicaldevicepipelinepropertiesfeaturesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16894:16
    pnext*: pointer
    pipelinepropertiesidentifier*: Bool32

  Physicaldevicepipelinepropertiesfeaturesext* = structvkphysicaldevicepipelinepropertiesfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:16898:3
  Pfnvkgetpipelinepropertiesext* = proc (a0: Device; a1: ptr Pipelineinfoext;
      a2: ptr Baseoutstructure): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:16900:30
  Frameboundaryflagbitsext* = enumvkframeboundaryflagbitsext ## Generated based on /usr/include/vulkan/vulkan_core.h:16918:3
  Frameboundaryflagsext* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:16919:17
  structvkphysicaldeviceframeboundaryfeaturesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16920:16
    pnext*: pointer
    frameboundary*: Bool32

  Physicaldeviceframeboundaryfeaturesext* = structvkphysicaldeviceframeboundaryfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:16924:3
  structvkframeboundaryext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16926:16
    pnext*: pointer
    flags*: Frameboundaryflagsext
    frameid*: uint64
    imagecount*: uint32
    pimages*: ptr Image
    buffercount*: uint32
    pbuffers*: ptr Buffer
    tagname*: uint64
    tagsize*: csize_t
    ptag*: pointer

  Frameboundaryext* = structvkframeboundaryext ## Generated based on /usr/include/vulkan/vulkan_core.h:16938:3
  structvkphysicaldevicemultisampledrendertosinglesampledfeaturesext* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16946:16
    pnext*: pointer
    multisampledrendertosinglesampled*: Bool32

  Physicaldevicemultisampledrendertosinglesampledfeaturesext* = structvkphysicaldevicemultisampledrendertosinglesampledfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:16950:3
  structvksubpassresolveperformancequeryext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16952:16
    pnext*: pointer
    optimal*: Bool32

  Subpassresolveperformancequeryext* = structvksubpassresolveperformancequeryext ## Generated based on /usr/include/vulkan/vulkan_core.h:16956:3
  structvkmultisampledrendertosinglesampledinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16958:16
    pnext*: pointer
    multisampledrendertosinglesampledenable*: Bool32
    rasterizationsamples*: Samplecountflagbits

  Multisampledrendertosinglesampledinfoext* = structvkmultisampledrendertosinglesampledinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:16963:3
  structvkphysicaldeviceextendeddynamicstate2featuresext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:16971:16
    pnext*: pointer
    extendeddynamicstate2*: Bool32
    extendeddynamicstate2logicop*: Bool32
    extendeddynamicstate2patchcontrolpoints*: Bool32

  Physicaldeviceextendeddynamicstate2featuresext* = structvkphysicaldeviceextendeddynamicstate2featuresext ## Generated based on /usr/include/vulkan/vulkan_core.h:16977:3
  Pfnvkcmdsetpatchcontrolpointsext* = proc (a0: Commandbuffer; a1: uint32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:16979:26
  Pfnvkcmdsetrasterizerdiscardenableext* = proc (a0: Commandbuffer; a1: Bool32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:16980:26
  Pfnvkcmdsetdepthbiasenableext* = proc (a0: Commandbuffer; a1: Bool32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:16981:26
  Pfnvkcmdsetlogicopext* = proc (a0: Commandbuffer; a1: Logicop): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:16982:26
  Pfnvkcmdsetprimitiverestartenableext* = proc (a0: Commandbuffer; a1: Bool32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:16983:26
  structvkphysicaldevicecolorwriteenablefeaturesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17012:16
    pnext*: pointer
    colorwriteenable*: Bool32

  Physicaldevicecolorwriteenablefeaturesext* = structvkphysicaldevicecolorwriteenablefeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:17016:3
  structvkpipelinecolorwritecreateinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17018:16
    pnext*: pointer
    attachmentcount*: uint32
    pcolorwriteenables*: ptr Bool32

  Pipelinecolorwritecreateinfoext* = structvkpipelinecolorwritecreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:17023:3
  Pfnvkcmdsetcolorwriteenableext* = proc (a0: Commandbuffer; a1: uint32;
      a2: ptr Bool32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:17025:61
  structvkphysicaldeviceprimitivesgeneratedqueryfeaturesext* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17039:16
    pnext*: pointer
    primitivesgeneratedquery*: Bool32
    primitivesgeneratedquerywithrasterizerdiscard*: Bool32
    primitivesgeneratedquerywithnonzerostreams*: Bool32

  Physicaldeviceprimitivesgeneratedqueryfeaturesext* = structvkphysicaldeviceprimitivesgeneratedqueryfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:17045:3
  Physicaldeviceglobalpriorityqueryfeaturesext* = Physicaldeviceglobalpriorityqueryfeatureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:17054:56
  Queuefamilyglobalprioritypropertiesext* = Queuefamilyglobalprioritypropertieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:17056:50
  structvkphysicaldeviceimageviewminlodfeaturesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17064:16
    pnext*: pointer
    minlod*: Bool32

  Physicaldeviceimageviewminlodfeaturesext* = structvkphysicaldeviceimageviewminlodfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:17068:3
  structvkimageviewminlodcreateinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17070:16
    pnext*: pointer
    minlod*: cfloat

  Imageviewminlodcreateinfoext* = structvkimageviewminlodcreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:17074:3
  structvkphysicaldevicemultidrawfeaturesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17082:16
    pnext*: pointer
    multidraw*: Bool32

  Physicaldevicemultidrawfeaturesext* = structvkphysicaldevicemultidrawfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:17086:3
  structvkphysicaldevicemultidrawpropertiesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17088:16
    pnext*: pointer
    maxmultidrawcount*: uint32

  Physicaldevicemultidrawpropertiesext* = structvkphysicaldevicemultidrawpropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:17092:3
  structvkmultidrawinfoext* {.pure, inheritable, bycopy.} = object
    firstvertex*: uint32     ## Generated based on /usr/include/vulkan/vulkan_core.h:17094:16
    vertexcount*: uint32

  Multidrawinfoext* = structvkmultidrawinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:17097:3
  structvkmultidrawindexedinfoext* {.pure, inheritable, bycopy.} = object
    firstindex*: uint32      ## Generated based on /usr/include/vulkan/vulkan_core.h:17099:16
    indexcount*: uint32
    vertexoffset*: int32

  Multidrawindexedinfoext* = structvkmultidrawindexedinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:17103:3
  Pfnvkcmddrawmultiext* = proc (a0: Commandbuffer; a1: uint32;
                                a2: ptr Multidrawinfoext; a3: uint32;
                                a4: uint32; a5: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:17105:26
  Pfnvkcmddrawmultiindexedext* = proc (a0: Commandbuffer; a1: uint32;
                                       a2: ptr Multidrawindexedinfoext;
                                       a3: uint32; a4: uint32; a5: uint32;
                                       a6: ptr int32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:17106:26
  structvkphysicaldeviceimage2dviewof3dfeaturesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17132:16
    pnext*: pointer
    image2dviewof3d*: Bool32
    sampler2dviewof3d*: Bool32

  Physicaldeviceimage2dviewof3dfeaturesext* = structvkphysicaldeviceimage2dviewof3dfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:17137:3
  structvkphysicaldeviceshadertileimagefeaturesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17145:16
    pnext*: pointer
    shadertileimagecolorreadaccess*: Bool32
    shadertileimagedepthreadaccess*: Bool32
    shadertileimagestencilreadaccess*: Bool32

  Physicaldeviceshadertileimagefeaturesext* = structvkphysicaldeviceshadertileimagefeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:17151:3
  structvkphysicaldeviceshadertileimagepropertiesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17153:16
    pnext*: pointer
    shadertileimagecoherentreadaccelerated*: Bool32
    shadertileimagereadsamplefrompixelrateinvocation*: Bool32
    shadertileimagereadfromhelperinvocation*: Bool32

  Physicaldeviceshadertileimagepropertiesext* = structvkphysicaldeviceshadertileimagepropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:17159:3
  Micromapext* = ptr structvkmicromapextt ## Generated based on /usr/include/vulkan/vulkan_core.h:17165:1
  Micromaptypeext* = enumvkmicromaptypeext ## Generated based on /usr/include/vulkan/vulkan_core.h:17175:3
  Buildmicromapmodeext* = enumvkbuildmicromapmodeext ## Generated based on /usr/include/vulkan/vulkan_core.h:17180:3
  Copymicromapmodeext* = enumvkcopymicromapmodeext ## Generated based on /usr/include/vulkan/vulkan_core.h:17188:3
  Opacitymicromapformatext* = enumvkopacitymicromapformatext ## Generated based on /usr/include/vulkan/vulkan_core.h:17194:3
  Opacitymicromapspecialindexext* = enumvkopacitymicromapspecialindexext ## Generated based on /usr/include/vulkan/vulkan_core.h:17202:3
  Accelerationstructurecompatibilitykhr* = enumvkaccelerationstructurecompatibilitykhr ## Generated based on /usr/include/vulkan/vulkan_core.h:17208:3
  Accelerationstructurebuildtypekhr* = enumvkaccelerationstructurebuildtypekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:17215:3
  Buildmicromapflagbitsext* = enumvkbuildmicromapflagbitsext ## Generated based on /usr/include/vulkan/vulkan_core.h:17222:3
  Buildmicromapflagsext* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:17223:17
  Micromapcreateflagbitsext* = enumvkmicromapcreateflagbitsext ## Generated based on /usr/include/vulkan/vulkan_core.h:17228:3
  Micromapcreateflagsext* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:17229:17
  structvkmicromapusageext* {.pure, inheritable, bycopy.} = object
    count*: uint32           ## Generated based on /usr/include/vulkan/vulkan_core.h:17230:16
    subdivisionlevel*: uint32
    format*: uint32

  Micromapusageext* = structvkmicromapusageext ## Generated based on /usr/include/vulkan/vulkan_core.h:17234:3
  unionvkdeviceorhostaddresskhr* {.union, bycopy.} = object
    deviceaddress*: Deviceaddress ## Generated based on /usr/include/vulkan/vulkan_core.h:17236:15
    hostaddress*: pointer

  Deviceorhostaddresskhr* = unionvkdeviceorhostaddresskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:17239:3
  structvkmicromapbuildinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17241:16
    pnext*: pointer
    typefield*: Micromaptypeext
    flags*: Buildmicromapflagsext
    mode*: Buildmicromapmodeext
    dstmicromap*: Micromapext
    usagecountscount*: uint32
    pusagecounts*: ptr Micromapusageext
    ppusagecounts*: ptr ptr Micromapusageext
    data*: Deviceorhostaddressconstkhr
    scratchdata*: Deviceorhostaddresskhr
    trianglearray*: Deviceorhostaddressconstkhr
    trianglearraystride*: Devicesize

  Micromapbuildinfoext* = structvkmicromapbuildinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:17255:3
  structvkmicromapcreateinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17257:16
    pnext*: pointer
    createflags*: Micromapcreateflagsext
    buffer*: Buffer
    offset*: Devicesize
    size*: Devicesize
    typefield*: Micromaptypeext
    deviceaddress*: Deviceaddress

  Micromapcreateinfoext* = structvkmicromapcreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:17266:3
  structvkphysicaldeviceopacitymicromapfeaturesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17268:16
    pnext*: pointer
    micromap*: Bool32
    micromapcapturereplay*: Bool32
    micromaphostcommands*: Bool32

  Physicaldeviceopacitymicromapfeaturesext* = structvkphysicaldeviceopacitymicromapfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:17274:3
  structvkphysicaldeviceopacitymicromappropertiesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17276:16
    pnext*: pointer
    maxopacity2statesubdivisionlevel*: uint32
    maxopacity4statesubdivisionlevel*: uint32

  Physicaldeviceopacitymicromappropertiesext* = structvkphysicaldeviceopacitymicromappropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:17281:3
  structvkmicromapversioninfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17283:16
    pnext*: pointer
    pversiondata*: ptr uint8

  Micromapversioninfoext* = structvkmicromapversioninfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:17287:3
  structvkcopymicromaptomemoryinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17289:16
    pnext*: pointer
    src*: Micromapext
    dst*: Deviceorhostaddresskhr
    mode*: Copymicromapmodeext

  Copymicromaptomemoryinfoext* = structvkcopymicromaptomemoryinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:17295:3
  structvkcopymemorytomicromapinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17297:16
    pnext*: pointer
    src*: Deviceorhostaddressconstkhr
    dst*: Micromapext
    mode*: Copymicromapmodeext

  Copymemorytomicromapinfoext* = structvkcopymemorytomicromapinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:17303:3
  structvkcopymicromapinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17305:16
    pnext*: pointer
    src*: Micromapext
    dst*: Micromapext
    mode*: Copymicromapmodeext

  Copymicromapinfoext* = structvkcopymicromapinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:17311:3
  structvkmicromapbuildsizesinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17313:16
    pnext*: pointer
    micromapsize*: Devicesize
    buildscratchsize*: Devicesize
    discardable*: Bool32

  Micromapbuildsizesinfoext* = structvkmicromapbuildsizesinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:17319:3
  structvkaccelerationstructuretrianglesopacitymicromapext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17321:16
    pnext*: pointer
    indextype*: Indextype
    indexbuffer*: Deviceorhostaddressconstkhr
    indexstride*: Devicesize
    basetriangle*: uint32
    usagecountscount*: uint32
    pusagecounts*: ptr Micromapusageext
    ppusagecounts*: ptr ptr Micromapusageext
    micromap*: Micromapext

  Accelerationstructuretrianglesopacitymicromapext* = structvkaccelerationstructuretrianglesopacitymicromapext ## Generated based on /usr/include/vulkan/vulkan_core.h:17332:3
  structvkmicromaptriangleext* {.pure, inheritable, bycopy.} = object
    dataoffset*: uint32      ## Generated based on /usr/include/vulkan/vulkan_core.h:17334:16
    subdivisionlevel*: uint16
    format*: uint16

  Micromaptriangleext* = structvkmicromaptriangleext ## Generated based on /usr/include/vulkan/vulkan_core.h:17338:3
  Pfnvkcreatemicromapext* = proc (a0: Device; a1: ptr Micromapcreateinfoext;
                                  a2: ptr Allocationcallbacks;
                                  a3: ptr Micromapext): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:17340:30
  Pfnvkdestroymicromapext* = proc (a0: Device; a1: Micromapext;
                                   a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:17341:26
  Pfnvkcmdbuildmicromapsext* = proc (a0: Commandbuffer; a1: uint32;
                                     a2: ptr Micromapbuildinfoext): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:17342:26
  Pfnvkbuildmicromapsext* = proc (a0: Device; a1: Deferredoperationkhr;
                                  a2: uint32; a3: ptr Micromapbuildinfoext): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:17343:30
  Pfnvkcopymicromapext* = proc (a0: Device; a1: Deferredoperationkhr;
                                a2: ptr Copymicromapinfoext): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:17344:30
  Pfnvkcopymicromaptomemoryext* = proc (a0: Device; a1: Deferredoperationkhr;
                                        a2: ptr Copymicromaptomemoryinfoext): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:17345:30
  Pfnvkcopymemorytomicromapext* = proc (a0: Device; a1: Deferredoperationkhr;
                                        a2: ptr Copymemorytomicromapinfoext): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:17346:30
  Pfnvkwritemicromapspropertiesext* = proc (a0: Device; a1: uint32;
      a2: ptr Micromapext; a3: Querytype; a4: csize_t; a5: pointer; a6: csize_t): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:17347:30
  Pfnvkcmdcopymicromapext* = proc (a0: Commandbuffer;
                                   a1: ptr Copymicromapinfoext): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:17348:26
  Pfnvkcmdcopymicromaptomemoryext* = proc (a0: Commandbuffer;
      a1: ptr Copymicromaptomemoryinfoext): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:17349:26
  Pfnvkcmdcopymemorytomicromapext* = proc (a0: Commandbuffer;
      a1: ptr Copymemorytomicromapinfoext): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:17350:26
  Pfnvkcmdwritemicromapspropertiesext* = proc (a0: Commandbuffer; a1: uint32;
      a2: ptr Micromapext; a3: Querytype; a4: Querypool; a5: uint32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:17351:26
  Pfnvkgetdevicemicromapcompatibilityext* = proc (a0: Device;
      a1: ptr Micromapversioninfoext;
      a2: ptr Accelerationstructurecompatibilitykhr): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:17352:26
  Pfnvkgetmicromapbuildsizesext* = proc (a0: Device;
      a1: Accelerationstructurebuildtypekhr; a2: ptr Micromapbuildinfoext;
      a3: ptr Micromapbuildsizesinfoext): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:17353:26
  structvkphysicaldeviceclustercullingshaderfeatureshuawei* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17445:16
    pnext*: pointer
    clustercullingshader*: Bool32
    multiviewclustercullingshader*: Bool32

  Physicaldeviceclustercullingshaderfeatureshuawei* = structvkphysicaldeviceclustercullingshaderfeatureshuawei ## Generated based on /usr/include/vulkan/vulkan_core.h:17450:3
  structvkphysicaldeviceclustercullingshaderpropertieshuawei* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17452:16
    pnext*: pointer
    maxworkgroupcount*: array[3'i64, uint32]
    maxworkgroupsize*: array[3'i64, uint32]
    maxoutputclustercount*: uint32
    indirectbufferoffsetalignment*: Devicesize

  Physicaldeviceclustercullingshaderpropertieshuawei* = structvkphysicaldeviceclustercullingshaderpropertieshuawei ## Generated based on /usr/include/vulkan/vulkan_core.h:17459:3
  structvkphysicaldeviceclustercullingshadervrsfeatureshuawei* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17461:16
    pnext*: pointer
    clustershadingrate*: Bool32

  Physicaldeviceclustercullingshadervrsfeatureshuawei* = structvkphysicaldeviceclustercullingshadervrsfeatureshuawei ## Generated based on /usr/include/vulkan/vulkan_core.h:17465:3
  Pfnvkcmddrawclusterhuawei* = proc (a0: Commandbuffer; a1: uint32; a2: uint32;
                                     a3: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:17467:26
  Pfnvkcmddrawclusterindirecthuawei* = proc (a0: Commandbuffer; a1: Buffer;
      a2: Devicesize): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:17468:26
  structvkphysicaldevicebordercolorswizzlefeaturesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17488:16
    pnext*: pointer
    bordercolorswizzle*: Bool32
    bordercolorswizzlefromimage*: Bool32

  Physicaldevicebordercolorswizzlefeaturesext* = structvkphysicaldevicebordercolorswizzlefeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:17493:3
  structvksamplerbordercolorcomponentmappingcreateinfoext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17495:16
    pnext*: pointer
    components*: Componentmapping
    srgb*: Bool32

  Samplerbordercolorcomponentmappingcreateinfoext* = structvksamplerbordercolorcomponentmappingcreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:17500:3
  structvkphysicaldevicepageabledevicelocalmemoryfeaturesext* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17508:16
    pnext*: pointer
    pageabledevicelocalmemory*: Bool32

  Physicaldevicepageabledevicelocalmemoryfeaturesext* = structvkphysicaldevicepageabledevicelocalmemoryfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:17512:3
  Pfnvksetdevicememorypriorityext* = proc (a0: Device; a1: Devicememory;
      a2: cfloat): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:17514:26
  structvkphysicaldeviceshadercorepropertiesarm* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17528:16
    pnext*: pointer
    pixelrate*: uint32
    texelrate*: uint32
    fmarate*: uint32

  Physicaldeviceshadercorepropertiesarm* = structvkphysicaldeviceshadercorepropertiesarm ## Generated based on /usr/include/vulkan/vulkan_core.h:17534:3
  Physicaldeviceschedulingcontrolsflagsarm* = Flags64 ## Generated based on /usr/include/vulkan/vulkan_core.h:17542:19
  Physicaldeviceschedulingcontrolsflagbitsarm* = Flags64 ## Generated based on /usr/include/vulkan/vulkan_core.h:17545:19
  structvkdevicequeueshadercorecontrolcreateinfoarm* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17548:16
    pnext*: pointer
    shadercorecount*: uint32

  Devicequeueshadercorecontrolcreateinfoarm* = structvkdevicequeueshadercorecontrolcreateinfoarm ## Generated based on /usr/include/vulkan/vulkan_core.h:17552:3
  structvkphysicaldeviceschedulingcontrolsfeaturesarm* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17554:16
    pnext*: pointer
    schedulingcontrols*: Bool32

  Physicaldeviceschedulingcontrolsfeaturesarm* = structvkphysicaldeviceschedulingcontrolsfeaturesarm ## Generated based on /usr/include/vulkan/vulkan_core.h:17558:3
  structvkphysicaldeviceschedulingcontrolspropertiesarm* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17560:16
    pnext*: pointer
    schedulingcontrolsflags*: Physicaldeviceschedulingcontrolsflagsarm

  Physicaldeviceschedulingcontrolspropertiesarm* = structvkphysicaldeviceschedulingcontrolspropertiesarm ## Generated based on /usr/include/vulkan/vulkan_core.h:17564:3
  structvkphysicaldeviceimageslicedviewof3dfeaturesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17573:16
    pnext*: pointer
    imageslicedviewof3d*: Bool32

  Physicaldeviceimageslicedviewof3dfeaturesext* = structvkphysicaldeviceimageslicedviewof3dfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:17577:3
  structvkimageviewslicedcreateinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17579:16
    pnext*: pointer
    sliceoffset*: uint32
    slicecount*: uint32

  Imageviewslicedcreateinfoext* = structvkimageviewslicedcreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:17584:3
  structvkphysicaldevicedescriptorsethostmappingfeaturesvalve* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17592:16
    pnext*: pointer
    descriptorsethostmapping*: Bool32

  Physicaldevicedescriptorsethostmappingfeaturesvalve* = structvkphysicaldevicedescriptorsethostmappingfeaturesvalve ## Generated based on /usr/include/vulkan/vulkan_core.h:17596:3
  structvkdescriptorsetbindingreferencevalve* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17598:16
    pnext*: pointer
    descriptorsetlayout*: Descriptorsetlayout
    binding*: uint32

  Descriptorsetbindingreferencevalve* = structvkdescriptorsetbindingreferencevalve ## Generated based on /usr/include/vulkan/vulkan_core.h:17603:3
  structvkdescriptorsetlayouthostmappinginfovalve* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17605:16
    pnext*: pointer
    descriptoroffset*: csize_t
    descriptorsize*: uint32

  Descriptorsetlayouthostmappinginfovalve* = structvkdescriptorsetlayouthostmappinginfovalve ## Generated based on /usr/include/vulkan/vulkan_core.h:17610:3
  Pfnvkgetdescriptorsetlayouthostmappinginfovalve* = proc (a0: Device;
      a1: ptr Descriptorsetbindingreferencevalve;
      a2: ptr Descriptorsetlayouthostmappinginfovalve): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:17612:26
  Pfnvkgetdescriptorsethostmappingvalve* = proc (a0: Device; a1: Descriptorset;
      a2: ptr pointer): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:17613:26
  structvkphysicaldevicedepthclampzeroonefeaturesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17632:16
    pnext*: pointer
    depthclampzeroone*: Bool32

  Physicaldevicedepthclampzeroonefeaturesext* = structvkphysicaldevicedepthclampzeroonefeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:17636:3
  structvkphysicaldevicenonseamlesscubemapfeaturesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17644:16
    pnext*: pointer
    nonseamlesscubemap*: Bool32

  Physicaldevicenonseamlesscubemapfeaturesext* = structvkphysicaldevicenonseamlesscubemapfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:17648:3
  structvkphysicaldevicerenderpassstripedfeaturesarm* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17656:16
    pnext*: pointer
    renderpassstriped*: Bool32

  Physicaldevicerenderpassstripedfeaturesarm* = structvkphysicaldevicerenderpassstripedfeaturesarm ## Generated based on /usr/include/vulkan/vulkan_core.h:17660:3
  structvkphysicaldevicerenderpassstripedpropertiesarm* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17662:16
    pnext*: pointer
    renderpassstripegranularity*: Extent2d
    maxrenderpassstripes*: uint32

  Physicaldevicerenderpassstripedpropertiesarm* = structvkphysicaldevicerenderpassstripedpropertiesarm ## Generated based on /usr/include/vulkan/vulkan_core.h:17667:3
  structvkrenderpassstripeinfoarm* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17669:16
    pnext*: pointer
    stripearea*: Rect2d

  Renderpassstripeinfoarm* = structvkrenderpassstripeinfoarm ## Generated based on /usr/include/vulkan/vulkan_core.h:17673:3
  structvkrenderpassstripebegininfoarm* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17675:16
    pnext*: pointer
    stripeinfocount*: uint32
    pstripeinfos*: ptr Renderpassstripeinfoarm

  Renderpassstripebegininfoarm* = structvkrenderpassstripebegininfoarm ## Generated based on /usr/include/vulkan/vulkan_core.h:17680:3
  structvkrenderpassstripesubmitinfoarm* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17682:16
    pnext*: pointer
    stripesemaphoreinfocount*: uint32
    pstripesemaphoreinfos*: ptr Semaphoresubmitinfo

  Renderpassstripesubmitinfoarm* = structvkrenderpassstripesubmitinfoarm ## Generated based on /usr/include/vulkan/vulkan_core.h:17687:3
  structvkphysicaldevicefragmentdensitymapoffsetfeaturesqcom* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17695:16
    pnext*: pointer
    fragmentdensitymapoffset*: Bool32

  Physicaldevicefragmentdensitymapoffsetfeaturesqcom* = structvkphysicaldevicefragmentdensitymapoffsetfeaturesqcom ## Generated based on /usr/include/vulkan/vulkan_core.h:17699:3
  structvkphysicaldevicefragmentdensitymapoffsetpropertiesqcom* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17701:16
    pnext*: pointer
    fragmentdensityoffsetgranularity*: Extent2d

  Physicaldevicefragmentdensitymapoffsetpropertiesqcom* = structvkphysicaldevicefragmentdensitymapoffsetpropertiesqcom ## Generated based on /usr/include/vulkan/vulkan_core.h:17705:3
  structvksubpassfragmentdensitymapoffsetendinfoqcom* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17707:16
    pnext*: pointer
    fragmentdensityoffsetcount*: uint32
    pfragmentdensityoffsets*: ptr Offset2d

  Subpassfragmentdensitymapoffsetendinfoqcom* = structvksubpassfragmentdensitymapoffsetendinfoqcom ## Generated based on /usr/include/vulkan/vulkan_core.h:17712:3
  structvkcopymemoryindirectcommandnv* {.pure, inheritable, bycopy.} = object
    srcaddress*: Deviceaddress ## Generated based on /usr/include/vulkan/vulkan_core.h:17720:16
    dstaddress*: Deviceaddress
    size*: Devicesize

  Copymemoryindirectcommandnv* = structvkcopymemoryindirectcommandnv ## Generated based on /usr/include/vulkan/vulkan_core.h:17724:3
  structvkcopymemorytoimageindirectcommandnv* {.pure, inheritable, bycopy.} = object
    srcaddress*: Deviceaddress ## Generated based on /usr/include/vulkan/vulkan_core.h:17726:16
    bufferrowlength*: uint32
    bufferimageheight*: uint32
    imagesubresource*: Imagesubresourcelayers
    imageoffset*: Offset3d
    imageextent*: Extent3d

  Copymemorytoimageindirectcommandnv* = structvkcopymemorytoimageindirectcommandnv ## Generated based on /usr/include/vulkan/vulkan_core.h:17733:3
  structvkphysicaldevicecopymemoryindirectfeaturesnv* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17735:16
    pnext*: pointer
    indirectcopy*: Bool32

  Physicaldevicecopymemoryindirectfeaturesnv* = structvkphysicaldevicecopymemoryindirectfeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:17739:3
  structvkphysicaldevicecopymemoryindirectpropertiesnv* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17741:16
    pnext*: pointer
    supportedqueues*: Queueflags

  Physicaldevicecopymemoryindirectpropertiesnv* = structvkphysicaldevicecopymemoryindirectpropertiesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:17745:3
  Pfnvkcmdcopymemoryindirectnv* = proc (a0: Commandbuffer; a1: Deviceaddress;
                                        a2: uint32; a3: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:17747:26
  Pfnvkcmdcopymemorytoimageindirectnv* = proc (a0: Commandbuffer;
      a1: Deviceaddress; a2: uint32; a3: uint32; a4: Image; a5: Imagelayout;
      a6: ptr Imagesubresourcelayers): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:17748:26
  Memorydecompressionmethodflagbitsnv* = Flags64 ## Generated based on /usr/include/vulkan/vulkan_core.h:17774:19
  Memorydecompressionmethodflagsnv* = Flags64 ## Generated based on /usr/include/vulkan/vulkan_core.h:17777:19
  structvkdecompressmemoryregionnv* {.pure, inheritable, bycopy.} = object
    srcaddress*: Deviceaddress ## Generated based on /usr/include/vulkan/vulkan_core.h:17778:16
    dstaddress*: Deviceaddress
    compressedsize*: Devicesize
    decompressedsize*: Devicesize
    decompressionmethod*: Memorydecompressionmethodflagsnv

  Decompressmemoryregionnv* = structvkdecompressmemoryregionnv ## Generated based on /usr/include/vulkan/vulkan_core.h:17784:3
  structvkphysicaldevicememorydecompressionfeaturesnv* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17786:16
    pnext*: pointer
    memorydecompression*: Bool32

  Physicaldevicememorydecompressionfeaturesnv* = structvkphysicaldevicememorydecompressionfeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:17790:3
  structvkphysicaldevicememorydecompressionpropertiesnv* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17792:16
    pnext*: pointer
    decompressionmethods*: Memorydecompressionmethodflagsnv
    maxdecompressionindirectcount*: uint64

  Physicaldevicememorydecompressionpropertiesnv* = structvkphysicaldevicememorydecompressionpropertiesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:17797:3
  Pfnvkcmddecompressmemorynv* = proc (a0: Commandbuffer; a1: uint32;
                                      a2: ptr Decompressmemoryregionnv): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:17799:26
  Pfnvkcmddecompressmemoryindirectcountnv* = proc (a0: Commandbuffer;
      a1: Deviceaddress; a2: Deviceaddress; a3: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:17800:26
  structvkphysicaldevicedevicegeneratedcommandscomputefeaturesnv* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17820:16
    pnext*: pointer
    devicegeneratedcompute*: Bool32
    devicegeneratedcomputepipelines*: Bool32
    devicegeneratedcomputecapturereplay*: Bool32

  Physicaldevicedevicegeneratedcommandscomputefeaturesnv* = structvkphysicaldevicedevicegeneratedcommandscomputefeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:17826:3
  structvkcomputepipelineindirectbufferinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17828:16
    pnext*: pointer
    deviceaddress*: Deviceaddress
    size*: Devicesize
    pipelinedeviceaddresscapturereplay*: Deviceaddress

  Computepipelineindirectbufferinfonv* = structvkcomputepipelineindirectbufferinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:17834:3
  structvkpipelineindirectdeviceaddressinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17836:16
    pnext*: pointer
    pipelinebindpoint*: Pipelinebindpoint
    pipeline*: Pipeline

  Pipelineindirectdeviceaddressinfonv* = structvkpipelineindirectdeviceaddressinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:17841:3
  structvkbindpipelineindirectcommandnv* {.pure, inheritable, bycopy.} = object
    pipelineaddress*: Deviceaddress ## Generated based on /usr/include/vulkan/vulkan_core.h:17843:16
  
  Bindpipelineindirectcommandnv* = structvkbindpipelineindirectcommandnv ## Generated based on /usr/include/vulkan/vulkan_core.h:17845:3
  Pfnvkgetpipelineindirectmemoryrequirementsnv* = proc (a0: Device;
      a1: ptr Computepipelinecreateinfo; a2: ptr Memoryrequirements2): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:17847:26
  Pfnvkcmdupdatepipelineindirectbuffernv* = proc (a0: Commandbuffer;
      a1: Pipelinebindpoint; a2: Pipeline): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:17848:26
  Pfnvkgetpipelineindirectdeviceaddressnv* = proc (a0: Device;
      a1: ptr Pipelineindirectdeviceaddressinfonv): Deviceaddress {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:17849:37
  structvkphysicaldevicelinearcolorattachmentfeaturesnv* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17872:16
    pnext*: pointer
    linearcolorattachment*: Bool32

  Physicaldevicelinearcolorattachmentfeaturesnv* = structvkphysicaldevicelinearcolorattachmentfeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:17876:3
  structvkphysicaldeviceimagecompressioncontrolswapchainfeaturesext* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17890:16
    pnext*: pointer
    imagecompressioncontrolswapchain*: Bool32

  Physicaldeviceimagecompressioncontrolswapchainfeaturesext* = structvkphysicaldeviceimagecompressioncontrolswapchainfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:17894:3
  structvkimageviewsampleweightcreateinfoqcom* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17902:16
    pnext*: pointer
    filtercenter*: Offset2d
    filtersize*: Extent2d
    numphases*: uint32

  Imageviewsampleweightcreateinfoqcom* = structvkimageviewsampleweightcreateinfoqcom ## Generated based on /usr/include/vulkan/vulkan_core.h:17908:3
  structvkphysicaldeviceimageprocessingfeaturesqcom* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17910:16
    pnext*: pointer
    texturesampleweighted*: Bool32
    textureboxfilter*: Bool32
    textureblockmatch*: Bool32

  Physicaldeviceimageprocessingfeaturesqcom* = structvkphysicaldeviceimageprocessingfeaturesqcom ## Generated based on /usr/include/vulkan/vulkan_core.h:17916:3
  structvkphysicaldeviceimageprocessingpropertiesqcom* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17918:16
    pnext*: pointer
    maxweightfilterphases*: uint32
    maxweightfilterdimension*: Extent2d
    maxblockmatchregion*: Extent2d
    maxboxfilterblocksize*: Extent2d

  Physicaldeviceimageprocessingpropertiesqcom* = structvkphysicaldeviceimageprocessingpropertiesqcom ## Generated based on /usr/include/vulkan/vulkan_core.h:17925:3
  structvkphysicaldevicenestedcommandbufferfeaturesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17933:16
    pnext*: pointer
    nestedcommandbuffer*: Bool32
    nestedcommandbufferrendering*: Bool32
    nestedcommandbuffersimultaneoususe*: Bool32

  Physicaldevicenestedcommandbufferfeaturesext* = structvkphysicaldevicenestedcommandbufferfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:17939:3
  structvkphysicaldevicenestedcommandbufferpropertiesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17941:16
    pnext*: pointer
    maxcommandbuffernestinglevel*: uint32

  Physicaldevicenestedcommandbufferpropertiesext* = structvkphysicaldevicenestedcommandbufferpropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:17945:3
  structvkexternalmemoryacquireunmodifiedext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17953:16
    pnext*: pointer
    acquireunmodifiedmemory*: Bool32

  Externalmemoryacquireunmodifiedext* = structvkexternalmemoryacquireunmodifiedext ## Generated based on /usr/include/vulkan/vulkan_core.h:17957:3
  structvkphysicaldeviceextendeddynamicstate3featuresext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:17965:16
    pnext*: pointer
    extendeddynamicstate3tessellationdomainorigin*: Bool32
    extendeddynamicstate3depthclampenable*: Bool32
    extendeddynamicstate3polygonmode*: Bool32
    extendeddynamicstate3rasterizationsamples*: Bool32
    extendeddynamicstate3samplemask*: Bool32
    extendeddynamicstate3alphatocoverageenable*: Bool32
    extendeddynamicstate3alphatooneenable*: Bool32
    extendeddynamicstate3logicopenable*: Bool32
    extendeddynamicstate3colorblendenable*: Bool32
    extendeddynamicstate3colorblendequation*: Bool32
    extendeddynamicstate3colorwritemask*: Bool32
    extendeddynamicstate3rasterizationstream*: Bool32
    extendeddynamicstate3conservativerasterizationmode*: Bool32
    extendeddynamicstate3extraprimitiveoverestimationsize*: Bool32
    extendeddynamicstate3depthclipenable*: Bool32
    extendeddynamicstate3samplelocationsenable*: Bool32
    extendeddynamicstate3colorblendadvanced*: Bool32
    extendeddynamicstate3provokingvertexmode*: Bool32
    extendeddynamicstate3linerasterizationmode*: Bool32
    extendeddynamicstate3linestippleenable*: Bool32
    extendeddynamicstate3depthclipnegativeonetoone*: Bool32
    extendeddynamicstate3viewportwscalingenable*: Bool32
    extendeddynamicstate3viewportswizzle*: Bool32
    extendeddynamicstate3coveragetocolorenable*: Bool32
    extendeddynamicstate3coveragetocolorlocation*: Bool32
    extendeddynamicstate3coveragemodulationmode*: Bool32
    extendeddynamicstate3coveragemodulationtableenable*: Bool32
    extendeddynamicstate3coveragemodulationtable*: Bool32
    extendeddynamicstate3coveragereductionmode*: Bool32
    extendeddynamicstate3representativefragmenttestenable*: Bool32
    extendeddynamicstate3shadingrateimageenable*: Bool32

  Physicaldeviceextendeddynamicstate3featuresext* = structvkphysicaldeviceextendeddynamicstate3featuresext ## Generated based on /usr/include/vulkan/vulkan_core.h:17999:3
  structvkphysicaldeviceextendeddynamicstate3propertiesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18001:16
    pnext*: pointer
    dynamicprimitivetopologyunrestricted*: Bool32

  Physicaldeviceextendeddynamicstate3propertiesext* = structvkphysicaldeviceextendeddynamicstate3propertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:18005:3
  structvkcolorblendequationext* {.pure, inheritable, bycopy.} = object
    srccolorblendfactor*: Blendfactor ## Generated based on /usr/include/vulkan/vulkan_core.h:18007:16
    dstcolorblendfactor*: Blendfactor
    colorblendop*: Blendop
    srcalphablendfactor*: Blendfactor
    dstalphablendfactor*: Blendfactor
    alphablendop*: Blendop

  Colorblendequationext* = structvkcolorblendequationext ## Generated based on /usr/include/vulkan/vulkan_core.h:18014:3
  structvkcolorblendadvancedext* {.pure, inheritable, bycopy.} = object
    advancedblendop*: Blendop ## Generated based on /usr/include/vulkan/vulkan_core.h:18016:16
    srcpremultiplied*: Bool32
    dstpremultiplied*: Bool32
    blendoverlap*: Blendoverlapext
    clampresults*: Bool32

  Colorblendadvancedext* = structvkcolorblendadvancedext ## Generated based on /usr/include/vulkan/vulkan_core.h:18022:3
  Pfnvkcmdsetdepthclampenableext* = proc (a0: Commandbuffer; a1: Bool32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:18024:26
  Pfnvkcmdsetpolygonmodeext* = proc (a0: Commandbuffer; a1: Polygonmode): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:18025:26
  Pfnvkcmdsetrasterizationsamplesext* = proc (a0: Commandbuffer;
      a1: Samplecountflagbits): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:18026:26
  Pfnvkcmdsetsamplemaskext* = proc (a0: Commandbuffer; a1: Samplecountflagbits;
                                    a2: ptr Samplemask): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:18027:26
  Pfnvkcmdsetalphatocoverageenableext* = proc (a0: Commandbuffer; a1: Bool32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:18028:26
  Pfnvkcmdsetalphatooneenableext* = proc (a0: Commandbuffer; a1: Bool32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:18029:26
  Pfnvkcmdsetlogicopenableext* = proc (a0: Commandbuffer; a1: Bool32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:18030:26
  Pfnvkcmdsetcolorblendenableext* = proc (a0: Commandbuffer; a1: uint32;
      a2: uint32; a3: ptr Bool32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:18031:26
  Pfnvkcmdsetcolorblendequationext* = proc (a0: Commandbuffer; a1: uint32;
      a2: uint32; a3: ptr Colorblendequationext): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:18032:26
  Pfnvkcmdsetcolorwritemaskext* = proc (a0: Commandbuffer; a1: uint32;
                                        a2: uint32; a3: ptr Colorcomponentflags): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:18033:26
  Pfnvkcmdsettessellationdomainoriginext* = proc (a0: Commandbuffer;
      a1: Tessellationdomainorigin): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:18034:26
  Pfnvkcmdsetrasterizationstreamext* = proc (a0: Commandbuffer; a1: uint32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:18035:26
  Pfnvkcmdsetconservativerasterizationmodeext* = proc (a0: Commandbuffer;
      a1: Conservativerasterizationmodeext): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:18036:26
  Pfnvkcmdsetextraprimitiveoverestimationsizeext* = proc (a0: Commandbuffer;
      a1: cfloat): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:18037:26
  Pfnvkcmdsetdepthclipenableext* = proc (a0: Commandbuffer; a1: Bool32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:18038:26
  Pfnvkcmdsetsamplelocationsenableext* = proc (a0: Commandbuffer; a1: Bool32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:18039:26
  Pfnvkcmdsetcolorblendadvancedext* = proc (a0: Commandbuffer; a1: uint32;
      a2: uint32; a3: ptr Colorblendadvancedext): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:18040:26
  Pfnvkcmdsetprovokingvertexmodeext* = proc (a0: Commandbuffer;
      a1: Provokingvertexmodeext): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:18041:26
  Pfnvkcmdsetlinerasterizationmodeext* = proc (a0: Commandbuffer;
      a1: Linerasterizationmodeext): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:18042:26
  Pfnvkcmdsetlinestippleenableext* = proc (a0: Commandbuffer; a1: Bool32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:18043:26
  Pfnvkcmdsetdepthclipnegativeonetooneext* = proc (a0: Commandbuffer; a1: Bool32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:18044:26
  Pfnvkcmdsetviewportwscalingenablenv* = proc (a0: Commandbuffer; a1: Bool32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:18045:26
  Pfnvkcmdsetviewportswizzlenv* = proc (a0: Commandbuffer; a1: uint32;
                                        a2: uint32; a3: ptr Viewportswizzlenv): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:18046:26
  Pfnvkcmdsetcoveragetocolorenablenv* = proc (a0: Commandbuffer; a1: Bool32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:18047:26
  Pfnvkcmdsetcoveragetocolorlocationnv* = proc (a0: Commandbuffer; a1: uint32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:18048:26
  Pfnvkcmdsetcoveragemodulationmodenv* = proc (a0: Commandbuffer;
      a1: Coveragemodulationmodenv): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:18049:26
  Pfnvkcmdsetcoveragemodulationtableenablenv* = proc (a0: Commandbuffer;
      a1: Bool32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:18050:26
  Pfnvkcmdsetcoveragemodulationtablenv* = proc (a0: Commandbuffer; a1: uint32;
      a2: ptr cfloat): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:18051:26
  Pfnvkcmdsetshadingrateimageenablenv* = proc (a0: Commandbuffer; a1: Bool32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:18052:26
  Pfnvkcmdsetrepresentativefragmenttestenablenv* = proc (a0: Commandbuffer;
      a1: Bool32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:18053:26
  Pfnvkcmdsetcoveragereductionmodenv* = proc (a0: Commandbuffer;
      a1: Coveragereductionmodenv): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:18054:26
  Subpassmergestatusext* = enumvksubpassmergestatusext ## Generated based on /usr/include/vulkan/vulkan_core.h:18216:3
  structvkphysicaldevicesubpassmergefeedbackfeaturesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18217:16
    pnext*: pointer
    subpassmergefeedback*: Bool32

  Physicaldevicesubpassmergefeedbackfeaturesext* = structvkphysicaldevicesubpassmergefeedbackfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:18221:3
  structvkrenderpasscreationcontrolext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18223:16
    pnext*: pointer
    disallowmerging*: Bool32

  Renderpasscreationcontrolext* = structvkrenderpasscreationcontrolext ## Generated based on /usr/include/vulkan/vulkan_core.h:18227:3
  structvkrenderpasscreationfeedbackinfoext* {.pure, inheritable, bycopy.} = object
    postmergesubpasscount*: uint32 ## Generated based on /usr/include/vulkan/vulkan_core.h:18229:16
  
  Renderpasscreationfeedbackinfoext* = structvkrenderpasscreationfeedbackinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:18231:3
  structvkrenderpasscreationfeedbackcreateinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18233:16
    pnext*: pointer
    prenderpassfeedback*: ptr Renderpasscreationfeedbackinfoext

  Renderpasscreationfeedbackcreateinfoext* = structvkrenderpasscreationfeedbackcreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:18237:3
  structvkrenderpasssubpassfeedbackinfoext* {.pure, inheritable, bycopy.} = object
    subpassmergestatus*: Subpassmergestatusext ## Generated based on /usr/include/vulkan/vulkan_core.h:18239:16
    description*: array[256'i64, cschar]
    postmergeindex*: uint32

  Renderpasssubpassfeedbackinfoext* = structvkrenderpasssubpassfeedbackinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:18243:3
  structvkrenderpasssubpassfeedbackcreateinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18245:16
    pnext*: pointer
    psubpassfeedback*: ptr Renderpasssubpassfeedbackinfoext

  Renderpasssubpassfeedbackcreateinfoext* = structvkrenderpasssubpassfeedbackcreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:18249:3
  Directdriverloadingmodelunarg* = enumvkdirectdriverloadingmodelunarg ## Generated based on /usr/include/vulkan/vulkan_core.h:18262:3
  Directdriverloadingflagslunarg* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:18263:17
  Pfnvkgetinstanceprocaddrlunarg* = proc (a0: Instance; a1: cstring): Pfnvkvoidfunction {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:18264:40
  structvkdirectdriverloadinginfolunarg* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18267:16
    pnext*: pointer
    flags*: Directdriverloadingflagslunarg
    pfngetinstanceprocaddr*: Pfnvkgetinstanceprocaddrlunarg

  Directdriverloadinginfolunarg* = structvkdirectdriverloadinginfolunarg ## Generated based on /usr/include/vulkan/vulkan_core.h:18272:3
  structvkdirectdriverloadinglistlunarg* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18274:16
    pnext*: pointer
    mode*: Directdriverloadingmodelunarg
    drivercount*: uint32
    pdrivers*: ptr Directdriverloadinginfolunarg

  Directdriverloadinglistlunarg* = structvkdirectdriverloadinglistlunarg ## Generated based on /usr/include/vulkan/vulkan_core.h:18280:3
  structvkphysicaldeviceshadermoduleidentifierfeaturesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18289:16
    pnext*: pointer
    shadermoduleidentifier*: Bool32

  Physicaldeviceshadermoduleidentifierfeaturesext* = structvkphysicaldeviceshadermoduleidentifierfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:18293:3
  structvkphysicaldeviceshadermoduleidentifierpropertiesext* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18295:16
    pnext*: pointer
    shadermoduleidentifieralgorithmuuid*: array[16'i64, uint8]

  Physicaldeviceshadermoduleidentifierpropertiesext* = structvkphysicaldeviceshadermoduleidentifierpropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:18299:3
  structvkpipelineshaderstagemoduleidentifiercreateinfoext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18301:16
    pnext*: pointer
    identifiersize*: uint32
    pidentifier*: ptr uint8

  Pipelineshaderstagemoduleidentifiercreateinfoext* = structvkpipelineshaderstagemoduleidentifiercreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:18306:3
  structvkshadermoduleidentifierext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18308:16
    pnext*: pointer
    identifiersize*: uint32
    identifier*: array[32'i64, uint8]

  Shadermoduleidentifierext* = structvkshadermoduleidentifierext ## Generated based on /usr/include/vulkan/vulkan_core.h:18313:3
  Pfnvkgetshadermoduleidentifierext* = proc (a0: Device; a1: Shadermodule;
      a2: ptr Shadermoduleidentifierext): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:18315:26
  Pfnvkgetshadermodulecreateinfoidentifierext* = proc (a0: Device;
      a1: ptr Shadermodulecreateinfo; a2: ptr Shadermoduleidentifierext): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:18316:26
  Opticalflowsessionnv* = ptr structvkopticalflowsessionnvt ## Generated based on /usr/include/vulkan/vulkan_core.h:18339:1
  Opticalflowperformancelevelnv* = enumvkopticalflowperformancelevelnv ## Generated based on /usr/include/vulkan/vulkan_core.h:18349:3
  Opticalflowsessionbindingpointnv* = enumvkopticalflowsessionbindingpointnv ## Generated based on /usr/include/vulkan/vulkan_core.h:18362:3
  Opticalflowgridsizeflagbitsnv* = enumvkopticalflowgridsizeflagbitsnv ## Generated based on /usr/include/vulkan/vulkan_core.h:18371:3
  Opticalflowgridsizeflagsnv* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:18372:19
  Opticalflowusageflagbitsnv* = enumvkopticalflowusageflagbitsnv ## Generated based on /usr/include/vulkan/vulkan_core.h:18382:3
  Opticalflowusageflagsnv* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:18383:19
  Opticalflowsessioncreateflagbitsnv* = enumvkopticalflowsessioncreateflagbitsnv ## Generated based on /usr/include/vulkan/vulkan_core.h:18392:3
  Opticalflowsessioncreateflagsnv* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:18393:19
  Opticalflowexecuteflagbitsnv* = enumvkopticalflowexecuteflagbitsnv ## Generated based on /usr/include/vulkan/vulkan_core.h:18398:3
  Opticalflowexecuteflagsnv* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:18399:19
  structvkphysicaldeviceopticalflowfeaturesnv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18400:16
    pnext*: pointer
    opticalflow*: Bool32

  Physicaldeviceopticalflowfeaturesnv* = structvkphysicaldeviceopticalflowfeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:18404:3
  structvkphysicaldeviceopticalflowpropertiesnv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18406:16
    pnext*: pointer
    supportedoutputgridsizes*: Opticalflowgridsizeflagsnv
    supportedhintgridsizes*: Opticalflowgridsizeflagsnv
    hintsupported*: Bool32
    costsupported*: Bool32
    bidirectionalflowsupported*: Bool32
    globalflowsupported*: Bool32
    minwidth*: uint32
    minheight*: uint32
    maxwidth*: uint32
    maxheight*: uint32
    maxnumregionsofinterest*: uint32

  Physicaldeviceopticalflowpropertiesnv* = structvkphysicaldeviceopticalflowpropertiesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:18420:3
  structvkopticalflowimageformatinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18422:16
    pnext*: pointer
    usage*: Opticalflowusageflagsnv

  Opticalflowimageformatinfonv* = structvkopticalflowimageformatinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:18426:3
  structvkopticalflowimageformatpropertiesnv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18428:16
    pnext*: pointer
    format*: Format

  Opticalflowimageformatpropertiesnv* = structvkopticalflowimageformatpropertiesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:18432:3
  structvkopticalflowsessioncreateinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18434:16
    pnext*: pointer
    width*: uint32
    height*: uint32
    imageformat*: Format
    flowvectorformat*: Format
    costformat*: Format
    outputgridsize*: Opticalflowgridsizeflagsnv
    hintgridsize*: Opticalflowgridsizeflagsnv
    performancelevel*: Opticalflowperformancelevelnv
    flags*: Opticalflowsessioncreateflagsnv

  Opticalflowsessioncreateinfonv* = structvkopticalflowsessioncreateinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:18446:3
  structvkopticalflowsessioncreateprivatedatainfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18448:16
    pnext*: pointer
    id*: uint32
    size*: uint32
    pprivatedata*: pointer

  Opticalflowsessioncreateprivatedatainfonv* = structvkopticalflowsessioncreateprivatedatainfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:18454:3
  structvkopticalflowexecuteinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18456:16
    pnext*: pointer
    flags*: Opticalflowexecuteflagsnv
    regioncount*: uint32
    pregions*: ptr Rect2d

  Opticalflowexecuteinfonv* = structvkopticalflowexecuteinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:18462:3
  Pfnvkgetphysicaldeviceopticalflowimageformatsnv* = proc (a0: Physicaldevice;
      a1: ptr Opticalflowimageformatinfonv; a2: ptr uint32;
      a3: ptr Opticalflowimageformatpropertiesnv): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:18464:30
  Pfnvkcreateopticalflowsessionnv* = proc (a0: Device;
      a1: ptr Opticalflowsessioncreateinfonv; a2: ptr Allocationcallbacks;
      a3: ptr Opticalflowsessionnv): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:18465:30
  Pfnvkdestroyopticalflowsessionnv* = proc (a0: Device;
      a1: Opticalflowsessionnv; a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:18466:26
  Pfnvkbindopticalflowsessionimagenv* = proc (a0: Device;
      a1: Opticalflowsessionnv; a2: Opticalflowsessionbindingpointnv;
      a3: Imageview; a4: Imagelayout): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:18467:30
  Pfnvkcmdopticalflowexecutenv* = proc (a0: Commandbuffer;
                                        a1: Opticalflowsessionnv;
                                        a2: ptr Opticalflowexecuteinfonv): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:18468:26
  structvkphysicaldevicelegacyditheringfeaturesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18506:16
    pnext*: pointer
    legacydithering*: Bool32

  Physicaldevicelegacyditheringfeaturesext* = structvkphysicaldevicelegacyditheringfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:18510:3
  structvkphysicaldevicepipelineprotectedaccessfeaturesext* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18518:16
    pnext*: pointer
    pipelineprotectedaccess*: Bool32

  Physicaldevicepipelineprotectedaccessfeaturesext* = structvkphysicaldevicepipelineprotectedaccessfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:18522:3
  Shaderext* = ptr structvkshaderextt ## Generated based on /usr/include/vulkan/vulkan_core.h:18528:1
  Shadercodetypeext* = enumvkshadercodetypeext ## Generated based on /usr/include/vulkan/vulkan_core.h:18536:3
  Shadercreateflagbitsext* = enumvkshadercreateflagbitsext ## Generated based on /usr/include/vulkan/vulkan_core.h:18547:3
  Shadercreateflagsext* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:18548:17
  structvkphysicaldeviceshaderobjectfeaturesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18549:16
    pnext*: pointer
    shaderobject*: Bool32

  Physicaldeviceshaderobjectfeaturesext* = structvkphysicaldeviceshaderobjectfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:18553:3
  structvkphysicaldeviceshaderobjectpropertiesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18555:16
    pnext*: pointer
    shaderbinaryuuid*: array[16'i64, uint8]
    shaderbinaryversion*: uint32

  Physicaldeviceshaderobjectpropertiesext* = structvkphysicaldeviceshaderobjectpropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:18560:3
  structvkshadercreateinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18562:16
    pnext*: pointer
    flags*: Shadercreateflagsext
    stage*: Shaderstageflagbits
    nextstage*: Shaderstageflags
    codetype*: Shadercodetypeext
    codesize*: csize_t
    pcode*: pointer
    pname*: cstring
    setlayoutcount*: uint32
    psetlayouts*: ptr Descriptorsetlayout
    pushconstantrangecount*: uint32
    ppushconstantranges*: ptr Pushconstantrange
    pspecializationinfo*: ptr Specializationinfo

  Shadercreateinfoext* = structvkshadercreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:18577:3
  Shaderrequiredsubgroupsizecreateinfoext* = Pipelineshaderstagerequiredsubgroupsizecreateinfo ## Generated based on /usr/include/vulkan/vulkan_core.h:18579:61
  Pfnvkcreateshadersext* = proc (a0: Device; a1: uint32;
                                 a2: ptr Shadercreateinfoext;
                                 a3: ptr Allocationcallbacks; a4: ptr Shaderext): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:18581:30
  Pfnvkdestroyshaderext* = proc (a0: Device; a1: Shaderext;
                                 a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:18582:26
  Pfnvkgetshaderbinarydataext* = proc (a0: Device; a1: Shaderext;
                                       a2: ptr csize_t; a3: pointer): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:18583:30
  Pfnvkcmdbindshadersext* = proc (a0: Commandbuffer; a1: uint32;
                                  a2: ptr Shaderstageflagbits; a3: ptr Shaderext): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:18584:26
  structvkphysicaldevicetilepropertiesfeaturesqcom* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18617:16
    pnext*: pointer
    tileproperties*: Bool32

  Physicaldevicetilepropertiesfeaturesqcom* = structvkphysicaldevicetilepropertiesfeaturesqcom ## Generated based on /usr/include/vulkan/vulkan_core.h:18621:3
  structvktilepropertiesqcom* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18623:16
    pnext*: pointer
    tilesize*: Extent3d
    apronsize*: Extent2d
    origin*: Offset2d

  Tilepropertiesqcom* = structvktilepropertiesqcom ## Generated based on /usr/include/vulkan/vulkan_core.h:18629:3
  Pfnvkgetframebuffertilepropertiesqcom* = proc (a0: Device; a1: Framebuffer;
      a2: ptr uint32; a3: ptr Tilepropertiesqcom): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:18631:30
  Pfnvkgetdynamicrenderingtilepropertiesqcom* = proc (a0: Device;
      a1: ptr Renderinginfo; a2: ptr Tilepropertiesqcom): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:18632:30
  structvkphysicaldeviceamigoprofilingfeaturessec* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18652:16
    pnext*: pointer
    amigoprofiling*: Bool32

  Physicaldeviceamigoprofilingfeaturessec* = structvkphysicaldeviceamigoprofilingfeaturessec ## Generated based on /usr/include/vulkan/vulkan_core.h:18656:3
  structvkamigoprofilingsubmitinfosec* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18658:16
    pnext*: pointer
    firstdrawtimestamp*: uint64
    swapbuffertimestamp*: uint64

  Amigoprofilingsubmitinfosec* = structvkamigoprofilingsubmitinfosec ## Generated based on /usr/include/vulkan/vulkan_core.h:18663:3
  structvkphysicaldevicemultiviewperviewviewportsfeaturesqcom* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18671:16
    pnext*: pointer
    multiviewperviewviewports*: Bool32

  Physicaldevicemultiviewperviewviewportsfeaturesqcom* = structvkphysicaldevicemultiviewperviewviewportsfeaturesqcom ## Generated based on /usr/include/vulkan/vulkan_core.h:18675:3
  Raytracinginvocationreordermodenv* = enumvkraytracinginvocationreordermodenv ## Generated based on /usr/include/vulkan/vulkan_core.h:18688:3
  structvkphysicaldeviceraytracinginvocationreorderpropertiesnv* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18689:16
    pnext*: pointer
    raytracinginvocationreorderreorderinghint*: Raytracinginvocationreordermodenv

  Physicaldeviceraytracinginvocationreorderpropertiesnv* = structvkphysicaldeviceraytracinginvocationreorderpropertiesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:18693:3
  structvkphysicaldeviceraytracinginvocationreorderfeaturesnv* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18695:16
    pnext*: pointer
    raytracinginvocationreorder*: Bool32

  Physicaldeviceraytracinginvocationreorderfeaturesnv* = structvkphysicaldeviceraytracinginvocationreorderfeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:18699:3
  structvkphysicaldeviceextendedsparseaddressspacefeaturesnv* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18707:16
    pnext*: pointer
    extendedsparseaddressspace*: Bool32

  Physicaldeviceextendedsparseaddressspacefeaturesnv* = structvkphysicaldeviceextendedsparseaddressspacefeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:18711:3
  structvkphysicaldeviceextendedsparseaddressspacepropertiesnv* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18713:16
    pnext*: pointer
    extendedsparseaddressspacesize*: Devicesize
    extendedsparseimageusageflags*: Imageusageflags
    extendedsparsebufferusageflags*: Bufferusageflags

  Physicaldeviceextendedsparseaddressspacepropertiesnv* = structvkphysicaldeviceextendedsparseaddressspacepropertiesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:18719:3
  Layersettingtypeext* = enumvklayersettingtypeext ## Generated based on /usr/include/vulkan/vulkan_core.h:18744:3
  structvklayersettingext* {.pure, inheritable, bycopy.} = object
    playername*: cstring     ## Generated based on /usr/include/vulkan/vulkan_core.h:18745:16
    psettingname*: cstring
    typefield*: Layersettingtypeext
    valuecount*: uint32
    pvalues*: pointer

  Layersettingext* = structvklayersettingext ## Generated based on /usr/include/vulkan/vulkan_core.h:18751:3
  structvklayersettingscreateinfoext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18753:16
    pnext*: pointer
    settingcount*: uint32
    psettings*: ptr Layersettingext

  Layersettingscreateinfoext* = structvklayersettingscreateinfoext ## Generated based on /usr/include/vulkan/vulkan_core.h:18758:3
  structvkphysicaldeviceshadercorebuiltinsfeaturesarm* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18766:16
    pnext*: pointer
    shadercorebuiltins*: Bool32

  Physicaldeviceshadercorebuiltinsfeaturesarm* = structvkphysicaldeviceshadercorebuiltinsfeaturesarm ## Generated based on /usr/include/vulkan/vulkan_core.h:18770:3
  structvkphysicaldeviceshadercorebuiltinspropertiesarm* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18772:16
    pnext*: pointer
    shadercoremask*: uint64
    shadercorecount*: uint32
    shaderwarpspercore*: uint32

  Physicaldeviceshadercorebuiltinspropertiesarm* = structvkphysicaldeviceshadercorebuiltinspropertiesarm ## Generated based on /usr/include/vulkan/vulkan_core.h:18778:3
  structvkphysicaldevicepipelinelibrarygrouphandlesfeaturesext* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18786:16
    pnext*: pointer
    pipelinelibrarygrouphandles*: Bool32

  Physicaldevicepipelinelibrarygrouphandlesfeaturesext* = structvkphysicaldevicepipelinelibrarygrouphandlesfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:18790:3
  structvkphysicaldevicedynamicrenderingunusedattachmentsfeaturesext* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18798:16
    pnext*: pointer
    dynamicrenderingunusedattachments*: Bool32

  Physicaldevicedynamicrenderingunusedattachmentsfeaturesext* = structvkphysicaldevicedynamicrenderingunusedattachmentsfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:18802:3
  Latencymarkernv* = enumvklatencymarkernv ## Generated based on /usr/include/vulkan/vulkan_core.h:18825:3
  Outofbandqueuetypenv* = enumvkoutofbandqueuetypenv ## Generated based on /usr/include/vulkan/vulkan_core.h:18831:3
  structvklatencysleepmodeinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18832:16
    pnext*: pointer
    lowlatencymode*: Bool32
    lowlatencyboost*: Bool32
    minimumintervalus*: uint32

  Latencysleepmodeinfonv* = structvklatencysleepmodeinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:18838:3
  structvklatencysleepinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18840:16
    pnext*: pointer
    signalsemaphore*: Semaphore
    value*: uint64

  Latencysleepinfonv* = structvklatencysleepinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:18845:3
  structvksetlatencymarkerinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18847:16
    pnext*: pointer
    presentid*: uint64
    marker*: Latencymarkernv

  Setlatencymarkerinfonv* = structvksetlatencymarkerinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:18852:3
  structvklatencytimingsframereportnv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18854:16
    pnext*: pointer
    presentid*: uint64
    inputsampletimeus*: uint64
    simstarttimeus*: uint64
    simendtimeus*: uint64
    rendersubmitstarttimeus*: uint64
    rendersubmitendtimeus*: uint64
    presentstarttimeus*: uint64
    presentendtimeus*: uint64
    driverstarttimeus*: uint64
    driverendtimeus*: uint64
    osrenderqueuestarttimeus*: uint64
    osrenderqueueendtimeus*: uint64
    gpurenderstarttimeus*: uint64
    gpurenderendtimeus*: uint64

  Latencytimingsframereportnv* = structvklatencytimingsframereportnv ## Generated based on /usr/include/vulkan/vulkan_core.h:18871:3
  structvkgetlatencymarkerinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18873:16
    pnext*: pointer
    timingcount*: uint32
    ptimings*: ptr Latencytimingsframereportnv

  Getlatencymarkerinfonv* = structvkgetlatencymarkerinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:18878:3
  structvklatencysubmissionpresentidnv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18880:16
    pnext*: pointer
    presentid*: uint64

  Latencysubmissionpresentidnv* = structvklatencysubmissionpresentidnv ## Generated based on /usr/include/vulkan/vulkan_core.h:18884:3
  structvkswapchainlatencycreateinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18886:16
    pnext*: pointer
    latencymodeenable*: Bool32

  Swapchainlatencycreateinfonv* = structvkswapchainlatencycreateinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:18890:3
  structvkoutofbandqueuetypeinfonv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18892:16
    pnext*: pointer
    queuetype*: Outofbandqueuetypenv

  Outofbandqueuetypeinfonv* = structvkoutofbandqueuetypeinfonv ## Generated based on /usr/include/vulkan/vulkan_core.h:18896:3
  structvklatencysurfacecapabilitiesnv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18898:16
    pnext*: pointer
    presentmodecount*: uint32
    ppresentmodes*: ptr Presentmodekhr

  Latencysurfacecapabilitiesnv* = structvklatencysurfacecapabilitiesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:18903:3
  Pfnvksetlatencysleepmodenv* = proc (a0: Device; a1: Swapchainkhr;
                                      a2: ptr Latencysleepmodeinfonv): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:18905:30
  Pfnvklatencysleepnv* = proc (a0: Device; a1: Swapchainkhr;
                               a2: ptr Latencysleepinfonv): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:18906:30
  Pfnvksetlatencymarkernv* = proc (a0: Device; a1: Swapchainkhr;
                                   a2: ptr Setlatencymarkerinfonv): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:18907:26
  Pfnvkgetlatencytimingsnv* = proc (a0: Device; a1: Swapchainkhr;
                                    a2: ptr Getlatencymarkerinfonv): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:18908:26
  Pfnvkqueuenotifyoutofbandnv* = proc (a0: Queue;
                                       a1: ptr Outofbandqueuetypeinfonv): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:18909:26
  structvkphysicaldevicemultiviewperviewrenderareasfeaturesqcom* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18942:16
    pnext*: pointer
    multiviewperviewrenderareas*: Bool32

  Physicaldevicemultiviewperviewrenderareasfeaturesqcom* = structvkphysicaldevicemultiviewperviewrenderareasfeaturesqcom ## Generated based on /usr/include/vulkan/vulkan_core.h:18946:3
  structvkmultiviewperviewrenderareasrenderpassbegininfoqcom* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18948:16
    pnext*: pointer
    perviewrenderareacount*: uint32
    pperviewrenderareas*: ptr Rect2d

  Multiviewperviewrenderareasrenderpassbegininfoqcom* = structvkmultiviewperviewrenderareasrenderpassbegininfoqcom ## Generated based on /usr/include/vulkan/vulkan_core.h:18953:3
  structvkphysicaldeviceperstagedescriptorsetfeaturesnv* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18961:16
    pnext*: pointer
    perstagedescriptorset*: Bool32
    dynamicpipelinelayout*: Bool32

  Physicaldeviceperstagedescriptorsetfeaturesnv* = structvkphysicaldeviceperstagedescriptorsetfeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:18966:3
  Blockmatchwindowcomparemodeqcom* = enumvkblockmatchwindowcomparemodeqcom ## Generated based on /usr/include/vulkan/vulkan_core.h:18979:3
  structvkphysicaldeviceimageprocessing2featuresqcom* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18980:16
    pnext*: pointer
    textureblockmatch2*: Bool32

  Physicaldeviceimageprocessing2featuresqcom* = structvkphysicaldeviceimageprocessing2featuresqcom ## Generated based on /usr/include/vulkan/vulkan_core.h:18984:3
  structvkphysicaldeviceimageprocessing2propertiesqcom* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18986:16
    pnext*: pointer
    maxblockmatchwindow*: Extent2d

  Physicaldeviceimageprocessing2propertiesqcom* = structvkphysicaldeviceimageprocessing2propertiesqcom ## Generated based on /usr/include/vulkan/vulkan_core.h:18990:3
  structvksamplerblockmatchwindowcreateinfoqcom* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:18992:16
    pnext*: pointer
    windowextent*: Extent2d
    windowcomparemode*: Blockmatchwindowcomparemodeqcom

  Samplerblockmatchwindowcreateinfoqcom* = structvksamplerblockmatchwindowcreateinfoqcom ## Generated based on /usr/include/vulkan/vulkan_core.h:18997:3
  Cubicfilterweightsqcom* = enumvkcubicfilterweightsqcom ## Generated based on /usr/include/vulkan/vulkan_core.h:19012:3
  structvkphysicaldevicecubicweightsfeaturesqcom* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19013:16
    pnext*: pointer
    selectablecubicweights*: Bool32

  Physicaldevicecubicweightsfeaturesqcom* = structvkphysicaldevicecubicweightsfeaturesqcom ## Generated based on /usr/include/vulkan/vulkan_core.h:19017:3
  structvksamplercubicweightscreateinfoqcom* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19019:16
    pnext*: pointer
    cubicweights*: Cubicfilterweightsqcom

  Samplercubicweightscreateinfoqcom* = structvksamplercubicweightscreateinfoqcom ## Generated based on /usr/include/vulkan/vulkan_core.h:19023:3
  structvkblitimagecubicweightsinfoqcom* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19025:16
    pnext*: pointer
    cubicweights*: Cubicfilterweightsqcom

  Blitimagecubicweightsinfoqcom* = structvkblitimagecubicweightsinfoqcom ## Generated based on /usr/include/vulkan/vulkan_core.h:19029:3
  structvkphysicaldeviceycbcrdegammafeaturesqcom* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19037:16
    pnext*: pointer
    ycbcrdegamma*: Bool32

  Physicaldeviceycbcrdegammafeaturesqcom* = structvkphysicaldeviceycbcrdegammafeaturesqcom ## Generated based on /usr/include/vulkan/vulkan_core.h:19041:3
  structvksamplerycbcrconversionycbcrdegammacreateinfoqcom* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19043:16
    pnext*: pointer
    enableydegamma*: Bool32
    enablecbcrdegamma*: Bool32

  Samplerycbcrconversionycbcrdegammacreateinfoqcom* = structvksamplerycbcrconversionycbcrdegammacreateinfoqcom ## Generated based on /usr/include/vulkan/vulkan_core.h:19048:3
  structvkphysicaldevicecubicclampfeaturesqcom* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19056:16
    pnext*: pointer
    cubicrangeclamp*: Bool32

  Physicaldevicecubicclampfeaturesqcom* = structvkphysicaldevicecubicclampfeaturesqcom ## Generated based on /usr/include/vulkan/vulkan_core.h:19060:3
  structvkphysicaldeviceattachmentfeedbackloopdynamicstatefeaturesext* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19068:16
    pnext*: pointer
    attachmentfeedbackloopdynamicstate*: Bool32

  Physicaldeviceattachmentfeedbackloopdynamicstatefeaturesext* = structvkphysicaldeviceattachmentfeedbackloopdynamicstatefeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:19072:3
  Pfnvkcmdsetattachmentfeedbackloopenableext* = proc (a0: Commandbuffer;
      a1: Imageaspectflags): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:19074:26
  Layereddriverunderlyingapimsft* = enumvklayereddriverunderlyingapimsft ## Generated based on /usr/include/vulkan/vulkan_core.h:19092:3
  structvkphysicaldevicelayereddriverpropertiesmsft* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19093:16
    pnext*: pointer
    underlyingapi*: Layereddriverunderlyingapimsft

  Physicaldevicelayereddriverpropertiesmsft* = structvkphysicaldevicelayereddriverpropertiesmsft ## Generated based on /usr/include/vulkan/vulkan_core.h:19097:3
  structvkphysicaldevicedescriptorpooloverallocationfeaturesnv* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19105:16
    pnext*: pointer
    descriptorpooloverallocation*: Bool32

  Physicaldevicedescriptorpooloverallocationfeaturesnv* = structvkphysicaldevicedescriptorpooloverallocationfeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:19109:3
  structvkphysicaldevicerawaccesschainsfeaturesnv* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19117:16
    pnext*: pointer
    shaderrawaccesschains*: Bool32

  Physicaldevicerawaccesschainsfeaturesnv* = structvkphysicaldevicerawaccesschainsfeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:19121:3
  structvkphysicaldeviceshaderatomicfloat16vectorfeaturesnv* {.pure,
      inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19129:16
    pnext*: pointer
    shaderfloat16vectoratomics*: Bool32

  Physicaldeviceshaderatomicfloat16vectorfeaturesnv* = structvkphysicaldeviceshaderatomicfloat16vectorfeaturesnv ## Generated based on /usr/include/vulkan/vulkan_core.h:19133:3
  Buildaccelerationstructuremodekhr* = enumvkbuildaccelerationstructuremodekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19146:3
  Accelerationstructurecreateflagbitskhr* = enumvkaccelerationstructurecreateflagbitskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19153:3
  Accelerationstructurecreateflagskhr* = Flags ## Generated based on /usr/include/vulkan/vulkan_core.h:19154:17
  structvkaccelerationstructurebuildrangeinfokhr* {.pure, inheritable, bycopy.} = object
    primitivecount*: uint32  ## Generated based on /usr/include/vulkan/vulkan_core.h:19155:16
    primitiveoffset*: uint32
    firstvertex*: uint32
    transformoffset*: uint32

  Accelerationstructurebuildrangeinfokhr* = structvkaccelerationstructurebuildrangeinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19160:3
  structvkaccelerationstructuregeometrytrianglesdatakhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19162:16
    pnext*: pointer
    vertexformat*: Format
    vertexdata*: Deviceorhostaddressconstkhr
    vertexstride*: Devicesize
    maxvertex*: uint32
    indextype*: Indextype
    indexdata*: Deviceorhostaddressconstkhr
    transformdata*: Deviceorhostaddressconstkhr

  Accelerationstructuregeometrytrianglesdatakhr* = structvkaccelerationstructuregeometrytrianglesdatakhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19172:3
  structvkaccelerationstructuregeometryaabbsdatakhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19174:16
    pnext*: pointer
    data*: Deviceorhostaddressconstkhr
    stride*: Devicesize

  Accelerationstructuregeometryaabbsdatakhr* = structvkaccelerationstructuregeometryaabbsdatakhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19179:3
  structvkaccelerationstructuregeometryinstancesdatakhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19181:16
    pnext*: pointer
    arrayofpointers*: Bool32
    data*: Deviceorhostaddressconstkhr

  Accelerationstructuregeometryinstancesdatakhr* = structvkaccelerationstructuregeometryinstancesdatakhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19186:3
  unionvkaccelerationstructuregeometrydatakhr* {.union, bycopy.} = object
    triangles*: Accelerationstructuregeometrytrianglesdatakhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19188:15
    aabbs*: Accelerationstructuregeometryaabbsdatakhr
    instances*: Accelerationstructuregeometryinstancesdatakhr

  Accelerationstructuregeometrydatakhr* = unionvkaccelerationstructuregeometrydatakhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19192:3
  structvkaccelerationstructuregeometrykhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19194:16
    pnext*: pointer
    geometrytype*: Geometrytypekhr
    geometry*: Accelerationstructuregeometrydatakhr
    flags*: Geometryflagskhr

  Accelerationstructuregeometrykhr* = structvkaccelerationstructuregeometrykhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19200:3
  structvkaccelerationstructurebuildgeometryinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19202:16
    pnext*: pointer
    typefield*: Accelerationstructuretypekhr
    flags*: Buildaccelerationstructureflagskhr
    mode*: Buildaccelerationstructuremodekhr
    srcaccelerationstructure*: Accelerationstructurekhr
    dstaccelerationstructure*: Accelerationstructurekhr
    geometrycount*: uint32
    pgeometries*: ptr Accelerationstructuregeometrykhr
    ppgeometries*: ptr ptr Accelerationstructuregeometrykhr
    scratchdata*: Deviceorhostaddresskhr

  Accelerationstructurebuildgeometryinfokhr* = structvkaccelerationstructurebuildgeometryinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19214:3
  structvkaccelerationstructurecreateinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19216:16
    pnext*: pointer
    createflags*: Accelerationstructurecreateflagskhr
    buffer*: Buffer
    offset*: Devicesize
    size*: Devicesize
    typefield*: Accelerationstructuretypekhr
    deviceaddress*: Deviceaddress

  Accelerationstructurecreateinfokhr* = structvkaccelerationstructurecreateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19225:3
  structvkwritedescriptorsetaccelerationstructurekhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19227:16
    pnext*: pointer
    accelerationstructurecount*: uint32
    paccelerationstructures*: ptr Accelerationstructurekhr

  Writedescriptorsetaccelerationstructurekhr* = structvkwritedescriptorsetaccelerationstructurekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19232:3
  structvkphysicaldeviceaccelerationstructurefeatureskhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19234:16
    pnext*: pointer
    accelerationstructure*: Bool32
    accelerationstructurecapturereplay*: Bool32
    accelerationstructureindirectbuild*: Bool32
    accelerationstructurehostcommands*: Bool32
    descriptorbindingaccelerationstructureupdateafterbind*: Bool32

  Physicaldeviceaccelerationstructurefeatureskhr* = structvkphysicaldeviceaccelerationstructurefeatureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19242:3
  structvkphysicaldeviceaccelerationstructurepropertieskhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19244:16
    pnext*: pointer
    maxgeometrycount*: uint64
    maxinstancecount*: uint64
    maxprimitivecount*: uint64
    maxperstagedescriptoraccelerationstructures*: uint32
    maxperstagedescriptorupdateafterbindaccelerationstructures*: uint32
    maxdescriptorsetaccelerationstructures*: uint32
    maxdescriptorsetupdateafterbindaccelerationstructures*: uint32
    minaccelerationstructurescratchoffsetalignment*: uint32

  Physicaldeviceaccelerationstructurepropertieskhr* = structvkphysicaldeviceaccelerationstructurepropertieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19255:3
  structvkaccelerationstructuredeviceaddressinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19257:16
    pnext*: pointer
    accelerationstructure*: Accelerationstructurekhr

  Accelerationstructuredeviceaddressinfokhr* = structvkaccelerationstructuredeviceaddressinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19261:3
  structvkaccelerationstructureversioninfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19263:16
    pnext*: pointer
    pversiondata*: ptr uint8

  Accelerationstructureversioninfokhr* = structvkaccelerationstructureversioninfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19267:3
  structvkcopyaccelerationstructuretomemoryinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19269:16
    pnext*: pointer
    src*: Accelerationstructurekhr
    dst*: Deviceorhostaddresskhr
    mode*: Copyaccelerationstructuremodekhr

  Copyaccelerationstructuretomemoryinfokhr* = structvkcopyaccelerationstructuretomemoryinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19275:3
  structvkcopymemorytoaccelerationstructureinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19277:16
    pnext*: pointer
    src*: Deviceorhostaddressconstkhr
    dst*: Accelerationstructurekhr
    mode*: Copyaccelerationstructuremodekhr

  Copymemorytoaccelerationstructureinfokhr* = structvkcopymemorytoaccelerationstructureinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19283:3
  structvkcopyaccelerationstructureinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19285:16
    pnext*: pointer
    src*: Accelerationstructurekhr
    dst*: Accelerationstructurekhr
    mode*: Copyaccelerationstructuremodekhr

  Copyaccelerationstructureinfokhr* = structvkcopyaccelerationstructureinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19291:3
  structvkaccelerationstructurebuildsizesinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19293:16
    pnext*: pointer
    accelerationstructuresize*: Devicesize
    updatescratchsize*: Devicesize
    buildscratchsize*: Devicesize

  Accelerationstructurebuildsizesinfokhr* = structvkaccelerationstructurebuildsizesinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19299:3
  Pfnvkcreateaccelerationstructurekhr* = proc (a0: Device;
      a1: ptr Accelerationstructurecreateinfokhr; a2: ptr Allocationcallbacks;
      a3: ptr Accelerationstructurekhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:19301:30
  Pfnvkdestroyaccelerationstructurekhr* = proc (a0: Device;
      a1: Accelerationstructurekhr; a2: ptr Allocationcallbacks): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:19302:26
  Pfnvkcmdbuildaccelerationstructureskhr* = proc (a0: Commandbuffer; a1: uint32;
      a2: ptr Accelerationstructurebuildgeometryinfokhr;
      a3: ptr ptr Accelerationstructurebuildrangeinfokhr): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:19303:26
  Pfnvkcmdbuildaccelerationstructuresindirectkhr* = proc (a0: Commandbuffer;
      a1: uint32; a2: ptr Accelerationstructurebuildgeometryinfokhr;
      a3: ptr Deviceaddress; a4: ptr uint32; a5: ptr ptr uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:19304:26
  Pfnvkbuildaccelerationstructureskhr* = proc (a0: Device;
      a1: Deferredoperationkhr; a2: uint32;
      a3: ptr Accelerationstructurebuildgeometryinfokhr;
      a4: ptr ptr Accelerationstructurebuildrangeinfokhr): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:19305:30
  Pfnvkcopyaccelerationstructurekhr* = proc (a0: Device;
      a1: Deferredoperationkhr; a2: ptr Copyaccelerationstructureinfokhr): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:19306:30
  Pfnvkcopyaccelerationstructuretomemorykhr* = proc (a0: Device;
      a1: Deferredoperationkhr; a2: ptr Copyaccelerationstructuretomemoryinfokhr): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:19307:30
  Pfnvkcopymemorytoaccelerationstructurekhr* = proc (a0: Device;
      a1: Deferredoperationkhr; a2: ptr Copymemorytoaccelerationstructureinfokhr): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:19308:30
  Pfnvkwriteaccelerationstructurespropertieskhr* = proc (a0: Device; a1: uint32;
      a2: ptr Accelerationstructurekhr; a3: Querytype; a4: csize_t; a5: pointer;
      a6: csize_t): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:19309:30
  Pfnvkcmdcopyaccelerationstructurekhr* = proc (a0: Commandbuffer;
      a1: ptr Copyaccelerationstructureinfokhr): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:19310:26
  Pfnvkcmdcopyaccelerationstructuretomemorykhr* = proc (a0: Commandbuffer;
      a1: ptr Copyaccelerationstructuretomemoryinfokhr): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:19311:26
  Pfnvkcmdcopymemorytoaccelerationstructurekhr* = proc (a0: Commandbuffer;
      a1: ptr Copymemorytoaccelerationstructureinfokhr): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:19312:26
  Pfnvkgetaccelerationstructuredeviceaddresskhr* = proc (a0: Device;
      a1: ptr Accelerationstructuredeviceaddressinfokhr): Deviceaddress {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:19313:37
  Pfnvkcmdwriteaccelerationstructurespropertieskhr* = proc (a0: Commandbuffer;
      a1: uint32; a2: ptr Accelerationstructurekhr; a3: Querytype;
      a4: Querypool; a5: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:19314:26
  Pfnvkgetdeviceaccelerationstructurecompatibilitykhr* = proc (a0: Device;
      a1: ptr Accelerationstructureversioninfokhr;
      a2: ptr Accelerationstructurecompatibilitykhr): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:19315:26
  Pfnvkgetaccelerationstructurebuildsizeskhr* = proc (a0: Device;
      a1: Accelerationstructurebuildtypekhr;
      a2: ptr Accelerationstructurebuildgeometryinfokhr; a3: ptr uint32;
      a4: ptr Accelerationstructurebuildsizesinfokhr): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:19316:26
  Shadergroupshaderkhr* = enumvkshadergroupshaderkhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19424:3
  structvkraytracingshadergroupcreateinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19425:16
    pnext*: pointer
    typefield*: Raytracingshadergrouptypekhr
    generalshader*: uint32
    closesthitshader*: uint32
    anyhitshader*: uint32
    intersectionshader*: uint32
    pshadergroupcapturereplayhandle*: pointer

  Raytracingshadergroupcreateinfokhr* = structvkraytracingshadergroupcreateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19434:3
  structvkraytracingpipelineinterfacecreateinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19436:16
    pnext*: pointer
    maxpipelineraypayloadsize*: uint32
    maxpipelinerayhitattributesize*: uint32

  Raytracingpipelineinterfacecreateinfokhr* = structvkraytracingpipelineinterfacecreateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19441:3
  structvkraytracingpipelinecreateinfokhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19443:16
    pnext*: pointer
    flags*: Pipelinecreateflags
    stagecount*: uint32
    pstages*: ptr Pipelineshaderstagecreateinfo
    groupcount*: uint32
    pgroups*: ptr Raytracingshadergroupcreateinfokhr
    maxpipelinerayrecursiondepth*: uint32
    plibraryinfo*: ptr Pipelinelibrarycreateinfokhr
    plibraryinterface*: ptr Raytracingpipelineinterfacecreateinfokhr
    pdynamicstate*: ptr Pipelinedynamicstatecreateinfo
    layout*: Pipelinelayout
    basepipelinehandle*: Pipeline
    basepipelineindex*: int32

  Raytracingpipelinecreateinfokhr* = structvkraytracingpipelinecreateinfokhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19458:3
  structvkphysicaldeviceraytracingpipelinefeatureskhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19460:16
    pnext*: pointer
    raytracingpipeline*: Bool32
    raytracingpipelineshadergrouphandlecapturereplay*: Bool32
    raytracingpipelineshadergrouphandlecapturereplaymixed*: Bool32
    raytracingpipelinetraceraysindirect*: Bool32
    raytraversalprimitiveculling*: Bool32

  Physicaldeviceraytracingpipelinefeatureskhr* = structvkphysicaldeviceraytracingpipelinefeatureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19468:3
  structvkphysicaldeviceraytracingpipelinepropertieskhr* {.pure, inheritable,
      bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19470:16
    pnext*: pointer
    shadergrouphandlesize*: uint32
    maxrayrecursiondepth*: uint32
    maxshadergroupstride*: uint32
    shadergroupbasealignment*: uint32
    shadergrouphandlecapturereplaysize*: uint32
    maxraydispatchinvocationcount*: uint32
    shadergrouphandlealignment*: uint32
    maxrayhitattributesize*: uint32

  Physicaldeviceraytracingpipelinepropertieskhr* = structvkphysicaldeviceraytracingpipelinepropertieskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19481:3
  structvkstrideddeviceaddressregionkhr* {.pure, inheritable, bycopy.} = object
    deviceaddress*: Deviceaddress ## Generated based on /usr/include/vulkan/vulkan_core.h:19483:16
    stride*: Devicesize
    size*: Devicesize

  Strideddeviceaddressregionkhr* = structvkstrideddeviceaddressregionkhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19487:3
  structvktraceraysindirectcommandkhr* {.pure, inheritable, bycopy.} = object
    width*: uint32           ## Generated based on /usr/include/vulkan/vulkan_core.h:19489:16
    height*: uint32
    depth*: uint32

  Traceraysindirectcommandkhr* = structvktraceraysindirectcommandkhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19493:3
  Pfnvkcmdtracerayskhr* = proc (a0: Commandbuffer;
                                a1: ptr Strideddeviceaddressregionkhr;
                                a2: ptr Strideddeviceaddressregionkhr;
                                a3: ptr Strideddeviceaddressregionkhr;
                                a4: ptr Strideddeviceaddressregionkhr;
                                a5: uint32; a6: uint32; a7: uint32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:19495:26
  Pfnvkcreateraytracingpipelineskhr* = proc (a0: Device;
      a1: Deferredoperationkhr; a2: Pipelinecache; a3: uint32;
      a4: ptr Raytracingpipelinecreateinfokhr; a5: ptr Allocationcallbacks;
      a6: ptr Pipeline): Result {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:19496:30
  Pfnvkgetraytracingcapturereplayshadergrouphandleskhr* = proc (a0: Device;
      a1: Pipeline; a2: uint32; a3: uint32; a4: csize_t; a5: pointer): Result {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:19497:30
  Pfnvkcmdtraceraysindirectkhr* = proc (a0: Commandbuffer;
                                        a1: ptr Strideddeviceaddressregionkhr;
                                        a2: ptr Strideddeviceaddressregionkhr;
                                        a3: ptr Strideddeviceaddressregionkhr;
                                        a4: ptr Strideddeviceaddressregionkhr;
                                        a5: Deviceaddress): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:19498:26
  Pfnvkgetraytracingshadergroupstacksizekhr* = proc (a0: Device; a1: Pipeline;
      a2: uint32; a3: Shadergroupshaderkhr): Devicesize {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:19499:34
  Pfnvkcmdsetraytracingpipelinestacksizekhr* = proc (a0: Commandbuffer;
      a1: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:19500:26
  structvkphysicaldevicerayqueryfeatureskhr* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19554:16
    pnext*: pointer
    rayquery*: Bool32

  Physicaldevicerayqueryfeatureskhr* = structvkphysicaldevicerayqueryfeatureskhr ## Generated based on /usr/include/vulkan/vulkan_core.h:19558:3
  structvkphysicaldevicemeshshaderfeaturesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19566:16
    pnext*: pointer
    taskshader*: Bool32
    meshshader*: Bool32
    multiviewmeshshader*: Bool32
    primitivefragmentshadingratemeshshader*: Bool32
    meshshaderqueries*: Bool32

  Physicaldevicemeshshaderfeaturesext* = structvkphysicaldevicemeshshaderfeaturesext ## Generated based on /usr/include/vulkan/vulkan_core.h:19574:3
  structvkphysicaldevicemeshshaderpropertiesext* {.pure, inheritable, bycopy.} = object
    stype*: Structuretype    ## Generated based on /usr/include/vulkan/vulkan_core.h:19576:16
    pnext*: pointer
    maxtaskworkgrouptotalcount*: uint32
    maxtaskworkgroupcount*: array[3'i64, uint32]
    maxtaskworkgroupinvocations*: uint32
    maxtaskworkgroupsize*: array[3'i64, uint32]
    maxtaskpayloadsize*: uint32
    maxtasksharedmemorysize*: uint32
    maxtaskpayloadandsharedmemorysize*: uint32
    maxmeshworkgrouptotalcount*: uint32
    maxmeshworkgroupcount*: array[3'i64, uint32]
    maxmeshworkgroupinvocations*: uint32
    maxmeshworkgroupsize*: array[3'i64, uint32]
    maxmeshsharedmemorysize*: uint32
    maxmeshpayloadandsharedmemorysize*: uint32
    maxmeshoutputmemorysize*: uint32
    maxmeshpayloadandoutputmemorysize*: uint32
    maxmeshoutputcomponents*: uint32
    maxmeshoutputvertices*: uint32
    maxmeshoutputprimitives*: uint32
    maxmeshoutputlayers*: uint32
    maxmeshmultiviewviewcount*: uint32
    meshoutputpervertexgranularity*: uint32
    meshoutputperprimitivegranularity*: uint32
    maxpreferredtaskworkgroupinvocations*: uint32
    maxpreferredmeshworkgroupinvocations*: uint32
    preferslocalinvocationvertexoutput*: Bool32
    preferslocalinvocationprimitiveoutput*: Bool32
    preferscompactvertexoutput*: Bool32
    preferscompactprimitiveoutput*: Bool32

  Physicaldevicemeshshaderpropertiesext* = structvkphysicaldevicemeshshaderpropertiesext ## Generated based on /usr/include/vulkan/vulkan_core.h:19607:3
  structvkdrawmeshtasksindirectcommandext* {.pure, inheritable, bycopy.} = object
    groupcountx*: uint32     ## Generated based on /usr/include/vulkan/vulkan_core.h:19609:16
    groupcounty*: uint32
    groupcountz*: uint32

  Drawmeshtasksindirectcommandext* = structvkdrawmeshtasksindirectcommandext ## Generated based on /usr/include/vulkan/vulkan_core.h:19613:3
  Pfnvkcmddrawmeshtasksext* = proc (a0: Commandbuffer; a1: uint32; a2: uint32;
                                    a3: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:19615:26
  Pfnvkcmddrawmeshtasksindirectext* = proc (a0: Commandbuffer; a1: Buffer;
      a2: Devicesize; a3: uint32; a4: uint32): void {.cdecl.} ## Generated based on /usr/include/vulkan/vulkan_core.h:19616:26
  Pfnvkcmddrawmeshtasksindirectcountext* = proc (a0: Commandbuffer; a1: Buffer;
      a2: Devicesize; a3: Buffer; a4: Devicesize; a5: uint32; a6: uint32): void {.
      cdecl.}                ## Generated based on /usr/include/vulkan/vulkan_core.h:19617:26
  structstdvideoh264sequenceparameterset* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideoh264spsflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std.h:254:16
    profileidc*: Stdvideoh264profileidc
    levelidc*: Stdvideoh264levelidc
    chromaformatidc*: Stdvideoh264chromaformatidc
    seqparametersetid*: uint8
    bitdepthlumaminus8*: uint8
    bitdepthchromaminus8*: uint8
    log2maxframenumminus4*: uint8
    picordercnttype*: Stdvideoh264poctype
    offsetfornonrefpic*: int32
    offsetfortoptobottomfield*: int32
    log2maxpicordercntlsbminus4*: uint8
    numrefframesinpicordercntcycle*: uint8
    maxnumrefframes*: uint8
    reserved1*: uint8
    picwidthinmbsminus1*: uint32
    picheightinmapunitsminus1*: uint32
    framecropleftoffset*: uint32
    framecroprightoffset*: uint32
    framecroptopoffset*: uint32
    framecropbottomoffset*: uint32
    reserved2*: uint32
    poffsetforrefframe*: ptr int32
    pscalinglists*: ptr Stdvideoh264scalinglists
    psequenceparametersetvui*: ptr Stdvideoh264sequenceparametersetvui

  structstdvideoh264pictureparameterset* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideoh264ppsflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std.h:293:16
    seqparametersetid*: uint8
    picparametersetid*: uint8
    numrefidxl0defaultactiveminus1*: uint8
    numrefidxl1defaultactiveminus1*: uint8
    weightedbipredidc*: Stdvideoh264weightedbipredidc
    picinitqpminus26*: int8
    picinitqsminus26*: int8
    chromaqpindexoffset*: int8
    secondchromaqpindexoffset*: int8
    pscalinglists*: ptr Stdvideoh264scalinglists

  structstdvideoencodeh264sliceheader* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideoencodeh264sliceheaderflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_encode.h:129:16
    firstmbinslice*: uint32
    slicetype*: Stdvideoh264slicetype
    slicealphac0offsetdiv2*: int8
    slicebetaoffsetdiv2*: int8
    sliceqpdelta*: int8
    reserved1*: uint8
    cabacinitidc*: Stdvideoh264cabacinitidc
    disabledeblockingfilteridc*: Stdvideoh264disabledeblockingfilteridc
    pweighttable*: ptr Stdvideoencodeh264weighttable

  structstdvideoencodeh264pictureinfo* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideoencodeh264pictureinfoflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_encode.h:106:16
    seqparametersetid*: uint8
    picparametersetid*: uint8
    idrpicid*: uint16
    primarypictype*: Stdvideoh264picturetype
    framenum*: uint32
    Picordercnt*: int32
    temporalid*: uint8
    reserved1*: array[3'i64, uint8]
    preflists*: ptr Stdvideoencodeh264referencelistsinfo

  structstdvideoencodeh264referenceinfo* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideoencodeh264referenceinfoflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_encode.h:119:16
    primarypictype*: Stdvideoh264picturetype
    Framenum*: uint32
    Picordercnt*: int32
    longtermpicnum*: uint16
    longtermframeidx*: uint16
    temporalid*: uint8

  structstdvideoh265videoparameterset* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideoh265vpsflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:188:16
    vpsvideoparametersetid*: uint8
    vpsmaxsublayersminus1*: uint8
    reserved1*: uint8
    reserved2*: uint8
    vpsnumunitsintick*: uint32
    vpstimescale*: uint32
    vpsnumtickspocdiffoneminus1*: uint32
    reserved3*: uint32
    pdecpicbufmgr*: ptr Stdvideoh265decpicbufmgr
    phrdparameters*: ptr Stdvideoh265hrdparameters
    pprofiletierlevel*: ptr Stdvideoh265profiletierlevel

  structstdvideoh265sequenceparameterset* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideoh265spsflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:326:16
    chromaformatidc*: Stdvideoh265chromaformatidc
    picwidthinlumasamples*: uint32
    picheightinlumasamples*: uint32
    spsvideoparametersetid*: uint8
    spsmaxsublayersminus1*: uint8
    spsseqparametersetid*: uint8
    bitdepthlumaminus8*: uint8
    bitdepthchromaminus8*: uint8
    log2maxpicordercntlsbminus4*: uint8
    log2minlumacodingblocksizeminus3*: uint8
    log2diffmaxminlumacodingblocksize*: uint8
    log2minlumatransformblocksizeminus2*: uint8
    log2diffmaxminlumatransformblocksize*: uint8
    maxtransformhierarchydepthinter*: uint8
    maxtransformhierarchydepthintra*: uint8
    numshorttermrefpicsets*: uint8
    numlongtermrefpicssps*: uint8
    pcmsamplebitdepthlumaminus1*: uint8
    pcmsamplebitdepthchromaminus1*: uint8
    log2minpcmlumacodingblocksizeminus3*: uint8
    log2diffmaxminpcmlumacodingblocksize*: uint8
    reserved1*: uint8
    reserved2*: uint8
    palettemaxsize*: uint8
    deltapalettemaxpredictorsize*: uint8
    motionvectorresolutioncontrolidc*: uint8
    spsnumpalettepredictorinitializersminus1*: uint8
    confwinleftoffset*: uint32
    confwinrightoffset*: uint32
    confwintopoffset*: uint32
    confwinbottomoffset*: uint32
    pprofiletierlevel*: ptr Stdvideoh265profiletierlevel
    pdecpicbufmgr*: ptr Stdvideoh265decpicbufmgr
    pscalinglists*: ptr Stdvideoh265scalinglists
    pshorttermrefpicset*: ptr Stdvideoh265shorttermrefpicset
    plongtermrefpicssps*: ptr Stdvideoh265longtermrefpicssps
    psequenceparametersetvui*: ptr Stdvideoh265sequenceparametersetvui
    ppredictorpaletteentries*: ptr Stdvideoh265predictorpaletteentries

  structstdvideoh265pictureparameterset* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideoh265ppsflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:402:16
    ppspicparametersetid*: uint8
    ppsseqparametersetid*: uint8
    spsvideoparametersetid*: uint8
    numextrasliceheaderbits*: uint8
    numrefidxl0defaultactiveminus1*: uint8
    numrefidxl1defaultactiveminus1*: uint8
    initqpminus26*: int8
    diffcuqpdeltadepth*: uint8
    ppscbqpoffset*: int8
    ppscrqpoffset*: int8
    ppsbetaoffsetdiv2*: int8
    ppstcoffsetdiv2*: int8
    log2parallelmergelevelminus2*: uint8
    log2maxtransformskipblocksizeminus2*: uint8
    diffcuchromaqpoffsetdepth*: uint8
    chromaqpoffsetlistlenminus1*: uint8
    cbqpoffsetlist*: array[6'i64, int8]
    crqpoffsetlist*: array[6'i64, int8]
    log2saooffsetscaleluma*: uint8
    log2saooffsetscalechroma*: uint8
    ppsactyqpoffsetplus5*: int8
    ppsactcbqpoffsetplus5*: int8
    ppsactcrqpoffsetplus3*: int8
    ppsnumpalettepredictorinitializers*: uint8
    lumabitdepthentryminus8*: uint8
    chromabitdepthentryminus8*: uint8
    numtilecolumnsminus1*: uint8
    numtilerowsminus1*: uint8
    reserved1*: uint8
    reserved2*: uint8
    columnwidthminus1*: array[19'i64, uint16]
    rowheightminus1*: array[21'i64, uint16]
    reserved3*: uint32
    pscalinglists*: ptr Stdvideoh265scalinglists
    ppredictorpaletteentries*: ptr Stdvideoh265predictorpaletteentries

  structstdvideoencodeh265slicesegmentheader* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideoencodeh265slicesegmentheaderflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_encode.h:67:16
    slicetype*: Stdvideoh265slicetype
    slicesegmentaddress*: uint32
    collocatedrefidx*: uint8
    Maxnummergecand*: uint8
    slicecbqpoffset*: int8
    slicecrqpoffset*: int8
    slicebetaoffsetdiv2*: int8
    slicetcoffsetdiv2*: int8
    sliceactyqpoffset*: int8
    sliceactcbqpoffset*: int8
    sliceactcrqpoffset*: int8
    sliceqpdelta*: int8
    reserved1*: uint16
    pweighttable*: ptr Stdvideoencodeh265weighttable

  structstdvideoencodeh265pictureinfo* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideoencodeh265pictureinfoflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_encode.h:124:16
    pictype*: Stdvideoh265picturetype
    spsvideoparametersetid*: uint8
    ppsseqparametersetid*: uint8
    ppspicparametersetid*: uint8
    shorttermrefpicsetidx*: uint8
    Picordercntval*: int32
    Temporalid*: uint8
    reserved1*: array[7'i64, uint8]
    preflists*: ptr Stdvideoencodeh265referencelistsinfo
    pshorttermrefpicset*: ptr Stdvideoh265shorttermrefpicset
    plongtermrefpics*: ptr Stdvideoencodeh265longtermrefpics

  structstdvideoencodeh265referenceinfo* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideoencodeh265referenceinfoflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_encode.h:145:16
    pictype*: Stdvideoh265picturetype
    Picordercntval*: int32
    Temporalid*: uint8

  structstdvideodecodeh264pictureinfo* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideodecodeh264pictureinfoflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_decode.h:47:16
    seqparametersetid*: uint8
    picparametersetid*: uint8
    reserved1*: uint8
    reserved2*: uint8
    framenum*: uint16
    idrpicid*: uint16
    Picordercnt*: array[2'i64, int32]

  structstdvideodecodeh264referenceinfo* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideodecodeh264referenceinfoflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_decode.h:65:16
    Framenum*: uint16
    reserved*: uint16
    Picordercnt*: array[2'i64, int32]

  structstdvideodecodeh265pictureinfo* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideodecodeh265pictureinfoflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_decode.h:38:16
    spsvideoparametersetid*: uint8
    ppsseqparametersetid*: uint8
    ppspicparametersetid*: uint8
    Numdeltapocsofrefrpsidx*: uint8
    Picordercntval*: int32
    Numbitsforstrefpicsetinslice*: uint16
    reserved*: uint16
    Refpicsetstcurrbefore*: array[8'i64, uint8]
    Refpicsetstcurrafter*: array[8'i64, uint8]
    Refpicsetltcurr*: array[8'i64, uint8]

  structstdvideodecodeh265referenceinfo* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideodecodeh265referenceinfoflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_decode.h:57:16
    Picordercntval*: int32

  structstdvideoav1sequenceheader* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideoav1sequenceheaderflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:370:16
    seqprofile*: Stdvideoav1profile
    framewidthbitsminus1*: uint8
    frameheightbitsminus1*: uint8
    maxframewidthminus1*: uint16
    maxframeheightminus1*: uint16
    deltaframeidlengthminus2*: uint8
    additionalframeidlengthminus1*: uint8
    orderhintbitsminus1*: uint8
    seqforceintegermv*: uint8
    seqforcescreencontenttools*: uint8
    reserved1*: array[5'i64, uint8]
    pcolorconfig*: ptr Stdvideoav1colorconfig
    ptiminginfo*: ptr Stdvideoav1timinginfo

  structstdvideodecodeav1pictureinfo* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideodecodeav1pictureinfoflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std_decode.h:63:16
    frametype*: Stdvideoav1frametype
    currentframeid*: uint32
    Orderhint*: uint8
    primaryrefframe*: uint8
    refreshframeflags*: uint8
    reserved1*: uint8
    interpolationfilter*: Stdvideoav1interpolationfilter
    Txmode*: Stdvideoav1txmode
    deltaqres*: uint8
    deltalfres*: uint8
    Skipmodeframe*: array[2'i64, uint8]
    codeddenom*: uint8
    reserved2*: array[3'i64, uint8]
    Orderhints*: array[8'i64, uint8]
    expectedframeid*: array[8'i64, uint32]
    ptileinfo*: ptr Stdvideoav1tileinfo
    pquantization*: ptr Stdvideoav1quantization
    psegmentation*: ptr Stdvideoav1segmentation
    ploopfilter*: ptr Stdvideoav1loopfilter
    pcdef*: ptr Stdvideoav1cdef
    plooprestoration*: ptr Stdvideoav1looprestoration
    pglobalmotion*: ptr Stdvideoav1globalmotion
    pfilmgrain*: ptr Stdvideoav1filmgrain

  structstdvideodecodeav1referenceinfo* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideodecodeav1referenceinfoflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std_decode.h:96:16
    frametype*: uint8
    Refframesignbias*: uint8
    Orderhint*: uint8
    Savedorderhints*: array[8'i64, uint8]

  Stdvideoh264spsflags* = structstdvideoh264spsflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std.h:245:3
  Stdvideoh264chromaformatidc* = enumstdvideoh264chromaformatidc ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std.h:41:3
  Stdvideoh264poctype* = enumstdvideoh264poctype ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std.h:82:3
  Stdvideoh264scalinglists* = structstdvideoh264scalinglists ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std.h:252:3
  Stdvideoh264sequenceparametersetvui* = structstdvideoh264sequenceparametersetvui ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std.h:226:3
  Stdvideoh264ppsflags* = structstdvideoh264ppsflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std.h:291:3
  Stdvideoh264weightedbipredidc* = enumstdvideoh264weightedbipredidc ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std.h:113:3
  Stdvideoencodeh264sliceheaderflags* = structstdvideoencodeh264sliceheaderflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_encode.h:55:3
  Stdvideoh264slicetype* = enumstdvideoh264slicetype ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std.h:158:3
  Stdvideoh264cabacinitidc* = enumstdvideoh264cabacinitidc ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std.h:142:3
  Stdvideoh264disabledeblockingfilteridc* = enumstdvideoh264disabledeblockingfilteridc ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std.h:150:3
  Stdvideoencodeh264weighttable* = structstdvideoencodeh264weighttable ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_encode.h:49:3
  Stdvideoencodeh264pictureinfoflags* = structstdvideoencodeh264pictureinfoflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_encode.h:64:3
  Stdvideoh264picturetype* = enumstdvideoh264picturetype ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std.h:167:3
  Stdvideoencodeh264referencelistsinfo* = structstdvideoencodeh264referencelistsinfo ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_encode.h:104:3
  Stdvideoencodeh264referenceinfoflags* = structstdvideoencodeh264referenceinfoflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_encode.h:69:3
  Stdvideoh265vpsflags* = structstdvideoh265vpsflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:172:3
  Stdvideoh265decpicbufmgr* = structstdvideoh265decpicbufmgr ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:129:3
  Stdvideoh265hrdparameters* = structstdvideoh265hrdparameters ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:165:3
  Stdvideoh265profiletierlevel* = structstdvideoh265profiletierlevel ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:186:3
  Stdvideoh265spsflags* = structstdvideoh265spsflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:297:3
  Stdvideoh265chromaformatidc* = enumstdvideoh265chromaformatidc ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:56:3
  Stdvideoh265scalinglists* = structstdvideoh265scalinglists ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:210:3
  Stdvideoh265shorttermrefpicset* = structstdvideoh265shorttermrefpicset ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:319:3
  Stdvideoh265longtermrefpicssps* = structstdvideoh265longtermrefpicssps ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:324:3
  Stdvideoh265sequenceparametersetvui* = structstdvideoh265sequenceparametersetvui ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:260:3
  Stdvideoh265predictorpaletteentries* = structstdvideoh265predictorpaletteentries ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:264:3
  Stdvideoh265ppsflags* = structstdvideoh265ppsflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:400:3
  Stdvideoencodeh265slicesegmentheaderflags* = structstdvideoencodeh265slicesegmentheaderflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_encode.h:65:3
  Stdvideoh265slicetype* = enumstdvideoh265slicetype ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:92:3
  Stdvideoencodeh265weighttable* = structstdvideoencodeh265weighttable ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_encode.h:49:3
  Stdvideoencodeh265pictureinfoflags* = structstdvideoencodeh265pictureinfoflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_encode.h:112:3
  Stdvideoh265picturetype* = enumstdvideoh265picturetype ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:101:3
  Stdvideoencodeh265referencelistsinfo* = structstdvideoencodeh265referencelistsinfo ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_encode.h:99:3
  Stdvideoencodeh265longtermrefpics* = structstdvideoencodeh265longtermrefpics ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_encode.h:122:3
  Stdvideoencodeh265referenceinfoflags* = structstdvideoencodeh265referenceinfoflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_encode.h:143:3
  Stdvideodecodeh264pictureinfoflags* = structstdvideodecodeh264pictureinfoflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_decode.h:45:3
  Stdvideodecodeh264referenceinfoflags* = structstdvideodecodeh264referenceinfoflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_decode.h:63:3
  Stdvideodecodeh265pictureinfoflags* = structstdvideodecodeh265pictureinfoflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_decode.h:36:3
  Stdvideodecodeh265referenceinfoflags* = structstdvideodecodeh265referenceinfoflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_decode.h:55:3
  Stdvideoav1sequenceheaderflags* = structstdvideoav1sequenceheaderflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:368:3
  Stdvideoav1colorconfig* = structstdvideoav1colorconfig ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:220:3
  Stdvideoav1timinginfo* = structstdvideoav1timinginfo ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:232:3
  Stdvideodecodeav1pictureinfoflags* = structstdvideodecodeav1pictureinfoflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std_decode.h:61:3
  Stdvideoav1frametype* = enumstdvideoav1frametype ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:91:3
  Stdvideoav1interpolationfilter* = enumstdvideoav1interpolationfilter ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:114:3
  Stdvideoav1txmode* = enumstdvideoav1txmode ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:122:3
  Stdvideoav1tileinfo* = structstdvideoav1tileinfo ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:290:3
  Stdvideoav1quantization* = structstdvideoav1quantization ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:267:3
  Stdvideoav1segmentation* = structstdvideoav1segmentation ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:272:3
  Stdvideoav1loopfilter* = structstdvideoav1loopfilter ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:248:3
  Stdvideoav1cdef* = structstdvideoav1cdef ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:299:3
  Stdvideoav1looprestoration* = structstdvideoav1looprestoration ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:304:3
  Stdvideoav1globalmotion* = structstdvideoav1globalmotion ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:309:3
  Stdvideoav1filmgrain* = structstdvideoav1filmgrain ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:345:3
  Stdvideodecodeav1referenceinfoflags* = structstdvideodecodeav1referenceinfoflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std_decode.h:94:3
  structstdvideoh264spsflags* {.pure, inheritable, bycopy.} = object
    constraintset0flag*: uint32 ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std.h:228:16
    constraintset1flag*: uint32
    constraintset2flag*: uint32
    constraintset3flag*: uint32
    constraintset4flag*: uint32
    constraintset5flag*: uint32
    direct8x8inferenceflag*: uint32
    mbadaptiveframefieldflag*: uint32
    framembsonlyflag*: uint32
    deltapicorderalwayszeroflag*: uint32
    separatecolourplaneflag*: uint32
    gapsinframenumvalueallowedflag*: uint32
    qpprimeyzerotransformbypassflag*: uint32
    framecroppingflag*: uint32
    seqscalingmatrixpresentflag*: uint32
    vuiparameterspresentflag*: uint32

  structstdvideoh264scalinglists* {.pure, inheritable, bycopy.} = object
    scalinglistpresentmask*: uint16 ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std.h:247:16
    usedefaultscalingmatrixmask*: uint16
    Scalinglist4x4*: array[6'i64, array[16'i64, uint8]]
    Scalinglist8x8*: array[6'i64, array[64'i64, uint8]]

  structstdvideoh264sequenceparametersetvui* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideoh264spsvuiflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std.h:209:16
    aspectratioidc*: Stdvideoh264aspectratioidc
    sarwidth*: uint16
    sarheight*: uint16
    videoformat*: uint8
    colourprimaries*: uint8
    transfercharacteristics*: uint8
    matrixcoefficients*: uint8
    numunitsintick*: uint32
    timescale*: uint32
    maxnumreorderframes*: uint8
    maxdecframebuffering*: uint8
    chromasampleloctypetopfield*: uint8
    chromasampleloctypebottomfield*: uint8
    reserved1*: uint32
    phrdparameters*: ptr Stdvideoh264hrdparameters

  structstdvideoh264ppsflags* {.pure, inheritable, bycopy.} = object
    transform8x8modeflag*: uint32 ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std.h:282:16
    redundantpiccntpresentflag*: uint32
    constrainedintrapredflag*: uint32
    deblockingfiltercontrolpresentflag*: uint32
    weightedpredflag*: uint32
    bottomfieldpicorderinframepresentflag*: uint32
    entropycodingmodeflag*: uint32
    picscalingmatrixpresentflag*: uint32

  structstdvideoencodeh264sliceheaderflags* {.pure, inheritable, bycopy.} = object
    directspatialmvpredflag*: uint32 ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_encode.h:51:16
    numrefidxactiveoverrideflag*: uint32
    reserved*: uint32

  structstdvideoencodeh264weighttable* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideoencodeh264weighttableflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_encode.h:37:16
    lumalog2weightdenom*: uint8
    chromalog2weightdenom*: uint8
    lumaweightl0*: array[32'i64, int8]
    lumaoffsetl0*: array[32'i64, int8]
    chromaweightl0*: array[32'i64, array[2'i64, int8]]
    chromaoffsetl0*: array[32'i64, array[2'i64, int8]]
    lumaweightl1*: array[32'i64, int8]
    lumaoffsetl1*: array[32'i64, int8]
    chromaweightl1*: array[32'i64, array[2'i64, int8]]
    chromaoffsetl1*: array[32'i64, array[2'i64, int8]]

  structstdvideoencodeh264pictureinfoflags* {.pure, inheritable, bycopy.} = object
    Idrpicflag*: uint32      ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_encode.h:57:16
    isreference*: uint32
    nooutputofpriorpicsflag*: uint32
    longtermreferenceflag*: uint32
    adaptiverefpicmarkingmodeflag*: uint32
    reserved*: uint32

  structstdvideoencodeh264referencelistsinfo* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideoencodeh264referencelistsinfoflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_encode.h:91:16
    numrefidxl0activeminus1*: uint8
    numrefidxl1activeminus1*: uint8
    Refpiclist0*: array[32'i64, uint8]
    Refpiclist1*: array[32'i64, uint8]
    reflist0modopcount*: uint8
    reflist1modopcount*: uint8
    refpicmarkingopcount*: uint8
    reserved1*: array[7'i64, uint8]
    preflist0modoperations*: ptr Stdvideoencodeh264reflistmodentry
    preflist1modoperations*: ptr Stdvideoencodeh264reflistmodentry
    prefpicmarkingoperations*: ptr Stdvideoencodeh264refpicmarkingentry

  structstdvideoencodeh264referenceinfoflags* {.pure, inheritable, bycopy.} = object
    usedforlongtermreference*: uint32 ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_encode.h:66:16
    reserved*: uint32

  structstdvideoh265vpsflags* {.pure, inheritable, bycopy.} = object
    vpstemporalidnestingflag*: uint32 ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:167:16
    vpssublayerorderinginfopresentflag*: uint32
    vpstiminginfopresentflag*: uint32
    vpspocproportionaltotimingflag*: uint32

  structstdvideoh265decpicbufmgr* {.pure, inheritable, bycopy.} = object
    maxlatencyincreaseplus1*: array[7'i64, uint32] ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:125:16
    maxdecpicbufferingminus1*: array[7'i64, uint8]
    maxnumreorderpics*: array[7'i64, uint8]

  structstdvideoh265hrdparameters* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideoh265hrdflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:149:16
    tickdivisorminus2*: uint8
    ducpbremovaldelayincrementlengthminus1*: uint8
    dpboutputdelaydulengthminus1*: uint8
    bitratescale*: uint8
    cpbsizescale*: uint8
    cpbsizeduscale*: uint8
    initialcpbremovaldelaylengthminus1*: uint8
    aucpbremovaldelaylengthminus1*: uint8
    dpboutputdelaylengthminus1*: uint8
    cpbcntminus1*: array[7'i64, uint8]
    elementaldurationintcminus1*: array[7'i64, uint16]
    reserved*: array[3'i64, uint16]
    psublayerhrdparametersnal*: ptr Stdvideoh265sublayerhrdparameters
    psublayerhrdparametersvcl*: ptr Stdvideoh265sublayerhrdparameters

  structstdvideoh265profiletierlevel* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideoh265profiletierlevelflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:182:16
    generalprofileidc*: Stdvideoh265profileidc
    generallevelidc*: Stdvideoh265levelidc

  structstdvideoh265spsflags* {.pure, inheritable, bycopy.} = object
    spstemporalidnestingflag*: uint32 ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:266:16
    separatecolourplaneflag*: uint32
    conformancewindowflag*: uint32
    spssublayerorderinginfopresentflag*: uint32
    scalinglistenabledflag*: uint32
    spsscalinglistdatapresentflag*: uint32
    ampenabledflag*: uint32
    sampleadaptiveoffsetenabledflag*: uint32
    pcmenabledflag*: uint32
    pcmloopfilterdisabledflag*: uint32
    longtermrefpicspresentflag*: uint32
    spstemporalmvpenabledflag*: uint32
    strongintrasmoothingenabledflag*: uint32
    vuiparameterspresentflag*: uint32
    spsextensionpresentflag*: uint32
    spsrangeextensionflag*: uint32
    transformskiprotationenabledflag*: uint32
    transformskipcontextenabledflag*: uint32
    implicitrdpcmenabledflag*: uint32
    explicitrdpcmenabledflag*: uint32
    extendedprecisionprocessingflag*: uint32
    intrasmoothingdisabledflag*: uint32
    highprecisionoffsetsenabledflag*: uint32
    persistentriceadaptationenabledflag*: uint32
    cabacbypassalignmentenabledflag*: uint32
    spssccextensionflag*: uint32
    spscurrpicrefenabledflag*: uint32
    palettemodeenabledflag*: uint32
    spspalettepredictorinitializerspresentflag*: uint32
    intraboundaryfilteringdisabledflag*: uint32

  structstdvideoh265scalinglists* {.pure, inheritable, bycopy.} = object
    Scalinglist4x4*: array[6'i64, array[16'i64, uint8]] ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:203:16
    Scalinglist8x8*: array[6'i64, array[64'i64, uint8]]
    Scalinglist16x16*: array[6'i64, array[64'i64, uint8]]
    Scalinglist32x32*: array[2'i64, array[64'i64, uint8]]
    Scalinglistdccoef16x16*: array[6'i64, uint8]
    Scalinglistdccoef32x32*: array[2'i64, uint8]

  structstdvideoh265shorttermrefpicset* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideoh265shorttermrefpicsetflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:304:16
    deltaidxminus1*: uint32
    usedeltaflag*: uint16
    absdeltarpsminus1*: uint16
    usedbycurrpicflag*: uint16
    usedbycurrpics0flag*: uint16
    usedbycurrpics1flag*: uint16
    reserved1*: uint16
    reserved2*: uint8
    reserved3*: uint8
    numnegativepics*: uint8
    numpositivepics*: uint8
    deltapocs0minus1*: array[16'i64, uint16]
    deltapocs1minus1*: array[16'i64, uint16]

  structstdvideoh265longtermrefpicssps* {.pure, inheritable, bycopy.} = object
    usedbycurrpicltspsflag*: uint32 ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:321:16
    ltrefpicpoclsbsps*: array[32'i64, uint32]

  structstdvideoh265sequenceparametersetvui* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideoh265spsvuiflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:233:16
    aspectratioidc*: Stdvideoh265aspectratioidc
    sarwidth*: uint16
    sarheight*: uint16
    videoformat*: uint8
    colourprimaries*: uint8
    transfercharacteristics*: uint8
    matrixcoeffs*: uint8
    chromasampleloctypetopfield*: uint8
    chromasampleloctypebottomfield*: uint8
    reserved1*: uint8
    reserved2*: uint8
    defdispwinleftoffset*: uint16
    defdispwinrightoffset*: uint16
    defdispwintopoffset*: uint16
    defdispwinbottomoffset*: uint16
    vuinumunitsintick*: uint32
    vuitimescale*: uint32
    vuinumtickspocdiffoneminus1*: uint32
    minspatialsegmentationidc*: uint16
    reserved3*: uint16
    maxbytesperpicdenom*: uint8
    maxbitspermincudenom*: uint8
    log2maxmvlengthhorizontal*: uint8
    log2maxmvlengthvertical*: uint8
    phrdparameters*: ptr Stdvideoh265hrdparameters

  structstdvideoh265predictorpaletteentries* {.pure, inheritable, bycopy.} = object
    Predictorpaletteentries*: array[3'i64, array[128'i64, uint16]] ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:262:16
  
  structstdvideoh265ppsflags* {.pure, inheritable, bycopy.} = object
    dependentslicesegmentsenabledflag*: uint32 ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:368:16
    outputflagpresentflag*: uint32
    signdatahidingenabledflag*: uint32
    cabacinitpresentflag*: uint32
    constrainedintrapredflag*: uint32
    transformskipenabledflag*: uint32
    cuqpdeltaenabledflag*: uint32
    ppsslicechromaqpoffsetspresentflag*: uint32
    weightedpredflag*: uint32
    weightedbipredflag*: uint32
    transquantbypassenabledflag*: uint32
    tilesenabledflag*: uint32
    entropycodingsyncenabledflag*: uint32
    uniformspacingflag*: uint32
    loopfilteracrosstilesenabledflag*: uint32
    ppsloopfilteracrossslicesenabledflag*: uint32
    deblockingfiltercontrolpresentflag*: uint32
    deblockingfilteroverrideenabledflag*: uint32
    ppsdeblockingfilterdisabledflag*: uint32
    ppsscalinglistdatapresentflag*: uint32
    listsmodificationpresentflag*: uint32
    slicesegmentheaderextensionpresentflag*: uint32
    ppsextensionpresentflag*: uint32
    crosscomponentpredictionenabledflag*: uint32
    chromaqpoffsetlistenabledflag*: uint32
    ppscurrpicrefenabledflag*: uint32
    residualadaptivecolourtransformenabledflag*: uint32
    ppssliceactqpoffsetspresentflag*: uint32
    ppspalettepredictorinitializerspresentflag*: uint32
    monochromepaletteflag*: uint32
    ppsrangeextensionflag*: uint32

  structstdvideoencodeh265slicesegmentheaderflags* {.pure, inheritable, bycopy.} = object
    firstslicesegmentinpicflag*: uint32 ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_encode.h:51:16
    dependentslicesegmentflag*: uint32
    slicesaolumaflag*: uint32
    slicesaochromaflag*: uint32
    numrefidxactiveoverrideflag*: uint32
    mvdl1zeroflag*: uint32
    cabacinitflag*: uint32
    cuchromaqpoffsetenabledflag*: uint32
    deblockingfilteroverrideflag*: uint32
    slicedeblockingfilterdisabledflag*: uint32
    collocatedfroml0flag*: uint32
    sliceloopfilteracrossslicesenabledflag*: uint32
    reserved*: uint32

  structstdvideoencodeh265weighttable* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideoencodeh265weighttableflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_encode.h:37:16
    lumalog2weightdenom*: uint8
    deltachromalog2weightdenom*: int8
    deltalumaweightl0*: array[15'i64, int8]
    lumaoffsetl0*: array[15'i64, int8]
    deltachromaweightl0*: array[15'i64, array[2'i64, int8]]
    deltachromaoffsetl0*: array[15'i64, array[2'i64, int8]]
    deltalumaweightl1*: array[15'i64, int8]
    lumaoffsetl1*: array[15'i64, int8]
    deltachromaweightl1*: array[15'i64, array[2'i64, int8]]
    deltachromaoffsetl1*: array[15'i64, array[2'i64, int8]]

  structstdvideoencodeh265pictureinfoflags* {.pure, inheritable, bycopy.} = object
    isreference*: uint32     ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_encode.h:101:16
    Irappicflag*: uint32
    usedforlongtermreference*: uint32
    discardableflag*: uint32
    crosslayerblaflag*: uint32
    picoutputflag*: uint32
    nooutputofpriorpicsflag*: uint32
    shorttermrefpicsetspsflag*: uint32
    slicetemporalmvpenabledflag*: uint32
    reserved*: uint32

  structstdvideoencodeh265referencelistsinfo* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideoencodeh265referencelistsinfoflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_encode.h:91:16
    numrefidxl0activeminus1*: uint8
    numrefidxl1activeminus1*: uint8
    Refpiclist0*: array[15'i64, uint8]
    Refpiclist1*: array[15'i64, uint8]
    listentryl0*: array[15'i64, uint8]
    listentryl1*: array[15'i64, uint8]

  structstdvideoencodeh265longtermrefpics* {.pure, inheritable, bycopy.} = object
    numlongtermsps*: uint8   ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_encode.h:114:16
    numlongtermpics*: uint8
    ltidxsps*: array[32'i64, uint8]
    poclsblt*: array[16'i64, uint8]
    usedbycurrpicltflag*: uint16
    deltapocmsbpresentflag*: array[48'i64, uint8]
    deltapocmsbcyclelt*: array[48'i64, uint8]

  structstdvideoencodeh265referenceinfoflags* {.pure, inheritable, bycopy.} = object
    usedforlongtermreference*: uint32 ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_encode.h:139:16
    unusedforreference*: uint32
    reserved*: uint32

  structstdvideodecodeh264pictureinfoflags* {.pure, inheritable, bycopy.} = object
    fieldpicflag*: uint32    ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_decode.h:38:16
    isintra*: uint32
    Idrpicflag*: uint32
    bottomfieldflag*: uint32
    isreference*: uint32
    complementaryfieldpair*: uint32

  structstdvideodecodeh264referenceinfoflags* {.pure, inheritable, bycopy.} = object
    topfieldflag*: uint32    ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_decode.h:58:16
    bottomfieldflag*: uint32
    usedforlongtermreference*: uint32
    isnonexisting*: uint32

  structstdvideodecodeh265pictureinfoflags* {.pure, inheritable, bycopy.} = object
    Irappicflag*: uint32     ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_decode.h:31:16
    Idrpicflag*: uint32
    Isreference*: uint32
    shorttermrefpicsetspsflag*: uint32

  structstdvideodecodeh265referenceinfoflags* {.pure, inheritable, bycopy.} = object
    usedforlongtermreference*: uint32 ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_decode.h:52:16
    unusedforreference*: uint32

  structstdvideoav1sequenceheaderflags* {.pure, inheritable, bycopy.} = object
    stillpicture*: uint32    ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:347:16
    reducedstillpictureheader*: uint32
    use128x128superblock*: uint32
    enablefilterintra*: uint32
    enableintraedgefilter*: uint32
    enableinterintracompound*: uint32
    enablemaskedcompound*: uint32
    enablewarpedmotion*: uint32
    enabledualfilter*: uint32
    enableorderhint*: uint32
    enablejntcomp*: uint32
    enablerefframemvs*: uint32
    frameidnumberspresentflag*: uint32
    enablesuperres*: uint32
    enablecdef*: uint32
    enablerestoration*: uint32
    filmgrainparamspresent*: uint32
    timinginfopresentflag*: uint32
    initialdisplaydelaypresentflag*: uint32
    reserved*: uint32

  structstdvideoav1colorconfig* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideoav1colorconfigflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:210:16
    Bitdepth*: uint8
    subsamplingx*: uint8
    subsamplingy*: uint8
    reserved1*: uint8
    colorprimaries*: Stdvideoav1colorprimaries
    transfercharacteristics*: Stdvideoav1transfercharacteristics
    matrixcoefficients*: Stdvideoav1matrixcoefficients
    chromasampleposition*: Stdvideoav1chromasampleposition

  structstdvideoav1timinginfo* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideoav1timinginfoflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:227:16
    numunitsindisplaytick*: uint32
    timescale*: uint32
    numticksperpictureminus1*: uint32

  structstdvideodecodeav1pictureinfoflags* {.pure, inheritable, bycopy.} = object
    errorresilientmode*: uint32 ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std_decode.h:30:16
    disablecdfupdate*: uint32
    usesuperres*: uint32
    renderandframesizedifferent*: uint32
    allowscreencontenttools*: uint32
    isfilterswitchable*: uint32
    forceintegermv*: uint32
    framesizeoverrideflag*: uint32
    bufferremovaltimepresentflag*: uint32
    allowintrabc*: uint32
    framerefsshortsignaling*: uint32
    allowhighprecisionmv*: uint32
    ismotionmodeswitchable*: uint32
    userefframemvs*: uint32
    disableframeendupdatecdf*: uint32
    allowwarpedmotion*: uint32
    reducedtxset*: uint32
    referenceselect*: uint32
    skipmodepresent*: uint32
    deltaqpresent*: uint32
    deltalfpresent*: uint32
    deltalfmulti*: uint32
    segmentationenabled*: uint32
    segmentationupdatemap*: uint32
    segmentationtemporalupdate*: uint32
    segmentationupdatedata*: uint32
    Useslr*: uint32
    useschromalr*: uint32
    applygrain*: uint32
    reserved*: uint32

  structstdvideoav1tileinfo* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideoav1tileinfoflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:279:16
    Tilecols*: uint8
    Tilerows*: uint8
    contextupdatetileid*: uint16
    tilesizebytesminus1*: uint8
    reserved1*: array[7'i64, uint8]
    pmicolstarts*: ptr uint16
    pmirowstarts*: ptr uint16
    pwidthinsbsminus1*: ptr uint16
    pheightinsbsminus1*: ptr uint16

  structstdvideoav1quantization* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideoav1quantizationflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:256:16
    baseqidx*: uint8
    Deltaqydc*: int8
    Deltaqudc*: int8
    Deltaquac*: int8
    Deltaqvdc*: int8
    Deltaqvac*: int8
    qmy*: uint8
    qmu*: uint8
    qmv*: uint8

  structstdvideoav1segmentation* {.pure, inheritable, bycopy.} = object
    Featureenabled*: array[8'i64, uint8] ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:269:16
    Featuredata*: array[8'i64, array[8'i64, int16]]

  structstdvideoav1loopfilter* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideoav1loopfilterflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:240:16
    loopfilterlevel*: array[4'i64, uint8]
    loopfiltersharpness*: uint8
    updaterefdelta*: uint8
    loopfilterrefdeltas*: array[8'i64, int8]
    updatemodedelta*: uint8
    loopfiltermodedeltas*: array[2'i64, int8]

  structstdvideoav1cdef* {.pure, inheritable, bycopy.} = object
    cdefdampingminus3*: uint8 ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:292:16
    cdefbits*: uint8
    cdefypristrength*: array[8'i64, uint8]
    cdefysecstrength*: array[8'i64, uint8]
    cdefuvpristrength*: array[8'i64, uint8]
    cdefuvsecstrength*: array[8'i64, uint8]

  structstdvideoav1looprestoration* {.pure, inheritable, bycopy.} = object
    Framerestorationtype*: array[3'i64, Stdvideoav1framerestorationtype] ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:301:16
    Looprestorationsize*: array[3'i64, uint16]

  structstdvideoav1globalmotion* {.pure, inheritable, bycopy.} = object
    Gmtype*: array[8'i64, uint8] ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:306:16
    gmparams*: array[8'i64, array[6'i64, int32]]

  structstdvideoav1filmgrain* {.pure, inheritable, bycopy.} = object
    flags*: Stdvideoav1filmgrainflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:319:16
    grainscalingminus8*: uint8
    arcoefflag*: uint8
    arcoeffshiftminus6*: uint8
    grainscaleshift*: uint8
    grainseed*: uint16
    filmgrainparamsrefidx*: uint8
    numypoints*: uint8
    pointyvalue*: array[14'i64, uint8]
    pointyscaling*: array[14'i64, uint8]
    numcbpoints*: uint8
    pointcbvalue*: array[10'i64, uint8]
    pointcbscaling*: array[10'i64, uint8]
    numcrpoints*: uint8
    pointcrvalue*: array[10'i64, uint8]
    pointcrscaling*: array[10'i64, uint8]
    arcoeffsyplus128*: array[24'i64, int8]
    arcoeffscbplus128*: array[25'i64, int8]
    arcoeffscrplus128*: array[25'i64, int8]
    cbmult*: uint8
    cblumamult*: uint8
    cboffset*: uint16
    crmult*: uint8
    crlumamult*: uint8
    croffset*: uint16

  structstdvideodecodeav1referenceinfoflags* {.pure, inheritable, bycopy.} = object
    disableframeendupdatecdf*: uint32 ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std_decode.h:90:16
    segmentationenabled*: uint32
    reserved*: uint32

  Stdvideoh264spsvuiflags* = structstdvideoh264spsvuiflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std.h:193:3
  Stdvideoh264aspectratioidc* = enumstdvideoh264aspectratioidc ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std.h:105:3
  Stdvideoh264hrdparameters* = structstdvideoh264hrdparameters ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std.h:207:3
  Stdvideoencodeh264weighttableflags* = structstdvideoencodeh264weighttableflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_encode.h:35:3
  Stdvideoencodeh264referencelistsinfoflags* = structstdvideoencodeh264referencelistsinfoflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_encode.h:75:3
  Stdvideoencodeh264reflistmodentry* = structstdvideoencodeh264reflistmodentry ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_encode.h:81:3
  Stdvideoencodeh264refpicmarkingentry* = structstdvideoencodeh264refpicmarkingentry ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_encode.h:89:3
  Stdvideoh265hrdflags* = structstdvideoh265hrdflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:147:3
  Stdvideoh265sublayerhrdparameters* = structstdvideoh265sublayerhrdparameters ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:137:3
  Stdvideoh265profiletierlevelflags* = structstdvideoh265profiletierlevelflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:180:3
  Stdvideoh265shorttermrefpicsetflags* = structstdvideoh265shorttermrefpicsetflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:302:3
  Stdvideoh265spsvuiflags* = structstdvideoh265spsvuiflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:231:3
  Stdvideoh265aspectratioidc* = enumstdvideoh265aspectratioidc ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:124:3
  Stdvideoencodeh265weighttableflags* = structstdvideoencodeh265weighttableflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_encode.h:35:3
  Stdvideoencodeh265referencelistsinfoflags* = structstdvideoencodeh265referencelistsinfoflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_encode.h:89:3
  Stdvideoav1colorconfigflags* = structstdvideoav1colorconfigflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:208:3
  Stdvideoav1colorprimaries* = enumstdvideoav1colorprimaries ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:148:3
  Stdvideoav1transfercharacteristics* = enumstdvideoav1transfercharacteristics ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:172:3
  Stdvideoav1matrixcoefficients* = enumstdvideoav1matrixcoefficients ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:192:3
  Stdvideoav1chromasampleposition* = enumstdvideoav1chromasampleposition ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:201:3
  Stdvideoav1timinginfoflags* = structstdvideoav1timinginfoflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:225:3
  Stdvideoav1tileinfoflags* = structstdvideoav1tileinfoflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:277:3
  Stdvideoav1quantizationflags* = structstdvideoav1quantizationflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:254:3
  Stdvideoav1loopfilterflags* = structstdvideoav1loopfilterflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:238:3
  Stdvideoav1framerestorationtype* = enumstdvideoav1framerestorationtype ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:131:3
  Stdvideoav1filmgrainflags* = structstdvideoav1filmgrainflags ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:317:3
  structstdvideoh264spsvuiflags* {.pure, inheritable, bycopy.} = object
    aspectratioinfopresentflag*: uint32 ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std.h:180:16
    overscaninfopresentflag*: uint32
    overscanappropriateflag*: uint32
    videosignaltypepresentflag*: uint32
    videofullrangeflag*: uint32
    colordescriptionpresentflag*: uint32
    chromalocinfopresentflag*: uint32
    timinginfopresentflag*: uint32
    fixedframerateflag*: uint32
    bitstreamrestrictionflag*: uint32
    nalhrdparameterspresentflag*: uint32
    vclhrdparameterspresentflag*: uint32

  structstdvideoh264hrdparameters* {.pure, inheritable, bycopy.} = object
    cpbcntminus1*: uint8     ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std.h:195:16
    bitratescale*: uint8
    cpbsizescale*: uint8
    reserved1*: uint8
    bitratevalueminus1*: array[32'i64, uint32]
    cpbsizevalueminus1*: array[32'i64, uint32]
    cbrflag*: array[32'i64, uint8]
    initialcpbremovaldelaylengthminus1*: uint32
    cpbremovaldelaylengthminus1*: uint32
    dpboutputdelaylengthminus1*: uint32
    timeoffsetlength*: uint32

  structstdvideoencodeh264weighttableflags* {.pure, inheritable, bycopy.} = object
    lumaweightl0flag*: uint32 ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_encode.h:30:16
    chromaweightl0flag*: uint32
    lumaweightl1flag*: uint32
    chromaweightl1flag*: uint32

  structstdvideoencodeh264referencelistsinfoflags* {.pure, inheritable, bycopy.} = object
    refpiclistmodificationflagl0*: uint32 ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_encode.h:71:16
    refpiclistmodificationflagl1*: uint32
    reserved*: uint32

  structstdvideoencodeh264reflistmodentry* {.pure, inheritable, bycopy.} = object
    modificationofpicnumsidc*: Stdvideoh264modificationofpicnumsidc ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_encode.h:77:16
    absdiffpicnumminus1*: uint16
    longtermpicnum*: uint16

  structstdvideoencodeh264refpicmarkingentry* {.pure, inheritable, bycopy.} = object
    memorymanagementcontroloperation*: Stdvideoh264memmgmtcontrolop ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std_encode.h:83:16
    differenceofpicnumsminus1*: uint16
    longtermpicnum*: uint16
    longtermframeidx*: uint16
    maxlongtermframeidxplus1*: uint16

  structstdvideoh265hrdflags* {.pure, inheritable, bycopy.} = object
    nalhrdparameterspresentflag*: uint32 ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:139:16
    vclhrdparameterspresentflag*: uint32
    subpichrdparamspresentflag*: uint32
    subpiccpbparamsinpictimingseiflag*: uint32
    fixedpicrategeneralflag*: uint32
    fixedpicratewithincvsflag*: uint32
    lowdelayhrdflag*: uint32

  structstdvideoh265sublayerhrdparameters* {.pure, inheritable, bycopy.} = object
    bitratevalueminus1*: array[32'i64, uint32] ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:131:16
    cpbsizevalueminus1*: array[32'i64, uint32]
    cpbsizeduvalueminus1*: array[32'i64, uint32]
    bitrateduvalueminus1*: array[32'i64, uint32]
    cbrflag*: uint32

  structstdvideoh265profiletierlevelflags* {.pure, inheritable, bycopy.} = object
    generaltierflag*: uint32 ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:174:16
    generalprogressivesourceflag*: uint32
    generalinterlacedsourceflag*: uint32
    generalnonpackedconstraintflag*: uint32
    generalframeonlyconstraintflag*: uint32

  structstdvideoh265shorttermrefpicsetflags* {.pure, inheritable, bycopy.} = object
    interrefpicsetpredictionflag*: uint32 ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:299:16
    deltarpssign*: uint32

  structstdvideoh265spsvuiflags* {.pure, inheritable, bycopy.} = object
    aspectratioinfopresentflag*: uint32 ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std.h:212:16
    overscaninfopresentflag*: uint32
    overscanappropriateflag*: uint32
    videosignaltypepresentflag*: uint32
    videofullrangeflag*: uint32
    colourdescriptionpresentflag*: uint32
    chromalocinfopresentflag*: uint32
    neutralchromaindicationflag*: uint32
    fieldseqflag*: uint32
    framefieldinfopresentflag*: uint32
    defaultdisplaywindowflag*: uint32
    vuitiminginfopresentflag*: uint32
    vuipocproportionaltotimingflag*: uint32
    vuihrdparameterspresentflag*: uint32
    bitstreamrestrictionflag*: uint32
    tilesfixedstructureflag*: uint32
    motionvectorsoverpicboundariesflag*: uint32
    restrictedrefpiclistsflag*: uint32

  structstdvideoencodeh265weighttableflags* {.pure, inheritable, bycopy.} = object
    lumaweightl0flag*: uint16 ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_encode.h:30:16
    chromaweightl0flag*: uint16
    lumaweightl1flag*: uint16
    chromaweightl1flag*: uint16

  structstdvideoencodeh265referencelistsinfoflags* {.pure, inheritable, bycopy.} = object
    refpiclistmodificationflagl0*: uint32 ## Generated based on /usr/include/vk_video/vulkan_video_codec_h265std_encode.h:85:16
    refpiclistmodificationflagl1*: uint32
    reserved*: uint32

  structstdvideoav1colorconfigflags* {.pure, inheritable, bycopy.} = object
    monochrome*: uint32      ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:202:16
    colorrange*: uint32
    separateuvdeltaq*: uint32
    colordescriptionpresentflag*: uint32
    reserved*: uint32

  structstdvideoav1timinginfoflags* {.pure, inheritable, bycopy.} = object
    equalpictureinterval*: uint32 ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:222:16
    reserved*: uint32

  structstdvideoav1tileinfoflags* {.pure, inheritable, bycopy.} = object
    uniformtilespacingflag*: uint32 ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:274:16
    reserved*: uint32

  structstdvideoav1quantizationflags* {.pure, inheritable, bycopy.} = object
    usingqmatrix*: uint32    ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:250:16
    diffuvdelta*: uint32
    reserved*: uint32

  structstdvideoav1loopfilterflags* {.pure, inheritable, bycopy.} = object
    loopfilterdeltaenabled*: uint32 ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:234:16
    loopfilterdeltaupdate*: uint32
    reserved*: uint32

  structstdvideoav1filmgrainflags* {.pure, inheritable, bycopy.} = object
    chromascalingfromluma*: uint32 ## Generated based on /usr/include/vk_video/vulkan_video_codec_av1std.h:311:16
    overlapflag*: uint32
    cliptorestrictedrange*: uint32
    updategrain*: uint32
    reserved*: uint32

  Stdvideoh264modificationofpicnumsidc* = enumstdvideoh264modificationofpicnumsidc ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std.h:122:3
  Stdvideoh264memmgmtcontrolop* = enumstdvideoh264memmgmtcontrolop ## Generated based on /usr/include/vk_video/vulkan_video_codec_h264std.h:134:3
when 1 is static:
  const
    Vulkanh* = 1             ## Generated based on /usr/include/vulkan/vulkan.h:2:9
else:
  let Vulkanh* = 1           ## Generated based on /usr/include/vulkan/vulkan.h:2:9
when 1 is static:
  const
    Vulkancoreh* = 1         ## Generated based on /usr/include/vulkan/vulkan_core.h:2:9
else:
  let Vulkancoreh* = 1       ## Generated based on /usr/include/vulkan/vulkan_core.h:2:9
when 1 is static:
  const
    Version10* = 1           ## Generated based on /usr/include/vulkan/vulkan_core.h:23:9
else:
  let Version10* = 1         ## Generated based on /usr/include/vulkan/vulkan_core.h:23:9
when 1 is static:
  const
    Use64bitptrdefines* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:31:17
else:
  let Use64bitptrdefines* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:31:17
when 279 is static:
  const
    Headerversion* = 279     ## Generated based on /usr/include/vulkan/vulkan_core.h:72:9
else:
  let Headerversion* = 279   ## Generated based on /usr/include/vulkan/vulkan_core.h:72:9
when cast[cuint](0'i64) is static:
  const
    False* = cast[cuint](0'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:125:9
else:
  let False* = cast[cuint](0'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:125:9
when 1000.0 is static:
  const
    Lodclampnone* = 1000.0   ## Generated based on /usr/include/vulkan/vulkan_core.h:126:9
else:
  let Lodclampnone* = 1000.0 ## Generated based on /usr/include/vulkan/vulkan_core.h:126:9
when cast[cuint](1'i64) is static:
  const
    True* = cast[cuint](1'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:131:9
else:
  let True* = cast[cuint](1'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:131:9
when cast[cuint](32'i64) is static:
  const
    Maxmemorytypes* = cast[cuint](32'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:133:9
else:
  let Maxmemorytypes* = cast[cuint](32'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:133:9
when cast[cuint](256'i64) is static:
  const
    Maxphysicaldevicenamesize* = cast[cuint](256'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:134:9
else:
  let Maxphysicaldevicenamesize* = cast[cuint](256'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:134:9
when cast[cuint](16'i64) is static:
  const
    Uuidsize* = cast[cuint](16'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:135:9
else:
  let Uuidsize* = cast[cuint](16'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:135:9
when cast[cuint](256'i64) is static:
  const
    Maxextensionnamesize* = cast[cuint](256'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:136:9
else:
  let Maxextensionnamesize* = cast[cuint](256'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:136:9
when cast[cuint](256'i64) is static:
  const
    Maxdescriptionsize* = cast[cuint](256'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:137:9
else:
  let Maxdescriptionsize* = cast[cuint](256'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:137:9
when cast[cuint](16'i64) is static:
  const
    Maxmemoryheaps* = cast[cuint](16'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:138:9
else:
  let Maxmemoryheaps* = cast[cuint](16'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:138:9
when 1 is static:
  const
    Version11* = 1           ## Generated based on /usr/include/vulkan/vulkan_core.h:4884:9
else:
  let Version11* = 1         ## Generated based on /usr/include/vulkan/vulkan_core.h:4884:9
when cast[cuint](32'i64) is static:
  const
    Maxdevicegroupsize* = cast[cuint](32'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:4890:9
else:
  let Maxdevicegroupsize* = cast[cuint](32'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:4890:9
when cast[cuint](8'i64) is static:
  const
    Luidsize* = cast[cuint](8'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:4891:9
else:
  let Luidsize* = cast[cuint](8'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:4891:9
when 1 is static:
  const
    Version12* = 1           ## Generated based on /usr/include/vulkan/vulkan_core.h:5753:9
else:
  let Version12* = 1         ## Generated based on /usr/include/vulkan/vulkan_core.h:5753:9
when cast[cuint](256'i64) is static:
  const
    Maxdrivernamesize* = cast[cuint](256'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:5757:9
else:
  let Maxdrivernamesize* = cast[cuint](256'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:5757:9
when cast[cuint](256'i64) is static:
  const
    Maxdriverinfosize* = cast[cuint](256'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:5758:9
else:
  let Maxdriverinfosize* = cast[cuint](256'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:5758:9
when 1 is static:
  const
    Version13* = 1           ## Generated based on /usr/include/vulkan/vulkan_core.h:6511:9
else:
  let Version13* = 1         ## Generated based on /usr/include/vulkan/vulkan_core.h:6511:9
when 1 is static:
  const
    Khrsurface* = 1          ## Generated based on /usr/include/vulkan/vulkan_core.h:7546:9
else:
  let Khrsurface* = 1        ## Generated based on /usr/include/vulkan/vulkan_core.h:7546:9
when 25 is static:
  const
    Khrsurfacespecversion* = 25 ## Generated based on /usr/include/vulkan/vulkan_core.h:7548:9
else:
  let Khrsurfacespecversion* = 25 ## Generated based on /usr/include/vulkan/vulkan_core.h:7548:9
when "VK_KHR_surface" is static:
  const
    Khrsurfaceextensionname* = "VK_KHR_surface" ## Generated based on /usr/include/vulkan/vulkan_core.h:7549:9
else:
  let Khrsurfaceextensionname* = "VK_KHR_surface" ## Generated based on /usr/include/vulkan/vulkan_core.h:7549:9
when 1 is static:
  const
    Khrswapchain* = 1        ## Generated based on /usr/include/vulkan/vulkan_core.h:7661:9
else:
  let Khrswapchain* = 1      ## Generated based on /usr/include/vulkan/vulkan_core.h:7661:9
when 70 is static:
  const
    Khrswapchainspecversion* = 70 ## Generated based on /usr/include/vulkan/vulkan_core.h:7663:9
else:
  let Khrswapchainspecversion* = 70 ## Generated based on /usr/include/vulkan/vulkan_core.h:7663:9
when "VK_KHR_swapchain" is static:
  const
    Khrswapchainextensionname* = "VK_KHR_swapchain" ## Generated based on /usr/include/vulkan/vulkan_core.h:7664:9
else:
  let Khrswapchainextensionname* = "VK_KHR_swapchain" ## Generated based on /usr/include/vulkan/vulkan_core.h:7664:9
when 1 is static:
  const
    Khrdisplay* = 1          ## Generated based on /usr/include/vulkan/vulkan_core.h:7822:9
else:
  let Khrdisplay* = 1        ## Generated based on /usr/include/vulkan/vulkan_core.h:7822:9
when 23 is static:
  const
    Khrdisplayspecversion* = 23 ## Generated based on /usr/include/vulkan/vulkan_core.h:7825:9
else:
  let Khrdisplayspecversion* = 23 ## Generated based on /usr/include/vulkan/vulkan_core.h:7825:9
when "VK_KHR_display" is static:
  const
    Khrdisplayextensionname* = "VK_KHR_display" ## Generated based on /usr/include/vulkan/vulkan_core.h:7826:9
else:
  let Khrdisplayextensionname* = "VK_KHR_display" ## Generated based on /usr/include/vulkan/vulkan_core.h:7826:9
when 1 is static:
  const
    Khrdisplayswapchain* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:7948:9
else:
  let Khrdisplayswapchain* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:7948:9
when 10 is static:
  const
    Khrdisplayswapchainspecversion* = 10 ## Generated based on /usr/include/vulkan/vulkan_core.h:7949:9
else:
  let Khrdisplayswapchainspecversion* = 10 ## Generated based on /usr/include/vulkan/vulkan_core.h:7949:9
when "VK_KHR_display_swapchain" is static:
  const
    Khrdisplayswapchainextensionname* = "VK_KHR_display_swapchain" ## Generated based on /usr/include/vulkan/vulkan_core.h:7950:9
else:
  let Khrdisplayswapchainextensionname* = "VK_KHR_display_swapchain" ## Generated based on /usr/include/vulkan/vulkan_core.h:7950:9
when 1 is static:
  const
    Khrsamplermirrorclamptoedge* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:7972:9
else:
  let Khrsamplermirrorclamptoedge* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:7972:9
when 3 is static:
  const
    Khrsamplermirrorclamptoedgespecversion* = 3 ## Generated based on /usr/include/vulkan/vulkan_core.h:7973:9
else:
  let Khrsamplermirrorclamptoedgespecversion* = 3 ## Generated based on /usr/include/vulkan/vulkan_core.h:7973:9
when "VK_KHR_sampler_mirror_clamp_to_edge" is static:
  const
    Khrsamplermirrorclamptoedgeextensionname* = "VK_KHR_sampler_mirror_clamp_to_edge" ## Generated based on /usr/include/vulkan/vulkan_core.h:7974:9
else:
  let Khrsamplermirrorclamptoedgeextensionname* = "VK_KHR_sampler_mirror_clamp_to_edge" ## Generated based on /usr/include/vulkan/vulkan_core.h:7974:9
when 1 is static:
  const
    Khrvideoqueue* = 1       ## Generated based on /usr/include/vulkan/vulkan_core.h:7978:9
else:
  let Khrvideoqueue* = 1     ## Generated based on /usr/include/vulkan/vulkan_core.h:7978:9
when 8 is static:
  const
    Khrvideoqueuespecversion* = 8 ## Generated based on /usr/include/vulkan/vulkan_core.h:7981:9
else:
  let Khrvideoqueuespecversion* = 8 ## Generated based on /usr/include/vulkan/vulkan_core.h:7981:9
when "VK_KHR_video_queue" is static:
  const
    Khrvideoqueueextensionname* = "VK_KHR_video_queue" ## Generated based on /usr/include/vulkan/vulkan_core.h:7982:9
else:
  let Khrvideoqueueextensionname* = "VK_KHR_video_queue" ## Generated based on /usr/include/vulkan/vulkan_core.h:7982:9
when 1 is static:
  const
    Khrvideodecodequeue* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:8267:9
else:
  let Khrvideodecodequeue* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:8267:9
when 8 is static:
  const
    Khrvideodecodequeuespecversion* = 8 ## Generated based on /usr/include/vulkan/vulkan_core.h:8268:9
else:
  let Khrvideodecodequeuespecversion* = 8 ## Generated based on /usr/include/vulkan/vulkan_core.h:8268:9
when "VK_KHR_video_decode_queue" is static:
  const
    Khrvideodecodequeueextensionname* = "VK_KHR_video_decode_queue" ## Generated based on /usr/include/vulkan/vulkan_core.h:8269:9
else:
  let Khrvideodecodequeueextensionname* = "VK_KHR_video_decode_queue" ## Generated based on /usr/include/vulkan/vulkan_core.h:8269:9
when 1 is static:
  const
    Khrvideoencodeh264* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:8322:9
else:
  let Khrvideoencodeh264* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:8322:9
when 14 is static:
  const
    Khrvideoencodeh264specversion* = 14 ## Generated based on /usr/include/vulkan/vulkan_core.h:8325:9
else:
  let Khrvideoencodeh264specversion* = 14 ## Generated based on /usr/include/vulkan/vulkan_core.h:8325:9
when "VK_KHR_video_encode_h264" is static:
  const
    Khrvideoencodeh264extensionname* = "VK_KHR_video_encode_h264" ## Generated based on /usr/include/vulkan/vulkan_core.h:8326:9
else:
  let Khrvideoencodeh264extensionname* = "VK_KHR_video_encode_h264" ## Generated based on /usr/include/vulkan/vulkan_core.h:8326:9
when 1 is static:
  const
    Khrvideoencodeh265* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:8521:9
else:
  let Khrvideoencodeh265* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:8521:9
when 14 is static:
  const
    Khrvideoencodeh265specversion* = 14 ## Generated based on /usr/include/vulkan/vulkan_core.h:8524:9
else:
  let Khrvideoencodeh265specversion* = 14 ## Generated based on /usr/include/vulkan/vulkan_core.h:8524:9
when "VK_KHR_video_encode_h265" is static:
  const
    Khrvideoencodeh265extensionname* = "VK_KHR_video_encode_h265" ## Generated based on /usr/include/vulkan/vulkan_core.h:8525:9
else:
  let Khrvideoencodeh265extensionname* = "VK_KHR_video_encode_h265" ## Generated based on /usr/include/vulkan/vulkan_core.h:8525:9
when 1 is static:
  const
    Khrvideodecodeh264* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:8746:9
else:
  let Khrvideodecodeh264* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:8746:9
when 9 is static:
  const
    Khrvideodecodeh264specversion* = 9 ## Generated based on /usr/include/vulkan/vulkan_core.h:8748:9
else:
  let Khrvideodecodeh264specversion* = 9 ## Generated based on /usr/include/vulkan/vulkan_core.h:8748:9
when "VK_KHR_video_decode_h264" is static:
  const
    Khrvideodecodeh264extensionname* = "VK_KHR_video_decode_h264" ## Generated based on /usr/include/vulkan/vulkan_core.h:8749:9
else:
  let Khrvideodecodeh264extensionname* = "VK_KHR_video_decode_h264" ## Generated based on /usr/include/vulkan/vulkan_core.h:8749:9
when 1 is static:
  const
    Khrdynamicrendering* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:8806:9
else:
  let Khrdynamicrendering* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:8806:9
when 1 is static:
  const
    Khrdynamicrenderingspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:8807:9
else:
  let Khrdynamicrenderingspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:8807:9
when "VK_KHR_dynamic_rendering" is static:
  const
    Khrdynamicrenderingextensionname* = "VK_KHR_dynamic_rendering" ## Generated based on /usr/include/vulkan/vulkan_core.h:8808:9
else:
  let Khrdynamicrenderingextensionname* = "VK_KHR_dynamic_rendering" ## Generated based on /usr/include/vulkan/vulkan_core.h:8808:9
when 1 is static:
  const
    Khrmultiview* = 1        ## Generated based on /usr/include/vulkan/vulkan_core.h:8869:9
else:
  let Khrmultiview* = 1      ## Generated based on /usr/include/vulkan/vulkan_core.h:8869:9
when 1 is static:
  const
    Khrmultiviewspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:8870:9
else:
  let Khrmultiviewspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:8870:9
when "VK_KHR_multiview" is static:
  const
    Khrmultiviewextensionname* = "VK_KHR_multiview" ## Generated based on /usr/include/vulkan/vulkan_core.h:8871:9
else:
  let Khrmultiviewextensionname* = "VK_KHR_multiview" ## Generated based on /usr/include/vulkan/vulkan_core.h:8871:9
when 1 is static:
  const
    Khrgetphysicaldeviceproperties2* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:8881:9
else:
  let Khrgetphysicaldeviceproperties2* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:8881:9
when 2 is static:
  const
    Khrgetphysicaldeviceproperties2specversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:8882:9
else:
  let Khrgetphysicaldeviceproperties2specversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:8882:9
when "VK_KHR_get_physical_device_properties2" is static:
  const
    Khrgetphysicaldeviceproperties2extensionname* = "VK_KHR_get_physical_device_properties2" ## Generated based on /usr/include/vulkan/vulkan_core.h:8883:9
else:
  let Khrgetphysicaldeviceproperties2extensionname* = "VK_KHR_get_physical_device_properties2" ## Generated based on /usr/include/vulkan/vulkan_core.h:8883:9
when 1 is static:
  const
    Khrdevicegroup* = 1      ## Generated based on /usr/include/vulkan/vulkan_core.h:8947:9
else:
  let Khrdevicegroup* = 1    ## Generated based on /usr/include/vulkan/vulkan_core.h:8947:9
when 4 is static:
  const
    Khrdevicegroupspecversion* = 4 ## Generated based on /usr/include/vulkan/vulkan_core.h:8948:9
else:
  let Khrdevicegroupspecversion* = 4 ## Generated based on /usr/include/vulkan/vulkan_core.h:8948:9
when "VK_KHR_device_group" is static:
  const
    Khrdevicegroupextensionname* = "VK_KHR_device_group" ## Generated based on /usr/include/vulkan/vulkan_core.h:8949:9
else:
  let Khrdevicegroupextensionname* = "VK_KHR_device_group" ## Generated based on /usr/include/vulkan/vulkan_core.h:8949:9
when 1 is static:
  const
    Khrshaderdrawparameters* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9000:9
else:
  let Khrshaderdrawparameters* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9000:9
when 1 is static:
  const
    Khrshaderdrawparametersspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9001:9
else:
  let Khrshaderdrawparametersspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9001:9
when "VK_KHR_shader_draw_parameters" is static:
  const
    Khrshaderdrawparametersextensionname* = "VK_KHR_shader_draw_parameters" ## Generated based on /usr/include/vulkan/vulkan_core.h:9002:9
else:
  let Khrshaderdrawparametersextensionname* = "VK_KHR_shader_draw_parameters" ## Generated based on /usr/include/vulkan/vulkan_core.h:9002:9
when 1 is static:
  const
    Khrmaintenance1* = 1     ## Generated based on /usr/include/vulkan/vulkan_core.h:9006:9
else:
  let Khrmaintenance1* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:9006:9
when 2 is static:
  const
    Khrmaintenance1specversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:9007:9
else:
  let Khrmaintenance1specversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:9007:9
when "VK_KHR_maintenance1" is static:
  const
    Khrmaintenance1extensionname* = "VK_KHR_maintenance1" ## Generated based on /usr/include/vulkan/vulkan_core.h:9008:9
else:
  let Khrmaintenance1extensionname* = "VK_KHR_maintenance1" ## Generated based on /usr/include/vulkan/vulkan_core.h:9008:9
when Khrmaintenance1specversion is typedesc:
  type
    Khrmaintenance1specversionconst* = Khrmaintenance1specversion ## Generated based on /usr/include/vulkan/vulkan_core.h:9009:9
else:
  when Khrmaintenance1specversion is static:
    const
      Khrmaintenance1specversionconst* = Khrmaintenance1specversion ## Generated based on /usr/include/vulkan/vulkan_core.h:9009:9
  else:
    let Khrmaintenance1specversionconst* = Khrmaintenance1specversion ## Generated based on /usr/include/vulkan/vulkan_core.h:9009:9
when Khrmaintenance1extensionname is typedesc:
  type
    Khrmaintenance1extensionnameconst* = Khrmaintenance1extensionname ## Generated based on /usr/include/vulkan/vulkan_core.h:9010:9
else:
  when Khrmaintenance1extensionname is static:
    const
      Khrmaintenance1extensionnameconst* = Khrmaintenance1extensionname ## Generated based on /usr/include/vulkan/vulkan_core.h:9010:9
  else:
    let Khrmaintenance1extensionnameconst* = Khrmaintenance1extensionname ## Generated based on /usr/include/vulkan/vulkan_core.h:9010:9
when 1 is static:
  const
    Khrdevicegroupcreation* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9024:9
else:
  let Khrdevicegroupcreation* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9024:9
when 1 is static:
  const
    Khrdevicegroupcreationspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9025:9
else:
  let Khrdevicegroupcreationspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9025:9
when "VK_KHR_device_group_creation" is static:
  const
    Khrdevicegroupcreationextensionname* = "VK_KHR_device_group_creation" ## Generated based on /usr/include/vulkan/vulkan_core.h:9026:9
else:
  let Khrdevicegroupcreationextensionname* = "VK_KHR_device_group_creation" ## Generated based on /usr/include/vulkan/vulkan_core.h:9026:9
when Maxdevicegroupsize is typedesc:
  type
    Maxdevicegroupsizekhr* = Maxdevicegroupsize ## Generated based on /usr/include/vulkan/vulkan_core.h:9027:9
else:
  when Maxdevicegroupsize is static:
    const
      Maxdevicegroupsizekhr* = Maxdevicegroupsize ## Generated based on /usr/include/vulkan/vulkan_core.h:9027:9
  else:
    let Maxdevicegroupsizekhr* = Maxdevicegroupsize ## Generated based on /usr/include/vulkan/vulkan_core.h:9027:9
when 1 is static:
  const
    Khrexternalmemorycapabilities* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9043:9
else:
  let Khrexternalmemorycapabilities* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9043:9
when 1 is static:
  const
    Khrexternalmemorycapabilitiesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9044:9
else:
  let Khrexternalmemorycapabilitiesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9044:9
when "VK_KHR_external_memory_capabilities" is static:
  const
    Khrexternalmemorycapabilitiesextensionname* = "VK_KHR_external_memory_capabilities" ## Generated based on /usr/include/vulkan/vulkan_core.h:9045:9
else:
  let Khrexternalmemorycapabilitiesextensionname* = "VK_KHR_external_memory_capabilities" ## Generated based on /usr/include/vulkan/vulkan_core.h:9045:9
when Luidsize is typedesc:
  type
    Luidsizekhr* = Luidsize  ## Generated based on /usr/include/vulkan/vulkan_core.h:9046:9
else:
  when Luidsize is static:
    const
      Luidsizekhr* = Luidsize ## Generated based on /usr/include/vulkan/vulkan_core.h:9046:9
  else:
    let Luidsizekhr* = Luidsize ## Generated based on /usr/include/vulkan/vulkan_core.h:9046:9
when 1 is static:
  const
    Khrexternalmemory* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:9078:9
else:
  let Khrexternalmemory* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9078:9
when 1 is static:
  const
    Khrexternalmemoryspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9079:9
else:
  let Khrexternalmemoryspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9079:9
when "VK_KHR_external_memory" is static:
  const
    Khrexternalmemoryextensionname* = "VK_KHR_external_memory" ## Generated based on /usr/include/vulkan/vulkan_core.h:9080:9
else:
  let Khrexternalmemoryextensionname* = "VK_KHR_external_memory" ## Generated based on /usr/include/vulkan/vulkan_core.h:9080:9
when 1 is static:
  const
    Khrexternalmemoryfd* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9091:9
else:
  let Khrexternalmemoryfd* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9091:9
when 1 is static:
  const
    Khrexternalmemoryfdspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9092:9
else:
  let Khrexternalmemoryfdspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9092:9
when "VK_KHR_external_memory_fd" is static:
  const
    Khrexternalmemoryfdextensionname* = "VK_KHR_external_memory_fd" ## Generated based on /usr/include/vulkan/vulkan_core.h:9093:9
else:
  let Khrexternalmemoryfdextensionname* = "VK_KHR_external_memory_fd" ## Generated based on /usr/include/vulkan/vulkan_core.h:9093:9
when 1 is static:
  const
    Khrexternalsemaphorecapabilities* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9132:9
else:
  let Khrexternalsemaphorecapabilities* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9132:9
when 1 is static:
  const
    Khrexternalsemaphorecapabilitiesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9133:9
else:
  let Khrexternalsemaphorecapabilitiesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9133:9
when "VK_KHR_external_semaphore_capabilities" is static:
  const
    Khrexternalsemaphorecapabilitiesextensionname* = "VK_KHR_external_semaphore_capabilities" ## Generated based on /usr/include/vulkan/vulkan_core.h:9134:9
else:
  let Khrexternalsemaphorecapabilitiesextensionname* = "VK_KHR_external_semaphore_capabilities" ## Generated based on /usr/include/vulkan/vulkan_core.h:9134:9
when 1 is static:
  const
    Khrexternalsemaphore* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9158:9
else:
  let Khrexternalsemaphore* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9158:9
when 1 is static:
  const
    Khrexternalsemaphorespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9159:9
else:
  let Khrexternalsemaphorespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9159:9
when "VK_KHR_external_semaphore" is static:
  const
    Khrexternalsemaphoreextensionname* = "VK_KHR_external_semaphore" ## Generated based on /usr/include/vulkan/vulkan_core.h:9160:9
else:
  let Khrexternalsemaphoreextensionname* = "VK_KHR_external_semaphore" ## Generated based on /usr/include/vulkan/vulkan_core.h:9160:9
when 1 is static:
  const
    Khrexternalsemaphorefd* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9170:9
else:
  let Khrexternalsemaphorefd* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9170:9
when 1 is static:
  const
    Khrexternalsemaphorefdspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9171:9
else:
  let Khrexternalsemaphorefdspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9171:9
when "VK_KHR_external_semaphore_fd" is static:
  const
    Khrexternalsemaphorefdextensionname* = "VK_KHR_external_semaphore_fd" ## Generated based on /usr/include/vulkan/vulkan_core.h:9172:9
else:
  let Khrexternalsemaphorefdextensionname* = "VK_KHR_external_semaphore_fd" ## Generated based on /usr/include/vulkan/vulkan_core.h:9172:9
when 1 is static:
  const
    Khrpushdescriptor* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:9205:9
else:
  let Khrpushdescriptor* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9205:9
when 2 is static:
  const
    Khrpushdescriptorspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:9206:9
else:
  let Khrpushdescriptorspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:9206:9
when "VK_KHR_push_descriptor" is static:
  const
    Khrpushdescriptorextensionname* = "VK_KHR_push_descriptor" ## Generated based on /usr/include/vulkan/vulkan_core.h:9207:9
else:
  let Khrpushdescriptorextensionname* = "VK_KHR_push_descriptor" ## Generated based on /usr/include/vulkan/vulkan_core.h:9207:9
when 1 is static:
  const
    Khrshaderfloat16int8* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9236:9
else:
  let Khrshaderfloat16int8* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9236:9
when 1 is static:
  const
    Khrshaderfloat16int8specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9237:9
else:
  let Khrshaderfloat16int8specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9237:9
when "VK_KHR_shader_float16_int8" is static:
  const
    Khrshaderfloat16int8extensionname* = "VK_KHR_shader_float16_int8" ## Generated based on /usr/include/vulkan/vulkan_core.h:9238:9
else:
  let Khrshaderfloat16int8extensionname* = "VK_KHR_shader_float16_int8" ## Generated based on /usr/include/vulkan/vulkan_core.h:9238:9
when 1 is static:
  const
    Khr16bitstorage* = 1     ## Generated based on /usr/include/vulkan/vulkan_core.h:9246:9
else:
  let Khr16bitstorage* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:9246:9
when 1 is static:
  const
    Khr16bitstoragespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9247:9
else:
  let Khr16bitstoragespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9247:9
when "VK_KHR_16bit_storage" is static:
  const
    Khr16bitstorageextensionname* = "VK_KHR_16bit_storage" ## Generated based on /usr/include/vulkan/vulkan_core.h:9248:9
else:
  let Khr16bitstorageextensionname* = "VK_KHR_16bit_storage" ## Generated based on /usr/include/vulkan/vulkan_core.h:9248:9
when 1 is static:
  const
    Khrincrementalpresent* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9254:9
else:
  let Khrincrementalpresent* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9254:9
when 2 is static:
  const
    Khrincrementalpresentspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:9255:9
else:
  let Khrincrementalpresentspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:9255:9
when "VK_KHR_incremental_present" is static:
  const
    Khrincrementalpresentextensionname* = "VK_KHR_incremental_present" ## Generated based on /usr/include/vulkan/vulkan_core.h:9256:9
else:
  let Khrincrementalpresentextensionname* = "VK_KHR_incremental_present" ## Generated based on /usr/include/vulkan/vulkan_core.h:9256:9
when 1 is static:
  const
    Khrdescriptorupdatetemplate* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9278:9
else:
  let Khrdescriptorupdatetemplate* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9278:9
when 1 is static:
  const
    Khrdescriptorupdatetemplatespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9281:9
else:
  let Khrdescriptorupdatetemplatespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9281:9
when "VK_KHR_descriptor_update_template" is static:
  const
    Khrdescriptorupdatetemplateextensionname* = "VK_KHR_descriptor_update_template" ## Generated based on /usr/include/vulkan/vulkan_core.h:9282:9
else:
  let Khrdescriptorupdatetemplateextensionname* = "VK_KHR_descriptor_update_template" ## Generated based on /usr/include/vulkan/vulkan_core.h:9282:9
when 1 is static:
  const
    Khrimagelessframebuffer* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9316:9
else:
  let Khrimagelessframebuffer* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9316:9
when 1 is static:
  const
    Khrimagelessframebufferspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9317:9
else:
  let Khrimagelessframebufferspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9317:9
when "VK_KHR_imageless_framebuffer" is static:
  const
    Khrimagelessframebufferextensionname* = "VK_KHR_imageless_framebuffer" ## Generated based on /usr/include/vulkan/vulkan_core.h:9318:9
else:
  let Khrimagelessframebufferextensionname* = "VK_KHR_imageless_framebuffer" ## Generated based on /usr/include/vulkan/vulkan_core.h:9318:9
when 1 is static:
  const
    Khrcreaterenderpass2* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9330:9
else:
  let Khrcreaterenderpass2* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9330:9
when 1 is static:
  const
    Khrcreaterenderpass2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9331:9
else:
  let Khrcreaterenderpass2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9331:9
when "VK_KHR_create_renderpass2" is static:
  const
    Khrcreaterenderpass2extensionname* = "VK_KHR_create_renderpass2" ## Generated based on /usr/include/vulkan/vulkan_core.h:9332:9
else:
  let Khrcreaterenderpass2extensionname* = "VK_KHR_create_renderpass2" ## Generated based on /usr/include/vulkan/vulkan_core.h:9332:9
when 1 is static:
  const
    Khrsharedpresentableimage* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9376:9
else:
  let Khrsharedpresentableimage* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9376:9
when 1 is static:
  const
    Khrsharedpresentableimagespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9377:9
else:
  let Khrsharedpresentableimagespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9377:9
when "VK_KHR_shared_presentable_image" is static:
  const
    Khrsharedpresentableimageextensionname* = "VK_KHR_shared_presentable_image" ## Generated based on /usr/include/vulkan/vulkan_core.h:9378:9
else:
  let Khrsharedpresentableimageextensionname* = "VK_KHR_shared_presentable_image" ## Generated based on /usr/include/vulkan/vulkan_core.h:9378:9
when 1 is static:
  const
    Khrexternalfencecapabilities* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9395:9
else:
  let Khrexternalfencecapabilities* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9395:9
when 1 is static:
  const
    Khrexternalfencecapabilitiesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9396:9
else:
  let Khrexternalfencecapabilitiesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9396:9
when "VK_KHR_external_fence_capabilities" is static:
  const
    Khrexternalfencecapabilitiesextensionname* = "VK_KHR_external_fence_capabilities" ## Generated based on /usr/include/vulkan/vulkan_core.h:9397:9
else:
  let Khrexternalfencecapabilitiesextensionname* = "VK_KHR_external_fence_capabilities" ## Generated based on /usr/include/vulkan/vulkan_core.h:9397:9
when 1 is static:
  const
    Khrexternalfence* = 1    ## Generated based on /usr/include/vulkan/vulkan_core.h:9421:9
else:
  let Khrexternalfence* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:9421:9
when 1 is static:
  const
    Khrexternalfencespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9422:9
else:
  let Khrexternalfencespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9422:9
when "VK_KHR_external_fence" is static:
  const
    Khrexternalfenceextensionname* = "VK_KHR_external_fence" ## Generated based on /usr/include/vulkan/vulkan_core.h:9423:9
else:
  let Khrexternalfenceextensionname* = "VK_KHR_external_fence" ## Generated based on /usr/include/vulkan/vulkan_core.h:9423:9
when 1 is static:
  const
    Khrexternalfencefd* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:9433:9
else:
  let Khrexternalfencefd* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9433:9
when 1 is static:
  const
    Khrexternalfencefdspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9434:9
else:
  let Khrexternalfencefdspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9434:9
when "VK_KHR_external_fence_fd" is static:
  const
    Khrexternalfencefdextensionname* = "VK_KHR_external_fence_fd" ## Generated based on /usr/include/vulkan/vulkan_core.h:9435:9
else:
  let Khrexternalfencefdextensionname* = "VK_KHR_external_fence_fd" ## Generated based on /usr/include/vulkan/vulkan_core.h:9435:9
when 1 is static:
  const
    Khrperformancequery* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9468:9
else:
  let Khrperformancequery* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9468:9
when 1 is static:
  const
    Khrperformancequeryspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9469:9
else:
  let Khrperformancequeryspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9469:9
when "VK_KHR_performance_query" is static:
  const
    Khrperformancequeryextensionname* = "VK_KHR_performance_query" ## Generated based on /usr/include/vulkan/vulkan_core.h:9470:9
else:
  let Khrperformancequeryextensionname* = "VK_KHR_performance_query" ## Generated based on /usr/include/vulkan/vulkan_core.h:9470:9
when 1 is static:
  const
    Khrmaintenance2* = 1     ## Generated based on /usr/include/vulkan/vulkan_core.h:9609:9
else:
  let Khrmaintenance2* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:9609:9
when 1 is static:
  const
    Khrmaintenance2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9610:9
else:
  let Khrmaintenance2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9610:9
when "VK_KHR_maintenance2" is static:
  const
    Khrmaintenance2extensionname* = "VK_KHR_maintenance2" ## Generated based on /usr/include/vulkan/vulkan_core.h:9611:9
else:
  let Khrmaintenance2extensionname* = "VK_KHR_maintenance2" ## Generated based on /usr/include/vulkan/vulkan_core.h:9611:9
when Khrmaintenance2specversion is typedesc:
  type
    Khrmaintenance2specversionconst* = Khrmaintenance2specversion ## Generated based on /usr/include/vulkan/vulkan_core.h:9612:9
else:
  when Khrmaintenance2specversion is static:
    const
      Khrmaintenance2specversionconst* = Khrmaintenance2specversion ## Generated based on /usr/include/vulkan/vulkan_core.h:9612:9
  else:
    let Khrmaintenance2specversionconst* = Khrmaintenance2specversion ## Generated based on /usr/include/vulkan/vulkan_core.h:9612:9
when Khrmaintenance2extensionname is typedesc:
  type
    Khrmaintenance2extensionnameconst* = Khrmaintenance2extensionname ## Generated based on /usr/include/vulkan/vulkan_core.h:9613:9
else:
  when Khrmaintenance2extensionname is static:
    const
      Khrmaintenance2extensionnameconst* = Khrmaintenance2extensionname ## Generated based on /usr/include/vulkan/vulkan_core.h:9613:9
  else:
    let Khrmaintenance2extensionnameconst* = Khrmaintenance2extensionname ## Generated based on /usr/include/vulkan/vulkan_core.h:9613:9
when 1 is static:
  const
    Khrgetsurfacecapabilities2* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9631:9
else:
  let Khrgetsurfacecapabilities2* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9631:9
when 1 is static:
  const
    Khrgetsurfacecapabilities2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9632:9
else:
  let Khrgetsurfacecapabilities2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9632:9
when "VK_KHR_get_surface_capabilities2" is static:
  const
    Khrgetsurfacecapabilities2extensionname* = "VK_KHR_get_surface_capabilities2" ## Generated based on /usr/include/vulkan/vulkan_core.h:9633:9
else:
  let Khrgetsurfacecapabilities2extensionname* = "VK_KHR_get_surface_capabilities2" ## Generated based on /usr/include/vulkan/vulkan_core.h:9633:9
when 1 is static:
  const
    Khrvariablepointers* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9670:9
else:
  let Khrvariablepointers* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9670:9
when 1 is static:
  const
    Khrvariablepointersspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9671:9
else:
  let Khrvariablepointersspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9671:9
when "VK_KHR_variable_pointers" is static:
  const
    Khrvariablepointersextensionname* = "VK_KHR_variable_pointers" ## Generated based on /usr/include/vulkan/vulkan_core.h:9672:9
else:
  let Khrvariablepointersextensionname* = "VK_KHR_variable_pointers" ## Generated based on /usr/include/vulkan/vulkan_core.h:9672:9
when 1 is static:
  const
    Khrgetdisplayproperties2* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9680:9
else:
  let Khrgetdisplayproperties2* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9680:9
when 1 is static:
  const
    Khrgetdisplayproperties2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9681:9
else:
  let Khrgetdisplayproperties2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9681:9
when "VK_KHR_get_display_properties2" is static:
  const
    Khrgetdisplayproperties2extensionname* = "VK_KHR_get_display_properties2" ## Generated based on /usr/include/vulkan/vulkan_core.h:9682:9
else:
  let Khrgetdisplayproperties2extensionname* = "VK_KHR_get_display_properties2" ## Generated based on /usr/include/vulkan/vulkan_core.h:9682:9
when 1 is static:
  const
    Khrdedicatedallocation* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9744:9
else:
  let Khrdedicatedallocation* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9744:9
when 3 is static:
  const
    Khrdedicatedallocationspecversion* = 3 ## Generated based on /usr/include/vulkan/vulkan_core.h:9745:9
else:
  let Khrdedicatedallocationspecversion* = 3 ## Generated based on /usr/include/vulkan/vulkan_core.h:9745:9
when "VK_KHR_dedicated_allocation" is static:
  const
    Khrdedicatedallocationextensionname* = "VK_KHR_dedicated_allocation" ## Generated based on /usr/include/vulkan/vulkan_core.h:9746:9
else:
  let Khrdedicatedallocationextensionname* = "VK_KHR_dedicated_allocation" ## Generated based on /usr/include/vulkan/vulkan_core.h:9746:9
when 1 is static:
  const
    Khrstoragebufferstorageclass* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9754:9
else:
  let Khrstoragebufferstorageclass* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9754:9
when 1 is static:
  const
    Khrstoragebufferstorageclassspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9755:9
else:
  let Khrstoragebufferstorageclassspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9755:9
when "VK_KHR_storage_buffer_storage_class" is static:
  const
    Khrstoragebufferstorageclassextensionname* = "VK_KHR_storage_buffer_storage_class" ## Generated based on /usr/include/vulkan/vulkan_core.h:9756:9
else:
  let Khrstoragebufferstorageclassextensionname* = "VK_KHR_storage_buffer_storage_class" ## Generated based on /usr/include/vulkan/vulkan_core.h:9756:9
when 1 is static:
  const
    Khrrelaxedblocklayout* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9760:9
else:
  let Khrrelaxedblocklayout* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9760:9
when 1 is static:
  const
    Khrrelaxedblocklayoutspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9761:9
else:
  let Khrrelaxedblocklayoutspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9761:9
when "VK_KHR_relaxed_block_layout" is static:
  const
    Khrrelaxedblocklayoutextensionname* = "VK_KHR_relaxed_block_layout" ## Generated based on /usr/include/vulkan/vulkan_core.h:9762:9
else:
  let Khrrelaxedblocklayoutextensionname* = "VK_KHR_relaxed_block_layout" ## Generated based on /usr/include/vulkan/vulkan_core.h:9762:9
when 1 is static:
  const
    Khrgetmemoryrequirements2* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9766:9
else:
  let Khrgetmemoryrequirements2* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9766:9
when 1 is static:
  const
    Khrgetmemoryrequirements2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9767:9
else:
  let Khrgetmemoryrequirements2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9767:9
when "VK_KHR_get_memory_requirements2" is static:
  const
    Khrgetmemoryrequirements2extensionname* = "VK_KHR_get_memory_requirements2" ## Generated based on /usr/include/vulkan/vulkan_core.h:9768:9
else:
  let Khrgetmemoryrequirements2extensionname* = "VK_KHR_get_memory_requirements2" ## Generated based on /usr/include/vulkan/vulkan_core.h:9768:9
when 1 is static:
  const
    Khrimageformatlist* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:9803:9
else:
  let Khrimageformatlist* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9803:9
when 1 is static:
  const
    Khrimageformatlistspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9804:9
else:
  let Khrimageformatlistspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9804:9
when "VK_KHR_image_format_list" is static:
  const
    Khrimageformatlistextensionname* = "VK_KHR_image_format_list" ## Generated based on /usr/include/vulkan/vulkan_core.h:9805:9
else:
  let Khrimageformatlistextensionname* = "VK_KHR_image_format_list" ## Generated based on /usr/include/vulkan/vulkan_core.h:9805:9
when 1 is static:
  const
    Khrsamplerycbcrconversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9811:9
else:
  let Khrsamplerycbcrconversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9811:9
when 14 is static:
  const
    Khrsamplerycbcrconversionspecversion* = 14 ## Generated based on /usr/include/vulkan/vulkan_core.h:9814:9
else:
  let Khrsamplerycbcrconversionspecversion* = 14 ## Generated based on /usr/include/vulkan/vulkan_core.h:9814:9
when "VK_KHR_sampler_ycbcr_conversion" is static:
  const
    Khrsamplerycbcrconversionextensionname* = "VK_KHR_sampler_ycbcr_conversion" ## Generated based on /usr/include/vulkan/vulkan_core.h:9815:9
else:
  let Khrsamplerycbcrconversionextensionname* = "VK_KHR_sampler_ycbcr_conversion" ## Generated based on /usr/include/vulkan/vulkan_core.h:9815:9
when 1 is static:
  const
    Khrbindmemory2* = 1      ## Generated based on /usr/include/vulkan/vulkan_core.h:9852:9
else:
  let Khrbindmemory2* = 1    ## Generated based on /usr/include/vulkan/vulkan_core.h:9852:9
when 1 is static:
  const
    Khrbindmemory2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9853:9
else:
  let Khrbindmemory2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9853:9
when "VK_KHR_bind_memory2" is static:
  const
    Khrbindmemory2extensionname* = "VK_KHR_bind_memory2" ## Generated based on /usr/include/vulkan/vulkan_core.h:9854:9
else:
  let Khrbindmemory2extensionname* = "VK_KHR_bind_memory2" ## Generated based on /usr/include/vulkan/vulkan_core.h:9854:9
when 1 is static:
  const
    Khrmaintenance3* = 1     ## Generated based on /usr/include/vulkan/vulkan_core.h:9876:9
else:
  let Khrmaintenance3* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:9876:9
when 1 is static:
  const
    Khrmaintenance3specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9877:9
else:
  let Khrmaintenance3specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9877:9
when "VK_KHR_maintenance3" is static:
  const
    Khrmaintenance3extensionname* = "VK_KHR_maintenance3" ## Generated based on /usr/include/vulkan/vulkan_core.h:9878:9
else:
  let Khrmaintenance3extensionname* = "VK_KHR_maintenance3" ## Generated based on /usr/include/vulkan/vulkan_core.h:9878:9
when Khrmaintenance3specversion is typedesc:
  type
    Khrmaintenance3specversionconst* = Khrmaintenance3specversion ## Generated based on /usr/include/vulkan/vulkan_core.h:9879:9
else:
  when Khrmaintenance3specversion is static:
    const
      Khrmaintenance3specversionconst* = Khrmaintenance3specversion ## Generated based on /usr/include/vulkan/vulkan_core.h:9879:9
  else:
    let Khrmaintenance3specversionconst* = Khrmaintenance3specversion ## Generated based on /usr/include/vulkan/vulkan_core.h:9879:9
when Khrmaintenance3extensionname is typedesc:
  type
    Khrmaintenance3extensionnameconst* = Khrmaintenance3extensionname ## Generated based on /usr/include/vulkan/vulkan_core.h:9880:9
else:
  when Khrmaintenance3extensionname is static:
    const
      Khrmaintenance3extensionnameconst* = Khrmaintenance3extensionname ## Generated based on /usr/include/vulkan/vulkan_core.h:9880:9
  else:
    let Khrmaintenance3extensionnameconst* = Khrmaintenance3extensionname ## Generated based on /usr/include/vulkan/vulkan_core.h:9880:9
when 1 is static:
  const
    Khrdrawindirectcount* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9896:9
else:
  let Khrdrawindirectcount* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9896:9
when 1 is static:
  const
    Khrdrawindirectcountspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9897:9
else:
  let Khrdrawindirectcountspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9897:9
when "VK_KHR_draw_indirect_count" is static:
  const
    Khrdrawindirectcountextensionname* = "VK_KHR_draw_indirect_count" ## Generated based on /usr/include/vulkan/vulkan_core.h:9898:9
else:
  let Khrdrawindirectcountextensionname* = "VK_KHR_draw_indirect_count" ## Generated based on /usr/include/vulkan/vulkan_core.h:9898:9
when 1 is static:
  const
    Khrshadersubgroupextendedtypes* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9924:9
else:
  let Khrshadersubgroupextendedtypes* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9924:9
when 1 is static:
  const
    Khrshadersubgroupextendedtypesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9925:9
else:
  let Khrshadersubgroupextendedtypesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9925:9
when "VK_KHR_shader_subgroup_extended_types" is static:
  const
    Khrshadersubgroupextendedtypesextensionname* = "VK_KHR_shader_subgroup_extended_types" ## Generated based on /usr/include/vulkan/vulkan_core.h:9926:9
else:
  let Khrshadersubgroupextendedtypesextensionname* = "VK_KHR_shader_subgroup_extended_types" ## Generated based on /usr/include/vulkan/vulkan_core.h:9926:9
when 1 is static:
  const
    Khr8bitstorage* = 1      ## Generated based on /usr/include/vulkan/vulkan_core.h:9932:9
else:
  let Khr8bitstorage* = 1    ## Generated based on /usr/include/vulkan/vulkan_core.h:9932:9
when 1 is static:
  const
    Khr8bitstoragespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9933:9
else:
  let Khr8bitstoragespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9933:9
when "VK_KHR_8bit_storage" is static:
  const
    Khr8bitstorageextensionname* = "VK_KHR_8bit_storage" ## Generated based on /usr/include/vulkan/vulkan_core.h:9934:9
else:
  let Khr8bitstorageextensionname* = "VK_KHR_8bit_storage" ## Generated based on /usr/include/vulkan/vulkan_core.h:9934:9
when 1 is static:
  const
    Khrshaderatomicint64* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9940:9
else:
  let Khrshaderatomicint64* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9940:9
when 1 is static:
  const
    Khrshaderatomicint64specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9941:9
else:
  let Khrshaderatomicint64specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9941:9
when "VK_KHR_shader_atomic_int64" is static:
  const
    Khrshaderatomicint64extensionname* = "VK_KHR_shader_atomic_int64" ## Generated based on /usr/include/vulkan/vulkan_core.h:9942:9
else:
  let Khrshaderatomicint64extensionname* = "VK_KHR_shader_atomic_int64" ## Generated based on /usr/include/vulkan/vulkan_core.h:9942:9
when 1 is static:
  const
    Khrshaderclock* = 1      ## Generated based on /usr/include/vulkan/vulkan_core.h:9948:9
else:
  let Khrshaderclock* = 1    ## Generated based on /usr/include/vulkan/vulkan_core.h:9948:9
when 1 is static:
  const
    Khrshaderclockspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9949:9
else:
  let Khrshaderclockspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9949:9
when "VK_KHR_shader_clock" is static:
  const
    Khrshaderclockextensionname* = "VK_KHR_shader_clock" ## Generated based on /usr/include/vulkan/vulkan_core.h:9950:9
else:
  let Khrshaderclockextensionname* = "VK_KHR_shader_clock" ## Generated based on /usr/include/vulkan/vulkan_core.h:9950:9
when 1 is static:
  const
    Khrvideodecodeh265* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:9961:9
else:
  let Khrvideodecodeh265* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:9961:9
when 8 is static:
  const
    Khrvideodecodeh265specversion* = 8 ## Generated based on /usr/include/vulkan/vulkan_core.h:9963:9
else:
  let Khrvideodecodeh265specversion* = 8 ## Generated based on /usr/include/vulkan/vulkan_core.h:9963:9
when "VK_KHR_video_decode_h265" is static:
  const
    Khrvideodecodeh265extensionname* = "VK_KHR_video_decode_h265" ## Generated based on /usr/include/vulkan/vulkan_core.h:9964:9
else:
  let Khrvideodecodeh265extensionname* = "VK_KHR_video_decode_h265" ## Generated based on /usr/include/vulkan/vulkan_core.h:9964:9
when 1 is static:
  const
    Khrglobalpriority* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:10014:9
else:
  let Khrglobalpriority* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10014:9
when cast[cuint](16'i64) is static:
  const
    Maxglobalprioritysizekhr* = cast[cuint](16'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:10015:9
else:
  let Maxglobalprioritysizekhr* = cast[cuint](16'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:10015:9
when 1 is static:
  const
    Khrglobalpriorityspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10016:9
else:
  let Khrglobalpriorityspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10016:9
when "VK_KHR_global_priority" is static:
  const
    Khrglobalpriorityextensionname* = "VK_KHR_global_priority" ## Generated based on /usr/include/vulkan/vulkan_core.h:10017:9
else:
  let Khrglobalpriorityextensionname* = "VK_KHR_global_priority" ## Generated based on /usr/include/vulkan/vulkan_core.h:10017:9
when 1 is static:
  const
    Khrdriverproperties* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10052:9
else:
  let Khrdriverproperties* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10052:9
when 1 is static:
  const
    Khrdriverpropertiesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10053:9
else:
  let Khrdriverpropertiesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10053:9
when "VK_KHR_driver_properties" is static:
  const
    Khrdriverpropertiesextensionname* = "VK_KHR_driver_properties" ## Generated based on /usr/include/vulkan/vulkan_core.h:10054:9
else:
  let Khrdriverpropertiesextensionname* = "VK_KHR_driver_properties" ## Generated based on /usr/include/vulkan/vulkan_core.h:10054:9
when Maxdrivernamesize is typedesc:
  type
    Maxdrivernamesizekhr* = Maxdrivernamesize ## Generated based on /usr/include/vulkan/vulkan_core.h:10055:9
else:
  when Maxdrivernamesize is static:
    const
      Maxdrivernamesizekhr* = Maxdrivernamesize ## Generated based on /usr/include/vulkan/vulkan_core.h:10055:9
  else:
    let Maxdrivernamesizekhr* = Maxdrivernamesize ## Generated based on /usr/include/vulkan/vulkan_core.h:10055:9
when Maxdriverinfosize is typedesc:
  type
    Maxdriverinfosizekhr* = Maxdriverinfosize ## Generated based on /usr/include/vulkan/vulkan_core.h:10056:9
else:
  when Maxdriverinfosize is static:
    const
      Maxdriverinfosizekhr* = Maxdriverinfosize ## Generated based on /usr/include/vulkan/vulkan_core.h:10056:9
  else:
    let Maxdriverinfosizekhr* = Maxdriverinfosize ## Generated based on /usr/include/vulkan/vulkan_core.h:10056:9
when 1 is static:
  const
    Khrshaderfloatcontrols* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10066:9
else:
  let Khrshaderfloatcontrols* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10066:9
when 4 is static:
  const
    Khrshaderfloatcontrolsspecversion* = 4 ## Generated based on /usr/include/vulkan/vulkan_core.h:10067:9
else:
  let Khrshaderfloatcontrolsspecversion* = 4 ## Generated based on /usr/include/vulkan/vulkan_core.h:10067:9
when "VK_KHR_shader_float_controls" is static:
  const
    Khrshaderfloatcontrolsextensionname* = "VK_KHR_shader_float_controls" ## Generated based on /usr/include/vulkan/vulkan_core.h:10068:9
else:
  let Khrshaderfloatcontrolsextensionname* = "VK_KHR_shader_float_controls" ## Generated based on /usr/include/vulkan/vulkan_core.h:10068:9
when 1 is static:
  const
    Khrdepthstencilresolve* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10076:9
else:
  let Khrdepthstencilresolve* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10076:9
when 1 is static:
  const
    Khrdepthstencilresolvespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10077:9
else:
  let Khrdepthstencilresolvespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10077:9
when "VK_KHR_depth_stencil_resolve" is static:
  const
    Khrdepthstencilresolveextensionname* = "VK_KHR_depth_stencil_resolve" ## Generated based on /usr/include/vulkan/vulkan_core.h:10078:9
else:
  let Khrdepthstencilresolveextensionname* = "VK_KHR_depth_stencil_resolve" ## Generated based on /usr/include/vulkan/vulkan_core.h:10078:9
when 1 is static:
  const
    Khrswapchainmutableformat* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10090:9
else:
  let Khrswapchainmutableformat* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10090:9
when 1 is static:
  const
    Khrswapchainmutableformatspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10091:9
else:
  let Khrswapchainmutableformatspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10091:9
when "VK_KHR_swapchain_mutable_format" is static:
  const
    Khrswapchainmutableformatextensionname* = "VK_KHR_swapchain_mutable_format" ## Generated based on /usr/include/vulkan/vulkan_core.h:10092:9
else:
  let Khrswapchainmutableformatextensionname* = "VK_KHR_swapchain_mutable_format" ## Generated based on /usr/include/vulkan/vulkan_core.h:10092:9
when 1 is static:
  const
    Khrtimelinesemaphore* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10096:9
else:
  let Khrtimelinesemaphore* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10096:9
when 2 is static:
  const
    Khrtimelinesemaphorespecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:10097:9
else:
  let Khrtimelinesemaphorespecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:10097:9
when "VK_KHR_timeline_semaphore" is static:
  const
    Khrtimelinesemaphoreextensionname* = "VK_KHR_timeline_semaphore" ## Generated based on /usr/include/vulkan/vulkan_core.h:10098:9
else:
  let Khrtimelinesemaphoreextensionname* = "VK_KHR_timeline_semaphore" ## Generated based on /usr/include/vulkan/vulkan_core.h:10098:9
when 1 is static:
  const
    Khrvulkanmemorymodel* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10139:9
else:
  let Khrvulkanmemorymodel* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10139:9
when 3 is static:
  const
    Khrvulkanmemorymodelspecversion* = 3 ## Generated based on /usr/include/vulkan/vulkan_core.h:10140:9
else:
  let Khrvulkanmemorymodelspecversion* = 3 ## Generated based on /usr/include/vulkan/vulkan_core.h:10140:9
when "VK_KHR_vulkan_memory_model" is static:
  const
    Khrvulkanmemorymodelextensionname* = "VK_KHR_vulkan_memory_model" ## Generated based on /usr/include/vulkan/vulkan_core.h:10141:9
else:
  let Khrvulkanmemorymodelextensionname* = "VK_KHR_vulkan_memory_model" ## Generated based on /usr/include/vulkan/vulkan_core.h:10141:9
when 1 is static:
  const
    Khrshaderterminateinvocation* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10147:9
else:
  let Khrshaderterminateinvocation* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10147:9
when 1 is static:
  const
    Khrshaderterminateinvocationspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10148:9
else:
  let Khrshaderterminateinvocationspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10148:9
when "VK_KHR_shader_terminate_invocation" is static:
  const
    Khrshaderterminateinvocationextensionname* = "VK_KHR_shader_terminate_invocation" ## Generated based on /usr/include/vulkan/vulkan_core.h:10149:9
else:
  let Khrshaderterminateinvocationextensionname* = "VK_KHR_shader_terminate_invocation" ## Generated based on /usr/include/vulkan/vulkan_core.h:10149:9
when 1 is static:
  const
    Khrfragmentshadingrate* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10155:9
else:
  let Khrfragmentshadingrate* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10155:9
when 2 is static:
  const
    Khrfragmentshadingratespecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:10156:9
else:
  let Khrfragmentshadingratespecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:10156:9
when "VK_KHR_fragment_shading_rate" is static:
  const
    Khrfragmentshadingrateextensionname* = "VK_KHR_fragment_shading_rate" ## Generated based on /usr/include/vulkan/vulkan_core.h:10157:9
else:
  let Khrfragmentshadingrateextensionname* = "VK_KHR_fragment_shading_rate" ## Generated based on /usr/include/vulkan/vulkan_core.h:10157:9
when 1 is static:
  const
    Khrdynamicrenderinglocalread* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10235:9
else:
  let Khrdynamicrenderinglocalread* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10235:9
when 1 is static:
  const
    Khrdynamicrenderinglocalreadspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10236:9
else:
  let Khrdynamicrenderinglocalreadspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10236:9
when "VK_KHR_dynamic_rendering_local_read" is static:
  const
    Khrdynamicrenderinglocalreadextensionname* = "VK_KHR_dynamic_rendering_local_read" ## Generated based on /usr/include/vulkan/vulkan_core.h:10237:9
else:
  let Khrdynamicrenderinglocalreadextensionname* = "VK_KHR_dynamic_rendering_local_read" ## Generated based on /usr/include/vulkan/vulkan_core.h:10237:9
when 1 is static:
  const
    Khrshaderquadcontrol* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10275:9
else:
  let Khrshaderquadcontrol* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10275:9
when 1 is static:
  const
    Khrshaderquadcontrolspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10276:9
else:
  let Khrshaderquadcontrolspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10276:9
when "VK_KHR_shader_quad_control" is static:
  const
    Khrshaderquadcontrolextensionname* = "VK_KHR_shader_quad_control" ## Generated based on /usr/include/vulkan/vulkan_core.h:10277:9
else:
  let Khrshaderquadcontrolextensionname* = "VK_KHR_shader_quad_control" ## Generated based on /usr/include/vulkan/vulkan_core.h:10277:9
when 1 is static:
  const
    Khrspirv14* = 1          ## Generated based on /usr/include/vulkan/vulkan_core.h:10287:9
else:
  let Khrspirv14* = 1        ## Generated based on /usr/include/vulkan/vulkan_core.h:10287:9
when 1 is static:
  const
    Khrspirv14specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10288:9
else:
  let Khrspirv14specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10288:9
when "VK_KHR_spirv_1_4" is static:
  const
    Khrspirv14extensionname* = "VK_KHR_spirv_1_4" ## Generated based on /usr/include/vulkan/vulkan_core.h:10289:9
else:
  let Khrspirv14extensionname* = "VK_KHR_spirv_1_4" ## Generated based on /usr/include/vulkan/vulkan_core.h:10289:9
when 1 is static:
  const
    Khrsurfaceprotectedcapabilities* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10293:9
else:
  let Khrsurfaceprotectedcapabilities* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10293:9
when 1 is static:
  const
    Khrsurfaceprotectedcapabilitiesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10294:9
else:
  let Khrsurfaceprotectedcapabilitiesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10294:9
when "VK_KHR_surface_protected_capabilities" is static:
  const
    Khrsurfaceprotectedcapabilitiesextensionname* = "VK_KHR_surface_protected_capabilities" ## Generated based on /usr/include/vulkan/vulkan_core.h:10295:9
else:
  let Khrsurfaceprotectedcapabilitiesextensionname* = "VK_KHR_surface_protected_capabilities" ## Generated based on /usr/include/vulkan/vulkan_core.h:10295:9
when 1 is static:
  const
    Khrseparatedepthstencillayouts* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10305:9
else:
  let Khrseparatedepthstencillayouts* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10305:9
when 1 is static:
  const
    Khrseparatedepthstencillayoutsspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10306:9
else:
  let Khrseparatedepthstencillayoutsspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10306:9
when "VK_KHR_separate_depth_stencil_layouts" is static:
  const
    Khrseparatedepthstencillayoutsextensionname* = "VK_KHR_separate_depth_stencil_layouts" ## Generated based on /usr/include/vulkan/vulkan_core.h:10307:9
else:
  let Khrseparatedepthstencillayoutsextensionname* = "VK_KHR_separate_depth_stencil_layouts" ## Generated based on /usr/include/vulkan/vulkan_core.h:10307:9
when 1 is static:
  const
    Khrpresentwait* = 1      ## Generated based on /usr/include/vulkan/vulkan_core.h:10317:9
else:
  let Khrpresentwait* = 1    ## Generated based on /usr/include/vulkan/vulkan_core.h:10317:9
when 1 is static:
  const
    Khrpresentwaitspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10318:9
else:
  let Khrpresentwaitspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10318:9
when "VK_KHR_present_wait" is static:
  const
    Khrpresentwaitextensionname* = "VK_KHR_present_wait" ## Generated based on /usr/include/vulkan/vulkan_core.h:10319:9
else:
  let Khrpresentwaitextensionname* = "VK_KHR_present_wait" ## Generated based on /usr/include/vulkan/vulkan_core.h:10319:9
when 1 is static:
  const
    Khruniformbufferstandardlayout* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10338:9
else:
  let Khruniformbufferstandardlayout* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10338:9
when 1 is static:
  const
    Khruniformbufferstandardlayoutspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10339:9
else:
  let Khruniformbufferstandardlayoutspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10339:9
when "VK_KHR_uniform_buffer_standard_layout" is static:
  const
    Khruniformbufferstandardlayoutextensionname* = "VK_KHR_uniform_buffer_standard_layout" ## Generated based on /usr/include/vulkan/vulkan_core.h:10340:9
else:
  let Khruniformbufferstandardlayoutextensionname* = "VK_KHR_uniform_buffer_standard_layout" ## Generated based on /usr/include/vulkan/vulkan_core.h:10340:9
when 1 is static:
  const
    Khrbufferdeviceaddress* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10346:9
else:
  let Khrbufferdeviceaddress* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10346:9
when 1 is static:
  const
    Khrbufferdeviceaddressspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10347:9
else:
  let Khrbufferdeviceaddressspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10347:9
when "VK_KHR_buffer_device_address" is static:
  const
    Khrbufferdeviceaddressextensionname* = "VK_KHR_buffer_device_address" ## Generated based on /usr/include/vulkan/vulkan_core.h:10348:9
else:
  let Khrbufferdeviceaddressextensionname* = "VK_KHR_buffer_device_address" ## Generated based on /usr/include/vulkan/vulkan_core.h:10348:9
when 1 is static:
  const
    Khrdeferredhostoperations* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10379:9
else:
  let Khrdeferredhostoperations* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10379:9
when 4 is static:
  const
    Khrdeferredhostoperationsspecversion* = 4 ## Generated based on /usr/include/vulkan/vulkan_core.h:10381:9
else:
  let Khrdeferredhostoperationsspecversion* = 4 ## Generated based on /usr/include/vulkan/vulkan_core.h:10381:9
when "VK_KHR_deferred_host_operations" is static:
  const
    Khrdeferredhostoperationsextensionname* = "VK_KHR_deferred_host_operations" ## Generated based on /usr/include/vulkan/vulkan_core.h:10382:9
else:
  let Khrdeferredhostoperationsextensionname* = "VK_KHR_deferred_host_operations" ## Generated based on /usr/include/vulkan/vulkan_core.h:10382:9
when 1 is static:
  const
    Khrpipelineexecutableproperties* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10415:9
else:
  let Khrpipelineexecutableproperties* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10415:9
when 1 is static:
  const
    Khrpipelineexecutablepropertiesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10416:9
else:
  let Khrpipelineexecutablepropertiesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10416:9
when "VK_KHR_pipeline_executable_properties" is static:
  const
    Khrpipelineexecutablepropertiesextensionname* = "VK_KHR_pipeline_executable_properties" ## Generated based on /usr/include/vulkan/vulkan_core.h:10417:9
else:
  let Khrpipelineexecutablepropertiesextensionname* = "VK_KHR_pipeline_executable_properties" ## Generated based on /usr/include/vulkan/vulkan_core.h:10417:9
when 1 is static:
  const
    Khrmapmemory2* = 1       ## Generated based on /usr/include/vulkan/vulkan_core.h:10506:9
else:
  let Khrmapmemory2* = 1     ## Generated based on /usr/include/vulkan/vulkan_core.h:10506:9
when 1 is static:
  const
    Khrmapmemory2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10507:9
else:
  let Khrmapmemory2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10507:9
when "VK_KHR_map_memory2" is static:
  const
    Khrmapmemory2extensionname* = "VK_KHR_map_memory2" ## Generated based on /usr/include/vulkan/vulkan_core.h:10508:9
else:
  let Khrmapmemory2extensionname* = "VK_KHR_map_memory2" ## Generated based on /usr/include/vulkan/vulkan_core.h:10508:9
when 1 is static:
  const
    Khrshaderintegerdotproduct* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10547:9
else:
  let Khrshaderintegerdotproduct* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10547:9
when 1 is static:
  const
    Khrshaderintegerdotproductspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10548:9
else:
  let Khrshaderintegerdotproductspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10548:9
when "VK_KHR_shader_integer_dot_product" is static:
  const
    Khrshaderintegerdotproductextensionname* = "VK_KHR_shader_integer_dot_product" ## Generated based on /usr/include/vulkan/vulkan_core.h:10549:9
else:
  let Khrshaderintegerdotproductextensionname* = "VK_KHR_shader_integer_dot_product" ## Generated based on /usr/include/vulkan/vulkan_core.h:10549:9
when 1 is static:
  const
    Khrpipelinelibrary* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:10557:9
else:
  let Khrpipelinelibrary* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10557:9
when 1 is static:
  const
    Khrpipelinelibraryspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10558:9
else:
  let Khrpipelinelibraryspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10558:9
when "VK_KHR_pipeline_library" is static:
  const
    Khrpipelinelibraryextensionname* = "VK_KHR_pipeline_library" ## Generated based on /usr/include/vulkan/vulkan_core.h:10559:9
else:
  let Khrpipelinelibraryextensionname* = "VK_KHR_pipeline_library" ## Generated based on /usr/include/vulkan/vulkan_core.h:10559:9
when 1 is static:
  const
    Khrshadernonsemanticinfo* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10570:9
else:
  let Khrshadernonsemanticinfo* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10570:9
when 1 is static:
  const
    Khrshadernonsemanticinfospecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10571:9
else:
  let Khrshadernonsemanticinfospecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10571:9
when "VK_KHR_shader_non_semantic_info" is static:
  const
    Khrshadernonsemanticinfoextensionname* = "VK_KHR_shader_non_semantic_info" ## Generated based on /usr/include/vulkan/vulkan_core.h:10572:9
else:
  let Khrshadernonsemanticinfoextensionname* = "VK_KHR_shader_non_semantic_info" ## Generated based on /usr/include/vulkan/vulkan_core.h:10572:9
when 1 is static:
  const
    Khrpresentid* = 1        ## Generated based on /usr/include/vulkan/vulkan_core.h:10576:9
else:
  let Khrpresentid* = 1      ## Generated based on /usr/include/vulkan/vulkan_core.h:10576:9
when 1 is static:
  const
    Khrpresentidspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10577:9
else:
  let Khrpresentidspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10577:9
when "VK_KHR_present_id" is static:
  const
    Khrpresentidextensionname* = "VK_KHR_present_id" ## Generated based on /usr/include/vulkan/vulkan_core.h:10578:9
else:
  let Khrpresentidextensionname* = "VK_KHR_present_id" ## Generated based on /usr/include/vulkan/vulkan_core.h:10578:9
when 1 is static:
  const
    Khrvideoencodequeue* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10595:9
else:
  let Khrvideoencodequeue* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10595:9
when 12 is static:
  const
    Khrvideoencodequeuespecversion* = 12 ## Generated based on /usr/include/vulkan/vulkan_core.h:10596:9
else:
  let Khrvideoencodequeuespecversion* = 12 ## Generated based on /usr/include/vulkan/vulkan_core.h:10596:9
when "VK_KHR_video_encode_queue" is static:
  const
    Khrvideoencodequeueextensionname* = "VK_KHR_video_encode_queue" ## Generated based on /usr/include/vulkan/vulkan_core.h:10597:9
else:
  let Khrvideoencodequeueextensionname* = "VK_KHR_video_encode_queue" ## Generated based on /usr/include/vulkan/vulkan_core.h:10597:9
when 1 is static:
  const
    Khrsynchronization2* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10772:9
else:
  let Khrsynchronization2* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10772:9
when 1 is static:
  const
    Khrsynchronization2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10773:9
else:
  let Khrsynchronization2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10773:9
when "VK_KHR_synchronization2" is static:
  const
    Khrsynchronization2extensionname* = "VK_KHR_synchronization2" ## Generated based on /usr/include/vulkan/vulkan_core.h:10774:9
else:
  let Khrsynchronization2extensionname* = "VK_KHR_synchronization2" ## Generated based on /usr/include/vulkan/vulkan_core.h:10774:9
when 1 is static:
  const
    Khrfragmentshaderbarycentric* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10873:9
else:
  let Khrfragmentshaderbarycentric* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10873:9
when 1 is static:
  const
    Khrfragmentshaderbarycentricspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10874:9
else:
  let Khrfragmentshaderbarycentricspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10874:9
when "VK_KHR_fragment_shader_barycentric" is static:
  const
    Khrfragmentshaderbarycentricextensionname* = "VK_KHR_fragment_shader_barycentric" ## Generated based on /usr/include/vulkan/vulkan_core.h:10875:9
else:
  let Khrfragmentshaderbarycentricextensionname* = "VK_KHR_fragment_shader_barycentric" ## Generated based on /usr/include/vulkan/vulkan_core.h:10875:9
when 1 is static:
  const
    Khrshadersubgroupuniformcontrolflow* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10891:9
else:
  let Khrshadersubgroupuniformcontrolflow* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10891:9
when 1 is static:
  const
    Khrshadersubgroupuniformcontrolflowspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10892:9
else:
  let Khrshadersubgroupuniformcontrolflowspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10892:9
when "VK_KHR_shader_subgroup_uniform_control_flow" is static:
  const
    Khrshadersubgroupuniformcontrolflowextensionname* = "VK_KHR_shader_subgroup_uniform_control_flow" ## Generated based on /usr/include/vulkan/vulkan_core.h:10893:9
else:
  let Khrshadersubgroupuniformcontrolflowextensionname* = "VK_KHR_shader_subgroup_uniform_control_flow" ## Generated based on /usr/include/vulkan/vulkan_core.h:10893:9
when 1 is static:
  const
    Khrzeroinitializeworkgroupmemory* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10903:9
else:
  let Khrzeroinitializeworkgroupmemory* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10903:9
when 1 is static:
  const
    Khrzeroinitializeworkgroupmemoryspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10904:9
else:
  let Khrzeroinitializeworkgroupmemoryspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10904:9
when "VK_KHR_zero_initialize_workgroup_memory" is static:
  const
    Khrzeroinitializeworkgroupmemoryextensionname* = "VK_KHR_zero_initialize_workgroup_memory" ## Generated based on /usr/include/vulkan/vulkan_core.h:10905:9
else:
  let Khrzeroinitializeworkgroupmemoryextensionname* = "VK_KHR_zero_initialize_workgroup_memory" ## Generated based on /usr/include/vulkan/vulkan_core.h:10905:9
when 1 is static:
  const
    Khrworkgroupmemoryexplicitlayout* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10911:9
else:
  let Khrworkgroupmemoryexplicitlayout* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10911:9
when 1 is static:
  const
    Khrworkgroupmemoryexplicitlayoutspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10912:9
else:
  let Khrworkgroupmemoryexplicitlayoutspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10912:9
when "VK_KHR_workgroup_memory_explicit_layout" is static:
  const
    Khrworkgroupmemoryexplicitlayoutextensionname* = "VK_KHR_workgroup_memory_explicit_layout" ## Generated based on /usr/include/vulkan/vulkan_core.h:10913:9
else:
  let Khrworkgroupmemoryexplicitlayoutextensionname* = "VK_KHR_workgroup_memory_explicit_layout" ## Generated based on /usr/include/vulkan/vulkan_core.h:10913:9
when 1 is static:
  const
    Khrcopycommands2* = 1    ## Generated based on /usr/include/vulkan/vulkan_core.h:10926:9
else:
  let Khrcopycommands2* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:10926:9
when 1 is static:
  const
    Khrcopycommands2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10927:9
else:
  let Khrcopycommands2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10927:9
when "VK_KHR_copy_commands2" is static:
  const
    Khrcopycommands2extensionname* = "VK_KHR_copy_commands2" ## Generated based on /usr/include/vulkan/vulkan_core.h:10928:9
else:
  let Khrcopycommands2extensionname* = "VK_KHR_copy_commands2" ## Generated based on /usr/include/vulkan/vulkan_core.h:10928:9
when 1 is static:
  const
    Khrformatfeatureflags2* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10986:9
else:
  let Khrformatfeatureflags2* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10986:9
when 2 is static:
  const
    Khrformatfeatureflags2specversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:10987:9
else:
  let Khrformatfeatureflags2specversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:10987:9
when "VK_KHR_format_feature_flags2" is static:
  const
    Khrformatfeatureflags2extensionname* = "VK_KHR_format_feature_flags2" ## Generated based on /usr/include/vulkan/vulkan_core.h:10988:9
else:
  let Khrformatfeatureflags2extensionname* = "VK_KHR_format_feature_flags2" ## Generated based on /usr/include/vulkan/vulkan_core.h:10988:9
when 1 is static:
  const
    Khrraytracingmaintenance1* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10998:9
else:
  let Khrraytracingmaintenance1* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10998:9
when 1 is static:
  const
    Khrraytracingmaintenance1specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10999:9
else:
  let Khrraytracingmaintenance1specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:10999:9
when "VK_KHR_ray_tracing_maintenance1" is static:
  const
    Khrraytracingmaintenance1extensionname* = "VK_KHR_ray_tracing_maintenance1" ## Generated based on /usr/include/vulkan/vulkan_core.h:11000:9
else:
  let Khrraytracingmaintenance1extensionname* = "VK_KHR_ray_tracing_maintenance1" ## Generated based on /usr/include/vulkan/vulkan_core.h:11000:9
when 1 is static:
  const
    Khrportabilityenumeration* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11035:9
else:
  let Khrportabilityenumeration* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11035:9
when 1 is static:
  const
    Khrportabilityenumerationspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11036:9
else:
  let Khrportabilityenumerationspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11036:9
when "VK_KHR_portability_enumeration" is static:
  const
    Khrportabilityenumerationextensionname* = "VK_KHR_portability_enumeration" ## Generated based on /usr/include/vulkan/vulkan_core.h:11037:9
else:
  let Khrportabilityenumerationextensionname* = "VK_KHR_portability_enumeration" ## Generated based on /usr/include/vulkan/vulkan_core.h:11037:9
when 1 is static:
  const
    Khrmaintenance4* = 1     ## Generated based on /usr/include/vulkan/vulkan_core.h:11041:9
else:
  let Khrmaintenance4* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:11041:9
when 2 is static:
  const
    Khrmaintenance4specversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:11042:9
else:
  let Khrmaintenance4specversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:11042:9
when "VK_KHR_maintenance4" is static:
  const
    Khrmaintenance4extensionname* = "VK_KHR_maintenance4" ## Generated based on /usr/include/vulkan/vulkan_core.h:11043:9
else:
  let Khrmaintenance4extensionname* = "VK_KHR_maintenance4" ## Generated based on /usr/include/vulkan/vulkan_core.h:11043:9
when 1 is static:
  const
    Khrshadersubgrouprotate* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11076:9
else:
  let Khrshadersubgrouprotate* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11076:9
when 2 is static:
  const
    Khrshadersubgrouprotatespecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:11077:9
else:
  let Khrshadersubgrouprotatespecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:11077:9
when "VK_KHR_shader_subgroup_rotate" is static:
  const
    Khrshadersubgrouprotateextensionname* = "VK_KHR_shader_subgroup_rotate" ## Generated based on /usr/include/vulkan/vulkan_core.h:11078:9
else:
  let Khrshadersubgrouprotateextensionname* = "VK_KHR_shader_subgroup_rotate" ## Generated based on /usr/include/vulkan/vulkan_core.h:11078:9
when 1 is static:
  const
    Khrshadermaximalreconvergence* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11089:9
else:
  let Khrshadermaximalreconvergence* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11089:9
when 1 is static:
  const
    Khrshadermaximalreconvergencespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11090:9
else:
  let Khrshadermaximalreconvergencespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11090:9
when "VK_KHR_shader_maximal_reconvergence" is static:
  const
    Khrshadermaximalreconvergenceextensionname* = "VK_KHR_shader_maximal_reconvergence" ## Generated based on /usr/include/vulkan/vulkan_core.h:11091:9
else:
  let Khrshadermaximalreconvergenceextensionname* = "VK_KHR_shader_maximal_reconvergence" ## Generated based on /usr/include/vulkan/vulkan_core.h:11091:9
when 1 is static:
  const
    Khrmaintenance5* = 1     ## Generated based on /usr/include/vulkan/vulkan_core.h:11101:9
else:
  let Khrmaintenance5* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:11101:9
when 1 is static:
  const
    Khrmaintenance5specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11102:9
else:
  let Khrmaintenance5specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11102:9
when "VK_KHR_maintenance5" is static:
  const
    Khrmaintenance5extensionname* = "VK_KHR_maintenance5" ## Generated based on /usr/include/vulkan/vulkan_core.h:11103:9
else:
  let Khrmaintenance5extensionname* = "VK_KHR_maintenance5" ## Generated based on /usr/include/vulkan/vulkan_core.h:11103:9
when 1 is static:
  const
    Khrraytracingpositionfetch* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11262:9
else:
  let Khrraytracingpositionfetch* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11262:9
when 1 is static:
  const
    Khrraytracingpositionfetchspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11263:9
else:
  let Khrraytracingpositionfetchspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11263:9
when "VK_KHR_ray_tracing_position_fetch" is static:
  const
    Khrraytracingpositionfetchextensionname* = "VK_KHR_ray_tracing_position_fetch" ## Generated based on /usr/include/vulkan/vulkan_core.h:11264:9
else:
  let Khrraytracingpositionfetchextensionname* = "VK_KHR_ray_tracing_position_fetch" ## Generated based on /usr/include/vulkan/vulkan_core.h:11264:9
when 1 is static:
  const
    Khrcooperativematrix* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11274:9
else:
  let Khrcooperativematrix* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11274:9
when 2 is static:
  const
    Khrcooperativematrixspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:11275:9
else:
  let Khrcooperativematrixspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:11275:9
when "VK_KHR_cooperative_matrix" is static:
  const
    Khrcooperativematrixextensionname* = "VK_KHR_cooperative_matrix" ## Generated based on /usr/include/vulkan/vulkan_core.h:11276:9
else:
  let Khrcooperativematrixextensionname* = "VK_KHR_cooperative_matrix" ## Generated based on /usr/include/vulkan/vulkan_core.h:11276:9
when 1 is static:
  const
    Khrvideodecodeav1* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:11353:9
else:
  let Khrvideodecodeav1* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11353:9
when cast[cuint](7'i64) is static:
  const
    Maxvideoav1referencesperframekhr* = cast[cuint](7'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:11356:9
else:
  let Maxvideoav1referencesperframekhr* = cast[cuint](7'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:11356:9
when 1 is static:
  const
    Khrvideodecodeav1specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11357:9
else:
  let Khrvideodecodeav1specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11357:9
when "VK_KHR_video_decode_av1" is static:
  const
    Khrvideodecodeav1extensionname* = "VK_KHR_video_decode_av1" ## Generated based on /usr/include/vulkan/vulkan_core.h:11358:9
else:
  let Khrvideodecodeav1extensionname* = "VK_KHR_video_decode_av1" ## Generated based on /usr/include/vulkan/vulkan_core.h:11358:9
when 1 is static:
  const
    Khrvideomaintenance1* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11398:9
else:
  let Khrvideomaintenance1* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11398:9
when 1 is static:
  const
    Khrvideomaintenance1specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11399:9
else:
  let Khrvideomaintenance1specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11399:9
when "VK_KHR_video_maintenance1" is static:
  const
    Khrvideomaintenance1extensionname* = "VK_KHR_video_maintenance1" ## Generated based on /usr/include/vulkan/vulkan_core.h:11400:9
else:
  let Khrvideomaintenance1extensionname* = "VK_KHR_video_maintenance1" ## Generated based on /usr/include/vulkan/vulkan_core.h:11400:9
when 1 is static:
  const
    Khrvertexattributedivisor* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11418:9
else:
  let Khrvertexattributedivisor* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11418:9
when 1 is static:
  const
    Khrvertexattributedivisorspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11419:9
else:
  let Khrvertexattributedivisorspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11419:9
when "VK_KHR_vertex_attribute_divisor" is static:
  const
    Khrvertexattributedivisorextensionname* = "VK_KHR_vertex_attribute_divisor" ## Generated based on /usr/include/vulkan/vulkan_core.h:11420:9
else:
  let Khrvertexattributedivisorextensionname* = "VK_KHR_vertex_attribute_divisor" ## Generated based on /usr/include/vulkan/vulkan_core.h:11420:9
when 1 is static:
  const
    Khrloadstoreopnone* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:11450:9
else:
  let Khrloadstoreopnone* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11450:9
when 1 is static:
  const
    Khrloadstoreopnonespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11451:9
else:
  let Khrloadstoreopnonespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11451:9
when "VK_KHR_load_store_op_none" is static:
  const
    Khrloadstoreopnoneextensionname* = "VK_KHR_load_store_op_none" ## Generated based on /usr/include/vulkan/vulkan_core.h:11452:9
else:
  let Khrloadstoreopnoneextensionname* = "VK_KHR_load_store_op_none" ## Generated based on /usr/include/vulkan/vulkan_core.h:11452:9
when 1 is static:
  const
    Khrshaderfloatcontrols2* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11456:9
else:
  let Khrshaderfloatcontrols2* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11456:9
when 1 is static:
  const
    Khrshaderfloatcontrols2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11457:9
else:
  let Khrshaderfloatcontrols2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11457:9
when "VK_KHR_shader_float_controls2" is static:
  const
    Khrshaderfloatcontrols2extensionname* = "VK_KHR_shader_float_controls2" ## Generated based on /usr/include/vulkan/vulkan_core.h:11458:9
else:
  let Khrshaderfloatcontrols2extensionname* = "VK_KHR_shader_float_controls2" ## Generated based on /usr/include/vulkan/vulkan_core.h:11458:9
when 1 is static:
  const
    Khrindextypeuint8* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:11468:9
else:
  let Khrindextypeuint8* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11468:9
when 1 is static:
  const
    Khrindextypeuint8specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11469:9
else:
  let Khrindextypeuint8specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11469:9
when "VK_KHR_index_type_uint8" is static:
  const
    Khrindextypeuint8extensionname* = "VK_KHR_index_type_uint8" ## Generated based on /usr/include/vulkan/vulkan_core.h:11470:9
else:
  let Khrindextypeuint8extensionname* = "VK_KHR_index_type_uint8" ## Generated based on /usr/include/vulkan/vulkan_core.h:11470:9
when 1 is static:
  const
    Khrlinerasterization* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11480:9
else:
  let Khrlinerasterization* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11480:9
when 1 is static:
  const
    Khrlinerasterizationspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11481:9
else:
  let Khrlinerasterizationspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11481:9
when "VK_KHR_line_rasterization" is static:
  const
    Khrlinerasterizationextensionname* = "VK_KHR_line_rasterization" ## Generated based on /usr/include/vulkan/vulkan_core.h:11482:9
else:
  let Khrlinerasterizationextensionname* = "VK_KHR_line_rasterization" ## Generated based on /usr/include/vulkan/vulkan_core.h:11482:9
when 1 is static:
  const
    Khrcalibratedtimestamps* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11532:9
else:
  let Khrcalibratedtimestamps* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11532:9
when 1 is static:
  const
    Khrcalibratedtimestampsspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11533:9
else:
  let Khrcalibratedtimestampsspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11533:9
when "VK_KHR_calibrated_timestamps" is static:
  const
    Khrcalibratedtimestampsextensionname* = "VK_KHR_calibrated_timestamps" ## Generated based on /usr/include/vulkan/vulkan_core.h:11534:9
else:
  let Khrcalibratedtimestampsextensionname* = "VK_KHR_calibrated_timestamps" ## Generated based on /usr/include/vulkan/vulkan_core.h:11534:9
when 1 is static:
  const
    Khrshaderexpectassume* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11572:9
else:
  let Khrshaderexpectassume* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11572:9
when 1 is static:
  const
    Khrshaderexpectassumespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11573:9
else:
  let Khrshaderexpectassumespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11573:9
when "VK_KHR_shader_expect_assume" is static:
  const
    Khrshaderexpectassumeextensionname* = "VK_KHR_shader_expect_assume" ## Generated based on /usr/include/vulkan/vulkan_core.h:11574:9
else:
  let Khrshaderexpectassumeextensionname* = "VK_KHR_shader_expect_assume" ## Generated based on /usr/include/vulkan/vulkan_core.h:11574:9
when 1 is static:
  const
    Khrmaintenance6* = 1     ## Generated based on /usr/include/vulkan/vulkan_core.h:11584:9
else:
  let Khrmaintenance6* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:11584:9
when 1 is static:
  const
    Khrmaintenance6specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11585:9
else:
  let Khrmaintenance6specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11585:9
when "VK_KHR_maintenance6" is static:
  const
    Khrmaintenance6extensionname* = "VK_KHR_maintenance6" ## Generated based on /usr/include/vulkan/vulkan_core.h:11586:9
else:
  let Khrmaintenance6extensionname* = "VK_KHR_maintenance6" ## Generated based on /usr/include/vulkan/vulkan_core.h:11586:9
when 1 is static:
  const
    Extdebugreport* = 1      ## Generated based on /usr/include/vulkan/vulkan_core.h:11702:9
else:
  let Extdebugreport* = 1    ## Generated based on /usr/include/vulkan/vulkan_core.h:11702:9
when 10 is static:
  const
    Extdebugreportspecversion* = 10 ## Generated based on /usr/include/vulkan/vulkan_core.h:11704:9
else:
  let Extdebugreportspecversion* = 10 ## Generated based on /usr/include/vulkan/vulkan_core.h:11704:9
when "VK_EXT_debug_report" is static:
  const
    Extdebugreportextensionname* = "VK_EXT_debug_report" ## Generated based on /usr/include/vulkan/vulkan_core.h:11705:9
else:
  let Extdebugreportextensionname* = "VK_EXT_debug_report" ## Generated based on /usr/include/vulkan/vulkan_core.h:11705:9
when 1 is static:
  const
    Nvglslshader* = 1        ## Generated based on /usr/include/vulkan/vulkan_core.h:11812:9
else:
  let Nvglslshader* = 1      ## Generated based on /usr/include/vulkan/vulkan_core.h:11812:9
when 1 is static:
  const
    Nvglslshaderspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11813:9
else:
  let Nvglslshaderspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11813:9
when "VK_NV_glsl_shader" is static:
  const
    Nvglslshaderextensionname* = "VK_NV_glsl_shader" ## Generated based on /usr/include/vulkan/vulkan_core.h:11814:9
else:
  let Nvglslshaderextensionname* = "VK_NV_glsl_shader" ## Generated based on /usr/include/vulkan/vulkan_core.h:11814:9
when 1 is static:
  const
    Extdepthrangeunrestricted* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11818:9
else:
  let Extdepthrangeunrestricted* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11818:9
when 1 is static:
  const
    Extdepthrangeunrestrictedspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11819:9
else:
  let Extdepthrangeunrestrictedspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11819:9
when "VK_EXT_depth_range_unrestricted" is static:
  const
    Extdepthrangeunrestrictedextensionname* = "VK_EXT_depth_range_unrestricted" ## Generated based on /usr/include/vulkan/vulkan_core.h:11820:9
else:
  let Extdepthrangeunrestrictedextensionname* = "VK_EXT_depth_range_unrestricted" ## Generated based on /usr/include/vulkan/vulkan_core.h:11820:9
when 1 is static:
  const
    Imgfiltercubic* = 1      ## Generated based on /usr/include/vulkan/vulkan_core.h:11824:9
else:
  let Imgfiltercubic* = 1    ## Generated based on /usr/include/vulkan/vulkan_core.h:11824:9
when 1 is static:
  const
    Imgfiltercubicspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11825:9
else:
  let Imgfiltercubicspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11825:9
when "VK_IMG_filter_cubic" is static:
  const
    Imgfiltercubicextensionname* = "VK_IMG_filter_cubic" ## Generated based on /usr/include/vulkan/vulkan_core.h:11826:9
else:
  let Imgfiltercubicextensionname* = "VK_IMG_filter_cubic" ## Generated based on /usr/include/vulkan/vulkan_core.h:11826:9
when 1 is static:
  const
    Amdrasterizationorder* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11830:9
else:
  let Amdrasterizationorder* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11830:9
when 1 is static:
  const
    Amdrasterizationorderspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11831:9
else:
  let Amdrasterizationorderspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11831:9
when "VK_AMD_rasterization_order" is static:
  const
    Amdrasterizationorderextensionname* = "VK_AMD_rasterization_order" ## Generated based on /usr/include/vulkan/vulkan_core.h:11832:9
else:
  let Amdrasterizationorderextensionname* = "VK_AMD_rasterization_order" ## Generated based on /usr/include/vulkan/vulkan_core.h:11832:9
when 1 is static:
  const
    Amdshadertrinaryminmax* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11848:9
else:
  let Amdshadertrinaryminmax* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11848:9
when 1 is static:
  const
    Amdshadertrinaryminmaxspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11849:9
else:
  let Amdshadertrinaryminmaxspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11849:9
when "VK_AMD_shader_trinary_minmax" is static:
  const
    Amdshadertrinaryminmaxextensionname* = "VK_AMD_shader_trinary_minmax" ## Generated based on /usr/include/vulkan/vulkan_core.h:11850:9
else:
  let Amdshadertrinaryminmaxextensionname* = "VK_AMD_shader_trinary_minmax" ## Generated based on /usr/include/vulkan/vulkan_core.h:11850:9
when 1 is static:
  const
    Amdshaderexplicitvertexparameter* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11854:9
else:
  let Amdshaderexplicitvertexparameter* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11854:9
when 1 is static:
  const
    Amdshaderexplicitvertexparameterspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11855:9
else:
  let Amdshaderexplicitvertexparameterspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11855:9
when "VK_AMD_shader_explicit_vertex_parameter" is static:
  const
    Amdshaderexplicitvertexparameterextensionname* = "VK_AMD_shader_explicit_vertex_parameter" ## Generated based on /usr/include/vulkan/vulkan_core.h:11856:9
else:
  let Amdshaderexplicitvertexparameterextensionname* = "VK_AMD_shader_explicit_vertex_parameter" ## Generated based on /usr/include/vulkan/vulkan_core.h:11856:9
when 1 is static:
  const
    Extdebugmarker* = 1      ## Generated based on /usr/include/vulkan/vulkan_core.h:11860:9
else:
  let Extdebugmarker* = 1    ## Generated based on /usr/include/vulkan/vulkan_core.h:11860:9
when 4 is static:
  const
    Extdebugmarkerspecversion* = 4 ## Generated based on /usr/include/vulkan/vulkan_core.h:11861:9
else:
  let Extdebugmarkerspecversion* = 4 ## Generated based on /usr/include/vulkan/vulkan_core.h:11861:9
when "VK_EXT_debug_marker" is static:
  const
    Extdebugmarkerextensionname* = "VK_EXT_debug_marker" ## Generated based on /usr/include/vulkan/vulkan_core.h:11862:9
else:
  let Extdebugmarkerextensionname* = "VK_EXT_debug_marker" ## Generated based on /usr/include/vulkan/vulkan_core.h:11862:9
when 1 is static:
  const
    Amdgcnshader* = 1        ## Generated based on /usr/include/vulkan/vulkan_core.h:11917:9
else:
  let Amdgcnshader* = 1      ## Generated based on /usr/include/vulkan/vulkan_core.h:11917:9
when 1 is static:
  const
    Amdgcnshaderspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11918:9
else:
  let Amdgcnshaderspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11918:9
when "VK_AMD_gcn_shader" is static:
  const
    Amdgcnshaderextensionname* = "VK_AMD_gcn_shader" ## Generated based on /usr/include/vulkan/vulkan_core.h:11919:9
else:
  let Amdgcnshaderextensionname* = "VK_AMD_gcn_shader" ## Generated based on /usr/include/vulkan/vulkan_core.h:11919:9
when 1 is static:
  const
    Nvdedicatedallocation* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11923:9
else:
  let Nvdedicatedallocation* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11923:9
when 1 is static:
  const
    Nvdedicatedallocationspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11924:9
else:
  let Nvdedicatedallocationspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11924:9
when "VK_NV_dedicated_allocation" is static:
  const
    Nvdedicatedallocationextensionname* = "VK_NV_dedicated_allocation" ## Generated based on /usr/include/vulkan/vulkan_core.h:11925:9
else:
  let Nvdedicatedallocationextensionname* = "VK_NV_dedicated_allocation" ## Generated based on /usr/include/vulkan/vulkan_core.h:11925:9
when 1 is static:
  const
    Exttransformfeedback* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11948:9
else:
  let Exttransformfeedback* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11948:9
when 1 is static:
  const
    Exttransformfeedbackspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11949:9
else:
  let Exttransformfeedbackspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:11949:9
when "VK_EXT_transform_feedback" is static:
  const
    Exttransformfeedbackextensionname* = "VK_EXT_transform_feedback" ## Generated based on /usr/include/vulkan/vulkan_core.h:11950:9
else:
  let Exttransformfeedbackextensionname* = "VK_EXT_transform_feedback" ## Generated based on /usr/include/vulkan/vulkan_core.h:11950:9
when 1 is static:
  const
    Nvxbinaryimport* = 1     ## Generated based on /usr/include/vulkan/vulkan_core.h:12036:9
else:
  let Nvxbinaryimport* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:12036:9
when 1 is static:
  const
    Nvxbinaryimportspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12039:9
else:
  let Nvxbinaryimportspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12039:9
when "VK_NVX_binary_import" is static:
  const
    Nvxbinaryimportextensionname* = "VK_NVX_binary_import" ## Generated based on /usr/include/vulkan/vulkan_core.h:12040:9
else:
  let Nvxbinaryimportextensionname* = "VK_NVX_binary_import" ## Generated based on /usr/include/vulkan/vulkan_core.h:12040:9
when 1 is static:
  const
    Nvximageviewhandle* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:12108:9
else:
  let Nvximageviewhandle* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12108:9
when 2 is static:
  const
    Nvximageviewhandlespecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:12109:9
else:
  let Nvximageviewhandlespecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:12109:9
when "VK_NVX_image_view_handle" is static:
  const
    Nvximageviewhandleextensionname* = "VK_NVX_image_view_handle" ## Generated based on /usr/include/vulkan/vulkan_core.h:12110:9
else:
  let Nvximageviewhandleextensionname* = "VK_NVX_image_view_handle" ## Generated based on /usr/include/vulkan/vulkan_core.h:12110:9
when 1 is static:
  const
    Amddrawindirectcount* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12142:9
else:
  let Amddrawindirectcount* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12142:9
when 2 is static:
  const
    Amddrawindirectcountspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:12143:9
else:
  let Amddrawindirectcountspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:12143:9
when "VK_AMD_draw_indirect_count" is static:
  const
    Amddrawindirectcountextensionname* = "VK_AMD_draw_indirect_count" ## Generated based on /usr/include/vulkan/vulkan_core.h:12144:9
else:
  let Amddrawindirectcountextensionname* = "VK_AMD_draw_indirect_count" ## Generated based on /usr/include/vulkan/vulkan_core.h:12144:9
when 1 is static:
  const
    Amdnegativeviewportheight* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12170:9
else:
  let Amdnegativeviewportheight* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12170:9
when 1 is static:
  const
    Amdnegativeviewportheightspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12171:9
else:
  let Amdnegativeviewportheightspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12171:9
when "VK_AMD_negative_viewport_height" is static:
  const
    Amdnegativeviewportheightextensionname* = "VK_AMD_negative_viewport_height" ## Generated based on /usr/include/vulkan/vulkan_core.h:12172:9
else:
  let Amdnegativeviewportheightextensionname* = "VK_AMD_negative_viewport_height" ## Generated based on /usr/include/vulkan/vulkan_core.h:12172:9
when 1 is static:
  const
    Amdgpushaderhalffloat* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12176:9
else:
  let Amdgpushaderhalffloat* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12176:9
when 2 is static:
  const
    Amdgpushaderhalffloatspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:12177:9
else:
  let Amdgpushaderhalffloatspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:12177:9
when "VK_AMD_gpu_shader_half_float" is static:
  const
    Amdgpushaderhalffloatextensionname* = "VK_AMD_gpu_shader_half_float" ## Generated based on /usr/include/vulkan/vulkan_core.h:12178:9
else:
  let Amdgpushaderhalffloatextensionname* = "VK_AMD_gpu_shader_half_float" ## Generated based on /usr/include/vulkan/vulkan_core.h:12178:9
when 1 is static:
  const
    Amdshaderballot* = 1     ## Generated based on /usr/include/vulkan/vulkan_core.h:12182:9
else:
  let Amdshaderballot* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:12182:9
when 1 is static:
  const
    Amdshaderballotspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12183:9
else:
  let Amdshaderballotspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12183:9
when "VK_AMD_shader_ballot" is static:
  const
    Amdshaderballotextensionname* = "VK_AMD_shader_ballot" ## Generated based on /usr/include/vulkan/vulkan_core.h:12184:9
else:
  let Amdshaderballotextensionname* = "VK_AMD_shader_ballot" ## Generated based on /usr/include/vulkan/vulkan_core.h:12184:9
when 1 is static:
  const
    Amdtexturegatherbiaslod* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12188:9
else:
  let Amdtexturegatherbiaslod* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12188:9
when 1 is static:
  const
    Amdtexturegatherbiaslodspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12189:9
else:
  let Amdtexturegatherbiaslodspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12189:9
when "VK_AMD_texture_gather_bias_lod" is static:
  const
    Amdtexturegatherbiaslodextensionname* = "VK_AMD_texture_gather_bias_lod" ## Generated based on /usr/include/vulkan/vulkan_core.h:12190:9
else:
  let Amdtexturegatherbiaslodextensionname* = "VK_AMD_texture_gather_bias_lod" ## Generated based on /usr/include/vulkan/vulkan_core.h:12190:9
when 1 is static:
  const
    Amdshaderinfo* = 1       ## Generated based on /usr/include/vulkan/vulkan_core.h:12200:9
else:
  let Amdshaderinfo* = 1     ## Generated based on /usr/include/vulkan/vulkan_core.h:12200:9
when 1 is static:
  const
    Amdshaderinfospecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12201:9
else:
  let Amdshaderinfospecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12201:9
when "VK_AMD_shader_info" is static:
  const
    Amdshaderinfoextensionname* = "VK_AMD_shader_info" ## Generated based on /usr/include/vulkan/vulkan_core.h:12202:9
else:
  let Amdshaderinfoextensionname* = "VK_AMD_shader_info" ## Generated based on /usr/include/vulkan/vulkan_core.h:12202:9
when 1 is static:
  const
    Amdshaderimageloadstorelod* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12242:9
else:
  let Amdshaderimageloadstorelod* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12242:9
when 1 is static:
  const
    Amdshaderimageloadstorelodspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12243:9
else:
  let Amdshaderimageloadstorelodspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12243:9
when "VK_AMD_shader_image_load_store_lod" is static:
  const
    Amdshaderimageloadstorelodextensionname* = "VK_AMD_shader_image_load_store_lod" ## Generated based on /usr/include/vulkan/vulkan_core.h:12244:9
else:
  let Amdshaderimageloadstorelodextensionname* = "VK_AMD_shader_image_load_store_lod" ## Generated based on /usr/include/vulkan/vulkan_core.h:12244:9
when 1 is static:
  const
    Nvcornersampledimage* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12248:9
else:
  let Nvcornersampledimage* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12248:9
when 2 is static:
  const
    Nvcornersampledimagespecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:12249:9
else:
  let Nvcornersampledimagespecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:12249:9
when "VK_NV_corner_sampled_image" is static:
  const
    Nvcornersampledimageextensionname* = "VK_NV_corner_sampled_image" ## Generated based on /usr/include/vulkan/vulkan_core.h:12250:9
else:
  let Nvcornersampledimageextensionname* = "VK_NV_corner_sampled_image" ## Generated based on /usr/include/vulkan/vulkan_core.h:12250:9
when 1 is static:
  const
    Imgformatpvrtc* = 1      ## Generated based on /usr/include/vulkan/vulkan_core.h:12260:9
else:
  let Imgformatpvrtc* = 1    ## Generated based on /usr/include/vulkan/vulkan_core.h:12260:9
when 1 is static:
  const
    Imgformatpvrtcspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12261:9
else:
  let Imgformatpvrtcspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12261:9
when "VK_IMG_format_pvrtc" is static:
  const
    Imgformatpvrtcextensionname* = "VK_IMG_format_pvrtc" ## Generated based on /usr/include/vulkan/vulkan_core.h:12262:9
else:
  let Imgformatpvrtcextensionname* = "VK_IMG_format_pvrtc" ## Generated based on /usr/include/vulkan/vulkan_core.h:12262:9
when 1 is static:
  const
    Nvexternalmemorycapabilities* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12266:9
else:
  let Nvexternalmemorycapabilities* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12266:9
when 1 is static:
  const
    Nvexternalmemorycapabilitiesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12267:9
else:
  let Nvexternalmemorycapabilitiesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12267:9
when "VK_NV_external_memory_capabilities" is static:
  const
    Nvexternalmemorycapabilitiesextensionname* = "VK_NV_external_memory_capabilities" ## Generated based on /usr/include/vulkan/vulkan_core.h:12268:9
else:
  let Nvexternalmemorycapabilitiesextensionname* = "VK_NV_external_memory_capabilities" ## Generated based on /usr/include/vulkan/vulkan_core.h:12268:9
when 1 is static:
  const
    Nvexternalmemory* = 1    ## Generated based on /usr/include/vulkan/vulkan_core.h:12309:9
else:
  let Nvexternalmemory* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:12309:9
when 1 is static:
  const
    Nvexternalmemoryspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12310:9
else:
  let Nvexternalmemoryspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12310:9
when "VK_NV_external_memory" is static:
  const
    Nvexternalmemoryextensionname* = "VK_NV_external_memory" ## Generated based on /usr/include/vulkan/vulkan_core.h:12311:9
else:
  let Nvexternalmemoryextensionname* = "VK_NV_external_memory" ## Generated based on /usr/include/vulkan/vulkan_core.h:12311:9
when 1 is static:
  const
    Extvalidationflags* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:12327:9
else:
  let Extvalidationflags* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12327:9
when 3 is static:
  const
    Extvalidationflagsspecversion* = 3 ## Generated based on /usr/include/vulkan/vulkan_core.h:12328:9
else:
  let Extvalidationflagsspecversion* = 3 ## Generated based on /usr/include/vulkan/vulkan_core.h:12328:9
when "VK_EXT_validation_flags" is static:
  const
    Extvalidationflagsextensionname* = "VK_EXT_validation_flags" ## Generated based on /usr/include/vulkan/vulkan_core.h:12329:9
else:
  let Extvalidationflagsextensionname* = "VK_EXT_validation_flags" ## Generated based on /usr/include/vulkan/vulkan_core.h:12329:9
when 1 is static:
  const
    Extshadersubgroupballot* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12346:9
else:
  let Extshadersubgroupballot* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12346:9
when 1 is static:
  const
    Extshadersubgroupballotspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12347:9
else:
  let Extshadersubgroupballotspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12347:9
when "VK_EXT_shader_subgroup_ballot" is static:
  const
    Extshadersubgroupballotextensionname* = "VK_EXT_shader_subgroup_ballot" ## Generated based on /usr/include/vulkan/vulkan_core.h:12348:9
else:
  let Extshadersubgroupballotextensionname* = "VK_EXT_shader_subgroup_ballot" ## Generated based on /usr/include/vulkan/vulkan_core.h:12348:9
when 1 is static:
  const
    Extshadersubgroupvote* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12352:9
else:
  let Extshadersubgroupvote* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12352:9
when 1 is static:
  const
    Extshadersubgroupvotespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12353:9
else:
  let Extshadersubgroupvotespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12353:9
when "VK_EXT_shader_subgroup_vote" is static:
  const
    Extshadersubgroupvoteextensionname* = "VK_EXT_shader_subgroup_vote" ## Generated based on /usr/include/vulkan/vulkan_core.h:12354:9
else:
  let Extshadersubgroupvoteextensionname* = "VK_EXT_shader_subgroup_vote" ## Generated based on /usr/include/vulkan/vulkan_core.h:12354:9
when 1 is static:
  const
    Exttexturecompressionastchdr* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12358:9
else:
  let Exttexturecompressionastchdr* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12358:9
when 1 is static:
  const
    Exttexturecompressionastchdrspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12359:9
else:
  let Exttexturecompressionastchdrspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12359:9
when "VK_EXT_texture_compression_astc_hdr" is static:
  const
    Exttexturecompressionastchdrextensionname* = "VK_EXT_texture_compression_astc_hdr" ## Generated based on /usr/include/vulkan/vulkan_core.h:12360:9
else:
  let Exttexturecompressionastchdrextensionname* = "VK_EXT_texture_compression_astc_hdr" ## Generated based on /usr/include/vulkan/vulkan_core.h:12360:9
when 1 is static:
  const
    Extastcdecodemode* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:12366:9
else:
  let Extastcdecodemode* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12366:9
when 1 is static:
  const
    Extastcdecodemodespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12367:9
else:
  let Extastcdecodemodespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12367:9
when "VK_EXT_astc_decode_mode" is static:
  const
    Extastcdecodemodeextensionname* = "VK_EXT_astc_decode_mode" ## Generated based on /usr/include/vulkan/vulkan_core.h:12368:9
else:
  let Extastcdecodemodeextensionname* = "VK_EXT_astc_decode_mode" ## Generated based on /usr/include/vulkan/vulkan_core.h:12368:9
when 1 is static:
  const
    Extpipelinerobustness* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12384:9
else:
  let Extpipelinerobustness* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12384:9
when 1 is static:
  const
    Extpipelinerobustnessspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12385:9
else:
  let Extpipelinerobustnessspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12385:9
when "VK_EXT_pipeline_robustness" is static:
  const
    Extpipelinerobustnessextensionname* = "VK_EXT_pipeline_robustness" ## Generated based on /usr/include/vulkan/vulkan_core.h:12386:9
else:
  let Extpipelinerobustnessextensionname* = "VK_EXT_pipeline_robustness" ## Generated based on /usr/include/vulkan/vulkan_core.h:12386:9
when 1 is static:
  const
    Extconditionalrendering* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12430:9
else:
  let Extconditionalrendering* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12430:9
when 2 is static:
  const
    Extconditionalrenderingspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:12431:9
else:
  let Extconditionalrenderingspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:12431:9
when "VK_EXT_conditional_rendering" is static:
  const
    Extconditionalrenderingextensionname* = "VK_EXT_conditional_rendering" ## Generated based on /usr/include/vulkan/vulkan_core.h:12432:9
else:
  let Extconditionalrenderingextensionname* = "VK_EXT_conditional_rendering" ## Generated based on /usr/include/vulkan/vulkan_core.h:12432:9
when 1 is static:
  const
    Nvclipspacewscaling* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12474:9
else:
  let Nvclipspacewscaling* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12474:9
when 1 is static:
  const
    Nvclipspacewscalingspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12475:9
else:
  let Nvclipspacewscalingspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12475:9
when "VK_NV_clip_space_w_scaling" is static:
  const
    Nvclipspacewscalingextensionname* = "VK_NV_clip_space_w_scaling" ## Generated based on /usr/include/vulkan/vulkan_core.h:12476:9
else:
  let Nvclipspacewscalingextensionname* = "VK_NV_clip_space_w_scaling" ## Generated based on /usr/include/vulkan/vulkan_core.h:12476:9
when 1 is static:
  const
    Extdirectmodedisplay* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12502:9
else:
  let Extdirectmodedisplay* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12502:9
when 1 is static:
  const
    Extdirectmodedisplayspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12503:9
else:
  let Extdirectmodedisplayspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12503:9
when "VK_EXT_direct_mode_display" is static:
  const
    Extdirectmodedisplayextensionname* = "VK_EXT_direct_mode_display" ## Generated based on /usr/include/vulkan/vulkan_core.h:12504:9
else:
  let Extdirectmodedisplayextensionname* = "VK_EXT_direct_mode_display" ## Generated based on /usr/include/vulkan/vulkan_core.h:12504:9
when 1 is static:
  const
    Extdisplaysurfacecounter* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12515:9
else:
  let Extdisplaysurfacecounter* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12515:9
when 1 is static:
  const
    Extdisplaysurfacecounterspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12516:9
else:
  let Extdisplaysurfacecounterspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12516:9
when "VK_EXT_display_surface_counter" is static:
  const
    Extdisplaysurfacecounterextensionname* = "VK_EXT_display_surface_counter" ## Generated based on /usr/include/vulkan/vulkan_core.h:12517:9
else:
  let Extdisplaysurfacecounterextensionname* = "VK_EXT_display_surface_counter" ## Generated based on /usr/include/vulkan/vulkan_core.h:12517:9
when 1 is static:
  const
    Extdisplaycontrol* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:12552:9
else:
  let Extdisplaycontrol* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12552:9
when 1 is static:
  const
    Extdisplaycontrolspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12553:9
else:
  let Extdisplaycontrolspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12553:9
when "VK_EXT_display_control" is static:
  const
    Extdisplaycontrolextensionname* = "VK_EXT_display_control" ## Generated based on /usr/include/vulkan/vulkan_core.h:12554:9
else:
  let Extdisplaycontrolextensionname* = "VK_EXT_display_control" ## Generated based on /usr/include/vulkan/vulkan_core.h:12554:9
when 1 is static:
  const
    Googledisplaytiming* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12629:9
else:
  let Googledisplaytiming* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12629:9
when 1 is static:
  const
    Googledisplaytimingspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12630:9
else:
  let Googledisplaytimingspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12630:9
when "VK_GOOGLE_display_timing" is static:
  const
    Googledisplaytimingextensionname* = "VK_GOOGLE_display_timing" ## Generated based on /usr/include/vulkan/vulkan_core.h:12631:9
else:
  let Googledisplaytimingextensionname* = "VK_GOOGLE_display_timing" ## Generated based on /usr/include/vulkan/vulkan_core.h:12631:9
when 1 is static:
  const
    Nvsamplemaskoverridecoverage* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12674:9
else:
  let Nvsamplemaskoverridecoverage* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12674:9
when 1 is static:
  const
    Nvsamplemaskoverridecoveragespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12675:9
else:
  let Nvsamplemaskoverridecoveragespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12675:9
when "VK_NV_sample_mask_override_coverage" is static:
  const
    Nvsamplemaskoverridecoverageextensionname* = "VK_NV_sample_mask_override_coverage" ## Generated based on /usr/include/vulkan/vulkan_core.h:12676:9
else:
  let Nvsamplemaskoverridecoverageextensionname* = "VK_NV_sample_mask_override_coverage" ## Generated based on /usr/include/vulkan/vulkan_core.h:12676:9
when 1 is static:
  const
    Nvgeometryshaderpassthrough* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12680:9
else:
  let Nvgeometryshaderpassthrough* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12680:9
when 1 is static:
  const
    Nvgeometryshaderpassthroughspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12681:9
else:
  let Nvgeometryshaderpassthroughspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12681:9
when "VK_NV_geometry_shader_passthrough" is static:
  const
    Nvgeometryshaderpassthroughextensionname* = "VK_NV_geometry_shader_passthrough" ## Generated based on /usr/include/vulkan/vulkan_core.h:12682:9
else:
  let Nvgeometryshaderpassthroughextensionname* = "VK_NV_geometry_shader_passthrough" ## Generated based on /usr/include/vulkan/vulkan_core.h:12682:9
when 1 is static:
  const
    Nvviewportarray2* = 1    ## Generated based on /usr/include/vulkan/vulkan_core.h:12686:9
else:
  let Nvviewportarray2* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:12686:9
when 1 is static:
  const
    Nvviewportarray2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12687:9
else:
  let Nvviewportarray2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12687:9
when "VK_NV_viewport_array2" is static:
  const
    Nvviewportarray2extensionname* = "VK_NV_viewport_array2" ## Generated based on /usr/include/vulkan/vulkan_core.h:12688:9
else:
  let Nvviewportarray2extensionname* = "VK_NV_viewport_array2" ## Generated based on /usr/include/vulkan/vulkan_core.h:12688:9
when Nvviewportarray2specversion is typedesc:
  type
    Nvviewportarray2specversionconst* = Nvviewportarray2specversion ## Generated based on /usr/include/vulkan/vulkan_core.h:12689:9
else:
  when Nvviewportarray2specversion is static:
    const
      Nvviewportarray2specversionconst* = Nvviewportarray2specversion ## Generated based on /usr/include/vulkan/vulkan_core.h:12689:9
  else:
    let Nvviewportarray2specversionconst* = Nvviewportarray2specversion ## Generated based on /usr/include/vulkan/vulkan_core.h:12689:9
when Nvviewportarray2extensionname is typedesc:
  type
    Nvviewportarray2extensionnameconst* = Nvviewportarray2extensionname ## Generated based on /usr/include/vulkan/vulkan_core.h:12690:9
else:
  when Nvviewportarray2extensionname is static:
    const
      Nvviewportarray2extensionnameconst* = Nvviewportarray2extensionname ## Generated based on /usr/include/vulkan/vulkan_core.h:12690:9
  else:
    let Nvviewportarray2extensionnameconst* = Nvviewportarray2extensionname ## Generated based on /usr/include/vulkan/vulkan_core.h:12690:9
when 1 is static:
  const
    Nvxmultiviewperviewattributes* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12694:9
else:
  let Nvxmultiviewperviewattributes* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12694:9
when 1 is static:
  const
    Nvxmultiviewperviewattributesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12695:9
else:
  let Nvxmultiviewperviewattributesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12695:9
when "VK_NVX_multiview_per_view_attributes" is static:
  const
    Nvxmultiviewperviewattributesextensionname* = "VK_NVX_multiview_per_view_attributes" ## Generated based on /usr/include/vulkan/vulkan_core.h:12696:9
else:
  let Nvxmultiviewperviewattributesextensionname* = "VK_NVX_multiview_per_view_attributes" ## Generated based on /usr/include/vulkan/vulkan_core.h:12696:9
when 1 is static:
  const
    Nvviewportswizzle* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:12706:9
else:
  let Nvviewportswizzle* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12706:9
when 1 is static:
  const
    Nvviewportswizzlespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12707:9
else:
  let Nvviewportswizzlespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12707:9
when "VK_NV_viewport_swizzle" is static:
  const
    Nvviewportswizzleextensionname* = "VK_NV_viewport_swizzle" ## Generated based on /usr/include/vulkan/vulkan_core.h:12708:9
else:
  let Nvviewportswizzleextensionname* = "VK_NV_viewport_swizzle" ## Generated based on /usr/include/vulkan/vulkan_core.h:12708:9
when 1 is static:
  const
    Extdiscardrectangles* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12740:9
else:
  let Extdiscardrectangles* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12740:9
when 2 is static:
  const
    Extdiscardrectanglesspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:12741:9
else:
  let Extdiscardrectanglesspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:12741:9
when "VK_EXT_discard_rectangles" is static:
  const
    Extdiscardrectanglesextensionname* = "VK_EXT_discard_rectangles" ## Generated based on /usr/include/vulkan/vulkan_core.h:12742:9
else:
  let Extdiscardrectanglesextensionname* = "VK_EXT_discard_rectangles" ## Generated based on /usr/include/vulkan/vulkan_core.h:12742:9
when 1 is static:
  const
    Extconservativerasterization* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12787:9
else:
  let Extconservativerasterization* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12787:9
when 1 is static:
  const
    Extconservativerasterizationspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12788:9
else:
  let Extconservativerasterizationspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12788:9
when "VK_EXT_conservative_rasterization" is static:
  const
    Extconservativerasterizationextensionname* = "VK_EXT_conservative_rasterization" ## Generated based on /usr/include/vulkan/vulkan_core.h:12789:9
else:
  let Extconservativerasterizationextensionname* = "VK_EXT_conservative_rasterization" ## Generated based on /usr/include/vulkan/vulkan_core.h:12789:9
when 1 is static:
  const
    Extdepthclipenable* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:12823:9
else:
  let Extdepthclipenable* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12823:9
when 1 is static:
  const
    Extdepthclipenablespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12824:9
else:
  let Extdepthclipenablespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12824:9
when "VK_EXT_depth_clip_enable" is static:
  const
    Extdepthclipenableextensionname* = "VK_EXT_depth_clip_enable" ## Generated based on /usr/include/vulkan/vulkan_core.h:12825:9
else:
  let Extdepthclipenableextensionname* = "VK_EXT_depth_clip_enable" ## Generated based on /usr/include/vulkan/vulkan_core.h:12825:9
when 1 is static:
  const
    Extswapchaincolorspace* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12843:9
else:
  let Extswapchaincolorspace* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12843:9
when 4 is static:
  const
    Extswapchaincolorspacespecversion* = 4 ## Generated based on /usr/include/vulkan/vulkan_core.h:12844:9
else:
  let Extswapchaincolorspacespecversion* = 4 ## Generated based on /usr/include/vulkan/vulkan_core.h:12844:9
when "VK_EXT_swapchain_colorspace" is static:
  const
    Extswapchaincolorspaceextensionname* = "VK_EXT_swapchain_colorspace" ## Generated based on /usr/include/vulkan/vulkan_core.h:12845:9
else:
  let Extswapchaincolorspaceextensionname* = "VK_EXT_swapchain_colorspace" ## Generated based on /usr/include/vulkan/vulkan_core.h:12845:9
when 1 is static:
  const
    Exthdrmetadata* = 1      ## Generated based on /usr/include/vulkan/vulkan_core.h:12849:9
else:
  let Exthdrmetadata* = 1    ## Generated based on /usr/include/vulkan/vulkan_core.h:12849:9
when 2 is static:
  const
    Exthdrmetadataspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:12850:9
else:
  let Exthdrmetadataspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:12850:9
when "VK_EXT_hdr_metadata" is static:
  const
    Exthdrmetadataextensionname* = "VK_EXT_hdr_metadata" ## Generated based on /usr/include/vulkan/vulkan_core.h:12851:9
else:
  let Exthdrmetadataextensionname* = "VK_EXT_hdr_metadata" ## Generated based on /usr/include/vulkan/vulkan_core.h:12851:9
when 1 is static:
  const
    Imgrelaxedlinerasterization* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12882:9
else:
  let Imgrelaxedlinerasterization* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12882:9
when 1 is static:
  const
    Imgrelaxedlinerasterizationspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12883:9
else:
  let Imgrelaxedlinerasterizationspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12883:9
when "VK_IMG_relaxed_line_rasterization" is static:
  const
    Imgrelaxedlinerasterizationextensionname* = "VK_IMG_relaxed_line_rasterization" ## Generated based on /usr/include/vulkan/vulkan_core.h:12884:9
else:
  let Imgrelaxedlinerasterizationextensionname* = "VK_IMG_relaxed_line_rasterization" ## Generated based on /usr/include/vulkan/vulkan_core.h:12884:9
when 1 is static:
  const
    Extexternalmemorydmabuf* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12894:9
else:
  let Extexternalmemorydmabuf* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12894:9
when 1 is static:
  const
    Extexternalmemorydmabufspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12895:9
else:
  let Extexternalmemorydmabufspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12895:9
when "VK_EXT_external_memory_dma_buf" is static:
  const
    Extexternalmemorydmabufextensionname* = "VK_EXT_external_memory_dma_buf" ## Generated based on /usr/include/vulkan/vulkan_core.h:12896:9
else:
  let Extexternalmemorydmabufextensionname* = "VK_EXT_external_memory_dma_buf" ## Generated based on /usr/include/vulkan/vulkan_core.h:12896:9
when 1 is static:
  const
    Extqueuefamilyforeign* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12900:9
else:
  let Extqueuefamilyforeign* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12900:9
when 1 is static:
  const
    Extqueuefamilyforeignspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12901:9
else:
  let Extqueuefamilyforeignspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:12901:9
when "VK_EXT_queue_family_foreign" is static:
  const
    Extqueuefamilyforeignextensionname* = "VK_EXT_queue_family_foreign" ## Generated based on /usr/include/vulkan/vulkan_core.h:12902:9
else:
  let Extqueuefamilyforeignextensionname* = "VK_EXT_queue_family_foreign" ## Generated based on /usr/include/vulkan/vulkan_core.h:12902:9
when 1 is static:
  const
    Extdebugutils* = 1       ## Generated based on /usr/include/vulkan/vulkan_core.h:12907:9
else:
  let Extdebugutils* = 1     ## Generated based on /usr/include/vulkan/vulkan_core.h:12907:9
when 2 is static:
  const
    Extdebugutilsspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:12909:9
else:
  let Extdebugutilsspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:12909:9
when "VK_EXT_debug_utils" is static:
  const
    Extdebugutilsextensionname* = "VK_EXT_debug_utils" ## Generated based on /usr/include/vulkan/vulkan_core.h:12910:9
else:
  let Extdebugutilsextensionname* = "VK_EXT_debug_utils" ## Generated based on /usr/include/vulkan/vulkan_core.h:12910:9
when 1 is static:
  const
    Extsamplerfilterminmax* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13050:9
else:
  let Extsamplerfilterminmax* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13050:9
when 2 is static:
  const
    Extsamplerfilterminmaxspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:13051:9
else:
  let Extsamplerfilterminmaxspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:13051:9
when "VK_EXT_sampler_filter_minmax" is static:
  const
    Extsamplerfilterminmaxextensionname* = "VK_EXT_sampler_filter_minmax" ## Generated based on /usr/include/vulkan/vulkan_core.h:13052:9
else:
  let Extsamplerfilterminmaxextensionname* = "VK_EXT_sampler_filter_minmax" ## Generated based on /usr/include/vulkan/vulkan_core.h:13052:9
when 1 is static:
  const
    Amdgpushaderint16* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:13062:9
else:
  let Amdgpushaderint16* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13062:9
when 2 is static:
  const
    Amdgpushaderint16specversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:13063:9
else:
  let Amdgpushaderint16specversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:13063:9
when "VK_AMD_gpu_shader_int16" is static:
  const
    Amdgpushaderint16extensionname* = "VK_AMD_gpu_shader_int16" ## Generated based on /usr/include/vulkan/vulkan_core.h:13064:9
else:
  let Amdgpushaderint16extensionname* = "VK_AMD_gpu_shader_int16" ## Generated based on /usr/include/vulkan/vulkan_core.h:13064:9
when 1 is static:
  const
    Amdmixedattachmentsamples* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13068:9
else:
  let Amdmixedattachmentsamples* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13068:9
when 1 is static:
  const
    Amdmixedattachmentsamplesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13069:9
else:
  let Amdmixedattachmentsamplesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13069:9
when "VK_AMD_mixed_attachment_samples" is static:
  const
    Amdmixedattachmentsamplesextensionname* = "VK_AMD_mixed_attachment_samples" ## Generated based on /usr/include/vulkan/vulkan_core.h:13070:9
else:
  let Amdmixedattachmentsamplesextensionname* = "VK_AMD_mixed_attachment_samples" ## Generated based on /usr/include/vulkan/vulkan_core.h:13070:9
when 1 is static:
  const
    Amdshaderfragmentmask* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13074:9
else:
  let Amdshaderfragmentmask* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13074:9
when 1 is static:
  const
    Amdshaderfragmentmaskspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13075:9
else:
  let Amdshaderfragmentmaskspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13075:9
when "VK_AMD_shader_fragment_mask" is static:
  const
    Amdshaderfragmentmaskextensionname* = "VK_AMD_shader_fragment_mask" ## Generated based on /usr/include/vulkan/vulkan_core.h:13076:9
else:
  let Amdshaderfragmentmaskextensionname* = "VK_AMD_shader_fragment_mask" ## Generated based on /usr/include/vulkan/vulkan_core.h:13076:9
when 1 is static:
  const
    Extinlineuniformblock* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13080:9
else:
  let Extinlineuniformblock* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13080:9
when 1 is static:
  const
    Extinlineuniformblockspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13081:9
else:
  let Extinlineuniformblockspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13081:9
when "VK_EXT_inline_uniform_block" is static:
  const
    Extinlineuniformblockextensionname* = "VK_EXT_inline_uniform_block" ## Generated based on /usr/include/vulkan/vulkan_core.h:13082:9
else:
  let Extinlineuniformblockextensionname* = "VK_EXT_inline_uniform_block" ## Generated based on /usr/include/vulkan/vulkan_core.h:13082:9
when 1 is static:
  const
    Extshaderstencilexport* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13094:9
else:
  let Extshaderstencilexport* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13094:9
when 1 is static:
  const
    Extshaderstencilexportspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13095:9
else:
  let Extshaderstencilexportspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13095:9
when "VK_EXT_shader_stencil_export" is static:
  const
    Extshaderstencilexportextensionname* = "VK_EXT_shader_stencil_export" ## Generated based on /usr/include/vulkan/vulkan_core.h:13096:9
else:
  let Extshaderstencilexportextensionname* = "VK_EXT_shader_stencil_export" ## Generated based on /usr/include/vulkan/vulkan_core.h:13096:9
when 1 is static:
  const
    Extsamplelocations* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:13100:9
else:
  let Extsamplelocations* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13100:9
when 1 is static:
  const
    Extsamplelocationsspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13101:9
else:
  let Extsamplelocationsspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13101:9
when "VK_EXT_sample_locations" is static:
  const
    Extsamplelocationsextensionname* = "VK_EXT_sample_locations" ## Generated based on /usr/include/vulkan/vulkan_core.h:13102:9
else:
  let Extsamplelocationsextensionname* = "VK_EXT_sample_locations" ## Generated based on /usr/include/vulkan/vulkan_core.h:13102:9
when 1 is static:
  const
    Extblendoperationadvanced* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13175:9
else:
  let Extblendoperationadvanced* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13175:9
when 2 is static:
  const
    Extblendoperationadvancedspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:13176:9
else:
  let Extblendoperationadvancedspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:13176:9
when "VK_EXT_blend_operation_advanced" is static:
  const
    Extblendoperationadvancedextensionname* = "VK_EXT_blend_operation_advanced" ## Generated based on /usr/include/vulkan/vulkan_core.h:13177:9
else:
  let Extblendoperationadvancedextensionname* = "VK_EXT_blend_operation_advanced" ## Generated based on /usr/include/vulkan/vulkan_core.h:13177:9
when 1 is static:
  const
    Nvfragmentcoveragetocolor* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13213:9
else:
  let Nvfragmentcoveragetocolor* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13213:9
when 1 is static:
  const
    Nvfragmentcoveragetocolorspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13214:9
else:
  let Nvfragmentcoveragetocolorspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13214:9
when "VK_NV_fragment_coverage_to_color" is static:
  const
    Nvfragmentcoveragetocolorextensionname* = "VK_NV_fragment_coverage_to_color" ## Generated based on /usr/include/vulkan/vulkan_core.h:13215:9
else:
  let Nvfragmentcoveragetocolorextensionname* = "VK_NV_fragment_coverage_to_color" ## Generated based on /usr/include/vulkan/vulkan_core.h:13215:9
when 1 is static:
  const
    Nvframebuffermixedsamples* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13228:9
else:
  let Nvframebuffermixedsamples* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13228:9
when 1 is static:
  const
    Nvframebuffermixedsamplesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13229:9
else:
  let Nvframebuffermixedsamplesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13229:9
when "VK_NV_framebuffer_mixed_samples" is static:
  const
    Nvframebuffermixedsamplesextensionname* = "VK_NV_framebuffer_mixed_samples" ## Generated based on /usr/include/vulkan/vulkan_core.h:13230:9
else:
  let Nvframebuffermixedsamplesextensionname* = "VK_NV_framebuffer_mixed_samples" ## Generated based on /usr/include/vulkan/vulkan_core.h:13230:9
when 1 is static:
  const
    Nvfillrectangle* = 1     ## Generated based on /usr/include/vulkan/vulkan_core.h:13253:9
else:
  let Nvfillrectangle* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:13253:9
when 1 is static:
  const
    Nvfillrectanglespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13254:9
else:
  let Nvfillrectanglespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13254:9
when "VK_NV_fill_rectangle" is static:
  const
    Nvfillrectangleextensionname* = "VK_NV_fill_rectangle" ## Generated based on /usr/include/vulkan/vulkan_core.h:13255:9
else:
  let Nvfillrectangleextensionname* = "VK_NV_fill_rectangle" ## Generated based on /usr/include/vulkan/vulkan_core.h:13255:9
when 1 is static:
  const
    Nvshadersmbuiltins* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:13259:9
else:
  let Nvshadersmbuiltins* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13259:9
when 1 is static:
  const
    Nvshadersmbuiltinsspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13260:9
else:
  let Nvshadersmbuiltinsspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13260:9
when "VK_NV_shader_sm_builtins" is static:
  const
    Nvshadersmbuiltinsextensionname* = "VK_NV_shader_sm_builtins" ## Generated based on /usr/include/vulkan/vulkan_core.h:13261:9
else:
  let Nvshadersmbuiltinsextensionname* = "VK_NV_shader_sm_builtins" ## Generated based on /usr/include/vulkan/vulkan_core.h:13261:9
when 1 is static:
  const
    Extpostdepthcoverage* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13278:9
else:
  let Extpostdepthcoverage* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13278:9
when 1 is static:
  const
    Extpostdepthcoveragespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13279:9
else:
  let Extpostdepthcoveragespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13279:9
when "VK_EXT_post_depth_coverage" is static:
  const
    Extpostdepthcoverageextensionname* = "VK_EXT_post_depth_coverage" ## Generated based on /usr/include/vulkan/vulkan_core.h:13280:9
else:
  let Extpostdepthcoverageextensionname* = "VK_EXT_post_depth_coverage" ## Generated based on /usr/include/vulkan/vulkan_core.h:13280:9
when 1 is static:
  const
    Extimagedrmformatmodifier* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13284:9
else:
  let Extimagedrmformatmodifier* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13284:9
when 2 is static:
  const
    Extimagedrmformatmodifierspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:13285:9
else:
  let Extimagedrmformatmodifierspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:13285:9
when "VK_EXT_image_drm_format_modifier" is static:
  const
    Extimagedrmformatmodifierextensionname* = "VK_EXT_image_drm_format_modifier" ## Generated based on /usr/include/vulkan/vulkan_core.h:13286:9
else:
  let Extimagedrmformatmodifierextensionname* = "VK_EXT_image_drm_format_modifier" ## Generated based on /usr/include/vulkan/vulkan_core.h:13286:9
when 1 is static:
  const
    Extvalidationcache* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:13354:9
else:
  let Extvalidationcache* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13354:9
when 1 is static:
  const
    Extvalidationcachespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13356:9
else:
  let Extvalidationcachespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13356:9
when "VK_EXT_validation_cache" is static:
  const
    Extvalidationcacheextensionname* = "VK_EXT_validation_cache" ## Generated based on /usr/include/vulkan/vulkan_core.h:13357:9
else:
  let Extvalidationcacheextensionname* = "VK_EXT_validation_cache" ## Generated based on /usr/include/vulkan/vulkan_core.h:13357:9
when 1 is static:
  const
    Extdescriptorindexing* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13410:9
else:
  let Extdescriptorindexing* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13410:9
when 2 is static:
  const
    Extdescriptorindexingspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:13411:9
else:
  let Extdescriptorindexingspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:13411:9
when "VK_EXT_descriptor_indexing" is static:
  const
    Extdescriptorindexingextensionname* = "VK_EXT_descriptor_indexing" ## Generated based on /usr/include/vulkan/vulkan_core.h:13412:9
else:
  let Extdescriptorindexingextensionname* = "VK_EXT_descriptor_indexing" ## Generated based on /usr/include/vulkan/vulkan_core.h:13412:9
when 1 is static:
  const
    Extshaderviewportindexlayer* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13430:9
else:
  let Extshaderviewportindexlayer* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13430:9
when 1 is static:
  const
    Extshaderviewportindexlayerspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13431:9
else:
  let Extshaderviewportindexlayerspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13431:9
when "VK_EXT_shader_viewport_index_layer" is static:
  const
    Extshaderviewportindexlayerextensionname* = "VK_EXT_shader_viewport_index_layer" ## Generated based on /usr/include/vulkan/vulkan_core.h:13432:9
else:
  let Extshaderviewportindexlayerextensionname* = "VK_EXT_shader_viewport_index_layer" ## Generated based on /usr/include/vulkan/vulkan_core.h:13432:9
when 1 is static:
  const
    Nvshadingrateimage* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:13436:9
else:
  let Nvshadingrateimage* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13436:9
when 3 is static:
  const
    Nvshadingrateimagespecversion* = 3 ## Generated based on /usr/include/vulkan/vulkan_core.h:13437:9
else:
  let Nvshadingrateimagespecversion* = 3 ## Generated based on /usr/include/vulkan/vulkan_core.h:13437:9
when "VK_NV_shading_rate_image" is static:
  const
    Nvshadingrateimageextensionname* = "VK_NV_shading_rate_image" ## Generated based on /usr/include/vulkan/vulkan_core.h:13438:9
else:
  let Nvshadingrateimageextensionname* = "VK_NV_shading_rate_image" ## Generated based on /usr/include/vulkan/vulkan_core.h:13438:9
when 1 is static:
  const
    Nvraytracing* = 1        ## Generated based on /usr/include/vulkan/vulkan_core.h:13537:9
else:
  let Nvraytracing* = 1      ## Generated based on /usr/include/vulkan/vulkan_core.h:13537:9
when 3 is static:
  const
    Nvraytracingspecversion* = 3 ## Generated based on /usr/include/vulkan/vulkan_core.h:13539:9
else:
  let Nvraytracingspecversion* = 3 ## Generated based on /usr/include/vulkan/vulkan_core.h:13539:9
when "VK_NV_ray_tracing" is static:
  const
    Nvraytracingextensionname* = "VK_NV_ray_tracing" ## Generated based on /usr/include/vulkan/vulkan_core.h:13540:9
else:
  let Nvraytracingextensionname* = "VK_NV_ray_tracing" ## Generated based on /usr/include/vulkan/vulkan_core.h:13540:9
when 1 is static:
  const
    Nvrepresentativefragmenttest* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13916:9
else:
  let Nvrepresentativefragmenttest* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13916:9
when 2 is static:
  const
    Nvrepresentativefragmenttestspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:13917:9
else:
  let Nvrepresentativefragmenttestspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:13917:9
when "VK_NV_representative_fragment_test" is static:
  const
    Nvrepresentativefragmenttestextensionname* = "VK_NV_representative_fragment_test" ## Generated based on /usr/include/vulkan/vulkan_core.h:13918:9
else:
  let Nvrepresentativefragmenttestextensionname* = "VK_NV_representative_fragment_test" ## Generated based on /usr/include/vulkan/vulkan_core.h:13918:9
when 1 is static:
  const
    Extfiltercubic* = 1      ## Generated based on /usr/include/vulkan/vulkan_core.h:13934:9
else:
  let Extfiltercubic* = 1    ## Generated based on /usr/include/vulkan/vulkan_core.h:13934:9
when 3 is static:
  const
    Extfiltercubicspecversion* = 3 ## Generated based on /usr/include/vulkan/vulkan_core.h:13935:9
else:
  let Extfiltercubicspecversion* = 3 ## Generated based on /usr/include/vulkan/vulkan_core.h:13935:9
when "VK_EXT_filter_cubic" is static:
  const
    Extfiltercubicextensionname* = "VK_EXT_filter_cubic" ## Generated based on /usr/include/vulkan/vulkan_core.h:13936:9
else:
  let Extfiltercubicextensionname* = "VK_EXT_filter_cubic" ## Generated based on /usr/include/vulkan/vulkan_core.h:13936:9
when 1 is static:
  const
    Qcomrenderpassshaderresolve* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13953:9
else:
  let Qcomrenderpassshaderresolve* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13953:9
when 4 is static:
  const
    Qcomrenderpassshaderresolvespecversion* = 4 ## Generated based on /usr/include/vulkan/vulkan_core.h:13954:9
else:
  let Qcomrenderpassshaderresolvespecversion* = 4 ## Generated based on /usr/include/vulkan/vulkan_core.h:13954:9
when "VK_QCOM_render_pass_shader_resolve" is static:
  const
    Qcomrenderpassshaderresolveextensionname* = "VK_QCOM_render_pass_shader_resolve" ## Generated based on /usr/include/vulkan/vulkan_core.h:13955:9
else:
  let Qcomrenderpassshaderresolveextensionname* = "VK_QCOM_render_pass_shader_resolve" ## Generated based on /usr/include/vulkan/vulkan_core.h:13955:9
when 1 is static:
  const
    Extglobalpriority* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:13959:9
else:
  let Extglobalpriority* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13959:9
when 2 is static:
  const
    Extglobalpriorityspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:13960:9
else:
  let Extglobalpriorityspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:13960:9
when "VK_EXT_global_priority" is static:
  const
    Extglobalpriorityextensionname* = "VK_EXT_global_priority" ## Generated based on /usr/include/vulkan/vulkan_core.h:13961:9
else:
  let Extglobalpriorityextensionname* = "VK_EXT_global_priority" ## Generated based on /usr/include/vulkan/vulkan_core.h:13961:9
when 1 is static:
  const
    Extexternalmemoryhost* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13969:9
else:
  let Extexternalmemoryhost* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13969:9
when 1 is static:
  const
    Extexternalmemoryhostspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13970:9
else:
  let Extexternalmemoryhostspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:13970:9
when "VK_EXT_external_memory_host" is static:
  const
    Extexternalmemoryhostextensionname* = "VK_EXT_external_memory_host" ## Generated based on /usr/include/vulkan/vulkan_core.h:13971:9
else:
  let Extexternalmemoryhostextensionname* = "VK_EXT_external_memory_host" ## Generated based on /usr/include/vulkan/vulkan_core.h:13971:9
when 1 is static:
  const
    Amdbuffermarker* = 1     ## Generated based on /usr/include/vulkan/vulkan_core.h:14003:9
else:
  let Amdbuffermarker* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:14003:9
when 1 is static:
  const
    Amdbuffermarkerspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14004:9
else:
  let Amdbuffermarkerspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14004:9
when "VK_AMD_buffer_marker" is static:
  const
    Amdbuffermarkerextensionname* = "VK_AMD_buffer_marker" ## Generated based on /usr/include/vulkan/vulkan_core.h:14005:9
else:
  let Amdbuffermarkerextensionname* = "VK_AMD_buffer_marker" ## Generated based on /usr/include/vulkan/vulkan_core.h:14005:9
when 1 is static:
  const
    Amdpipelinecompilercontrol* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14019:9
else:
  let Amdpipelinecompilercontrol* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14019:9
when 1 is static:
  const
    Amdpipelinecompilercontrolspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14020:9
else:
  let Amdpipelinecompilercontrolspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14020:9
when "VK_AMD_pipeline_compiler_control" is static:
  const
    Amdpipelinecompilercontrolextensionname* = "VK_AMD_pipeline_compiler_control" ## Generated based on /usr/include/vulkan/vulkan_core.h:14021:9
else:
  let Amdpipelinecompilercontrolextensionname* = "VK_AMD_pipeline_compiler_control" ## Generated based on /usr/include/vulkan/vulkan_core.h:14021:9
when 1 is static:
  const
    Extcalibratedtimestamps* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14036:9
else:
  let Extcalibratedtimestamps* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14036:9
when 2 is static:
  const
    Extcalibratedtimestampsspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:14037:9
else:
  let Extcalibratedtimestampsspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:14037:9
when "VK_EXT_calibrated_timestamps" is static:
  const
    Extcalibratedtimestampsextensionname* = "VK_EXT_calibrated_timestamps" ## Generated based on /usr/include/vulkan/vulkan_core.h:14038:9
else:
  let Extcalibratedtimestampsextensionname* = "VK_EXT_calibrated_timestamps" ## Generated based on /usr/include/vulkan/vulkan_core.h:14038:9
when 1 is static:
  const
    Amdshadercoreproperties* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14062:9
else:
  let Amdshadercoreproperties* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14062:9
when 2 is static:
  const
    Amdshadercorepropertiesspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:14063:9
else:
  let Amdshadercorepropertiesspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:14063:9
when "VK_AMD_shader_core_properties" is static:
  const
    Amdshadercorepropertiesextensionname* = "VK_AMD_shader_core_properties" ## Generated based on /usr/include/vulkan/vulkan_core.h:14064:9
else:
  let Amdshadercorepropertiesextensionname* = "VK_AMD_shader_core_properties" ## Generated based on /usr/include/vulkan/vulkan_core.h:14064:9
when 1 is static:
  const
    Amdmemoryoverallocationbehavior* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14087:9
else:
  let Amdmemoryoverallocationbehavior* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14087:9
when 1 is static:
  const
    Amdmemoryoverallocationbehaviorspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14088:9
else:
  let Amdmemoryoverallocationbehaviorspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14088:9
when "VK_AMD_memory_overallocation_behavior" is static:
  const
    Amdmemoryoverallocationbehaviorextensionname* = "VK_AMD_memory_overallocation_behavior" ## Generated based on /usr/include/vulkan/vulkan_core.h:14089:9
else:
  let Amdmemoryoverallocationbehaviorextensionname* = "VK_AMD_memory_overallocation_behavior" ## Generated based on /usr/include/vulkan/vulkan_core.h:14089:9
when 1 is static:
  const
    Extvertexattributedivisor* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14106:9
else:
  let Extvertexattributedivisor* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14106:9
when 3 is static:
  const
    Extvertexattributedivisorspecversion* = 3 ## Generated based on /usr/include/vulkan/vulkan_core.h:14107:9
else:
  let Extvertexattributedivisorspecversion* = 3 ## Generated based on /usr/include/vulkan/vulkan_core.h:14107:9
when "VK_EXT_vertex_attribute_divisor" is static:
  const
    Extvertexattributedivisorextensionname* = "VK_EXT_vertex_attribute_divisor" ## Generated based on /usr/include/vulkan/vulkan_core.h:14108:9
else:
  let Extvertexattributedivisorextensionname* = "VK_EXT_vertex_attribute_divisor" ## Generated based on /usr/include/vulkan/vulkan_core.h:14108:9
when 1 is static:
  const
    Extpipelinecreationfeedback* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14124:9
else:
  let Extpipelinecreationfeedback* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14124:9
when 1 is static:
  const
    Extpipelinecreationfeedbackspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14125:9
else:
  let Extpipelinecreationfeedbackspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14125:9
when "VK_EXT_pipeline_creation_feedback" is static:
  const
    Extpipelinecreationfeedbackextensionname* = "VK_EXT_pipeline_creation_feedback" ## Generated based on /usr/include/vulkan/vulkan_core.h:14126:9
else:
  let Extpipelinecreationfeedbackextensionname* = "VK_EXT_pipeline_creation_feedback" ## Generated based on /usr/include/vulkan/vulkan_core.h:14126:9
when 1 is static:
  const
    Nvshadersubgrouppartitioned* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14138:9
else:
  let Nvshadersubgrouppartitioned* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14138:9
when 1 is static:
  const
    Nvshadersubgrouppartitionedspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14139:9
else:
  let Nvshadersubgrouppartitionedspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14139:9
when "VK_NV_shader_subgroup_partitioned" is static:
  const
    Nvshadersubgrouppartitionedextensionname* = "VK_NV_shader_subgroup_partitioned" ## Generated based on /usr/include/vulkan/vulkan_core.h:14140:9
else:
  let Nvshadersubgrouppartitionedextensionname* = "VK_NV_shader_subgroup_partitioned" ## Generated based on /usr/include/vulkan/vulkan_core.h:14140:9
when 1 is static:
  const
    Nvcomputeshaderderivatives* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14144:9
else:
  let Nvcomputeshaderderivatives* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14144:9
when 1 is static:
  const
    Nvcomputeshaderderivativesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14145:9
else:
  let Nvcomputeshaderderivativesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14145:9
when "VK_NV_compute_shader_derivatives" is static:
  const
    Nvcomputeshaderderivativesextensionname* = "VK_NV_compute_shader_derivatives" ## Generated based on /usr/include/vulkan/vulkan_core.h:14146:9
else:
  let Nvcomputeshaderderivativesextensionname* = "VK_NV_compute_shader_derivatives" ## Generated based on /usr/include/vulkan/vulkan_core.h:14146:9
when 1 is static:
  const
    Nvmeshshader* = 1        ## Generated based on /usr/include/vulkan/vulkan_core.h:14157:9
else:
  let Nvmeshshader* = 1      ## Generated based on /usr/include/vulkan/vulkan_core.h:14157:9
when 1 is static:
  const
    Nvmeshshaderspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14158:9
else:
  let Nvmeshshaderspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14158:9
when "VK_NV_mesh_shader" is static:
  const
    Nvmeshshaderextensionname* = "VK_NV_mesh_shader" ## Generated based on /usr/include/vulkan/vulkan_core.h:14159:9
else:
  let Nvmeshshaderextensionname* = "VK_NV_mesh_shader" ## Generated based on /usr/include/vulkan/vulkan_core.h:14159:9
when 1 is static:
  const
    Nvfragmentshaderbarycentric* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14219:9
else:
  let Nvfragmentshaderbarycentric* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14219:9
when 1 is static:
  const
    Nvfragmentshaderbarycentricspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14220:9
else:
  let Nvfragmentshaderbarycentricspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14220:9
when "VK_NV_fragment_shader_barycentric" is static:
  const
    Nvfragmentshaderbarycentricextensionname* = "VK_NV_fragment_shader_barycentric" ## Generated based on /usr/include/vulkan/vulkan_core.h:14221:9
else:
  let Nvfragmentshaderbarycentricextensionname* = "VK_NV_fragment_shader_barycentric" ## Generated based on /usr/include/vulkan/vulkan_core.h:14221:9
when 1 is static:
  const
    Nvshaderimagefootprint* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14227:9
else:
  let Nvshaderimagefootprint* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14227:9
when 2 is static:
  const
    Nvshaderimagefootprintspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:14228:9
else:
  let Nvshaderimagefootprintspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:14228:9
when "VK_NV_shader_image_footprint" is static:
  const
    Nvshaderimagefootprintextensionname* = "VK_NV_shader_image_footprint" ## Generated based on /usr/include/vulkan/vulkan_core.h:14229:9
else:
  let Nvshaderimagefootprintextensionname* = "VK_NV_shader_image_footprint" ## Generated based on /usr/include/vulkan/vulkan_core.h:14229:9
when 1 is static:
  const
    Nvscissorexclusive* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:14239:9
else:
  let Nvscissorexclusive* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14239:9
when 2 is static:
  const
    Nvscissorexclusivespecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:14240:9
else:
  let Nvscissorexclusivespecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:14240:9
when "VK_NV_scissor_exclusive" is static:
  const
    Nvscissorexclusiveextensionname* = "VK_NV_scissor_exclusive" ## Generated based on /usr/include/vulkan/vulkan_core.h:14241:9
else:
  let Nvscissorexclusiveextensionname* = "VK_NV_scissor_exclusive" ## Generated based on /usr/include/vulkan/vulkan_core.h:14241:9
when 1 is static:
  const
    Nvdevicediagnosticcheckpoints* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14274:9
else:
  let Nvdevicediagnosticcheckpoints* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14274:9
when 2 is static:
  const
    Nvdevicediagnosticcheckpointsspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:14275:9
else:
  let Nvdevicediagnosticcheckpointsspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:14275:9
when "VK_NV_device_diagnostic_checkpoints" is static:
  const
    Nvdevicediagnosticcheckpointsextensionname* = "VK_NV_device_diagnostic_checkpoints" ## Generated based on /usr/include/vulkan/vulkan_core.h:14276:9
else:
  let Nvdevicediagnosticcheckpointsextensionname* = "VK_NV_device_diagnostic_checkpoints" ## Generated based on /usr/include/vulkan/vulkan_core.h:14276:9
when 1 is static:
  const
    Intelshaderintegerfunctions2* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14306:9
else:
  let Intelshaderintegerfunctions2* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14306:9
when 1 is static:
  const
    Intelshaderintegerfunctions2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14307:9
else:
  let Intelshaderintegerfunctions2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14307:9
when "VK_INTEL_shader_integer_functions2" is static:
  const
    Intelshaderintegerfunctions2extensionname* = "VK_INTEL_shader_integer_functions2" ## Generated based on /usr/include/vulkan/vulkan_core.h:14308:9
else:
  let Intelshaderintegerfunctions2extensionname* = "VK_INTEL_shader_integer_functions2" ## Generated based on /usr/include/vulkan/vulkan_core.h:14308:9
when 1 is static:
  const
    Intelperformancequery* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14318:9
else:
  let Intelperformancequery* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14318:9
when 2 is static:
  const
    Intelperformancequeryspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:14320:9
else:
  let Intelperformancequeryspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:14320:9
when "VK_INTEL_performance_query" is static:
  const
    Intelperformancequeryextensionname* = "VK_INTEL_performance_query" ## Generated based on /usr/include/vulkan/vulkan_core.h:14321:9
else:
  let Intelperformancequeryextensionname* = "VK_INTEL_performance_query" ## Generated based on /usr/include/vulkan/vulkan_core.h:14321:9
when 1 is static:
  const
    Extpcibusinfo* = 1       ## Generated based on /usr/include/vulkan/vulkan_core.h:14457:9
else:
  let Extpcibusinfo* = 1     ## Generated based on /usr/include/vulkan/vulkan_core.h:14457:9
when 2 is static:
  const
    Extpcibusinfospecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:14458:9
else:
  let Extpcibusinfospecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:14458:9
when "VK_EXT_pci_bus_info" is static:
  const
    Extpcibusinfoextensionname* = "VK_EXT_pci_bus_info" ## Generated based on /usr/include/vulkan/vulkan_core.h:14459:9
else:
  let Extpcibusinfoextensionname* = "VK_EXT_pci_bus_info" ## Generated based on /usr/include/vulkan/vulkan_core.h:14459:9
when 1 is static:
  const
    Amddisplaynativehdr* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14472:9
else:
  let Amddisplaynativehdr* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14472:9
when 1 is static:
  const
    Amddisplaynativehdrspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14473:9
else:
  let Amddisplaynativehdrspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14473:9
when "VK_AMD_display_native_hdr" is static:
  const
    Amddisplaynativehdrextensionname* = "VK_AMD_display_native_hdr" ## Generated based on /usr/include/vulkan/vulkan_core.h:14474:9
else:
  let Amddisplaynativehdrextensionname* = "VK_AMD_display_native_hdr" ## Generated based on /usr/include/vulkan/vulkan_core.h:14474:9
when 1 is static:
  const
    Extfragmentdensitymap* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14498:9
else:
  let Extfragmentdensitymap* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14498:9
when 2 is static:
  const
    Extfragmentdensitymapspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:14499:9
else:
  let Extfragmentdensitymapspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:14499:9
when "VK_EXT_fragment_density_map" is static:
  const
    Extfragmentdensitymapextensionname* = "VK_EXT_fragment_density_map" ## Generated based on /usr/include/vulkan/vulkan_core.h:14500:9
else:
  let Extfragmentdensitymapextensionname* = "VK_EXT_fragment_density_map" ## Generated based on /usr/include/vulkan/vulkan_core.h:14500:9
when 1 is static:
  const
    Extscalarblocklayout* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14526:9
else:
  let Extscalarblocklayout* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14526:9
when 1 is static:
  const
    Extscalarblocklayoutspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14527:9
else:
  let Extscalarblocklayoutspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14527:9
when "VK_EXT_scalar_block_layout" is static:
  const
    Extscalarblocklayoutextensionname* = "VK_EXT_scalar_block_layout" ## Generated based on /usr/include/vulkan/vulkan_core.h:14528:9
else:
  let Extscalarblocklayoutextensionname* = "VK_EXT_scalar_block_layout" ## Generated based on /usr/include/vulkan/vulkan_core.h:14528:9
when 1 is static:
  const
    Googlehlslfunctionality1* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14534:9
else:
  let Googlehlslfunctionality1* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14534:9
when 1 is static:
  const
    Googlehlslfunctionality1specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14535:9
else:
  let Googlehlslfunctionality1specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14535:9
when "VK_GOOGLE_hlsl_functionality1" is static:
  const
    Googlehlslfunctionality1extensionname* = "VK_GOOGLE_hlsl_functionality1" ## Generated based on /usr/include/vulkan/vulkan_core.h:14536:9
else:
  let Googlehlslfunctionality1extensionname* = "VK_GOOGLE_hlsl_functionality1" ## Generated based on /usr/include/vulkan/vulkan_core.h:14536:9
when Googlehlslfunctionality1specversion is typedesc:
  type
    Googlehlslfunctionality1specversionconst* = Googlehlslfunctionality1specversion ## Generated based on /usr/include/vulkan/vulkan_core.h:14537:9
else:
  when Googlehlslfunctionality1specversion is static:
    const
      Googlehlslfunctionality1specversionconst* = Googlehlslfunctionality1specversion ## Generated based on /usr/include/vulkan/vulkan_core.h:14537:9
  else:
    let Googlehlslfunctionality1specversionconst* = Googlehlslfunctionality1specversion ## Generated based on /usr/include/vulkan/vulkan_core.h:14537:9
when Googlehlslfunctionality1extensionname is typedesc:
  type
    Googlehlslfunctionality1extensionnameconst* = Googlehlslfunctionality1extensionname ## Generated based on /usr/include/vulkan/vulkan_core.h:14538:9
else:
  when Googlehlslfunctionality1extensionname is static:
    const
      Googlehlslfunctionality1extensionnameconst* = Googlehlslfunctionality1extensionname ## Generated based on /usr/include/vulkan/vulkan_core.h:14538:9
  else:
    let Googlehlslfunctionality1extensionnameconst* = Googlehlslfunctionality1extensionname ## Generated based on /usr/include/vulkan/vulkan_core.h:14538:9
when 1 is static:
  const
    Googledecoratestring* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14542:9
else:
  let Googledecoratestring* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14542:9
when 1 is static:
  const
    Googledecoratestringspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14543:9
else:
  let Googledecoratestringspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14543:9
when "VK_GOOGLE_decorate_string" is static:
  const
    Googledecoratestringextensionname* = "VK_GOOGLE_decorate_string" ## Generated based on /usr/include/vulkan/vulkan_core.h:14544:9
else:
  let Googledecoratestringextensionname* = "VK_GOOGLE_decorate_string" ## Generated based on /usr/include/vulkan/vulkan_core.h:14544:9
when 1 is static:
  const
    Extsubgroupsizecontrol* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14548:9
else:
  let Extsubgroupsizecontrol* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14548:9
when 2 is static:
  const
    Extsubgroupsizecontrolspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:14549:9
else:
  let Extsubgroupsizecontrolspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:14549:9
when "VK_EXT_subgroup_size_control" is static:
  const
    Extsubgroupsizecontrolextensionname* = "VK_EXT_subgroup_size_control" ## Generated based on /usr/include/vulkan/vulkan_core.h:14550:9
else:
  let Extsubgroupsizecontrolextensionname* = "VK_EXT_subgroup_size_control" ## Generated based on /usr/include/vulkan/vulkan_core.h:14550:9
when 1 is static:
  const
    Amdshadercoreproperties2* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14560:9
else:
  let Amdshadercoreproperties2* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14560:9
when 1 is static:
  const
    Amdshadercoreproperties2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14561:9
else:
  let Amdshadercoreproperties2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14561:9
when "VK_AMD_shader_core_properties2" is static:
  const
    Amdshadercoreproperties2extensionname* = "VK_AMD_shader_core_properties2" ## Generated based on /usr/include/vulkan/vulkan_core.h:14562:9
else:
  let Amdshadercoreproperties2extensionname* = "VK_AMD_shader_core_properties2" ## Generated based on /usr/include/vulkan/vulkan_core.h:14562:9
when 1 is static:
  const
    Amddevicecoherentmemory* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14578:9
else:
  let Amddevicecoherentmemory* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14578:9
when 1 is static:
  const
    Amddevicecoherentmemoryspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14579:9
else:
  let Amddevicecoherentmemoryspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14579:9
when "VK_AMD_device_coherent_memory" is static:
  const
    Amddevicecoherentmemoryextensionname* = "VK_AMD_device_coherent_memory" ## Generated based on /usr/include/vulkan/vulkan_core.h:14580:9
else:
  let Amddevicecoherentmemoryextensionname* = "VK_AMD_device_coherent_memory" ## Generated based on /usr/include/vulkan/vulkan_core.h:14580:9
when 1 is static:
  const
    Extshaderimageatomicint64* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14590:9
else:
  let Extshaderimageatomicint64* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14590:9
when 1 is static:
  const
    Extshaderimageatomicint64specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14591:9
else:
  let Extshaderimageatomicint64specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14591:9
when "VK_EXT_shader_image_atomic_int64" is static:
  const
    Extshaderimageatomicint64extensionname* = "VK_EXT_shader_image_atomic_int64" ## Generated based on /usr/include/vulkan/vulkan_core.h:14592:9
else:
  let Extshaderimageatomicint64extensionname* = "VK_EXT_shader_image_atomic_int64" ## Generated based on /usr/include/vulkan/vulkan_core.h:14592:9
when 1 is static:
  const
    Extmemorybudget* = 1     ## Generated based on /usr/include/vulkan/vulkan_core.h:14603:9
else:
  let Extmemorybudget* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:14603:9
when 1 is static:
  const
    Extmemorybudgetspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14604:9
else:
  let Extmemorybudgetspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14604:9
when "VK_EXT_memory_budget" is static:
  const
    Extmemorybudgetextensionname* = "VK_EXT_memory_budget" ## Generated based on /usr/include/vulkan/vulkan_core.h:14605:9
else:
  let Extmemorybudgetextensionname* = "VK_EXT_memory_budget" ## Generated based on /usr/include/vulkan/vulkan_core.h:14605:9
when 1 is static:
  const
    Extmemorypriority* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:14616:9
else:
  let Extmemorypriority* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14616:9
when 1 is static:
  const
    Extmemorypriorityspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14617:9
else:
  let Extmemorypriorityspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14617:9
when "VK_EXT_memory_priority" is static:
  const
    Extmemorypriorityextensionname* = "VK_EXT_memory_priority" ## Generated based on /usr/include/vulkan/vulkan_core.h:14618:9
else:
  let Extmemorypriorityextensionname* = "VK_EXT_memory_priority" ## Generated based on /usr/include/vulkan/vulkan_core.h:14618:9
when 1 is static:
  const
    Nvdedicatedallocationimagealiasing* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14634:9
else:
  let Nvdedicatedallocationimagealiasing* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14634:9
when 1 is static:
  const
    Nvdedicatedallocationimagealiasingspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14635:9
else:
  let Nvdedicatedallocationimagealiasingspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14635:9
when "VK_NV_dedicated_allocation_image_aliasing" is static:
  const
    Nvdedicatedallocationimagealiasingextensionname* = "VK_NV_dedicated_allocation_image_aliasing" ## Generated based on /usr/include/vulkan/vulkan_core.h:14636:9
else:
  let Nvdedicatedallocationimagealiasingextensionname* = "VK_NV_dedicated_allocation_image_aliasing" ## Generated based on /usr/include/vulkan/vulkan_core.h:14636:9
when 1 is static:
  const
    Extbufferdeviceaddress* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14646:9
else:
  let Extbufferdeviceaddress* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14646:9
when 2 is static:
  const
    Extbufferdeviceaddressspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:14647:9
else:
  let Extbufferdeviceaddressspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:14647:9
when "VK_EXT_buffer_device_address" is static:
  const
    Extbufferdeviceaddressextensionname* = "VK_EXT_buffer_device_address" ## Generated based on /usr/include/vulkan/vulkan_core.h:14648:9
else:
  let Extbufferdeviceaddressextensionname* = "VK_EXT_buffer_device_address" ## Generated based on /usr/include/vulkan/vulkan_core.h:14648:9
when 1 is static:
  const
    Exttoolinginfo* = 1      ## Generated based on /usr/include/vulkan/vulkan_core.h:14677:9
else:
  let Exttoolinginfo* = 1    ## Generated based on /usr/include/vulkan/vulkan_core.h:14677:9
when 1 is static:
  const
    Exttoolinginfospecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14678:9
else:
  let Exttoolinginfospecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14678:9
when "VK_EXT_tooling_info" is static:
  const
    Exttoolinginfoextensionname* = "VK_EXT_tooling_info" ## Generated based on /usr/include/vulkan/vulkan_core.h:14679:9
else:
  let Exttoolinginfoextensionname* = "VK_EXT_tooling_info" ## Generated based on /usr/include/vulkan/vulkan_core.h:14679:9
when 1 is static:
  const
    Extseparatestencilusage* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14697:9
else:
  let Extseparatestencilusage* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14697:9
when 1 is static:
  const
    Extseparatestencilusagespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14698:9
else:
  let Extseparatestencilusagespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14698:9
when "VK_EXT_separate_stencil_usage" is static:
  const
    Extseparatestencilusageextensionname* = "VK_EXT_separate_stencil_usage" ## Generated based on /usr/include/vulkan/vulkan_core.h:14699:9
else:
  let Extseparatestencilusageextensionname* = "VK_EXT_separate_stencil_usage" ## Generated based on /usr/include/vulkan/vulkan_core.h:14699:9
when 1 is static:
  const
    Extvalidationfeatures* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14705:9
else:
  let Extvalidationfeatures* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14705:9
when 6 is static:
  const
    Extvalidationfeaturesspecversion* = 6 ## Generated based on /usr/include/vulkan/vulkan_core.h:14706:9
else:
  let Extvalidationfeaturesspecversion* = 6 ## Generated based on /usr/include/vulkan/vulkan_core.h:14706:9
when "VK_EXT_validation_features" is static:
  const
    Extvalidationfeaturesextensionname* = "VK_EXT_validation_features" ## Generated based on /usr/include/vulkan/vulkan_core.h:14707:9
else:
  let Extvalidationfeaturesextensionname* = "VK_EXT_validation_features" ## Generated based on /usr/include/vulkan/vulkan_core.h:14707:9
when 1 is static:
  const
    Nvcooperativematrix* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14741:9
else:
  let Nvcooperativematrix* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14741:9
when 1 is static:
  const
    Nvcooperativematrixspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14742:9
else:
  let Nvcooperativematrixspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14742:9
when "VK_NV_cooperative_matrix" is static:
  const
    Nvcooperativematrixextensionname* = "VK_NV_cooperative_matrix" ## Generated based on /usr/include/vulkan/vulkan_core.h:14743:9
else:
  let Nvcooperativematrixextensionname* = "VK_NV_cooperative_matrix" ## Generated based on /usr/include/vulkan/vulkan_core.h:14743:9
when 1 is static:
  const
    Nvcoveragereductionmode* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14785:9
else:
  let Nvcoveragereductionmode* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14785:9
when 1 is static:
  const
    Nvcoveragereductionmodespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14786:9
else:
  let Nvcoveragereductionmodespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14786:9
when "VK_NV_coverage_reduction_mode" is static:
  const
    Nvcoveragereductionmodeextensionname* = "VK_NV_coverage_reduction_mode" ## Generated based on /usr/include/vulkan/vulkan_core.h:14787:9
else:
  let Nvcoveragereductionmodeextensionname* = "VK_NV_coverage_reduction_mode" ## Generated based on /usr/include/vulkan/vulkan_core.h:14787:9
when 1 is static:
  const
    Extfragmentshaderinterlock* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14828:9
else:
  let Extfragmentshaderinterlock* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14828:9
when 1 is static:
  const
    Extfragmentshaderinterlockspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14829:9
else:
  let Extfragmentshaderinterlockspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14829:9
when "VK_EXT_fragment_shader_interlock" is static:
  const
    Extfragmentshaderinterlockextensionname* = "VK_EXT_fragment_shader_interlock" ## Generated based on /usr/include/vulkan/vulkan_core.h:14830:9
else:
  let Extfragmentshaderinterlockextensionname* = "VK_EXT_fragment_shader_interlock" ## Generated based on /usr/include/vulkan/vulkan_core.h:14830:9
when 1 is static:
  const
    Extycbcrimagearrays* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14842:9
else:
  let Extycbcrimagearrays* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14842:9
when 1 is static:
  const
    Extycbcrimagearraysspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14843:9
else:
  let Extycbcrimagearraysspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14843:9
when "VK_EXT_ycbcr_image_arrays" is static:
  const
    Extycbcrimagearraysextensionname* = "VK_EXT_ycbcr_image_arrays" ## Generated based on /usr/include/vulkan/vulkan_core.h:14844:9
else:
  let Extycbcrimagearraysextensionname* = "VK_EXT_ycbcr_image_arrays" ## Generated based on /usr/include/vulkan/vulkan_core.h:14844:9
when 1 is static:
  const
    Extprovokingvertex* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:14854:9
else:
  let Extprovokingvertex* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14854:9
when 1 is static:
  const
    Extprovokingvertexspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14855:9
else:
  let Extprovokingvertexspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14855:9
when "VK_EXT_provoking_vertex" is static:
  const
    Extprovokingvertexextensionname* = "VK_EXT_provoking_vertex" ## Generated based on /usr/include/vulkan/vulkan_core.h:14856:9
else:
  let Extprovokingvertexextensionname* = "VK_EXT_provoking_vertex" ## Generated based on /usr/include/vulkan/vulkan_core.h:14856:9
when 1 is static:
  const
    Extheadlesssurface* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:14886:9
else:
  let Extheadlesssurface* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14886:9
when 1 is static:
  const
    Extheadlesssurfacespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14887:9
else:
  let Extheadlesssurfacespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14887:9
when "VK_EXT_headless_surface" is static:
  const
    Extheadlesssurfaceextensionname* = "VK_EXT_headless_surface" ## Generated based on /usr/include/vulkan/vulkan_core.h:14888:9
else:
  let Extheadlesssurfaceextensionname* = "VK_EXT_headless_surface" ## Generated based on /usr/include/vulkan/vulkan_core.h:14888:9
when 1 is static:
  const
    Extlinerasterization* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14908:9
else:
  let Extlinerasterization* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14908:9
when 1 is static:
  const
    Extlinerasterizationspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14909:9
else:
  let Extlinerasterizationspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14909:9
when "VK_EXT_line_rasterization" is static:
  const
    Extlinerasterizationextensionname* = "VK_EXT_line_rasterization" ## Generated based on /usr/include/vulkan/vulkan_core.h:14910:9
else:
  let Extlinerasterizationextensionname* = "VK_EXT_line_rasterization" ## Generated based on /usr/include/vulkan/vulkan_core.h:14910:9
when 1 is static:
  const
    Extshaderatomicfloat* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14930:9
else:
  let Extshaderatomicfloat* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14930:9
when 1 is static:
  const
    Extshaderatomicfloatspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14931:9
else:
  let Extshaderatomicfloatspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14931:9
when "VK_EXT_shader_atomic_float" is static:
  const
    Extshaderatomicfloatextensionname* = "VK_EXT_shader_atomic_float" ## Generated based on /usr/include/vulkan/vulkan_core.h:14932:9
else:
  let Extshaderatomicfloatextensionname* = "VK_EXT_shader_atomic_float" ## Generated based on /usr/include/vulkan/vulkan_core.h:14932:9
when 1 is static:
  const
    Exthostqueryreset* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:14953:9
else:
  let Exthostqueryreset* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14953:9
when 1 is static:
  const
    Exthostqueryresetspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14954:9
else:
  let Exthostqueryresetspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14954:9
when "VK_EXT_host_query_reset" is static:
  const
    Exthostqueryresetextensionname* = "VK_EXT_host_query_reset" ## Generated based on /usr/include/vulkan/vulkan_core.h:14955:9
else:
  let Exthostqueryresetextensionname* = "VK_EXT_host_query_reset" ## Generated based on /usr/include/vulkan/vulkan_core.h:14955:9
when 1 is static:
  const
    Extindextypeuint8* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:14970:9
else:
  let Extindextypeuint8* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14970:9
when 1 is static:
  const
    Extindextypeuint8specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14971:9
else:
  let Extindextypeuint8specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14971:9
when "VK_EXT_index_type_uint8" is static:
  const
    Extindextypeuint8extensionname* = "VK_EXT_index_type_uint8" ## Generated based on /usr/include/vulkan/vulkan_core.h:14972:9
else:
  let Extindextypeuint8extensionname* = "VK_EXT_index_type_uint8" ## Generated based on /usr/include/vulkan/vulkan_core.h:14972:9
when 1 is static:
  const
    Extextendeddynamicstate* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14978:9
else:
  let Extextendeddynamicstate* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14978:9
when 1 is static:
  const
    Extextendeddynamicstatespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14979:9
else:
  let Extextendeddynamicstatespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:14979:9
when "VK_EXT_extended_dynamic_state" is static:
  const
    Extextendeddynamicstateextensionname* = "VK_EXT_extended_dynamic_state" ## Generated based on /usr/include/vulkan/vulkan_core.h:14980:9
else:
  let Extextendeddynamicstateextensionname* = "VK_EXT_extended_dynamic_state" ## Generated based on /usr/include/vulkan/vulkan_core.h:14980:9
when 1 is static:
  const
    Exthostimagecopy* = 1    ## Generated based on /usr/include/vulkan/vulkan_core.h:15063:9
else:
  let Exthostimagecopy* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:15063:9
when 1 is static:
  const
    Exthostimagecopyspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15064:9
else:
  let Exthostimagecopyspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15064:9
when "VK_EXT_host_image_copy" is static:
  const
    Exthostimagecopyextensionname* = "VK_EXT_host_image_copy" ## Generated based on /usr/include/vulkan/vulkan_core.h:15065:9
else:
  let Exthostimagecopyextensionname* = "VK_EXT_host_image_copy" ## Generated based on /usr/include/vulkan/vulkan_core.h:15065:9
when 1 is static:
  const
    Extmapmemoryplaced* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:15202:9
else:
  let Extmapmemoryplaced* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15202:9
when 1 is static:
  const
    Extmapmemoryplacedspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15203:9
else:
  let Extmapmemoryplacedspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15203:9
when "VK_EXT_map_memory_placed" is static:
  const
    Extmapmemoryplacedextensionname* = "VK_EXT_map_memory_placed" ## Generated based on /usr/include/vulkan/vulkan_core.h:15204:9
else:
  let Extmapmemoryplacedextensionname* = "VK_EXT_map_memory_placed" ## Generated based on /usr/include/vulkan/vulkan_core.h:15204:9
when 1 is static:
  const
    Extshaderatomicfloat2* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15228:9
else:
  let Extshaderatomicfloat2* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15228:9
when 1 is static:
  const
    Extshaderatomicfloat2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15229:9
else:
  let Extshaderatomicfloat2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15229:9
when "VK_EXT_shader_atomic_float2" is static:
  const
    Extshaderatomicfloat2extensionname* = "VK_EXT_shader_atomic_float2" ## Generated based on /usr/include/vulkan/vulkan_core.h:15230:9
else:
  let Extshaderatomicfloat2extensionname* = "VK_EXT_shader_atomic_float2" ## Generated based on /usr/include/vulkan/vulkan_core.h:15230:9
when 1 is static:
  const
    Extsurfacemaintenance1* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15251:9
else:
  let Extsurfacemaintenance1* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15251:9
when 1 is static:
  const
    Extsurfacemaintenance1specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15252:9
else:
  let Extsurfacemaintenance1specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15252:9
when "VK_EXT_surface_maintenance1" is static:
  const
    Extsurfacemaintenance1extensionname* = "VK_EXT_surface_maintenance1" ## Generated based on /usr/include/vulkan/vulkan_core.h:15253:9
else:
  let Extsurfacemaintenance1extensionname* = "VK_EXT_surface_maintenance1" ## Generated based on /usr/include/vulkan/vulkan_core.h:15253:9
when 1 is static:
  const
    Extswapchainmaintenance1* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15296:9
else:
  let Extswapchainmaintenance1* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15296:9
when 1 is static:
  const
    Extswapchainmaintenance1specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15297:9
else:
  let Extswapchainmaintenance1specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15297:9
when "VK_EXT_swapchain_maintenance1" is static:
  const
    Extswapchainmaintenance1extensionname* = "VK_EXT_swapchain_maintenance1" ## Generated based on /usr/include/vulkan/vulkan_core.h:15298:9
else:
  let Extswapchainmaintenance1extensionname* = "VK_EXT_swapchain_maintenance1" ## Generated based on /usr/include/vulkan/vulkan_core.h:15298:9
when 1 is static:
  const
    Extshaderdemotetohelperinvocation* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15352:9
else:
  let Extshaderdemotetohelperinvocation* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15352:9
when 1 is static:
  const
    Extshaderdemotetohelperinvocationspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15353:9
else:
  let Extshaderdemotetohelperinvocationspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15353:9
when "VK_EXT_shader_demote_to_helper_invocation" is static:
  const
    Extshaderdemotetohelperinvocationextensionname* = "VK_EXT_shader_demote_to_helper_invocation" ## Generated based on /usr/include/vulkan/vulkan_core.h:15354:9
else:
  let Extshaderdemotetohelperinvocationextensionname* = "VK_EXT_shader_demote_to_helper_invocation" ## Generated based on /usr/include/vulkan/vulkan_core.h:15354:9
when 1 is static:
  const
    Nvdevicegeneratedcommands* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15360:9
else:
  let Nvdevicegeneratedcommands* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15360:9
when 3 is static:
  const
    Nvdevicegeneratedcommandsspecversion* = 3 ## Generated based on /usr/include/vulkan/vulkan_core.h:15362:9
else:
  let Nvdevicegeneratedcommandsspecversion* = 3 ## Generated based on /usr/include/vulkan/vulkan_core.h:15362:9
when "VK_NV_device_generated_commands" is static:
  const
    Nvdevicegeneratedcommandsextensionname* = "VK_NV_device_generated_commands" ## Generated based on /usr/include/vulkan/vulkan_core.h:15363:9
else:
  let Nvdevicegeneratedcommandsextensionname* = "VK_NV_device_generated_commands" ## Generated based on /usr/include/vulkan/vulkan_core.h:15363:9
when 1 is static:
  const
    Nvinheritedviewportscissor* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15554:9
else:
  let Nvinheritedviewportscissor* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15554:9
when 1 is static:
  const
    Nvinheritedviewportscissorspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15555:9
else:
  let Nvinheritedviewportscissorspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15555:9
when "VK_NV_inherited_viewport_scissor" is static:
  const
    Nvinheritedviewportscissorextensionname* = "VK_NV_inherited_viewport_scissor" ## Generated based on /usr/include/vulkan/vulkan_core.h:15556:9
else:
  let Nvinheritedviewportscissorextensionname* = "VK_NV_inherited_viewport_scissor" ## Generated based on /usr/include/vulkan/vulkan_core.h:15556:9
when 1 is static:
  const
    Exttexelbufferalignment* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15574:9
else:
  let Exttexelbufferalignment* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15574:9
when 1 is static:
  const
    Exttexelbufferalignmentspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15575:9
else:
  let Exttexelbufferalignmentspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15575:9
when "VK_EXT_texel_buffer_alignment" is static:
  const
    Exttexelbufferalignmentextensionname* = "VK_EXT_texel_buffer_alignment" ## Generated based on /usr/include/vulkan/vulkan_core.h:15576:9
else:
  let Exttexelbufferalignmentextensionname* = "VK_EXT_texel_buffer_alignment" ## Generated based on /usr/include/vulkan/vulkan_core.h:15576:9
when 1 is static:
  const
    Qcomrenderpasstransform* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15588:9
else:
  let Qcomrenderpasstransform* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15588:9
when 4 is static:
  const
    Qcomrenderpasstransformspecversion* = 4 ## Generated based on /usr/include/vulkan/vulkan_core.h:15589:9
else:
  let Qcomrenderpasstransformspecversion* = 4 ## Generated based on /usr/include/vulkan/vulkan_core.h:15589:9
when "VK_QCOM_render_pass_transform" is static:
  const
    Qcomrenderpasstransformextensionname* = "VK_QCOM_render_pass_transform" ## Generated based on /usr/include/vulkan/vulkan_core.h:15590:9
else:
  let Qcomrenderpasstransformextensionname* = "VK_QCOM_render_pass_transform" ## Generated based on /usr/include/vulkan/vulkan_core.h:15590:9
when 1 is static:
  const
    Extdepthbiascontrol* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15607:9
else:
  let Extdepthbiascontrol* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15607:9
when 1 is static:
  const
    Extdepthbiascontrolspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15608:9
else:
  let Extdepthbiascontrolspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15608:9
when "VK_EXT_depth_bias_control" is static:
  const
    Extdepthbiascontrolextensionname* = "VK_EXT_depth_bias_control" ## Generated based on /usr/include/vulkan/vulkan_core.h:15609:9
else:
  let Extdepthbiascontrolextensionname* = "VK_EXT_depth_bias_control" ## Generated based on /usr/include/vulkan/vulkan_core.h:15609:9
when 1 is static:
  const
    Extdevicememoryreport* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15651:9
else:
  let Extdevicememoryreport* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15651:9
when 2 is static:
  const
    Extdevicememoryreportspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:15652:9
else:
  let Extdevicememoryreportspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:15652:9
when "VK_EXT_device_memory_report" is static:
  const
    Extdevicememoryreportextensionname* = "VK_EXT_device_memory_report" ## Generated based on /usr/include/vulkan/vulkan_core.h:15653:9
else:
  let Extdevicememoryreportextensionname* = "VK_EXT_device_memory_report" ## Generated based on /usr/include/vulkan/vulkan_core.h:15653:9
when 1 is static:
  const
    Extacquiredrmdisplay* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15697:9
else:
  let Extacquiredrmdisplay* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15697:9
when 1 is static:
  const
    Extacquiredrmdisplayspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15698:9
else:
  let Extacquiredrmdisplayspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15698:9
when "VK_EXT_acquire_drm_display" is static:
  const
    Extacquiredrmdisplayextensionname* = "VK_EXT_acquire_drm_display" ## Generated based on /usr/include/vulkan/vulkan_core.h:15699:9
else:
  let Extacquiredrmdisplayextensionname* = "VK_EXT_acquire_drm_display" ## Generated based on /usr/include/vulkan/vulkan_core.h:15699:9
when 1 is static:
  const
    Extrobustness2* = 1      ## Generated based on /usr/include/vulkan/vulkan_core.h:15718:9
else:
  let Extrobustness2* = 1    ## Generated based on /usr/include/vulkan/vulkan_core.h:15718:9
when 1 is static:
  const
    Extrobustness2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15719:9
else:
  let Extrobustness2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15719:9
when "VK_EXT_robustness2" is static:
  const
    Extrobustness2extensionname* = "VK_EXT_robustness2" ## Generated based on /usr/include/vulkan/vulkan_core.h:15720:9
else:
  let Extrobustness2extensionname* = "VK_EXT_robustness2" ## Generated based on /usr/include/vulkan/vulkan_core.h:15720:9
when 1 is static:
  const
    Extcustombordercolor* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15739:9
else:
  let Extcustombordercolor* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15739:9
when 12 is static:
  const
    Extcustombordercolorspecversion* = 12 ## Generated based on /usr/include/vulkan/vulkan_core.h:15740:9
else:
  let Extcustombordercolorspecversion* = 12 ## Generated based on /usr/include/vulkan/vulkan_core.h:15740:9
when "VK_EXT_custom_border_color" is static:
  const
    Extcustombordercolorextensionname* = "VK_EXT_custom_border_color" ## Generated based on /usr/include/vulkan/vulkan_core.h:15741:9
else:
  let Extcustombordercolorextensionname* = "VK_EXT_custom_border_color" ## Generated based on /usr/include/vulkan/vulkan_core.h:15741:9
when 1 is static:
  const
    Googleusertype* = 1      ## Generated based on /usr/include/vulkan/vulkan_core.h:15765:9
else:
  let Googleusertype* = 1    ## Generated based on /usr/include/vulkan/vulkan_core.h:15765:9
when 1 is static:
  const
    Googleusertypespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15766:9
else:
  let Googleusertypespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15766:9
when "VK_GOOGLE_user_type" is static:
  const
    Googleusertypeextensionname* = "VK_GOOGLE_user_type" ## Generated based on /usr/include/vulkan/vulkan_core.h:15767:9
else:
  let Googleusertypeextensionname* = "VK_GOOGLE_user_type" ## Generated based on /usr/include/vulkan/vulkan_core.h:15767:9
when 1 is static:
  const
    Nvpresentbarrier* = 1    ## Generated based on /usr/include/vulkan/vulkan_core.h:15771:9
else:
  let Nvpresentbarrier* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:15771:9
when 1 is static:
  const
    Nvpresentbarrierspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15772:9
else:
  let Nvpresentbarrierspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15772:9
when "VK_NV_present_barrier" is static:
  const
    Nvpresentbarrierextensionname* = "VK_NV_present_barrier" ## Generated based on /usr/include/vulkan/vulkan_core.h:15773:9
else:
  let Nvpresentbarrierextensionname* = "VK_NV_present_barrier" ## Generated based on /usr/include/vulkan/vulkan_core.h:15773:9
when 1 is static:
  const
    Extprivatedata* = 1      ## Generated based on /usr/include/vulkan/vulkan_core.h:15795:9
else:
  let Extprivatedata* = 1    ## Generated based on /usr/include/vulkan/vulkan_core.h:15795:9
when 1 is static:
  const
    Extprivatedataspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15798:9
else:
  let Extprivatedataspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15798:9
when "VK_EXT_private_data" is static:
  const
    Extprivatedataextensionname* = "VK_EXT_private_data" ## Generated based on /usr/include/vulkan/vulkan_core.h:15799:9
else:
  let Extprivatedataextensionname* = "VK_EXT_private_data" ## Generated based on /usr/include/vulkan/vulkan_core.h:15799:9
when 1 is static:
  const
    Extpipelinecreationcachecontrol* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15842:9
else:
  let Extpipelinecreationcachecontrol* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15842:9
when 3 is static:
  const
    Extpipelinecreationcachecontrolspecversion* = 3 ## Generated based on /usr/include/vulkan/vulkan_core.h:15843:9
else:
  let Extpipelinecreationcachecontrolspecversion* = 3 ## Generated based on /usr/include/vulkan/vulkan_core.h:15843:9
when "VK_EXT_pipeline_creation_cache_control" is static:
  const
    Extpipelinecreationcachecontrolextensionname* = "VK_EXT_pipeline_creation_cache_control" ## Generated based on /usr/include/vulkan/vulkan_core.h:15844:9
else:
  let Extpipelinecreationcachecontrolextensionname* = "VK_EXT_pipeline_creation_cache_control" ## Generated based on /usr/include/vulkan/vulkan_core.h:15844:9
when 1 is static:
  const
    Nvdevicediagnosticsconfig* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15850:9
else:
  let Nvdevicediagnosticsconfig* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15850:9
when 2 is static:
  const
    Nvdevicediagnosticsconfigspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:15851:9
else:
  let Nvdevicediagnosticsconfigspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:15851:9
when "VK_NV_device_diagnostics_config" is static:
  const
    Nvdevicediagnosticsconfigextensionname* = "VK_NV_device_diagnostics_config" ## Generated based on /usr/include/vulkan/vulkan_core.h:15852:9
else:
  let Nvdevicediagnosticsconfigextensionname* = "VK_NV_device_diagnostics_config" ## Generated based on /usr/include/vulkan/vulkan_core.h:15852:9
when 1 is static:
  const
    Qcomrenderpassstoreops* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15877:9
else:
  let Qcomrenderpassstoreops* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15877:9
when 2 is static:
  const
    Qcomrenderpassstoreopsspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:15878:9
else:
  let Qcomrenderpassstoreopsspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:15878:9
when "VK_QCOM_render_pass_store_ops" is static:
  const
    Qcomrenderpassstoreopsextensionname* = "VK_QCOM_render_pass_store_ops" ## Generated based on /usr/include/vulkan/vulkan_core.h:15879:9
else:
  let Qcomrenderpassstoreopsextensionname* = "VK_QCOM_render_pass_store_ops" ## Generated based on /usr/include/vulkan/vulkan_core.h:15879:9
when 1 is static:
  const
    Nvcudakernellaunch* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:15883:9
else:
  let Nvcudakernellaunch* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15883:9
when 2 is static:
  const
    Nvcudakernellaunchspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:15886:9
else:
  let Nvcudakernellaunchspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:15886:9
when "VK_NV_cuda_kernel_launch" is static:
  const
    Nvcudakernellaunchextensionname* = "VK_NV_cuda_kernel_launch" ## Generated based on /usr/include/vulkan/vulkan_core.h:15887:9
else:
  let Nvcudakernellaunchextensionname* = "VK_NV_cuda_kernel_launch" ## Generated based on /usr/include/vulkan/vulkan_core.h:15887:9
when 1 is static:
  const
    Nvlowlatency* = 1        ## Generated based on /usr/include/vulkan/vulkan_core.h:15975:9
else:
  let Nvlowlatency* = 1      ## Generated based on /usr/include/vulkan/vulkan_core.h:15975:9
when 1 is static:
  const
    Nvlowlatencyspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15976:9
else:
  let Nvlowlatencyspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15976:9
when "VK_NV_low_latency" is static:
  const
    Nvlowlatencyextensionname* = "VK_NV_low_latency" ## Generated based on /usr/include/vulkan/vulkan_core.h:15977:9
else:
  let Nvlowlatencyextensionname* = "VK_NV_low_latency" ## Generated based on /usr/include/vulkan/vulkan_core.h:15977:9
when 1 is static:
  const
    Extdescriptorbuffer* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15987:9
else:
  let Extdescriptorbuffer* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15987:9
when 1 is static:
  const
    Extdescriptorbufferspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15989:9
else:
  let Extdescriptorbufferspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:15989:9
when "VK_EXT_descriptor_buffer" is static:
  const
    Extdescriptorbufferextensionname* = "VK_EXT_descriptor_buffer" ## Generated based on /usr/include/vulkan/vulkan_core.h:15990:9
else:
  let Extdescriptorbufferextensionname* = "VK_EXT_descriptor_buffer" ## Generated based on /usr/include/vulkan/vulkan_core.h:15990:9
when 1 is static:
  const
    Extgraphicspipelinelibrary* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16200:9
else:
  let Extgraphicspipelinelibrary* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16200:9
when 1 is static:
  const
    Extgraphicspipelinelibraryspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16201:9
else:
  let Extgraphicspipelinelibraryspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16201:9
when "VK_EXT_graphics_pipeline_library" is static:
  const
    Extgraphicspipelinelibraryextensionname* = "VK_EXT_graphics_pipeline_library" ## Generated based on /usr/include/vulkan/vulkan_core.h:16202:9
else:
  let Extgraphicspipelinelibraryextensionname* = "VK_EXT_graphics_pipeline_library" ## Generated based on /usr/include/vulkan/vulkan_core.h:16202:9
when 1 is static:
  const
    Amdshaderearlyandlatefragmenttests* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16234:9
else:
  let Amdshaderearlyandlatefragmenttests* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16234:9
when 1 is static:
  const
    Amdshaderearlyandlatefragmenttestsspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16235:9
else:
  let Amdshaderearlyandlatefragmenttestsspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16235:9
when "VK_AMD_shader_early_and_late_fragment_tests" is static:
  const
    Amdshaderearlyandlatefragmenttestsextensionname* = "VK_AMD_shader_early_and_late_fragment_tests" ## Generated based on /usr/include/vulkan/vulkan_core.h:16236:9
else:
  let Amdshaderearlyandlatefragmenttestsextensionname* = "VK_AMD_shader_early_and_late_fragment_tests" ## Generated based on /usr/include/vulkan/vulkan_core.h:16236:9
when 1 is static:
  const
    Nvfragmentshadingrateenums* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16246:9
else:
  let Nvfragmentshadingrateenums* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16246:9
when 1 is static:
  const
    Nvfragmentshadingrateenumsspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16247:9
else:
  let Nvfragmentshadingrateenumsspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16247:9
when "VK_NV_fragment_shading_rate_enums" is static:
  const
    Nvfragmentshadingrateenumsextensionname* = "VK_NV_fragment_shading_rate_enums" ## Generated based on /usr/include/vulkan/vulkan_core.h:16248:9
else:
  let Nvfragmentshadingrateenumsextensionname* = "VK_NV_fragment_shading_rate_enums" ## Generated based on /usr/include/vulkan/vulkan_core.h:16248:9
when 1 is static:
  const
    Nvraytracingmotionblur* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16304:9
else:
  let Nvraytracingmotionblur* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16304:9
when 1 is static:
  const
    Nvraytracingmotionblurspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16305:9
else:
  let Nvraytracingmotionblurspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16305:9
when "VK_NV_ray_tracing_motion_blur" is static:
  const
    Nvraytracingmotionblurextensionname* = "VK_NV_ray_tracing_motion_blur" ## Generated based on /usr/include/vulkan/vulkan_core.h:16306:9
else:
  let Nvraytracingmotionblurextensionname* = "VK_NV_ray_tracing_motion_blur" ## Generated based on /usr/include/vulkan/vulkan_core.h:16306:9
when 1 is static:
  const
    Extycbcr2plane444formats* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16395:9
else:
  let Extycbcr2plane444formats* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16395:9
when 1 is static:
  const
    Extycbcr2plane444formatsspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16396:9
else:
  let Extycbcr2plane444formatsspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16396:9
when "VK_EXT_ycbcr_2plane_444_formats" is static:
  const
    Extycbcr2plane444formatsextensionname* = "VK_EXT_ycbcr_2plane_444_formats" ## Generated based on /usr/include/vulkan/vulkan_core.h:16397:9
else:
  let Extycbcr2plane444formatsextensionname* = "VK_EXT_ycbcr_2plane_444_formats" ## Generated based on /usr/include/vulkan/vulkan_core.h:16397:9
when 1 is static:
  const
    Extfragmentdensitymap2* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16407:9
else:
  let Extfragmentdensitymap2* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16407:9
when 1 is static:
  const
    Extfragmentdensitymap2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16408:9
else:
  let Extfragmentdensitymap2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16408:9
when "VK_EXT_fragment_density_map2" is static:
  const
    Extfragmentdensitymap2extensionname* = "VK_EXT_fragment_density_map2" ## Generated based on /usr/include/vulkan/vulkan_core.h:16409:9
else:
  let Extfragmentdensitymap2extensionname* = "VK_EXT_fragment_density_map2" ## Generated based on /usr/include/vulkan/vulkan_core.h:16409:9
when 1 is static:
  const
    Qcomrotatedcopycommands* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16428:9
else:
  let Qcomrotatedcopycommands* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16428:9
when 2 is static:
  const
    Qcomrotatedcopycommandsspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:16429:9
else:
  let Qcomrotatedcopycommandsspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:16429:9
when "VK_QCOM_rotated_copy_commands" is static:
  const
    Qcomrotatedcopycommandsextensionname* = "VK_QCOM_rotated_copy_commands" ## Generated based on /usr/include/vulkan/vulkan_core.h:16430:9
else:
  let Qcomrotatedcopycommandsextensionname* = "VK_QCOM_rotated_copy_commands" ## Generated based on /usr/include/vulkan/vulkan_core.h:16430:9
when 1 is static:
  const
    Extimagerobustness* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:16440:9
else:
  let Extimagerobustness* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16440:9
when 1 is static:
  const
    Extimagerobustnessspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16441:9
else:
  let Extimagerobustnessspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16441:9
when "VK_EXT_image_robustness" is static:
  const
    Extimagerobustnessextensionname* = "VK_EXT_image_robustness" ## Generated based on /usr/include/vulkan/vulkan_core.h:16442:9
else:
  let Extimagerobustnessextensionname* = "VK_EXT_image_robustness" ## Generated based on /usr/include/vulkan/vulkan_core.h:16442:9
when 1 is static:
  const
    Extimagecompressioncontrol* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16448:9
else:
  let Extimagecompressioncontrol* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16448:9
when 1 is static:
  const
    Extimagecompressioncontrolspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16449:9
else:
  let Extimagecompressioncontrolspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16449:9
when "VK_EXT_image_compression_control" is static:
  const
    Extimagecompressioncontrolextensionname* = "VK_EXT_image_compression_control" ## Generated based on /usr/include/vulkan/vulkan_core.h:16450:9
else:
  let Extimagecompressioncontrolextensionname* = "VK_EXT_image_compression_control" ## Generated based on /usr/include/vulkan/vulkan_core.h:16450:9
when 1 is static:
  const
    Extattachmentfeedbacklooplayout* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16514:9
else:
  let Extattachmentfeedbacklooplayout* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16514:9
when 2 is static:
  const
    Extattachmentfeedbacklooplayoutspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:16515:9
else:
  let Extattachmentfeedbacklooplayoutspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:16515:9
when "VK_EXT_attachment_feedback_loop_layout" is static:
  const
    Extattachmentfeedbacklooplayoutextensionname* = "VK_EXT_attachment_feedback_loop_layout" ## Generated based on /usr/include/vulkan/vulkan_core.h:16516:9
else:
  let Extattachmentfeedbacklooplayoutextensionname* = "VK_EXT_attachment_feedback_loop_layout" ## Generated based on /usr/include/vulkan/vulkan_core.h:16516:9
when 1 is static:
  const
    Ext4444formats* = 1      ## Generated based on /usr/include/vulkan/vulkan_core.h:16526:9
else:
  let Ext4444formats* = 1    ## Generated based on /usr/include/vulkan/vulkan_core.h:16526:9
when 1 is static:
  const
    Ext4444formatsspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16527:9
else:
  let Ext4444formatsspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16527:9
when "VK_EXT_4444_formats" is static:
  const
    Ext4444formatsextensionname* = "VK_EXT_4444_formats" ## Generated based on /usr/include/vulkan/vulkan_core.h:16528:9
else:
  let Ext4444formatsextensionname* = "VK_EXT_4444_formats" ## Generated based on /usr/include/vulkan/vulkan_core.h:16528:9
when 1 is static:
  const
    Extdevicefault* = 1      ## Generated based on /usr/include/vulkan/vulkan_core.h:16539:9
else:
  let Extdevicefault* = 1    ## Generated based on /usr/include/vulkan/vulkan_core.h:16539:9
when 2 is static:
  const
    Extdevicefaultspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:16540:9
else:
  let Extdevicefaultspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:16540:9
when "VK_EXT_device_fault" is static:
  const
    Extdevicefaultextensionname* = "VK_EXT_device_fault" ## Generated based on /usr/include/vulkan/vulkan_core.h:16541:9
else:
  let Extdevicefaultextensionname* = "VK_EXT_device_fault" ## Generated based on /usr/include/vulkan/vulkan_core.h:16541:9
when 1 is static:
  const
    Armrasterizationorderattachmentaccess* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16619:9
else:
  let Armrasterizationorderattachmentaccess* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16619:9
when 1 is static:
  const
    Armrasterizationorderattachmentaccessspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16620:9
else:
  let Armrasterizationorderattachmentaccessspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16620:9
when "VK_ARM_rasterization_order_attachment_access" is static:
  const
    Armrasterizationorderattachmentaccessextensionname* = "VK_ARM_rasterization_order_attachment_access" ## Generated based on /usr/include/vulkan/vulkan_core.h:16621:9
else:
  let Armrasterizationorderattachmentaccessextensionname* = "VK_ARM_rasterization_order_attachment_access" ## Generated based on /usr/include/vulkan/vulkan_core.h:16621:9
when 1 is static:
  const
    Extrgba10x6formats* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:16635:9
else:
  let Extrgba10x6formats* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16635:9
when 1 is static:
  const
    Extrgba10x6formatsspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16636:9
else:
  let Extrgba10x6formatsspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16636:9
when "VK_EXT_rgba10x6_formats" is static:
  const
    Extrgba10x6formatsextensionname* = "VK_EXT_rgba10x6_formats" ## Generated based on /usr/include/vulkan/vulkan_core.h:16637:9
else:
  let Extrgba10x6formatsextensionname* = "VK_EXT_rgba10x6_formats" ## Generated based on /usr/include/vulkan/vulkan_core.h:16637:9
when 1 is static:
  const
    Valvemutabledescriptortype* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16647:9
else:
  let Valvemutabledescriptortype* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16647:9
when 1 is static:
  const
    Valvemutabledescriptortypespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16648:9
else:
  let Valvemutabledescriptortypespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16648:9
when "VK_VALVE_mutable_descriptor_type" is static:
  const
    Valvemutabledescriptortypeextensionname* = "VK_VALVE_mutable_descriptor_type" ## Generated based on /usr/include/vulkan/vulkan_core.h:16649:9
else:
  let Valvemutabledescriptortypeextensionname* = "VK_VALVE_mutable_descriptor_type" ## Generated based on /usr/include/vulkan/vulkan_core.h:16649:9
when 1 is static:
  const
    Extvertexinputdynamicstate* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16677:9
else:
  let Extvertexinputdynamicstate* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16677:9
when 2 is static:
  const
    Extvertexinputdynamicstatespecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:16678:9
else:
  let Extvertexinputdynamicstatespecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:16678:9
when "VK_EXT_vertex_input_dynamic_state" is static:
  const
    Extvertexinputdynamicstateextensionname* = "VK_EXT_vertex_input_dynamic_state" ## Generated based on /usr/include/vulkan/vulkan_core.h:16679:9
else:
  let Extvertexinputdynamicstateextensionname* = "VK_EXT_vertex_input_dynamic_state" ## Generated based on /usr/include/vulkan/vulkan_core.h:16679:9
when 1 is static:
  const
    Extphysicaldevicedrm* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16717:9
else:
  let Extphysicaldevicedrm* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16717:9
when 1 is static:
  const
    Extphysicaldevicedrmspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16718:9
else:
  let Extphysicaldevicedrmspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16718:9
when "VK_EXT_physical_device_drm" is static:
  const
    Extphysicaldevicedrmextensionname* = "VK_EXT_physical_device_drm" ## Generated based on /usr/include/vulkan/vulkan_core.h:16719:9
else:
  let Extphysicaldevicedrmextensionname* = "VK_EXT_physical_device_drm" ## Generated based on /usr/include/vulkan/vulkan_core.h:16719:9
when 1 is static:
  const
    Extdeviceaddressbindingreport* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16734:9
else:
  let Extdeviceaddressbindingreport* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16734:9
when 1 is static:
  const
    Extdeviceaddressbindingreportspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16735:9
else:
  let Extdeviceaddressbindingreportspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16735:9
when "VK_EXT_device_address_binding_report" is static:
  const
    Extdeviceaddressbindingreportextensionname* = "VK_EXT_device_address_binding_report" ## Generated based on /usr/include/vulkan/vulkan_core.h:16736:9
else:
  let Extdeviceaddressbindingreportextensionname* = "VK_EXT_device_address_binding_report" ## Generated based on /usr/include/vulkan/vulkan_core.h:16736:9
when 1 is static:
  const
    Extdepthclipcontrol* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16767:9
else:
  let Extdepthclipcontrol* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16767:9
when 1 is static:
  const
    Extdepthclipcontrolspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16768:9
else:
  let Extdepthclipcontrolspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16768:9
when "VK_EXT_depth_clip_control" is static:
  const
    Extdepthclipcontrolextensionname* = "VK_EXT_depth_clip_control" ## Generated based on /usr/include/vulkan/vulkan_core.h:16769:9
else:
  let Extdepthclipcontrolextensionname* = "VK_EXT_depth_clip_control" ## Generated based on /usr/include/vulkan/vulkan_core.h:16769:9
when 1 is static:
  const
    Extprimitivetopologylistrestart* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16785:9
else:
  let Extprimitivetopologylistrestart* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16785:9
when 1 is static:
  const
    Extprimitivetopologylistrestartspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16786:9
else:
  let Extprimitivetopologylistrestartspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16786:9
when "VK_EXT_primitive_topology_list_restart" is static:
  const
    Extprimitivetopologylistrestartextensionname* = "VK_EXT_primitive_topology_list_restart" ## Generated based on /usr/include/vulkan/vulkan_core.h:16787:9
else:
  let Extprimitivetopologylistrestartextensionname* = "VK_EXT_primitive_topology_list_restart" ## Generated based on /usr/include/vulkan/vulkan_core.h:16787:9
when 1 is static:
  const
    Huaweisubpassshading* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16798:9
else:
  let Huaweisubpassshading* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16798:9
when 3 is static:
  const
    Huaweisubpassshadingspecversion* = 3 ## Generated based on /usr/include/vulkan/vulkan_core.h:16799:9
else:
  let Huaweisubpassshadingspecversion* = 3 ## Generated based on /usr/include/vulkan/vulkan_core.h:16799:9
when "VK_HUAWEI_subpass_shading" is static:
  const
    Huaweisubpassshadingextensionname* = "VK_HUAWEI_subpass_shading" ## Generated based on /usr/include/vulkan/vulkan_core.h:16800:9
else:
  let Huaweisubpassshadingextensionname* = "VK_HUAWEI_subpass_shading" ## Generated based on /usr/include/vulkan/vulkan_core.h:16800:9
when 1 is static:
  const
    Huaweiinvocationmask* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16835:9
else:
  let Huaweiinvocationmask* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16835:9
when 1 is static:
  const
    Huaweiinvocationmaskspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16836:9
else:
  let Huaweiinvocationmaskspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16836:9
when "VK_HUAWEI_invocation_mask" is static:
  const
    Huaweiinvocationmaskextensionname* = "VK_HUAWEI_invocation_mask" ## Generated based on /usr/include/vulkan/vulkan_core.h:16837:9
else:
  let Huaweiinvocationmaskextensionname* = "VK_HUAWEI_invocation_mask" ## Generated based on /usr/include/vulkan/vulkan_core.h:16837:9
when 1 is static:
  const
    Nvexternalmemoryrdma* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16855:9
else:
  let Nvexternalmemoryrdma* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16855:9
when 1 is static:
  const
    Nvexternalmemoryrdmaspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16857:9
else:
  let Nvexternalmemoryrdmaspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16857:9
when "VK_NV_external_memory_rdma" is static:
  const
    Nvexternalmemoryrdmaextensionname* = "VK_NV_external_memory_rdma" ## Generated based on /usr/include/vulkan/vulkan_core.h:16858:9
else:
  let Nvexternalmemoryrdmaextensionname* = "VK_NV_external_memory_rdma" ## Generated based on /usr/include/vulkan/vulkan_core.h:16858:9
when 1 is static:
  const
    Extpipelineproperties* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16883:9
else:
  let Extpipelineproperties* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16883:9
when 1 is static:
  const
    Extpipelinepropertiesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16884:9
else:
  let Extpipelinepropertiesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16884:9
when "VK_EXT_pipeline_properties" is static:
  const
    Extpipelinepropertiesextensionname* = "VK_EXT_pipeline_properties" ## Generated based on /usr/include/vulkan/vulkan_core.h:16885:9
else:
  let Extpipelinepropertiesextensionname* = "VK_EXT_pipeline_properties" ## Generated based on /usr/include/vulkan/vulkan_core.h:16885:9
when 1 is static:
  const
    Extframeboundary* = 1    ## Generated based on /usr/include/vulkan/vulkan_core.h:16911:9
else:
  let Extframeboundary* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:16911:9
when 1 is static:
  const
    Extframeboundaryspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16912:9
else:
  let Extframeboundaryspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16912:9
when "VK_EXT_frame_boundary" is static:
  const
    Extframeboundaryextensionname* = "VK_EXT_frame_boundary" ## Generated based on /usr/include/vulkan/vulkan_core.h:16913:9
else:
  let Extframeboundaryextensionname* = "VK_EXT_frame_boundary" ## Generated based on /usr/include/vulkan/vulkan_core.h:16913:9
when 1 is static:
  const
    Extmultisampledrendertosinglesampled* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16943:9
else:
  let Extmultisampledrendertosinglesampled* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16943:9
when 1 is static:
  const
    Extmultisampledrendertosinglesampledspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16944:9
else:
  let Extmultisampledrendertosinglesampledspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16944:9
when "VK_EXT_multisampled_render_to_single_sampled" is static:
  const
    Extmultisampledrendertosinglesampledextensionname* = "VK_EXT_multisampled_render_to_single_sampled" ## Generated based on /usr/include/vulkan/vulkan_core.h:16945:9
else:
  let Extmultisampledrendertosinglesampledextensionname* = "VK_EXT_multisampled_render_to_single_sampled" ## Generated based on /usr/include/vulkan/vulkan_core.h:16945:9
when 1 is static:
  const
    Extextendeddynamicstate2* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16968:9
else:
  let Extextendeddynamicstate2* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16968:9
when 1 is static:
  const
    Extextendeddynamicstate2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16969:9
else:
  let Extextendeddynamicstate2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:16969:9
when "VK_EXT_extended_dynamic_state2" is static:
  const
    Extextendeddynamicstate2extensionname* = "VK_EXT_extended_dynamic_state2" ## Generated based on /usr/include/vulkan/vulkan_core.h:16970:9
else:
  let Extextendeddynamicstate2extensionname* = "VK_EXT_extended_dynamic_state2" ## Generated based on /usr/include/vulkan/vulkan_core.h:16970:9
when 1 is static:
  const
    Extcolorwriteenable* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17009:9
else:
  let Extcolorwriteenable* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17009:9
when 1 is static:
  const
    Extcolorwriteenablespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17010:9
else:
  let Extcolorwriteenablespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17010:9
when "VK_EXT_color_write_enable" is static:
  const
    Extcolorwriteenableextensionname* = "VK_EXT_color_write_enable" ## Generated based on /usr/include/vulkan/vulkan_core.h:17011:9
else:
  let Extcolorwriteenableextensionname* = "VK_EXT_color_write_enable" ## Generated based on /usr/include/vulkan/vulkan_core.h:17011:9
when 1 is static:
  const
    Extprimitivesgeneratedquery* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17036:9
else:
  let Extprimitivesgeneratedquery* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17036:9
when 1 is static:
  const
    Extprimitivesgeneratedqueryspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17037:9
else:
  let Extprimitivesgeneratedqueryspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17037:9
when "VK_EXT_primitives_generated_query" is static:
  const
    Extprimitivesgeneratedqueryextensionname* = "VK_EXT_primitives_generated_query" ## Generated based on /usr/include/vulkan/vulkan_core.h:17038:9
else:
  let Extprimitivesgeneratedqueryextensionname* = "VK_EXT_primitives_generated_query" ## Generated based on /usr/include/vulkan/vulkan_core.h:17038:9
when 1 is static:
  const
    Extglobalpriorityquery* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17050:9
else:
  let Extglobalpriorityquery* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17050:9
when 1 is static:
  const
    Extglobalpriorityqueryspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17051:9
else:
  let Extglobalpriorityqueryspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17051:9
when "VK_EXT_global_priority_query" is static:
  const
    Extglobalpriorityqueryextensionname* = "VK_EXT_global_priority_query" ## Generated based on /usr/include/vulkan/vulkan_core.h:17052:9
else:
  let Extglobalpriorityqueryextensionname* = "VK_EXT_global_priority_query" ## Generated based on /usr/include/vulkan/vulkan_core.h:17052:9
when Maxglobalprioritysizekhr is typedesc:
  type
    Maxglobalprioritysizeext* = Maxglobalprioritysizekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:17053:9
else:
  when Maxglobalprioritysizekhr is static:
    const
      Maxglobalprioritysizeext* = Maxglobalprioritysizekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:17053:9
  else:
    let Maxglobalprioritysizeext* = Maxglobalprioritysizekhr ## Generated based on /usr/include/vulkan/vulkan_core.h:17053:9
when 1 is static:
  const
    Extimageviewminlod* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:17061:9
else:
  let Extimageviewminlod* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17061:9
when 1 is static:
  const
    Extimageviewminlodspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17062:9
else:
  let Extimageviewminlodspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17062:9
when "VK_EXT_image_view_min_lod" is static:
  const
    Extimageviewminlodextensionname* = "VK_EXT_image_view_min_lod" ## Generated based on /usr/include/vulkan/vulkan_core.h:17063:9
else:
  let Extimageviewminlodextensionname* = "VK_EXT_image_view_min_lod" ## Generated based on /usr/include/vulkan/vulkan_core.h:17063:9
when 1 is static:
  const
    Extmultidraw* = 1        ## Generated based on /usr/include/vulkan/vulkan_core.h:17079:9
else:
  let Extmultidraw* = 1      ## Generated based on /usr/include/vulkan/vulkan_core.h:17079:9
when 1 is static:
  const
    Extmultidrawspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17080:9
else:
  let Extmultidrawspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17080:9
when "VK_EXT_multi_draw" is static:
  const
    Extmultidrawextensionname* = "VK_EXT_multi_draw" ## Generated based on /usr/include/vulkan/vulkan_core.h:17081:9
else:
  let Extmultidrawextensionname* = "VK_EXT_multi_draw" ## Generated based on /usr/include/vulkan/vulkan_core.h:17081:9
when 1 is static:
  const
    Extimage2dviewof3d* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:17129:9
else:
  let Extimage2dviewof3d* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17129:9
when 1 is static:
  const
    Extimage2dviewof3dspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17130:9
else:
  let Extimage2dviewof3dspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17130:9
when "VK_EXT_image_2d_view_of_3d" is static:
  const
    Extimage2dviewof3dextensionname* = "VK_EXT_image_2d_view_of_3d" ## Generated based on /usr/include/vulkan/vulkan_core.h:17131:9
else:
  let Extimage2dviewof3dextensionname* = "VK_EXT_image_2d_view_of_3d" ## Generated based on /usr/include/vulkan/vulkan_core.h:17131:9
when 1 is static:
  const
    Extshadertileimage* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:17142:9
else:
  let Extshadertileimage* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17142:9
when 1 is static:
  const
    Extshadertileimagespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17143:9
else:
  let Extshadertileimagespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17143:9
when "VK_EXT_shader_tile_image" is static:
  const
    Extshadertileimageextensionname* = "VK_EXT_shader_tile_image" ## Generated based on /usr/include/vulkan/vulkan_core.h:17144:9
else:
  let Extshadertileimageextensionname* = "VK_EXT_shader_tile_image" ## Generated based on /usr/include/vulkan/vulkan_core.h:17144:9
when 1 is static:
  const
    Extopacitymicromap* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:17164:9
else:
  let Extopacitymicromap* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17164:9
when 2 is static:
  const
    Extopacitymicromapspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:17166:9
else:
  let Extopacitymicromapspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:17166:9
when "VK_EXT_opacity_micromap" is static:
  const
    Extopacitymicromapextensionname* = "VK_EXT_opacity_micromap" ## Generated based on /usr/include/vulkan/vulkan_core.h:17167:9
else:
  let Extopacitymicromapextensionname* = "VK_EXT_opacity_micromap" ## Generated based on /usr/include/vulkan/vulkan_core.h:17167:9
when 1 is static:
  const
    Extloadstoreopnone* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:17436:9
else:
  let Extloadstoreopnone* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17436:9
when 1 is static:
  const
    Extloadstoreopnonespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17437:9
else:
  let Extloadstoreopnonespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17437:9
when "VK_EXT_load_store_op_none" is static:
  const
    Extloadstoreopnoneextensionname* = "VK_EXT_load_store_op_none" ## Generated based on /usr/include/vulkan/vulkan_core.h:17438:9
else:
  let Extloadstoreopnoneextensionname* = "VK_EXT_load_store_op_none" ## Generated based on /usr/include/vulkan/vulkan_core.h:17438:9
when 1 is static:
  const
    Huaweiclustercullingshader* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17442:9
else:
  let Huaweiclustercullingshader* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17442:9
when 3 is static:
  const
    Huaweiclustercullingshaderspecversion* = 3 ## Generated based on /usr/include/vulkan/vulkan_core.h:17443:9
else:
  let Huaweiclustercullingshaderspecversion* = 3 ## Generated based on /usr/include/vulkan/vulkan_core.h:17443:9
when "VK_HUAWEI_cluster_culling_shader" is static:
  const
    Huaweiclustercullingshaderextensionname* = "VK_HUAWEI_cluster_culling_shader" ## Generated based on /usr/include/vulkan/vulkan_core.h:17444:9
else:
  let Huaweiclustercullingshaderextensionname* = "VK_HUAWEI_cluster_culling_shader" ## Generated based on /usr/include/vulkan/vulkan_core.h:17444:9
when 1 is static:
  const
    Extbordercolorswizzle* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17485:9
else:
  let Extbordercolorswizzle* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17485:9
when 1 is static:
  const
    Extbordercolorswizzlespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17486:9
else:
  let Extbordercolorswizzlespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17486:9
when "VK_EXT_border_color_swizzle" is static:
  const
    Extbordercolorswizzleextensionname* = "VK_EXT_border_color_swizzle" ## Generated based on /usr/include/vulkan/vulkan_core.h:17487:9
else:
  let Extbordercolorswizzleextensionname* = "VK_EXT_border_color_swizzle" ## Generated based on /usr/include/vulkan/vulkan_core.h:17487:9
when 1 is static:
  const
    Extpageabledevicelocalmemory* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17505:9
else:
  let Extpageabledevicelocalmemory* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17505:9
when 1 is static:
  const
    Extpageabledevicelocalmemoryspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17506:9
else:
  let Extpageabledevicelocalmemoryspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17506:9
when "VK_EXT_pageable_device_local_memory" is static:
  const
    Extpageabledevicelocalmemoryextensionname* = "VK_EXT_pageable_device_local_memory" ## Generated based on /usr/include/vulkan/vulkan_core.h:17507:9
else:
  let Extpageabledevicelocalmemoryextensionname* = "VK_EXT_pageable_device_local_memory" ## Generated based on /usr/include/vulkan/vulkan_core.h:17507:9
when 1 is static:
  const
    Armshadercoreproperties* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17525:9
else:
  let Armshadercoreproperties* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17525:9
when 1 is static:
  const
    Armshadercorepropertiesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17526:9
else:
  let Armshadercorepropertiesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17526:9
when "VK_ARM_shader_core_properties" is static:
  const
    Armshadercorepropertiesextensionname* = "VK_ARM_shader_core_properties" ## Generated based on /usr/include/vulkan/vulkan_core.h:17527:9
else:
  let Armshadercorepropertiesextensionname* = "VK_ARM_shader_core_properties" ## Generated based on /usr/include/vulkan/vulkan_core.h:17527:9
when 1 is static:
  const
    Armschedulingcontrols* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17539:9
else:
  let Armschedulingcontrols* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17539:9
when 1 is static:
  const
    Armschedulingcontrolsspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17540:9
else:
  let Armschedulingcontrolsspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17540:9
when "VK_ARM_scheduling_controls" is static:
  const
    Armschedulingcontrolsextensionname* = "VK_ARM_scheduling_controls" ## Generated based on /usr/include/vulkan/vulkan_core.h:17541:9
else:
  let Armschedulingcontrolsextensionname* = "VK_ARM_scheduling_controls" ## Generated based on /usr/include/vulkan/vulkan_core.h:17541:9
when 1 is static:
  const
    Extimageslicedviewof3d* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17569:9
else:
  let Extimageslicedviewof3d* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17569:9
when 1 is static:
  const
    Extimageslicedviewof3dspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17570:9
else:
  let Extimageslicedviewof3dspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17570:9
when "VK_EXT_image_sliced_view_of_3d" is static:
  const
    Extimageslicedviewof3dextensionname* = "VK_EXT_image_sliced_view_of_3d" ## Generated based on /usr/include/vulkan/vulkan_core.h:17571:9
else:
  let Extimageslicedviewof3dextensionname* = "VK_EXT_image_sliced_view_of_3d" ## Generated based on /usr/include/vulkan/vulkan_core.h:17571:9
when 1 is static:
  const
    Valvedescriptorsethostmapping* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17589:9
else:
  let Valvedescriptorsethostmapping* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17589:9
when 1 is static:
  const
    Valvedescriptorsethostmappingspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17590:9
else:
  let Valvedescriptorsethostmappingspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17590:9
when "VK_VALVE_descriptor_set_host_mapping" is static:
  const
    Valvedescriptorsethostmappingextensionname* = "VK_VALVE_descriptor_set_host_mapping" ## Generated based on /usr/include/vulkan/vulkan_core.h:17591:9
else:
  let Valvedescriptorsethostmappingextensionname* = "VK_VALVE_descriptor_set_host_mapping" ## Generated based on /usr/include/vulkan/vulkan_core.h:17591:9
when 1 is static:
  const
    Extdepthclampzeroone* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17629:9
else:
  let Extdepthclampzeroone* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17629:9
when 1 is static:
  const
    Extdepthclampzeroonespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17630:9
else:
  let Extdepthclampzeroonespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17630:9
when "VK_EXT_depth_clamp_zero_one" is static:
  const
    Extdepthclampzerooneextensionname* = "VK_EXT_depth_clamp_zero_one" ## Generated based on /usr/include/vulkan/vulkan_core.h:17631:9
else:
  let Extdepthclampzerooneextensionname* = "VK_EXT_depth_clamp_zero_one" ## Generated based on /usr/include/vulkan/vulkan_core.h:17631:9
when 1 is static:
  const
    Extnonseamlesscubemap* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17641:9
else:
  let Extnonseamlesscubemap* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17641:9
when 1 is static:
  const
    Extnonseamlesscubemapspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17642:9
else:
  let Extnonseamlesscubemapspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17642:9
when "VK_EXT_non_seamless_cube_map" is static:
  const
    Extnonseamlesscubemapextensionname* = "VK_EXT_non_seamless_cube_map" ## Generated based on /usr/include/vulkan/vulkan_core.h:17643:9
else:
  let Extnonseamlesscubemapextensionname* = "VK_EXT_non_seamless_cube_map" ## Generated based on /usr/include/vulkan/vulkan_core.h:17643:9
when 1 is static:
  const
    Armrenderpassstriped* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17653:9
else:
  let Armrenderpassstriped* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17653:9
when 1 is static:
  const
    Armrenderpassstripedspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17654:9
else:
  let Armrenderpassstripedspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17654:9
when "VK_ARM_render_pass_striped" is static:
  const
    Armrenderpassstripedextensionname* = "VK_ARM_render_pass_striped" ## Generated based on /usr/include/vulkan/vulkan_core.h:17655:9
else:
  let Armrenderpassstripedextensionname* = "VK_ARM_render_pass_striped" ## Generated based on /usr/include/vulkan/vulkan_core.h:17655:9
when 1 is static:
  const
    Qcomfragmentdensitymapoffset* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17692:9
else:
  let Qcomfragmentdensitymapoffset* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17692:9
when 1 is static:
  const
    Qcomfragmentdensitymapoffsetspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17693:9
else:
  let Qcomfragmentdensitymapoffsetspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17693:9
when "VK_QCOM_fragment_density_map_offset" is static:
  const
    Qcomfragmentdensitymapoffsetextensionname* = "VK_QCOM_fragment_density_map_offset" ## Generated based on /usr/include/vulkan/vulkan_core.h:17694:9
else:
  let Qcomfragmentdensitymapoffsetextensionname* = "VK_QCOM_fragment_density_map_offset" ## Generated based on /usr/include/vulkan/vulkan_core.h:17694:9
when 1 is static:
  const
    Nvcopymemoryindirect* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17717:9
else:
  let Nvcopymemoryindirect* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17717:9
when 1 is static:
  const
    Nvcopymemoryindirectspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17718:9
else:
  let Nvcopymemoryindirectspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17718:9
when "VK_NV_copy_memory_indirect" is static:
  const
    Nvcopymemoryindirectextensionname* = "VK_NV_copy_memory_indirect" ## Generated based on /usr/include/vulkan/vulkan_core.h:17719:9
else:
  let Nvcopymemoryindirectextensionname* = "VK_NV_copy_memory_indirect" ## Generated based on /usr/include/vulkan/vulkan_core.h:17719:9
when 1 is static:
  const
    Nvmemorydecompression* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17769:9
else:
  let Nvmemorydecompression* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17769:9
when 1 is static:
  const
    Nvmemorydecompressionspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17770:9
else:
  let Nvmemorydecompressionspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17770:9
when "VK_NV_memory_decompression" is static:
  const
    Nvmemorydecompressionextensionname* = "VK_NV_memory_decompression" ## Generated based on /usr/include/vulkan/vulkan_core.h:17771:9
else:
  let Nvmemorydecompressionextensionname* = "VK_NV_memory_decompression" ## Generated based on /usr/include/vulkan/vulkan_core.h:17771:9
when 1 is static:
  const
    Nvdevicegeneratedcommandscompute* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17817:9
else:
  let Nvdevicegeneratedcommandscompute* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17817:9
when 2 is static:
  const
    Nvdevicegeneratedcommandscomputespecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:17818:9
else:
  let Nvdevicegeneratedcommandscomputespecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:17818:9
when "VK_NV_device_generated_commands_compute" is static:
  const
    Nvdevicegeneratedcommandscomputeextensionname* = "VK_NV_device_generated_commands_compute" ## Generated based on /usr/include/vulkan/vulkan_core.h:17819:9
else:
  let Nvdevicegeneratedcommandscomputeextensionname* = "VK_NV_device_generated_commands_compute" ## Generated based on /usr/include/vulkan/vulkan_core.h:17819:9
when 1 is static:
  const
    Nvlinearcolorattachment* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17869:9
else:
  let Nvlinearcolorattachment* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17869:9
when 1 is static:
  const
    Nvlinearcolorattachmentspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17870:9
else:
  let Nvlinearcolorattachmentspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17870:9
when "VK_NV_linear_color_attachment" is static:
  const
    Nvlinearcolorattachmentextensionname* = "VK_NV_linear_color_attachment" ## Generated based on /usr/include/vulkan/vulkan_core.h:17871:9
else:
  let Nvlinearcolorattachmentextensionname* = "VK_NV_linear_color_attachment" ## Generated based on /usr/include/vulkan/vulkan_core.h:17871:9
when 1 is static:
  const
    Googlesurfacelessquery* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17881:9
else:
  let Googlesurfacelessquery* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17881:9
when 2 is static:
  const
    Googlesurfacelessqueryspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:17882:9
else:
  let Googlesurfacelessqueryspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:17882:9
when "VK_GOOGLE_surfaceless_query" is static:
  const
    Googlesurfacelessqueryextensionname* = "VK_GOOGLE_surfaceless_query" ## Generated based on /usr/include/vulkan/vulkan_core.h:17883:9
else:
  let Googlesurfacelessqueryextensionname* = "VK_GOOGLE_surfaceless_query" ## Generated based on /usr/include/vulkan/vulkan_core.h:17883:9
when 1 is static:
  const
    Extimagecompressioncontrolswapchain* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17887:9
else:
  let Extimagecompressioncontrolswapchain* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17887:9
when 1 is static:
  const
    Extimagecompressioncontrolswapchainspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17888:9
else:
  let Extimagecompressioncontrolswapchainspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17888:9
when "VK_EXT_image_compression_control_swapchain" is static:
  const
    Extimagecompressioncontrolswapchainextensionname* = "VK_EXT_image_compression_control_swapchain" ## Generated based on /usr/include/vulkan/vulkan_core.h:17889:9
else:
  let Extimagecompressioncontrolswapchainextensionname* = "VK_EXT_image_compression_control_swapchain" ## Generated based on /usr/include/vulkan/vulkan_core.h:17889:9
when 1 is static:
  const
    Qcomimageprocessing* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17899:9
else:
  let Qcomimageprocessing* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17899:9
when 1 is static:
  const
    Qcomimageprocessingspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17900:9
else:
  let Qcomimageprocessingspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17900:9
when "VK_QCOM_image_processing" is static:
  const
    Qcomimageprocessingextensionname* = "VK_QCOM_image_processing" ## Generated based on /usr/include/vulkan/vulkan_core.h:17901:9
else:
  let Qcomimageprocessingextensionname* = "VK_QCOM_image_processing" ## Generated based on /usr/include/vulkan/vulkan_core.h:17901:9
when 1 is static:
  const
    Extnestedcommandbuffer* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17930:9
else:
  let Extnestedcommandbuffer* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17930:9
when 1 is static:
  const
    Extnestedcommandbufferspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17931:9
else:
  let Extnestedcommandbufferspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17931:9
when "VK_EXT_nested_command_buffer" is static:
  const
    Extnestedcommandbufferextensionname* = "VK_EXT_nested_command_buffer" ## Generated based on /usr/include/vulkan/vulkan_core.h:17932:9
else:
  let Extnestedcommandbufferextensionname* = "VK_EXT_nested_command_buffer" ## Generated based on /usr/include/vulkan/vulkan_core.h:17932:9
when 1 is static:
  const
    Extexternalmemoryacquireunmodified* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17950:9
else:
  let Extexternalmemoryacquireunmodified* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17950:9
when 1 is static:
  const
    Extexternalmemoryacquireunmodifiedspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17951:9
else:
  let Extexternalmemoryacquireunmodifiedspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17951:9
when "VK_EXT_external_memory_acquire_unmodified" is static:
  const
    Extexternalmemoryacquireunmodifiedextensionname* = "VK_EXT_external_memory_acquire_unmodified" ## Generated based on /usr/include/vulkan/vulkan_core.h:17952:9
else:
  let Extexternalmemoryacquireunmodifiedextensionname* = "VK_EXT_external_memory_acquire_unmodified" ## Generated based on /usr/include/vulkan/vulkan_core.h:17952:9
when 1 is static:
  const
    Extextendeddynamicstate3* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17962:9
else:
  let Extextendeddynamicstate3* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:17962:9
when 2 is static:
  const
    Extextendeddynamicstate3specversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:17963:9
else:
  let Extextendeddynamicstate3specversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:17963:9
when "VK_EXT_extended_dynamic_state3" is static:
  const
    Extextendeddynamicstate3extensionname* = "VK_EXT_extended_dynamic_state3" ## Generated based on /usr/include/vulkan/vulkan_core.h:17964:9
else:
  let Extextendeddynamicstate3extensionname* = "VK_EXT_extended_dynamic_state3" ## Generated based on /usr/include/vulkan/vulkan_core.h:17964:9
when 1 is static:
  const
    Extsubpassmergefeedback* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18196:9
else:
  let Extsubpassmergefeedback* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18196:9
when 2 is static:
  const
    Extsubpassmergefeedbackspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:18197:9
else:
  let Extsubpassmergefeedbackspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:18197:9
when "VK_EXT_subpass_merge_feedback" is static:
  const
    Extsubpassmergefeedbackextensionname* = "VK_EXT_subpass_merge_feedback" ## Generated based on /usr/include/vulkan/vulkan_core.h:18198:9
else:
  let Extsubpassmergefeedbackextensionname* = "VK_EXT_subpass_merge_feedback" ## Generated based on /usr/include/vulkan/vulkan_core.h:18198:9
when 1 is static:
  const
    Lunargdirectdriverloading* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18254:9
else:
  let Lunargdirectdriverloading* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18254:9
when 1 is static:
  const
    Lunargdirectdriverloadingspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18255:9
else:
  let Lunargdirectdriverloadingspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18255:9
when "VK_LUNARG_direct_driver_loading" is static:
  const
    Lunargdirectdriverloadingextensionname* = "VK_LUNARG_direct_driver_loading" ## Generated based on /usr/include/vulkan/vulkan_core.h:18256:9
else:
  let Lunargdirectdriverloadingextensionname* = "VK_LUNARG_direct_driver_loading" ## Generated based on /usr/include/vulkan/vulkan_core.h:18256:9
when 1 is static:
  const
    Extshadermoduleidentifier* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18285:9
else:
  let Extshadermoduleidentifier* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18285:9
when cast[cuint](32'i64) is static:
  const
    Maxshadermoduleidentifiersizeext* = cast[cuint](32'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:18286:9
else:
  let Maxshadermoduleidentifiersizeext* = cast[cuint](32'i64) ## Generated based on /usr/include/vulkan/vulkan_core.h:18286:9
when 1 is static:
  const
    Extshadermoduleidentifierspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18287:9
else:
  let Extshadermoduleidentifierspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18287:9
when "VK_EXT_shader_module_identifier" is static:
  const
    Extshadermoduleidentifierextensionname* = "VK_EXT_shader_module_identifier" ## Generated based on /usr/include/vulkan/vulkan_core.h:18288:9
else:
  let Extshadermoduleidentifierextensionname* = "VK_EXT_shader_module_identifier" ## Generated based on /usr/include/vulkan/vulkan_core.h:18288:9
when 1 is static:
  const
    Extrasterizationorderattachmentaccess* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18332:9
else:
  let Extrasterizationorderattachmentaccess* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18332:9
when 1 is static:
  const
    Extrasterizationorderattachmentaccessspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18333:9
else:
  let Extrasterizationorderattachmentaccessspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18333:9
when "VK_EXT_rasterization_order_attachment_access" is static:
  const
    Extrasterizationorderattachmentaccessextensionname* = "VK_EXT_rasterization_order_attachment_access" ## Generated based on /usr/include/vulkan/vulkan_core.h:18334:9
else:
  let Extrasterizationorderattachmentaccessextensionname* = "VK_EXT_rasterization_order_attachment_access" ## Generated based on /usr/include/vulkan/vulkan_core.h:18334:9
when 1 is static:
  const
    Nvopticalflow* = 1       ## Generated based on /usr/include/vulkan/vulkan_core.h:18338:9
else:
  let Nvopticalflow* = 1     ## Generated based on /usr/include/vulkan/vulkan_core.h:18338:9
when 1 is static:
  const
    Nvopticalflowspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18340:9
else:
  let Nvopticalflowspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18340:9
when "VK_NV_optical_flow" is static:
  const
    Nvopticalflowextensionname* = "VK_NV_optical_flow" ## Generated based on /usr/include/vulkan/vulkan_core.h:18341:9
else:
  let Nvopticalflowextensionname* = "VK_NV_optical_flow" ## Generated based on /usr/include/vulkan/vulkan_core.h:18341:9
when 1 is static:
  const
    Extlegacydithering* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:18503:9
else:
  let Extlegacydithering* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18503:9
when 1 is static:
  const
    Extlegacyditheringspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18504:9
else:
  let Extlegacyditheringspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18504:9
when "VK_EXT_legacy_dithering" is static:
  const
    Extlegacyditheringextensionname* = "VK_EXT_legacy_dithering" ## Generated based on /usr/include/vulkan/vulkan_core.h:18505:9
else:
  let Extlegacyditheringextensionname* = "VK_EXT_legacy_dithering" ## Generated based on /usr/include/vulkan/vulkan_core.h:18505:9
when 1 is static:
  const
    Extpipelineprotectedaccess* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18515:9
else:
  let Extpipelineprotectedaccess* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18515:9
when 1 is static:
  const
    Extpipelineprotectedaccessspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18516:9
else:
  let Extpipelineprotectedaccessspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18516:9
when "VK_EXT_pipeline_protected_access" is static:
  const
    Extpipelineprotectedaccessextensionname* = "VK_EXT_pipeline_protected_access" ## Generated based on /usr/include/vulkan/vulkan_core.h:18517:9
else:
  let Extpipelineprotectedaccessextensionname* = "VK_EXT_pipeline_protected_access" ## Generated based on /usr/include/vulkan/vulkan_core.h:18517:9
when 1 is static:
  const
    Extshaderobject* = 1     ## Generated based on /usr/include/vulkan/vulkan_core.h:18527:9
else:
  let Extshaderobject* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:18527:9
when 1 is static:
  const
    Extshaderobjectspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18529:9
else:
  let Extshaderobjectspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18529:9
when "VK_EXT_shader_object" is static:
  const
    Extshaderobjectextensionname* = "VK_EXT_shader_object" ## Generated based on /usr/include/vulkan/vulkan_core.h:18530:9
else:
  let Extshaderobjectextensionname* = "VK_EXT_shader_object" ## Generated based on /usr/include/vulkan/vulkan_core.h:18530:9
when 1 is static:
  const
    Qcomtileproperties* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:18614:9
else:
  let Qcomtileproperties* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18614:9
when 1 is static:
  const
    Qcomtilepropertiesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18615:9
else:
  let Qcomtilepropertiesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18615:9
when "VK_QCOM_tile_properties" is static:
  const
    Qcomtilepropertiesextensionname* = "VK_QCOM_tile_properties" ## Generated based on /usr/include/vulkan/vulkan_core.h:18616:9
else:
  let Qcomtilepropertiesextensionname* = "VK_QCOM_tile_properties" ## Generated based on /usr/include/vulkan/vulkan_core.h:18616:9
when 1 is static:
  const
    Secamigoprofiling* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:18649:9
else:
  let Secamigoprofiling* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18649:9
when 1 is static:
  const
    Secamigoprofilingspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18650:9
else:
  let Secamigoprofilingspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18650:9
when "VK_SEC_amigo_profiling" is static:
  const
    Secamigoprofilingextensionname* = "VK_SEC_amigo_profiling" ## Generated based on /usr/include/vulkan/vulkan_core.h:18651:9
else:
  let Secamigoprofilingextensionname* = "VK_SEC_amigo_profiling" ## Generated based on /usr/include/vulkan/vulkan_core.h:18651:9
when 1 is static:
  const
    Qcommultiviewperviewviewports* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18668:9
else:
  let Qcommultiviewperviewviewports* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18668:9
when 1 is static:
  const
    Qcommultiviewperviewviewportsspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18669:9
else:
  let Qcommultiviewperviewviewportsspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18669:9
when "VK_QCOM_multiview_per_view_viewports" is static:
  const
    Qcommultiviewperviewviewportsextensionname* = "VK_QCOM_multiview_per_view_viewports" ## Generated based on /usr/include/vulkan/vulkan_core.h:18670:9
else:
  let Qcommultiviewperviewviewportsextensionname* = "VK_QCOM_multiview_per_view_viewports" ## Generated based on /usr/include/vulkan/vulkan_core.h:18670:9
when 1 is static:
  const
    Nvraytracinginvocationreorder* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18680:9
else:
  let Nvraytracinginvocationreorder* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18680:9
when 1 is static:
  const
    Nvraytracinginvocationreorderspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18681:9
else:
  let Nvraytracinginvocationreorderspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18681:9
when "VK_NV_ray_tracing_invocation_reorder" is static:
  const
    Nvraytracinginvocationreorderextensionname* = "VK_NV_ray_tracing_invocation_reorder" ## Generated based on /usr/include/vulkan/vulkan_core.h:18682:9
else:
  let Nvraytracinginvocationreorderextensionname* = "VK_NV_ray_tracing_invocation_reorder" ## Generated based on /usr/include/vulkan/vulkan_core.h:18682:9
when 1 is static:
  const
    Nvextendedsparseaddressspace* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18704:9
else:
  let Nvextendedsparseaddressspace* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18704:9
when 1 is static:
  const
    Nvextendedsparseaddressspacespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18705:9
else:
  let Nvextendedsparseaddressspacespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18705:9
when "VK_NV_extended_sparse_address_space" is static:
  const
    Nvextendedsparseaddressspaceextensionname* = "VK_NV_extended_sparse_address_space" ## Generated based on /usr/include/vulkan/vulkan_core.h:18706:9
else:
  let Nvextendedsparseaddressspaceextensionname* = "VK_NV_extended_sparse_address_space" ## Generated based on /usr/include/vulkan/vulkan_core.h:18706:9
when 1 is static:
  const
    Extmutabledescriptortype* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18724:9
else:
  let Extmutabledescriptortype* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18724:9
when 1 is static:
  const
    Extmutabledescriptortypespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18725:9
else:
  let Extmutabledescriptortypespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18725:9
when "VK_EXT_mutable_descriptor_type" is static:
  const
    Extmutabledescriptortypeextensionname* = "VK_EXT_mutable_descriptor_type" ## Generated based on /usr/include/vulkan/vulkan_core.h:18726:9
else:
  let Extmutabledescriptortypeextensionname* = "VK_EXT_mutable_descriptor_type" ## Generated based on /usr/include/vulkan/vulkan_core.h:18726:9
when 1 is static:
  const
    Extlayersettings* = 1    ## Generated based on /usr/include/vulkan/vulkan_core.h:18730:9
else:
  let Extlayersettings* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:18730:9
when 2 is static:
  const
    Extlayersettingsspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:18731:9
else:
  let Extlayersettingsspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:18731:9
when "VK_EXT_layer_settings" is static:
  const
    Extlayersettingsextensionname* = "VK_EXT_layer_settings" ## Generated based on /usr/include/vulkan/vulkan_core.h:18732:9
else:
  let Extlayersettingsextensionname* = "VK_EXT_layer_settings" ## Generated based on /usr/include/vulkan/vulkan_core.h:18732:9
when 1 is static:
  const
    Armshadercorebuiltins* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18763:9
else:
  let Armshadercorebuiltins* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18763:9
when 2 is static:
  const
    Armshadercorebuiltinsspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:18764:9
else:
  let Armshadercorebuiltinsspecversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:18764:9
when "VK_ARM_shader_core_builtins" is static:
  const
    Armshadercorebuiltinsextensionname* = "VK_ARM_shader_core_builtins" ## Generated based on /usr/include/vulkan/vulkan_core.h:18765:9
else:
  let Armshadercorebuiltinsextensionname* = "VK_ARM_shader_core_builtins" ## Generated based on /usr/include/vulkan/vulkan_core.h:18765:9
when 1 is static:
  const
    Extpipelinelibrarygrouphandles* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18783:9
else:
  let Extpipelinelibrarygrouphandles* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18783:9
when 1 is static:
  const
    Extpipelinelibrarygrouphandlesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18784:9
else:
  let Extpipelinelibrarygrouphandlesspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18784:9
when "VK_EXT_pipeline_library_group_handles" is static:
  const
    Extpipelinelibrarygrouphandlesextensionname* = "VK_EXT_pipeline_library_group_handles" ## Generated based on /usr/include/vulkan/vulkan_core.h:18785:9
else:
  let Extpipelinelibrarygrouphandlesextensionname* = "VK_EXT_pipeline_library_group_handles" ## Generated based on /usr/include/vulkan/vulkan_core.h:18785:9
when 1 is static:
  const
    Extdynamicrenderingunusedattachments* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18795:9
else:
  let Extdynamicrenderingunusedattachments* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18795:9
when 1 is static:
  const
    Extdynamicrenderingunusedattachmentsspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18796:9
else:
  let Extdynamicrenderingunusedattachmentsspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18796:9
when "VK_EXT_dynamic_rendering_unused_attachments" is static:
  const
    Extdynamicrenderingunusedattachmentsextensionname* = "VK_EXT_dynamic_rendering_unused_attachments" ## Generated based on /usr/include/vulkan/vulkan_core.h:18797:9
else:
  let Extdynamicrenderingunusedattachmentsextensionname* = "VK_EXT_dynamic_rendering_unused_attachments" ## Generated based on /usr/include/vulkan/vulkan_core.h:18797:9
when 1 is static:
  const
    Nvlowlatency2* = 1       ## Generated based on /usr/include/vulkan/vulkan_core.h:18807:9
else:
  let Nvlowlatency2* = 1     ## Generated based on /usr/include/vulkan/vulkan_core.h:18807:9
when 2 is static:
  const
    Nvlowlatency2specversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:18808:9
else:
  let Nvlowlatency2specversion* = 2 ## Generated based on /usr/include/vulkan/vulkan_core.h:18808:9
when "VK_NV_low_latency2" is static:
  const
    Nvlowlatency2extensionname* = "VK_NV_low_latency2" ## Generated based on /usr/include/vulkan/vulkan_core.h:18809:9
else:
  let Nvlowlatency2extensionname* = "VK_NV_low_latency2" ## Generated based on /usr/include/vulkan/vulkan_core.h:18809:9
when 1 is static:
  const
    Qcommultiviewperviewrenderareas* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18939:9
else:
  let Qcommultiviewperviewrenderareas* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18939:9
when 1 is static:
  const
    Qcommultiviewperviewrenderareasspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18940:9
else:
  let Qcommultiviewperviewrenderareasspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18940:9
when "VK_QCOM_multiview_per_view_render_areas" is static:
  const
    Qcommultiviewperviewrenderareasextensionname* = "VK_QCOM_multiview_per_view_render_areas" ## Generated based on /usr/include/vulkan/vulkan_core.h:18941:9
else:
  let Qcommultiviewperviewrenderareasextensionname* = "VK_QCOM_multiview_per_view_render_areas" ## Generated based on /usr/include/vulkan/vulkan_core.h:18941:9
when 1 is static:
  const
    Nvperstagedescriptorset* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18958:9
else:
  let Nvperstagedescriptorset* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18958:9
when 1 is static:
  const
    Nvperstagedescriptorsetspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18959:9
else:
  let Nvperstagedescriptorsetspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18959:9
when "VK_NV_per_stage_descriptor_set" is static:
  const
    Nvperstagedescriptorsetextensionname* = "VK_NV_per_stage_descriptor_set" ## Generated based on /usr/include/vulkan/vulkan_core.h:18960:9
else:
  let Nvperstagedescriptorsetextensionname* = "VK_NV_per_stage_descriptor_set" ## Generated based on /usr/include/vulkan/vulkan_core.h:18960:9
when 1 is static:
  const
    Qcomimageprocessing2* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18971:9
else:
  let Qcomimageprocessing2* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18971:9
when 1 is static:
  const
    Qcomimageprocessing2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18972:9
else:
  let Qcomimageprocessing2specversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:18972:9
when "VK_QCOM_image_processing2" is static:
  const
    Qcomimageprocessing2extensionname* = "VK_QCOM_image_processing2" ## Generated based on /usr/include/vulkan/vulkan_core.h:18973:9
else:
  let Qcomimageprocessing2extensionname* = "VK_QCOM_image_processing2" ## Generated based on /usr/include/vulkan/vulkan_core.h:18973:9
when 1 is static:
  const
    Qcomfiltercubicweights* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19002:9
else:
  let Qcomfiltercubicweights* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19002:9
when 1 is static:
  const
    Qcomfiltercubicweightsspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19003:9
else:
  let Qcomfiltercubicweightsspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19003:9
when "VK_QCOM_filter_cubic_weights" is static:
  const
    Qcomfiltercubicweightsextensionname* = "VK_QCOM_filter_cubic_weights" ## Generated based on /usr/include/vulkan/vulkan_core.h:19004:9
else:
  let Qcomfiltercubicweightsextensionname* = "VK_QCOM_filter_cubic_weights" ## Generated based on /usr/include/vulkan/vulkan_core.h:19004:9
when 1 is static:
  const
    Qcomycbcrdegamma* = 1    ## Generated based on /usr/include/vulkan/vulkan_core.h:19034:9
else:
  let Qcomycbcrdegamma* = 1  ## Generated based on /usr/include/vulkan/vulkan_core.h:19034:9
when 1 is static:
  const
    Qcomycbcrdegammaspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19035:9
else:
  let Qcomycbcrdegammaspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19035:9
when "VK_QCOM_ycbcr_degamma" is static:
  const
    Qcomycbcrdegammaextensionname* = "VK_QCOM_ycbcr_degamma" ## Generated based on /usr/include/vulkan/vulkan_core.h:19036:9
else:
  let Qcomycbcrdegammaextensionname* = "VK_QCOM_ycbcr_degamma" ## Generated based on /usr/include/vulkan/vulkan_core.h:19036:9
when 1 is static:
  const
    Qcomfiltercubicclamp* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19053:9
else:
  let Qcomfiltercubicclamp* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19053:9
when 1 is static:
  const
    Qcomfiltercubicclampspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19054:9
else:
  let Qcomfiltercubicclampspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19054:9
when "VK_QCOM_filter_cubic_clamp" is static:
  const
    Qcomfiltercubicclampextensionname* = "VK_QCOM_filter_cubic_clamp" ## Generated based on /usr/include/vulkan/vulkan_core.h:19055:9
else:
  let Qcomfiltercubicclampextensionname* = "VK_QCOM_filter_cubic_clamp" ## Generated based on /usr/include/vulkan/vulkan_core.h:19055:9
when 1 is static:
  const
    Extattachmentfeedbackloopdynamicstate* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19065:9
else:
  let Extattachmentfeedbackloopdynamicstate* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19065:9
when 1 is static:
  const
    Extattachmentfeedbackloopdynamicstatespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19066:9
else:
  let Extattachmentfeedbackloopdynamicstatespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19066:9
when "VK_EXT_attachment_feedback_loop_dynamic_state" is static:
  const
    Extattachmentfeedbackloopdynamicstateextensionname* = "VK_EXT_attachment_feedback_loop_dynamic_state" ## Generated based on /usr/include/vulkan/vulkan_core.h:19067:9
else:
  let Extattachmentfeedbackloopdynamicstateextensionname* = "VK_EXT_attachment_feedback_loop_dynamic_state" ## Generated based on /usr/include/vulkan/vulkan_core.h:19067:9
when 1 is static:
  const
    Msftlayereddriver* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:19084:9
else:
  let Msftlayereddriver* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19084:9
when 1 is static:
  const
    Msftlayereddriverspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19085:9
else:
  let Msftlayereddriverspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19085:9
when "VK_MSFT_layered_driver" is static:
  const
    Msftlayereddriverextensionname* = "VK_MSFT_layered_driver" ## Generated based on /usr/include/vulkan/vulkan_core.h:19086:9
else:
  let Msftlayereddriverextensionname* = "VK_MSFT_layered_driver" ## Generated based on /usr/include/vulkan/vulkan_core.h:19086:9
when 1 is static:
  const
    Nvdescriptorpooloverallocation* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19102:9
else:
  let Nvdescriptorpooloverallocation* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19102:9
when 1 is static:
  const
    Nvdescriptorpooloverallocationspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19103:9
else:
  let Nvdescriptorpooloverallocationspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19103:9
when "VK_NV_descriptor_pool_overallocation" is static:
  const
    Nvdescriptorpooloverallocationextensionname* = "VK_NV_descriptor_pool_overallocation" ## Generated based on /usr/include/vulkan/vulkan_core.h:19104:9
else:
  let Nvdescriptorpooloverallocationextensionname* = "VK_NV_descriptor_pool_overallocation" ## Generated based on /usr/include/vulkan/vulkan_core.h:19104:9
when 1 is static:
  const
    Nvrawaccesschains* = 1   ## Generated based on /usr/include/vulkan/vulkan_core.h:19114:9
else:
  let Nvrawaccesschains* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19114:9
when 1 is static:
  const
    Nvrawaccesschainsspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19115:9
else:
  let Nvrawaccesschainsspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19115:9
when "VK_NV_raw_access_chains" is static:
  const
    Nvrawaccesschainsextensionname* = "VK_NV_raw_access_chains" ## Generated based on /usr/include/vulkan/vulkan_core.h:19116:9
else:
  let Nvrawaccesschainsextensionname* = "VK_NV_raw_access_chains" ## Generated based on /usr/include/vulkan/vulkan_core.h:19116:9
when 1 is static:
  const
    Nvshaderatomicfloat16vector* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19126:9
else:
  let Nvshaderatomicfloat16vector* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19126:9
when 1 is static:
  const
    Nvshaderatomicfloat16vectorspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19127:9
else:
  let Nvshaderatomicfloat16vectorspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19127:9
when "VK_NV_shader_atomic_float16_vector" is static:
  const
    Nvshaderatomicfloat16vectorextensionname* = "VK_NV_shader_atomic_float16_vector" ## Generated based on /usr/include/vulkan/vulkan_core.h:19128:9
else:
  let Nvshaderatomicfloat16vectorextensionname* = "VK_NV_shader_atomic_float16_vector" ## Generated based on /usr/include/vulkan/vulkan_core.h:19128:9
when 1 is static:
  const
    Khraccelerationstructure* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19138:9
else:
  let Khraccelerationstructure* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19138:9
when 13 is static:
  const
    Khraccelerationstructurespecversion* = 13 ## Generated based on /usr/include/vulkan/vulkan_core.h:19139:9
else:
  let Khraccelerationstructurespecversion* = 13 ## Generated based on /usr/include/vulkan/vulkan_core.h:19139:9
when "VK_KHR_acceleration_structure" is static:
  const
    Khraccelerationstructureextensionname* = "VK_KHR_acceleration_structure" ## Generated based on /usr/include/vulkan/vulkan_core.h:19140:9
else:
  let Khraccelerationstructureextensionname* = "VK_KHR_acceleration_structure" ## Generated based on /usr/include/vulkan/vulkan_core.h:19140:9
when 1 is static:
  const
    Khrraytracingpipeline* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19414:9
else:
  let Khrraytracingpipeline* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19414:9
when 1 is static:
  const
    Khrraytracingpipelinespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19415:9
else:
  let Khrraytracingpipelinespecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19415:9
when "VK_KHR_ray_tracing_pipeline" is static:
  const
    Khrraytracingpipelineextensionname* = "VK_KHR_ray_tracing_pipeline" ## Generated based on /usr/include/vulkan/vulkan_core.h:19416:9
else:
  let Khrraytracingpipelineextensionname* = "VK_KHR_ray_tracing_pipeline" ## Generated based on /usr/include/vulkan/vulkan_core.h:19416:9
when 1 is static:
  const
    Khrrayquery* = 1         ## Generated based on /usr/include/vulkan/vulkan_core.h:19551:9
else:
  let Khrrayquery* = 1       ## Generated based on /usr/include/vulkan/vulkan_core.h:19551:9
when 1 is static:
  const
    Khrrayqueryspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19552:9
else:
  let Khrrayqueryspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19552:9
when "VK_KHR_ray_query" is static:
  const
    Khrrayqueryextensionname* = "VK_KHR_ray_query" ## Generated based on /usr/include/vulkan/vulkan_core.h:19553:9
else:
  let Khrrayqueryextensionname* = "VK_KHR_ray_query" ## Generated based on /usr/include/vulkan/vulkan_core.h:19553:9
when 1 is static:
  const
    Extmeshshader* = 1       ## Generated based on /usr/include/vulkan/vulkan_core.h:19563:9
else:
  let Extmeshshader* = 1     ## Generated based on /usr/include/vulkan/vulkan_core.h:19563:9
when 1 is static:
  const
    Extmeshshaderspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19564:9
else:
  let Extmeshshaderspecversion* = 1 ## Generated based on /usr/include/vulkan/vulkan_core.h:19564:9
when "VK_EXT_mesh_shader" is static:
  const
    Extmeshshaderextensionname* = "VK_EXT_mesh_shader" ## Generated based on /usr/include/vulkan/vulkan_core.h:19565:9
else:
  let Extmeshshaderextensionname* = "VK_EXT_mesh_shader" ## Generated based on /usr/include/vulkan/vulkan_core.h:19565:9
proc Createinstance*(pcreateinfo: ptr Instancecreateinfo;
                     pallocator: ptr Allocationcallbacks;
                     pinstance: ptr Instance): Result {.cdecl,
    importc: "vkCreateInstance".}
proc Destroyinstance*(instance: Instance; pallocator: ptr Allocationcallbacks): void {.
    cdecl, importc: "vkDestroyInstance".}
proc Enumeratephysicaldevices*(instance: Instance;
                               pphysicaldevicecount: ptr uint32;
                               pphysicaldevices: ptr Physicaldevice): Result {.
    cdecl, importc: "vkEnumeratePhysicalDevices".}
proc Getphysicaldevicefeatures*(physicaldevice: Physicaldevice;
                                pfeatures: ptr Physicaldevicefeatures): void {.
    cdecl, importc: "vkGetPhysicalDeviceFeatures".}
proc Getphysicaldeviceformatproperties*(physicaldevice: Physicaldevice;
                                        format: Format;
                                        pformatproperties: ptr Formatproperties): void {.
    cdecl, importc: "vkGetPhysicalDeviceFormatProperties".}
proc Getphysicaldeviceimageformatproperties*(physicaldevice: Physicaldevice;
    format: Format; typearg: Imagetype; tiling: Imagetiling;
    usage: Imageusageflags; flags: Imagecreateflags;
    pimageformatproperties: ptr Imageformatproperties): Result {.cdecl,
    importc: "vkGetPhysicalDeviceImageFormatProperties".}
proc Getphysicaldeviceproperties*(physicaldevice: Physicaldevice;
                                  pproperties: ptr Physicaldeviceproperties): void {.
    cdecl, importc: "vkGetPhysicalDeviceProperties".}
proc Getphysicaldevicequeuefamilyproperties*(physicaldevice: Physicaldevice;
    pqueuefamilypropertycount: ptr uint32;
    pqueuefamilyproperties: ptr Queuefamilyproperties): void {.cdecl,
    importc: "vkGetPhysicalDeviceQueueFamilyProperties".}
proc Getphysicaldevicememoryproperties*(physicaldevice: Physicaldevice;
    pmemoryproperties: ptr Physicaldevicememoryproperties): void {.cdecl,
    importc: "vkGetPhysicalDeviceMemoryProperties".}
proc Getinstanceprocaddr*(instance: Instance; pname: cstring): Pfnvkvoidfunction {.
    cdecl, importc: "vkGetInstanceProcAddr".}
proc Getdeviceprocaddr*(device: Device; pname: cstring): Pfnvkvoidfunction {.
    cdecl, importc: "vkGetDeviceProcAddr".}
proc Createdevice*(physicaldevice: Physicaldevice;
                   pcreateinfo: ptr Devicecreateinfo;
                   pallocator: ptr Allocationcallbacks; pdevice: ptr Device): Result {.
    cdecl, importc: "vkCreateDevice".}
proc Destroydevice*(device: Device; pallocator: ptr Allocationcallbacks): void {.
    cdecl, importc: "vkDestroyDevice".}
proc Enumerateinstanceextensionproperties*(playername: cstring;
    ppropertycount: ptr uint32; pproperties: ptr Extensionproperties): Result {.
    cdecl, importc: "vkEnumerateInstanceExtensionProperties".}
proc Enumeratedeviceextensionproperties*(physicaldevice: Physicaldevice;
    playername: cstring; ppropertycount: ptr uint32;
    pproperties: ptr Extensionproperties): Result {.cdecl,
    importc: "vkEnumerateDeviceExtensionProperties".}
proc Enumerateinstancelayerproperties*(ppropertycount: ptr uint32;
                                       pproperties: ptr Layerproperties): Result {.
    cdecl, importc: "vkEnumerateInstanceLayerProperties".}
proc Enumeratedevicelayerproperties*(physicaldevice: Physicaldevice;
                                     ppropertycount: ptr uint32;
                                     pproperties: ptr Layerproperties): Result {.
    cdecl, importc: "vkEnumerateDeviceLayerProperties".}
proc Getdevicequeue*(device: Device; queuefamilyindex: uint32;
                     queueindex: uint32; pqueue: ptr Queue): void {.cdecl,
    importc: "vkGetDeviceQueue".}
proc Queuesubmit*(queue: Queue; submitcount: uint32; psubmits: ptr Submitinfo;
                  fence: Fence): Result {.cdecl, importc: "vkQueueSubmit".}
proc Queuewaitidle*(queue: Queue): Result {.cdecl, importc: "vkQueueWaitIdle".}
proc Devicewaitidle*(device: Device): Result {.cdecl,
    importc: "vkDeviceWaitIdle".}
proc Allocatememory*(device: Device; pallocateinfo: ptr Memoryallocateinfo;
                     pallocator: ptr Allocationcallbacks;
                     pmemory: ptr Devicememory): Result {.cdecl,
    importc: "vkAllocateMemory".}
proc Freememory*(device: Device; memory: Devicememory;
                 pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkFreeMemory".}
proc Mapmemory*(device: Device; memory: Devicememory; offset: Devicesize;
                size: Devicesize; flags: Memorymapflags; ppdata: ptr pointer): Result {.
    cdecl, importc: "vkMapMemory".}
proc Unmapmemory*(device: Device; memory: Devicememory): void {.cdecl,
    importc: "vkUnmapMemory".}
proc Flushmappedmemoryranges*(device: Device; memoryrangecount: uint32;
                              pmemoryranges: ptr Mappedmemoryrange): Result {.
    cdecl, importc: "vkFlushMappedMemoryRanges".}
proc Invalidatemappedmemoryranges*(device: Device; memoryrangecount: uint32;
                                   pmemoryranges: ptr Mappedmemoryrange): Result {.
    cdecl, importc: "vkInvalidateMappedMemoryRanges".}
proc Getdevicememorycommitment*(device: Device; memory: Devicememory;
                                pcommittedmemoryinbytes: ptr Devicesize): void {.
    cdecl, importc: "vkGetDeviceMemoryCommitment".}
proc Bindbuffermemory*(device: Device; buffer: Buffer; memory: Devicememory;
                       memoryoffset: Devicesize): Result {.cdecl,
    importc: "vkBindBufferMemory".}
proc Bindimagememory*(device: Device; image: Image; memory: Devicememory;
                      memoryoffset: Devicesize): Result {.cdecl,
    importc: "vkBindImageMemory".}
proc Getbuffermemoryrequirements*(device: Device; buffer: Buffer;
                                  pmemoryrequirements: ptr Memoryrequirements): void {.
    cdecl, importc: "vkGetBufferMemoryRequirements".}
proc Getimagememoryrequirements*(device: Device; image: Image;
                                 pmemoryrequirements: ptr Memoryrequirements): void {.
    cdecl, importc: "vkGetImageMemoryRequirements".}
proc Getimagesparsememoryrequirements*(device: Device; image: Image;
    psparsememoryrequirementcount: ptr uint32; psparsememoryrequirements: ptr Sparseimagememoryrequirements): void {.
    cdecl, importc: "vkGetImageSparseMemoryRequirements".}
proc Getphysicaldevicesparseimageformatproperties*(
    physicaldevice: Physicaldevice; format: Format; typearg: Imagetype;
    samples: Samplecountflagbits; usage: Imageusageflags; tiling: Imagetiling;
    ppropertycount: ptr uint32; pproperties: ptr Sparseimageformatproperties): void {.
    cdecl, importc: "vkGetPhysicalDeviceSparseImageFormatProperties".}
proc Queuebindsparse*(queue: Queue; bindinfocount: uint32;
                      pbindinfo: ptr Bindsparseinfo; fence: Fence): Result {.
    cdecl, importc: "vkQueueBindSparse".}
proc Createfence*(device: Device; pcreateinfo: ptr Fencecreateinfo;
                  pallocator: ptr Allocationcallbacks; pfence: ptr Fence): Result {.
    cdecl, importc: "vkCreateFence".}
proc Destroyfence*(device: Device; fence: Fence;
                   pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkDestroyFence".}
proc Resetfences*(device: Device; fencecount: uint32; pfences: ptr Fence): Result {.
    cdecl, importc: "vkResetFences".}
proc Getfencestatus*(device: Device; fence: Fence): Result {.cdecl,
    importc: "vkGetFenceStatus".}
proc Waitforfences*(device: Device; fencecount: uint32; pfences: ptr Fence;
                    waitall: Bool32; timeout: uint64): Result {.cdecl,
    importc: "vkWaitForFences".}
proc Createsemaphore*(device: Device; pcreateinfo: ptr Semaphorecreateinfo;
                      pallocator: ptr Allocationcallbacks;
                      psemaphore: ptr Semaphore): Result {.cdecl,
    importc: "vkCreateSemaphore".}
proc Destroysemaphore*(device: Device; semaphore: Semaphore;
                       pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkDestroySemaphore".}
proc Createevent*(device: Device; pcreateinfo: ptr Eventcreateinfo;
                  pallocator: ptr Allocationcallbacks; pevent: ptr Event): Result {.
    cdecl, importc: "vkCreateEvent".}
proc Destroyevent*(device: Device; event: Event;
                   pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkDestroyEvent".}
proc Geteventstatus*(device: Device; event: Event): Result {.cdecl,
    importc: "vkGetEventStatus".}
proc Setevent*(device: Device; event: Event): Result {.cdecl,
    importc: "vkSetEvent".}
proc Resetevent*(device: Device; event: Event): Result {.cdecl,
    importc: "vkResetEvent".}
proc Createquerypool*(device: Device; pcreateinfo: ptr Querypoolcreateinfo;
                      pallocator: ptr Allocationcallbacks;
                      pquerypool: ptr Querypool): Result {.cdecl,
    importc: "vkCreateQueryPool".}
proc Destroyquerypool*(device: Device; querypool: Querypool;
                       pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkDestroyQueryPool".}
proc Getquerypoolresults*(device: Device; querypool: Querypool;
                          firstquery: uint32; querycount: uint32;
                          datasize: csize_t; pdata: pointer; stride: Devicesize;
                          flags: Queryresultflags): Result {.cdecl,
    importc: "vkGetQueryPoolResults".}
proc Createbuffer*(device: Device; pcreateinfo: ptr Buffercreateinfo;
                   pallocator: ptr Allocationcallbacks; pbuffer: ptr Buffer): Result {.
    cdecl, importc: "vkCreateBuffer".}
proc Destroybuffer*(device: Device; buffer: Buffer;
                    pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkDestroyBuffer".}
proc Createbufferview*(device: Device; pcreateinfo: ptr Bufferviewcreateinfo;
                       pallocator: ptr Allocationcallbacks;
                       pview: ptr Bufferview): Result {.cdecl,
    importc: "vkCreateBufferView".}
proc Destroybufferview*(device: Device; bufferview: Bufferview;
                        pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkDestroyBufferView".}
proc Createimage*(device: Device; pcreateinfo: ptr Imagecreateinfo;
                  pallocator: ptr Allocationcallbacks; pimage: ptr Image): Result {.
    cdecl, importc: "vkCreateImage".}
proc Destroyimage*(device: Device; image: Image;
                   pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkDestroyImage".}
proc Getimagesubresourcelayout*(device: Device; image: Image;
                                psubresource: ptr Imagesubresource;
                                playout: ptr Subresourcelayout): void {.cdecl,
    importc: "vkGetImageSubresourceLayout".}
proc Createimageview*(device: Device; pcreateinfo: ptr Imageviewcreateinfo;
                      pallocator: ptr Allocationcallbacks; pview: ptr Imageview): Result {.
    cdecl, importc: "vkCreateImageView".}
proc Destroyimageview*(device: Device; imageview: Imageview;
                       pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkDestroyImageView".}
proc Createshadermodule*(device: Device;
                         pcreateinfo: ptr Shadermodulecreateinfo;
                         pallocator: ptr Allocationcallbacks;
                         pshadermodule: ptr Shadermodule): Result {.cdecl,
    importc: "vkCreateShaderModule".}
proc Destroyshadermodule*(device: Device; shadermodule: Shadermodule;
                          pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkDestroyShaderModule".}
proc Createpipelinecache*(device: Device;
                          pcreateinfo: ptr Pipelinecachecreateinfo;
                          pallocator: ptr Allocationcallbacks;
                          ppipelinecache: ptr Pipelinecache): Result {.cdecl,
    importc: "vkCreatePipelineCache".}
proc Destroypipelinecache*(device: Device; pipelinecache: Pipelinecache;
                           pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkDestroyPipelineCache".}
proc Getpipelinecachedata*(device: Device; pipelinecache: Pipelinecache;
                           pdatasize: ptr csize_t; pdata: pointer): Result {.
    cdecl, importc: "vkGetPipelineCacheData".}
proc Mergepipelinecaches*(device: Device; dstcache: Pipelinecache;
                          srccachecount: uint32; psrccaches: ptr Pipelinecache): Result {.
    cdecl, importc: "vkMergePipelineCaches".}
proc Creategraphicspipelines*(device: Device; pipelinecache: Pipelinecache;
                              createinfocount: uint32;
                              pcreateinfos: ptr Graphicspipelinecreateinfo;
                              pallocator: ptr Allocationcallbacks;
                              ppipelines: ptr Pipeline): Result {.cdecl,
    importc: "vkCreateGraphicsPipelines".}
proc Createcomputepipelines*(device: Device; pipelinecache: Pipelinecache;
                             createinfocount: uint32;
                             pcreateinfos: ptr Computepipelinecreateinfo;
                             pallocator: ptr Allocationcallbacks;
                             ppipelines: ptr Pipeline): Result {.cdecl,
    importc: "vkCreateComputePipelines".}
proc Destroypipeline*(device: Device; pipeline: Pipeline;
                      pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkDestroyPipeline".}
proc Createpipelinelayout*(device: Device;
                           pcreateinfo: ptr Pipelinelayoutcreateinfo;
                           pallocator: ptr Allocationcallbacks;
                           ppipelinelayout: ptr Pipelinelayout): Result {.cdecl,
    importc: "vkCreatePipelineLayout".}
proc Destroypipelinelayout*(device: Device; pipelinelayout: Pipelinelayout;
                            pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkDestroyPipelineLayout".}
proc Createsampler*(device: Device; pcreateinfo: ptr Samplercreateinfo;
                    pallocator: ptr Allocationcallbacks; psampler: ptr Sampler): Result {.
    cdecl, importc: "vkCreateSampler".}
proc Destroysampler*(device: Device; sampler: Sampler;
                     pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkDestroySampler".}
proc Createdescriptorsetlayout*(device: Device;
                                pcreateinfo: ptr Descriptorsetlayoutcreateinfo;
                                pallocator: ptr Allocationcallbacks;
                                psetlayout: ptr Descriptorsetlayout): Result {.
    cdecl, importc: "vkCreateDescriptorSetLayout".}
proc Destroydescriptorsetlayout*(device: Device;
                                 descriptorsetlayout: Descriptorsetlayout;
                                 pallocator: ptr Allocationcallbacks): void {.
    cdecl, importc: "vkDestroyDescriptorSetLayout".}
proc Createdescriptorpool*(device: Device;
                           pcreateinfo: ptr Descriptorpoolcreateinfo;
                           pallocator: ptr Allocationcallbacks;
                           pdescriptorpool: ptr Descriptorpool): Result {.cdecl,
    importc: "vkCreateDescriptorPool".}
proc Destroydescriptorpool*(device: Device; descriptorpool: Descriptorpool;
                            pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkDestroyDescriptorPool".}
proc Resetdescriptorpool*(device: Device; descriptorpool: Descriptorpool;
                          flags: Descriptorpoolresetflags): Result {.cdecl,
    importc: "vkResetDescriptorPool".}
proc Allocatedescriptorsets*(device: Device;
                             pallocateinfo: ptr Descriptorsetallocateinfo;
                             pdescriptorsets: ptr Descriptorset): Result {.
    cdecl, importc: "vkAllocateDescriptorSets".}
proc Freedescriptorsets*(device: Device; descriptorpool: Descriptorpool;
                         descriptorsetcount: uint32;
                         pdescriptorsets: ptr Descriptorset): Result {.cdecl,
    importc: "vkFreeDescriptorSets".}
proc Updatedescriptorsets*(device: Device; descriptorwritecount: uint32;
                           pdescriptorwrites: ptr Writedescriptorset;
                           descriptorcopycount: uint32;
                           pdescriptorcopies: ptr Copydescriptorset): void {.
    cdecl, importc: "vkUpdateDescriptorSets".}
proc Createframebuffer*(device: Device; pcreateinfo: ptr Framebuffercreateinfo;
                        pallocator: ptr Allocationcallbacks;
                        pframebuffer: ptr Framebuffer): Result {.cdecl,
    importc: "vkCreateFramebuffer".}
proc Destroyframebuffer*(device: Device; framebuffer: Framebuffer;
                         pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkDestroyFramebuffer".}
proc Createrenderpass*(device: Device; pcreateinfo: ptr Renderpasscreateinfo;
                       pallocator: ptr Allocationcallbacks;
                       prenderpass: ptr Renderpass): Result {.cdecl,
    importc: "vkCreateRenderPass".}
proc Destroyrenderpass*(device: Device; renderpass: Renderpass;
                        pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkDestroyRenderPass".}
proc Getrenderareagranularity*(device: Device; renderpass: Renderpass;
                               pgranularity: ptr Extent2d): void {.cdecl,
    importc: "vkGetRenderAreaGranularity".}
proc Createcommandpool*(device: Device; pcreateinfo: ptr Commandpoolcreateinfo;
                        pallocator: ptr Allocationcallbacks;
                        pcommandpool: ptr Commandpool): Result {.cdecl,
    importc: "vkCreateCommandPool".}
proc Destroycommandpool*(device: Device; commandpool: Commandpool;
                         pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkDestroyCommandPool".}
proc Resetcommandpool*(device: Device; commandpool: Commandpool;
                       flags: Commandpoolresetflags): Result {.cdecl,
    importc: "vkResetCommandPool".}
proc Allocatecommandbuffers*(device: Device;
                             pallocateinfo: ptr Commandbufferallocateinfo;
                             pcommandbuffers: ptr Commandbuffer): Result {.
    cdecl, importc: "vkAllocateCommandBuffers".}
proc Freecommandbuffers*(device: Device; commandpool: Commandpool;
                         commandbuffercount: uint32;
                         pcommandbuffers: ptr Commandbuffer): void {.cdecl,
    importc: "vkFreeCommandBuffers".}
proc Begincommandbuffer*(commandbuffer: Commandbuffer;
                         pbegininfo: ptr Commandbufferbegininfo): Result {.
    cdecl, importc: "vkBeginCommandBuffer".}
proc Endcommandbuffer*(commandbuffer: Commandbuffer): Result {.cdecl,
    importc: "vkEndCommandBuffer".}
proc Resetcommandbuffer*(commandbuffer: Commandbuffer;
                         flags: Commandbufferresetflags): Result {.cdecl,
    importc: "vkResetCommandBuffer".}
proc Cmdbindpipeline*(commandbuffer: Commandbuffer;
                      pipelinebindpoint: Pipelinebindpoint; pipeline: Pipeline): void {.
    cdecl, importc: "vkCmdBindPipeline".}
proc Cmdsetviewport*(commandbuffer: Commandbuffer; firstviewport: uint32;
                     viewportcount: uint32; pviewports: ptr Viewport): void {.
    cdecl, importc: "vkCmdSetViewport".}
proc Cmdsetscissor*(commandbuffer: Commandbuffer; firstscissor: uint32;
                    scissorcount: uint32; pscissors: ptr Rect2d): void {.cdecl,
    importc: "vkCmdSetScissor".}
proc Cmdsetlinewidth*(commandbuffer: Commandbuffer; linewidth: cfloat): void {.
    cdecl, importc: "vkCmdSetLineWidth".}
proc Cmdsetdepthbias*(commandbuffer: Commandbuffer;
                      depthbiasconstantfactor: cfloat; depthbiasclamp: cfloat;
                      depthbiasslopefactor: cfloat): void {.cdecl,
    importc: "vkCmdSetDepthBias".}
proc Cmdsetblendconstants*(commandbuffer: Commandbuffer;
                           blendconstants: array[4'i64, cfloat]): void {.cdecl,
    importc: "vkCmdSetBlendConstants".}
proc Cmdsetdepthbounds*(commandbuffer: Commandbuffer; mindepthbounds: cfloat;
                        maxdepthbounds: cfloat): void {.cdecl,
    importc: "vkCmdSetDepthBounds".}
proc Cmdsetstencilcomparemask*(commandbuffer: Commandbuffer;
                               facemask: Stencilfaceflags; comparemask: uint32): void {.
    cdecl, importc: "vkCmdSetStencilCompareMask".}
proc Cmdsetstencilwritemask*(commandbuffer: Commandbuffer;
                             facemask: Stencilfaceflags; writemask: uint32): void {.
    cdecl, importc: "vkCmdSetStencilWriteMask".}
proc Cmdsetstencilreference*(commandbuffer: Commandbuffer;
                             facemask: Stencilfaceflags; reference: uint32): void {.
    cdecl, importc: "vkCmdSetStencilReference".}
proc Cmdbinddescriptorsets*(commandbuffer: Commandbuffer;
                            pipelinebindpoint: Pipelinebindpoint;
                            layout: Pipelinelayout; firstset: uint32;
                            descriptorsetcount: uint32;
                            pdescriptorsets: ptr Descriptorset;
                            dynamicoffsetcount: uint32;
                            pdynamicoffsets: ptr uint32): void {.cdecl,
    importc: "vkCmdBindDescriptorSets".}
proc Cmdbindindexbuffer*(commandbuffer: Commandbuffer; buffer: Buffer;
                         offset: Devicesize; indextype: Indextype): void {.
    cdecl, importc: "vkCmdBindIndexBuffer".}
proc Cmdbindvertexbuffers*(commandbuffer: Commandbuffer; firstbinding: uint32;
                           bindingcount: uint32; pbuffers: ptr Buffer;
                           poffsets: ptr Devicesize): void {.cdecl,
    importc: "vkCmdBindVertexBuffers".}
proc Cmddraw*(commandbuffer: Commandbuffer; vertexcount: uint32;
              instancecount: uint32; firstvertex: uint32; firstinstance: uint32): void {.
    cdecl, importc: "vkCmdDraw".}
proc Cmddrawindexed*(commandbuffer: Commandbuffer; indexcount: uint32;
                     instancecount: uint32; firstindex: uint32;
                     vertexoffset: int32; firstinstance: uint32): void {.cdecl,
    importc: "vkCmdDrawIndexed".}
proc Cmddrawindirect*(commandbuffer: Commandbuffer; buffer: Buffer;
                      offset: Devicesize; drawcount: uint32; stride: uint32): void {.
    cdecl, importc: "vkCmdDrawIndirect".}
proc Cmddrawindexedindirect*(commandbuffer: Commandbuffer; buffer: Buffer;
                             offset: Devicesize; drawcount: uint32;
                             stride: uint32): void {.cdecl,
    importc: "vkCmdDrawIndexedIndirect".}
proc Cmddispatch*(commandbuffer: Commandbuffer; groupcountx: uint32;
                  groupcounty: uint32; groupcountz: uint32): void {.cdecl,
    importc: "vkCmdDispatch".}
proc Cmddispatchindirect*(commandbuffer: Commandbuffer; buffer: Buffer;
                          offset: Devicesize): void {.cdecl,
    importc: "vkCmdDispatchIndirect".}
proc Cmdcopybuffer*(commandbuffer: Commandbuffer; srcbuffer: Buffer;
                    dstbuffer: Buffer; regioncount: uint32;
                    pregions: ptr Buffercopy): void {.cdecl,
    importc: "vkCmdCopyBuffer".}
proc Cmdcopyimage*(commandbuffer: Commandbuffer; srcimage: Image;
                   srcimagelayout: Imagelayout; dstimage: Image;
                   dstimagelayout: Imagelayout; regioncount: uint32;
                   pregions: ptr Imagecopy): void {.cdecl,
    importc: "vkCmdCopyImage".}
proc Cmdblitimage*(commandbuffer: Commandbuffer; srcimage: Image;
                   srcimagelayout: Imagelayout; dstimage: Image;
                   dstimagelayout: Imagelayout; regioncount: uint32;
                   pregions: ptr Imageblit; filter: Filter): void {.cdecl,
    importc: "vkCmdBlitImage".}
proc Cmdcopybuffertoimage*(commandbuffer: Commandbuffer; srcbuffer: Buffer;
                           dstimage: Image; dstimagelayout: Imagelayout;
                           regioncount: uint32; pregions: ptr Bufferimagecopy): void {.
    cdecl, importc: "vkCmdCopyBufferToImage".}
proc Cmdcopyimagetobuffer*(commandbuffer: Commandbuffer; srcimage: Image;
                           srcimagelayout: Imagelayout; dstbuffer: Buffer;
                           regioncount: uint32; pregions: ptr Bufferimagecopy): void {.
    cdecl, importc: "vkCmdCopyImageToBuffer".}
proc Cmdupdatebuffer*(commandbuffer: Commandbuffer; dstbuffer: Buffer;
                      dstoffset: Devicesize; datasize: Devicesize;
                      pdata: pointer): void {.cdecl,
    importc: "vkCmdUpdateBuffer".}
proc Cmdfillbuffer*(commandbuffer: Commandbuffer; dstbuffer: Buffer;
                    dstoffset: Devicesize; size: Devicesize; data: uint32): void {.
    cdecl, importc: "vkCmdFillBuffer".}
proc Cmdclearcolorimage*(commandbuffer: Commandbuffer; image: Image;
                         imagelayout: Imagelayout; pcolor: ptr Clearcolorvalue;
                         rangecount: uint32; pranges: ptr Imagesubresourcerange): void {.
    cdecl, importc: "vkCmdClearColorImage".}
proc Cmdcleardepthstencilimage*(commandbuffer: Commandbuffer; image: Image;
                                imagelayout: Imagelayout;
                                pdepthstencil: ptr Cleardepthstencilvalue;
                                rangecount: uint32;
                                pranges: ptr Imagesubresourcerange): void {.
    cdecl, importc: "vkCmdClearDepthStencilImage".}
proc Cmdclearattachments*(commandbuffer: Commandbuffer; attachmentcount: uint32;
                          pattachments: ptr Clearattachment; rectcount: uint32;
                          prects: ptr Clearrect): void {.cdecl,
    importc: "vkCmdClearAttachments".}
proc Cmdresolveimage*(commandbuffer: Commandbuffer; srcimage: Image;
                      srcimagelayout: Imagelayout; dstimage: Image;
                      dstimagelayout: Imagelayout; regioncount: uint32;
                      pregions: ptr Imageresolve): void {.cdecl,
    importc: "vkCmdResolveImage".}
proc Cmdsetevent*(commandbuffer: Commandbuffer; event: Event;
                  stagemask: Pipelinestageflags): void {.cdecl,
    importc: "vkCmdSetEvent".}
proc Cmdresetevent*(commandbuffer: Commandbuffer; event: Event;
                    stagemask: Pipelinestageflags): void {.cdecl,
    importc: "vkCmdResetEvent".}
proc Cmdwaitevents*(commandbuffer: Commandbuffer; eventcount: uint32;
                    pevents: ptr Event; srcstagemask: Pipelinestageflags;
                    dststagemask: Pipelinestageflags;
                    memorybarriercount: uint32;
                    pmemorybarriers: ptr Memorybarrier;
                    buffermemorybarriercount: uint32;
                    pbuffermemorybarriers: ptr Buffermemorybarrier;
                    imagememorybarriercount: uint32;
                    pimagememorybarriers: ptr Imagememorybarrier): void {.cdecl,
    importc: "vkCmdWaitEvents".}
proc Cmdpipelinebarrier*(commandbuffer: Commandbuffer;
                         srcstagemask: Pipelinestageflags;
                         dststagemask: Pipelinestageflags;
                         dependencyflags: Dependencyflags;
                         memorybarriercount: uint32;
                         pmemorybarriers: ptr Memorybarrier;
                         buffermemorybarriercount: uint32;
                         pbuffermemorybarriers: ptr Buffermemorybarrier;
                         imagememorybarriercount: uint32;
                         pimagememorybarriers: ptr Imagememorybarrier): void {.
    cdecl, importc: "vkCmdPipelineBarrier".}
proc Cmdbeginquery*(commandbuffer: Commandbuffer; querypool: Querypool;
                    query: uint32; flags: Querycontrolflags): void {.cdecl,
    importc: "vkCmdBeginQuery".}
proc Cmdendquery*(commandbuffer: Commandbuffer; querypool: Querypool;
                  query: uint32): void {.cdecl, importc: "vkCmdEndQuery".}
proc Cmdresetquerypool*(commandbuffer: Commandbuffer; querypool: Querypool;
                        firstquery: uint32; querycount: uint32): void {.cdecl,
    importc: "vkCmdResetQueryPool".}
proc Cmdwritetimestamp*(commandbuffer: Commandbuffer;
                        pipelinestage: Pipelinestageflagbits;
                        querypool: Querypool; query: uint32): void {.cdecl,
    importc: "vkCmdWriteTimestamp".}
proc Cmdcopyquerypoolresults*(commandbuffer: Commandbuffer;
                              querypool: Querypool; firstquery: uint32;
                              querycount: uint32; dstbuffer: Buffer;
                              dstoffset: Devicesize; stride: Devicesize;
                              flags: Queryresultflags): void {.cdecl,
    importc: "vkCmdCopyQueryPoolResults".}
proc Cmdpushconstants*(commandbuffer: Commandbuffer; layout: Pipelinelayout;
                       stageflags: Shaderstageflags; offset: uint32;
                       size: uint32; pvalues: pointer): void {.cdecl,
    importc: "vkCmdPushConstants".}
proc Cmdbeginrenderpass*(commandbuffer: Commandbuffer;
                         prenderpassbegin: ptr Renderpassbegininfo;
                         contents: Subpasscontents): void {.cdecl,
    importc: "vkCmdBeginRenderPass".}
proc Cmdnextsubpass*(commandbuffer: Commandbuffer; contents: Subpasscontents): void {.
    cdecl, importc: "vkCmdNextSubpass".}
proc Cmdendrenderpass*(commandbuffer: Commandbuffer): void {.cdecl,
    importc: "vkCmdEndRenderPass".}
proc Cmdexecutecommands*(commandbuffer: Commandbuffer;
                         commandbuffercount: uint32;
                         pcommandbuffers: ptr Commandbuffer): void {.cdecl,
    importc: "vkCmdExecuteCommands".}
proc Enumerateinstanceversion*(papiversion: ptr uint32): Result {.cdecl,
    importc: "vkEnumerateInstanceVersion".}
proc Bindbuffermemory2*(device: Device; bindinfocount: uint32;
                        pbindinfos: ptr Bindbuffermemoryinfo): Result {.cdecl,
    importc: "vkBindBufferMemory2".}
proc Bindimagememory2*(device: Device; bindinfocount: uint32;
                       pbindinfos: ptr Bindimagememoryinfo): Result {.cdecl,
    importc: "vkBindImageMemory2".}
proc Getdevicegrouppeermemoryfeatures*(device: Device; heapindex: uint32;
                                       localdeviceindex: uint32;
                                       remotedeviceindex: uint32;
    ppeermemoryfeatures: ptr Peermemoryfeatureflags): void {.cdecl,
    importc: "vkGetDeviceGroupPeerMemoryFeatures".}
proc Cmdsetdevicemask*(commandbuffer: Commandbuffer; devicemask: uint32): void {.
    cdecl, importc: "vkCmdSetDeviceMask".}
proc Cmddispatchbase*(commandbuffer: Commandbuffer; basegroupx: uint32;
                      basegroupy: uint32; basegroupz: uint32;
                      groupcountx: uint32; groupcounty: uint32;
                      groupcountz: uint32): void {.cdecl,
    importc: "vkCmdDispatchBase".}
proc Enumeratephysicaldevicegroups*(instance: Instance;
                                    pphysicaldevicegroupcount: ptr uint32;
    pphysicaldevicegroupproperties: ptr Physicaldevicegroupproperties): Result {.
    cdecl, importc: "vkEnumeratePhysicalDeviceGroups".}
proc Getimagememoryrequirements2*(device: Device;
                                  pinfo: ptr Imagememoryrequirementsinfo2;
                                  pmemoryrequirements: ptr Memoryrequirements2): void {.
    cdecl, importc: "vkGetImageMemoryRequirements2".}
proc Getbuffermemoryrequirements2*(device: Device;
                                   pinfo: ptr Buffermemoryrequirementsinfo2;
                                   pmemoryrequirements: ptr Memoryrequirements2): void {.
    cdecl, importc: "vkGetBufferMemoryRequirements2".}
proc Getimagesparsememoryrequirements2*(device: Device; pinfo: ptr Imagesparsememoryrequirementsinfo2;
    psparsememoryrequirementcount: ptr uint32; psparsememoryrequirements: ptr Sparseimagememoryrequirements2): void {.
    cdecl, importc: "vkGetImageSparseMemoryRequirements2".}
proc Getphysicaldevicefeatures2*(physicaldevice: Physicaldevice;
                                 pfeatures: ptr Physicaldevicefeatures2): void {.
    cdecl, importc: "vkGetPhysicalDeviceFeatures2".}
proc Getphysicaldeviceproperties2*(physicaldevice: Physicaldevice;
                                   pproperties: ptr Physicaldeviceproperties2): void {.
    cdecl, importc: "vkGetPhysicalDeviceProperties2".}
proc Getphysicaldeviceformatproperties2*(physicaldevice: Physicaldevice;
    format: Format; pformatproperties: ptr Formatproperties2): void {.cdecl,
    importc: "vkGetPhysicalDeviceFormatProperties2".}
proc Getphysicaldeviceimageformatproperties2*(physicaldevice: Physicaldevice;
    pimageformatinfo: ptr Physicaldeviceimageformatinfo2;
    pimageformatproperties: ptr Imageformatproperties2): Result {.cdecl,
    importc: "vkGetPhysicalDeviceImageFormatProperties2".}
proc Getphysicaldevicequeuefamilyproperties2*(physicaldevice: Physicaldevice;
    pqueuefamilypropertycount: ptr uint32;
    pqueuefamilyproperties: ptr Queuefamilyproperties2): void {.cdecl,
    importc: "vkGetPhysicalDeviceQueueFamilyProperties2".}
proc Getphysicaldevicememoryproperties2*(physicaldevice: Physicaldevice;
    pmemoryproperties: ptr Physicaldevicememoryproperties2): void {.cdecl,
    importc: "vkGetPhysicalDeviceMemoryProperties2".}
proc Getphysicaldevicesparseimageformatproperties2*(
    physicaldevice: Physicaldevice;
    pformatinfo: ptr Physicaldevicesparseimageformatinfo2;
    ppropertycount: ptr uint32; pproperties: ptr Sparseimageformatproperties2): void {.
    cdecl, importc: "vkGetPhysicalDeviceSparseImageFormatProperties2".}
proc Trimcommandpool*(device: Device; commandpool: Commandpool;
                      flags: Commandpooltrimflags): void {.cdecl,
    importc: "vkTrimCommandPool".}
proc Getdevicequeue2*(device: Device; pqueueinfo: ptr Devicequeueinfo2;
                      pqueue: ptr Queue): void {.cdecl,
    importc: "vkGetDeviceQueue2".}
proc Createsamplerycbcrconversion*(device: Device; pcreateinfo: ptr Samplerycbcrconversioncreateinfo;
                                   pallocator: ptr Allocationcallbacks;
                                   pycbcrconversion: ptr Samplerycbcrconversion): Result {.
    cdecl, importc: "vkCreateSamplerYcbcrConversion".}
proc Destroysamplerycbcrconversion*(device: Device;
                                    ycbcrconversion: Samplerycbcrconversion;
                                    pallocator: ptr Allocationcallbacks): void {.
    cdecl, importc: "vkDestroySamplerYcbcrConversion".}
proc Createdescriptorupdatetemplate*(device: Device; pcreateinfo: ptr Descriptorupdatetemplatecreateinfo;
                                     pallocator: ptr Allocationcallbacks;
    pdescriptorupdatetemplate: ptr Descriptorupdatetemplate): Result {.cdecl,
    importc: "vkCreateDescriptorUpdateTemplate".}
proc Destroydescriptorupdatetemplate*(device: Device; descriptorupdatetemplate: Descriptorupdatetemplate;
                                      pallocator: ptr Allocationcallbacks): void {.
    cdecl, importc: "vkDestroyDescriptorUpdateTemplate".}
proc Updatedescriptorsetwithtemplate*(device: Device;
                                      descriptorset: Descriptorset;
    descriptorupdatetemplate: Descriptorupdatetemplate; pdata: pointer): void {.
    cdecl, importc: "vkUpdateDescriptorSetWithTemplate".}
proc Getphysicaldeviceexternalbufferproperties*(physicaldevice: Physicaldevice;
    pexternalbufferinfo: ptr Physicaldeviceexternalbufferinfo;
    pexternalbufferproperties: ptr Externalbufferproperties): void {.cdecl,
    importc: "vkGetPhysicalDeviceExternalBufferProperties".}
proc Getphysicaldeviceexternalfenceproperties*(physicaldevice: Physicaldevice;
    pexternalfenceinfo: ptr Physicaldeviceexternalfenceinfo;
    pexternalfenceproperties: ptr Externalfenceproperties): void {.cdecl,
    importc: "vkGetPhysicalDeviceExternalFenceProperties".}
proc Getphysicaldeviceexternalsemaphoreproperties*(
    physicaldevice: Physicaldevice;
    pexternalsemaphoreinfo: ptr Physicaldeviceexternalsemaphoreinfo;
    pexternalsemaphoreproperties: ptr Externalsemaphoreproperties): void {.
    cdecl, importc: "vkGetPhysicalDeviceExternalSemaphoreProperties".}
proc Getdescriptorsetlayoutsupport*(device: Device; pcreateinfo: ptr Descriptorsetlayoutcreateinfo;
                                    psupport: ptr Descriptorsetlayoutsupport): void {.
    cdecl, importc: "vkGetDescriptorSetLayoutSupport".}
proc Cmddrawindirectcount*(commandbuffer: Commandbuffer; buffer: Buffer;
                           offset: Devicesize; countbuffer: Buffer;
                           countbufferoffset: Devicesize; maxdrawcount: uint32;
                           stride: uint32): void {.cdecl,
    importc: "vkCmdDrawIndirectCount".}
proc Cmddrawindexedindirectcount*(commandbuffer: Commandbuffer; buffer: Buffer;
                                  offset: Devicesize; countbuffer: Buffer;
                                  countbufferoffset: Devicesize;
                                  maxdrawcount: uint32; stride: uint32): void {.
    cdecl, importc: "vkCmdDrawIndexedIndirectCount".}
proc Createrenderpass2*(device: Device; pcreateinfo: ptr Renderpasscreateinfo2;
                        pallocator: ptr Allocationcallbacks;
                        prenderpass: ptr Renderpass): Result {.cdecl,
    importc: "vkCreateRenderPass2".}
proc Cmdbeginrenderpass2*(commandbuffer: Commandbuffer;
                          prenderpassbegin: ptr Renderpassbegininfo;
                          psubpassbegininfo: ptr Subpassbegininfo): void {.
    cdecl, importc: "vkCmdBeginRenderPass2".}
proc Cmdnextsubpass2*(commandbuffer: Commandbuffer;
                      psubpassbegininfo: ptr Subpassbegininfo;
                      psubpassendinfo: ptr Subpassendinfo): void {.cdecl,
    importc: "vkCmdNextSubpass2".}
proc Cmdendrenderpass2*(commandbuffer: Commandbuffer;
                        psubpassendinfo: ptr Subpassendinfo): void {.cdecl,
    importc: "vkCmdEndRenderPass2".}
proc Resetquerypool*(device: Device; querypool: Querypool; firstquery: uint32;
                     querycount: uint32): void {.cdecl,
    importc: "vkResetQueryPool".}
proc Getsemaphorecountervalue*(device: Device; semaphore: Semaphore;
                               pvalue: ptr uint64): Result {.cdecl,
    importc: "vkGetSemaphoreCounterValue".}
proc Waitsemaphores*(device: Device; pwaitinfo: ptr Semaphorewaitinfo;
                     timeout: uint64): Result {.cdecl,
    importc: "vkWaitSemaphores".}
proc Signalsemaphore*(device: Device; psignalinfo: ptr Semaphoresignalinfo): Result {.
    cdecl, importc: "vkSignalSemaphore".}
proc Getbufferdeviceaddress*(device: Device; pinfo: ptr Bufferdeviceaddressinfo): Deviceaddress {.
    cdecl, importc: "vkGetBufferDeviceAddress".}
proc Getbufferopaquecaptureaddress*(device: Device;
                                    pinfo: ptr Bufferdeviceaddressinfo): uint64 {.
    cdecl, importc: "vkGetBufferOpaqueCaptureAddress".}
proc Getdevicememoryopaquecaptureaddress*(device: Device;
    pinfo: ptr Devicememoryopaquecaptureaddressinfo): uint64 {.cdecl,
    importc: "vkGetDeviceMemoryOpaqueCaptureAddress".}
var Pipelinestage2none*: Pipelinestageflagbits2
var Pipelinestage2nonekhr*: Pipelinestageflagbits2
var Pipelinestage2topofpipebit*: Pipelinestageflagbits2
var Pipelinestage2topofpipebitkhr*: Pipelinestageflagbits2
var Pipelinestage2drawindirectbit*: Pipelinestageflagbits2
var Pipelinestage2drawindirectbitkhr*: Pipelinestageflagbits2
var Pipelinestage2vertexinputbit*: Pipelinestageflagbits2
var Pipelinestage2vertexinputbitkhr*: Pipelinestageflagbits2
var Pipelinestage2vertexshaderbit*: Pipelinestageflagbits2
var Pipelinestage2vertexshaderbitkhr*: Pipelinestageflagbits2
var Pipelinestage2tessellationcontrolshaderbit*: Pipelinestageflagbits2
var Pipelinestage2tessellationcontrolshaderbitkhr*: Pipelinestageflagbits2
var Pipelinestage2tessellationevaluationshaderbit*: Pipelinestageflagbits2
var Pipelinestage2tessellationevaluationshaderbitkhr*: Pipelinestageflagbits2
var Pipelinestage2geometryshaderbit*: Pipelinestageflagbits2
var Pipelinestage2geometryshaderbitkhr*: Pipelinestageflagbits2
var Pipelinestage2fragmentshaderbit*: Pipelinestageflagbits2
var Pipelinestage2fragmentshaderbitkhr*: Pipelinestageflagbits2
var Pipelinestage2earlyfragmenttestsbit*: Pipelinestageflagbits2
var Pipelinestage2earlyfragmenttestsbitkhr*: Pipelinestageflagbits2
var Pipelinestage2latefragmenttestsbit*: Pipelinestageflagbits2
var Pipelinestage2latefragmenttestsbitkhr*: Pipelinestageflagbits2
var Pipelinestage2colorattachmentoutputbit*: Pipelinestageflagbits2
var Pipelinestage2colorattachmentoutputbitkhr*: Pipelinestageflagbits2
var Pipelinestage2computeshaderbit*: Pipelinestageflagbits2
var Pipelinestage2computeshaderbitkhr*: Pipelinestageflagbits2
var Pipelinestage2alltransferbit*: Pipelinestageflagbits2
var Pipelinestage2alltransferbitkhr*: Pipelinestageflagbits2
var Pipelinestage2transferbit*: Pipelinestageflagbits2
var Pipelinestage2transferbitkhr*: Pipelinestageflagbits2
var Pipelinestage2bottomofpipebit*: Pipelinestageflagbits2
var Pipelinestage2bottomofpipebitkhr*: Pipelinestageflagbits2
var Pipelinestage2hostbit*: Pipelinestageflagbits2
var Pipelinestage2hostbitkhr*: Pipelinestageflagbits2
var Pipelinestage2allgraphicsbit*: Pipelinestageflagbits2
var Pipelinestage2allgraphicsbitkhr*: Pipelinestageflagbits2
var Pipelinestage2allcommandsbit*: Pipelinestageflagbits2
var Pipelinestage2allcommandsbitkhr*: Pipelinestageflagbits2
var Pipelinestage2copybit*: Pipelinestageflagbits2
var Pipelinestage2copybitkhr*: Pipelinestageflagbits2
var Pipelinestage2resolvebit*: Pipelinestageflagbits2
var Pipelinestage2resolvebitkhr*: Pipelinestageflagbits2
var Pipelinestage2blitbit*: Pipelinestageflagbits2
var Pipelinestage2blitbitkhr*: Pipelinestageflagbits2
var Pipelinestage2clearbit*: Pipelinestageflagbits2
var Pipelinestage2clearbitkhr*: Pipelinestageflagbits2
var Pipelinestage2indexinputbit*: Pipelinestageflagbits2
var Pipelinestage2indexinputbitkhr*: Pipelinestageflagbits2
var Pipelinestage2vertexattributeinputbit*: Pipelinestageflagbits2
var Pipelinestage2vertexattributeinputbitkhr*: Pipelinestageflagbits2
var Pipelinestage2prerasterizationshadersbit*: Pipelinestageflagbits2
var Pipelinestage2prerasterizationshadersbitkhr*: Pipelinestageflagbits2
var Pipelinestage2videodecodebitkhr*: Pipelinestageflagbits2
var Pipelinestage2videoencodebitkhr*: Pipelinestageflagbits2
var Pipelinestage2transformfeedbackbitext*: Pipelinestageflagbits2
var Pipelinestage2conditionalrenderingbitext*: Pipelinestageflagbits2
var Pipelinestage2commandpreprocessbitnv*: Pipelinestageflagbits2
var Pipelinestage2fragmentshadingrateattachmentbitkhr*: Pipelinestageflagbits2
var Pipelinestage2shadingrateimagebitnv*: Pipelinestageflagbits2
var Pipelinestage2accelerationstructurebuildbitkhr*: Pipelinestageflagbits2
var Pipelinestage2raytracingshaderbitkhr*: Pipelinestageflagbits2
var Pipelinestage2raytracingshaderbitnv*: Pipelinestageflagbits2
var Pipelinestage2accelerationstructurebuildbitnv*: Pipelinestageflagbits2
var Pipelinestage2fragmentdensityprocessbitext*: Pipelinestageflagbits2
var Pipelinestage2taskshaderbitnv*: Pipelinestageflagbits2
var Pipelinestage2meshshaderbitnv*: Pipelinestageflagbits2
var Pipelinestage2taskshaderbitext*: Pipelinestageflagbits2
var Pipelinestage2meshshaderbitext*: Pipelinestageflagbits2
var Pipelinestage2subpassshaderbithuawei*: Pipelinestageflagbits2
var Pipelinestage2subpassshadingbithuawei*: Pipelinestageflagbits2
var Pipelinestage2invocationmaskbithuawei*: Pipelinestageflagbits2
var Pipelinestage2accelerationstructurecopybitkhr*: Pipelinestageflagbits2
var Pipelinestage2micromapbuildbitext*: Pipelinestageflagbits2
var Pipelinestage2clustercullingshaderbithuawei*: Pipelinestageflagbits2
var Pipelinestage2opticalflowbitnv*: Pipelinestageflagbits2
var Access2none*: Accessflagbits2
var Access2nonekhr*: Accessflagbits2
var Access2indirectcommandreadbit*: Accessflagbits2
var Access2indirectcommandreadbitkhr*: Accessflagbits2
var Access2indexreadbit*: Accessflagbits2
var Access2indexreadbitkhr*: Accessflagbits2
var Access2vertexattributereadbit*: Accessflagbits2
var Access2vertexattributereadbitkhr*: Accessflagbits2
var Access2uniformreadbit*: Accessflagbits2
var Access2uniformreadbitkhr*: Accessflagbits2
var Access2inputattachmentreadbit*: Accessflagbits2
var Access2inputattachmentreadbitkhr*: Accessflagbits2
var Access2shaderreadbit*: Accessflagbits2
var Access2shaderreadbitkhr*: Accessflagbits2
var Access2shaderwritebit*: Accessflagbits2
var Access2shaderwritebitkhr*: Accessflagbits2
var Access2colorattachmentreadbit*: Accessflagbits2
var Access2colorattachmentreadbitkhr*: Accessflagbits2
var Access2colorattachmentwritebit*: Accessflagbits2
var Access2colorattachmentwritebitkhr*: Accessflagbits2
var Access2depthstencilattachmentreadbit*: Accessflagbits2
var Access2depthstencilattachmentreadbitkhr*: Accessflagbits2
var Access2depthstencilattachmentwritebit*: Accessflagbits2
var Access2depthstencilattachmentwritebitkhr*: Accessflagbits2
var Access2transferreadbit*: Accessflagbits2
var Access2transferreadbitkhr*: Accessflagbits2
var Access2transferwritebit*: Accessflagbits2
var Access2transferwritebitkhr*: Accessflagbits2
var Access2hostreadbit*: Accessflagbits2
var Access2hostreadbitkhr*: Accessflagbits2
var Access2hostwritebit*: Accessflagbits2
var Access2hostwritebitkhr*: Accessflagbits2
var Access2memoryreadbit*: Accessflagbits2
var Access2memoryreadbitkhr*: Accessflagbits2
var Access2memorywritebit*: Accessflagbits2
var Access2memorywritebitkhr*: Accessflagbits2
var Access2shadersampledreadbit*: Accessflagbits2
var Access2shadersampledreadbitkhr*: Accessflagbits2
var Access2shaderstoragereadbit*: Accessflagbits2
var Access2shaderstoragereadbitkhr*: Accessflagbits2
var Access2shaderstoragewritebit*: Accessflagbits2
var Access2shaderstoragewritebitkhr*: Accessflagbits2
var Access2videodecodereadbitkhr*: Accessflagbits2
var Access2videodecodewritebitkhr*: Accessflagbits2
var Access2videoencodereadbitkhr*: Accessflagbits2
var Access2videoencodewritebitkhr*: Accessflagbits2
var Access2transformfeedbackwritebitext*: Accessflagbits2
var Access2transformfeedbackcounterreadbitext*: Accessflagbits2
var Access2transformfeedbackcounterwritebitext*: Accessflagbits2
var Access2conditionalrenderingreadbitext*: Accessflagbits2
var Access2commandpreprocessreadbitnv*: Accessflagbits2
var Access2commandpreprocesswritebitnv*: Accessflagbits2
var Access2fragmentshadingrateattachmentreadbitkhr*: Accessflagbits2
var Access2shadingrateimagereadbitnv*: Accessflagbits2
var Access2accelerationstructurereadbitkhr*: Accessflagbits2
var Access2accelerationstructurewritebitkhr*: Accessflagbits2
var Access2accelerationstructurereadbitnv*: Accessflagbits2
var Access2accelerationstructurewritebitnv*: Accessflagbits2
var Access2fragmentdensitymapreadbitext*: Accessflagbits2
var Access2colorattachmentreadnoncoherentbitext*: Accessflagbits2
var Access2descriptorbufferreadbitext*: Accessflagbits2
var Access2invocationmaskreadbithuawei*: Accessflagbits2
var Access2shaderbindingtablereadbitkhr*: Accessflagbits2
var Access2micromapreadbitext*: Accessflagbits2
var Access2micromapwritebitext*: Accessflagbits2
var Access2opticalflowreadbitnv*: Accessflagbits2
var Access2opticalflowwritebitnv*: Accessflagbits2
var Formatfeature2sampledimagebit*: Formatfeatureflagbits2
var Formatfeature2sampledimagebitkhr*: Formatfeatureflagbits2
var Formatfeature2storageimagebit*: Formatfeatureflagbits2
var Formatfeature2storageimagebitkhr*: Formatfeatureflagbits2
var Formatfeature2storageimageatomicbit*: Formatfeatureflagbits2
var Formatfeature2storageimageatomicbitkhr*: Formatfeatureflagbits2
var Formatfeature2uniformtexelbufferbit*: Formatfeatureflagbits2
var Formatfeature2uniformtexelbufferbitkhr*: Formatfeatureflagbits2
var Formatfeature2storagetexelbufferbit*: Formatfeatureflagbits2
var Formatfeature2storagetexelbufferbitkhr*: Formatfeatureflagbits2
var Formatfeature2storagetexelbufferatomicbit*: Formatfeatureflagbits2
var Formatfeature2storagetexelbufferatomicbitkhr*: Formatfeatureflagbits2
var Formatfeature2vertexbufferbit*: Formatfeatureflagbits2
var Formatfeature2vertexbufferbitkhr*: Formatfeatureflagbits2
var Formatfeature2colorattachmentbit*: Formatfeatureflagbits2
var Formatfeature2colorattachmentbitkhr*: Formatfeatureflagbits2
var Formatfeature2colorattachmentblendbit*: Formatfeatureflagbits2
var Formatfeature2colorattachmentblendbitkhr*: Formatfeatureflagbits2
var Formatfeature2depthstencilattachmentbit*: Formatfeatureflagbits2
var Formatfeature2depthstencilattachmentbitkhr*: Formatfeatureflagbits2
var Formatfeature2blitsrcbit*: Formatfeatureflagbits2
var Formatfeature2blitsrcbitkhr*: Formatfeatureflagbits2
var Formatfeature2blitdstbit*: Formatfeatureflagbits2
var Formatfeature2blitdstbitkhr*: Formatfeatureflagbits2
var Formatfeature2sampledimagefilterlinearbit*: Formatfeatureflagbits2
var Formatfeature2sampledimagefilterlinearbitkhr*: Formatfeatureflagbits2
var Formatfeature2sampledimagefiltercubicbit*: Formatfeatureflagbits2
var Formatfeature2sampledimagefiltercubicbitext*: Formatfeatureflagbits2
var Formatfeature2transfersrcbit*: Formatfeatureflagbits2
var Formatfeature2transfersrcbitkhr*: Formatfeatureflagbits2
var Formatfeature2transferdstbit*: Formatfeatureflagbits2
var Formatfeature2transferdstbitkhr*: Formatfeatureflagbits2
var Formatfeature2sampledimagefilterminmaxbit*: Formatfeatureflagbits2
var Formatfeature2sampledimagefilterminmaxbitkhr*: Formatfeatureflagbits2
var Formatfeature2midpointchromasamplesbit*: Formatfeatureflagbits2
var Formatfeature2midpointchromasamplesbitkhr*: Formatfeatureflagbits2
var Formatfeature2sampledimageycbcrconversionlinearfilterbit*: Formatfeatureflagbits2
var Formatfeature2sampledimageycbcrconversionlinearfilterbitkhr*: Formatfeatureflagbits2
var Formatfeature2sampledimageycbcrconversionseparatereconstructionfilterbit*: Formatfeatureflagbits2
var Formatfeature2sampledimageycbcrconversionseparatereconstructionfilterbitkhr*: Formatfeatureflagbits2
var Formatfeature2sampledimageycbcrconversionchromareconstructionexplicitbit*: Formatfeatureflagbits2
var Formatfeature2sampledimageycbcrconversionchromareconstructionexplicitbitkhr*: Formatfeatureflagbits2
var Formatfeature2sampledimageycbcrconversionchromareconstructionexplicitforceablebit*
    : Formatfeatureflagbits2
var Formatfeature2sampledimageycbcrconversionchromareconstructionexplicitforceablebitkhr*
    : Formatfeatureflagbits2
var Formatfeature2disjointbit*: Formatfeatureflagbits2
var Formatfeature2disjointbitkhr*: Formatfeatureflagbits2
var Formatfeature2cositedchromasamplesbit*: Formatfeatureflagbits2
var Formatfeature2cositedchromasamplesbitkhr*: Formatfeatureflagbits2
var Formatfeature2storagereadwithoutformatbit*: Formatfeatureflagbits2
var Formatfeature2storagereadwithoutformatbitkhr*: Formatfeatureflagbits2
var Formatfeature2storagewritewithoutformatbit*: Formatfeatureflagbits2
var Formatfeature2storagewritewithoutformatbitkhr*: Formatfeatureflagbits2
var Formatfeature2sampledimagedepthcomparisonbit*: Formatfeatureflagbits2
var Formatfeature2sampledimagedepthcomparisonbitkhr*: Formatfeatureflagbits2
var Formatfeature2videodecodeoutputbitkhr*: Formatfeatureflagbits2
var Formatfeature2videodecodedpbbitkhr*: Formatfeatureflagbits2
var Formatfeature2accelerationstructurevertexbufferbitkhr*: Formatfeatureflagbits2
var Formatfeature2fragmentdensitymapbitext*: Formatfeatureflagbits2
var Formatfeature2fragmentshadingrateattachmentbitkhr*: Formatfeatureflagbits2
var Formatfeature2hostimagetransferbitext*: Formatfeatureflagbits2
var Formatfeature2videoencodeinputbitkhr*: Formatfeatureflagbits2
var Formatfeature2videoencodedpbbitkhr*: Formatfeatureflagbits2
var Formatfeature2linearcolorattachmentbitnv*: Formatfeatureflagbits2
var Formatfeature2weightimagebitqcom*: Formatfeatureflagbits2
var Formatfeature2weightsampledimagebitqcom*: Formatfeatureflagbits2
var Formatfeature2blockmatchingbitqcom*: Formatfeatureflagbits2
var Formatfeature2boxfiltersampledbitqcom*: Formatfeatureflagbits2
var Formatfeature2opticalflowimagebitnv*: Formatfeatureflagbits2
var Formatfeature2opticalflowvectorbitnv*: Formatfeatureflagbits2
var Formatfeature2opticalflowcostbitnv*: Formatfeatureflagbits2
proc Getphysicaldevicetoolproperties*(physicaldevice: Physicaldevice;
                                      ptoolcount: ptr uint32; ptoolproperties: ptr Physicaldevicetoolproperties): Result {.
    cdecl, importc: "vkGetPhysicalDeviceToolProperties".}
proc Createprivatedataslot*(device: Device;
                            pcreateinfo: ptr Privatedataslotcreateinfo;
                            pallocator: ptr Allocationcallbacks;
                            pprivatedataslot: ptr Privatedataslot): Result {.
    cdecl, importc: "vkCreatePrivateDataSlot".}
proc Destroyprivatedataslot*(device: Device; privatedataslot: Privatedataslot;
                             pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkDestroyPrivateDataSlot".}
proc Setprivatedata*(device: Device; objecttype: Objecttype;
                     objecthandle: uint64; privatedataslot: Privatedataslot;
                     data: uint64): Result {.cdecl, importc: "vkSetPrivateData".}
proc Getprivatedata*(device: Device; objecttype: Objecttype;
                     objecthandle: uint64; privatedataslot: Privatedataslot;
                     pdata: ptr uint64): void {.cdecl,
    importc: "vkGetPrivateData".}
proc Cmdsetevent2*(commandbuffer: Commandbuffer; event: Event;
                   pdependencyinfo: ptr Dependencyinfo): void {.cdecl,
    importc: "vkCmdSetEvent2".}
proc Cmdresetevent2*(commandbuffer: Commandbuffer; event: Event;
                     stagemask: Pipelinestageflags2): void {.cdecl,
    importc: "vkCmdResetEvent2".}
proc Cmdwaitevents2*(commandbuffer: Commandbuffer; eventcount: uint32;
                     pevents: ptr Event; pdependencyinfos: ptr Dependencyinfo): void {.
    cdecl, importc: "vkCmdWaitEvents2".}
proc Cmdpipelinebarrier2*(commandbuffer: Commandbuffer;
                          pdependencyinfo: ptr Dependencyinfo): void {.cdecl,
    importc: "vkCmdPipelineBarrier2".}
proc Cmdwritetimestamp2*(commandbuffer: Commandbuffer;
                         stage: Pipelinestageflags2; querypool: Querypool;
                         query: uint32): void {.cdecl,
    importc: "vkCmdWriteTimestamp2".}
proc Queuesubmit2*(queue: Queue; submitcount: uint32; psubmits: ptr Submitinfo2;
                   fence: Fence): Result {.cdecl, importc: "vkQueueSubmit2".}
proc Cmdcopybuffer2*(commandbuffer: Commandbuffer;
                     pcopybufferinfo: ptr Copybufferinfo2): void {.cdecl,
    importc: "vkCmdCopyBuffer2".}
proc Cmdcopyimage2*(commandbuffer: Commandbuffer;
                    pcopyimageinfo: ptr Copyimageinfo2): void {.cdecl,
    importc: "vkCmdCopyImage2".}
proc Cmdcopybuffertoimage2*(commandbuffer: Commandbuffer;
                            pcopybuffertoimageinfo: ptr Copybuffertoimageinfo2): void {.
    cdecl, importc: "vkCmdCopyBufferToImage2".}
proc Cmdcopyimagetobuffer2*(commandbuffer: Commandbuffer;
                            pcopyimagetobufferinfo: ptr Copyimagetobufferinfo2): void {.
    cdecl, importc: "vkCmdCopyImageToBuffer2".}
proc Cmdblitimage2*(commandbuffer: Commandbuffer;
                    pblitimageinfo: ptr Blitimageinfo2): void {.cdecl,
    importc: "vkCmdBlitImage2".}
proc Cmdresolveimage2*(commandbuffer: Commandbuffer;
                       presolveimageinfo: ptr Resolveimageinfo2): void {.cdecl,
    importc: "vkCmdResolveImage2".}
proc Cmdbeginrendering*(commandbuffer: Commandbuffer;
                        prenderinginfo: ptr Renderinginfo): void {.cdecl,
    importc: "vkCmdBeginRendering".}
proc Cmdendrendering*(commandbuffer: Commandbuffer): void {.cdecl,
    importc: "vkCmdEndRendering".}
proc Cmdsetcullmode*(commandbuffer: Commandbuffer; cullmode: Cullmodeflags): void {.
    cdecl, importc: "vkCmdSetCullMode".}
proc Cmdsetfrontface*(commandbuffer: Commandbuffer; frontface: Frontface): void {.
    cdecl, importc: "vkCmdSetFrontFace".}
proc Cmdsetprimitivetopology*(commandbuffer: Commandbuffer;
                              primitivetopology: Primitivetopology): void {.
    cdecl, importc: "vkCmdSetPrimitiveTopology".}
proc Cmdsetviewportwithcount*(commandbuffer: Commandbuffer;
                              viewportcount: uint32; pviewports: ptr Viewport): void {.
    cdecl, importc: "vkCmdSetViewportWithCount".}
proc Cmdsetscissorwithcount*(commandbuffer: Commandbuffer; scissorcount: uint32;
                             pscissors: ptr Rect2d): void {.cdecl,
    importc: "vkCmdSetScissorWithCount".}
proc Cmdbindvertexbuffers2*(commandbuffer: Commandbuffer; firstbinding: uint32;
                            bindingcount: uint32; pbuffers: ptr Buffer;
                            poffsets: ptr Devicesize; psizes: ptr Devicesize;
                            pstrides: ptr Devicesize): void {.cdecl,
    importc: "vkCmdBindVertexBuffers2".}
proc Cmdsetdepthtestenable*(commandbuffer: Commandbuffer;
                            depthtestenable: Bool32): void {.cdecl,
    importc: "vkCmdSetDepthTestEnable".}
proc Cmdsetdepthwriteenable*(commandbuffer: Commandbuffer;
                             depthwriteenable: Bool32): void {.cdecl,
    importc: "vkCmdSetDepthWriteEnable".}
proc Cmdsetdepthcompareop*(commandbuffer: Commandbuffer;
                           depthcompareop: Compareop): void {.cdecl,
    importc: "vkCmdSetDepthCompareOp".}
proc Cmdsetdepthboundstestenable*(commandbuffer: Commandbuffer;
                                  depthboundstestenable: Bool32): void {.cdecl,
    importc: "vkCmdSetDepthBoundsTestEnable".}
proc Cmdsetstenciltestenable*(commandbuffer: Commandbuffer;
                              stenciltestenable: Bool32): void {.cdecl,
    importc: "vkCmdSetStencilTestEnable".}
proc Cmdsetstencilop*(commandbuffer: Commandbuffer; facemask: Stencilfaceflags;
                      failop: Stencilop; passop: Stencilop;
                      depthfailop: Stencilop; compareop: Compareop): void {.
    cdecl, importc: "vkCmdSetStencilOp".}
proc Cmdsetrasterizerdiscardenable*(commandbuffer: Commandbuffer;
                                    rasterizerdiscardenable: Bool32): void {.
    cdecl, importc: "vkCmdSetRasterizerDiscardEnable".}
proc Cmdsetdepthbiasenable*(commandbuffer: Commandbuffer;
                            depthbiasenable: Bool32): void {.cdecl,
    importc: "vkCmdSetDepthBiasEnable".}
proc Cmdsetprimitiverestartenable*(commandbuffer: Commandbuffer;
                                   primitiverestartenable: Bool32): void {.
    cdecl, importc: "vkCmdSetPrimitiveRestartEnable".}
proc Getdevicebuffermemoryrequirements*(device: Device; pinfo: ptr Devicebuffermemoryrequirements;
    pmemoryrequirements: ptr Memoryrequirements2): void {.cdecl,
    importc: "vkGetDeviceBufferMemoryRequirements".}
proc Getdeviceimagememoryrequirements*(device: Device; pinfo: ptr Deviceimagememoryrequirements;
    pmemoryrequirements: ptr Memoryrequirements2): void {.cdecl,
    importc: "vkGetDeviceImageMemoryRequirements".}
proc Getdeviceimagesparsememoryrequirements*(device: Device;
    pinfo: ptr Deviceimagememoryrequirements;
    psparsememoryrequirementcount: ptr uint32;
    psparsememoryrequirements: ptr Sparseimagememoryrequirements2): void {.
    cdecl, importc: "vkGetDeviceImageSparseMemoryRequirements".}
proc Destroysurfacekhr*(instance: Instance; surface: Surfacekhr;
                        pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkDestroySurfaceKHR".}
proc Getphysicaldevicesurfacesupportkhr*(physicaldevice: Physicaldevice;
    queuefamilyindex: uint32; surface: Surfacekhr; psupported: ptr Bool32): Result {.
    cdecl, importc: "vkGetPhysicalDeviceSurfaceSupportKHR".}
proc Getphysicaldevicesurfacecapabilitieskhr*(physicaldevice: Physicaldevice;
    surface: Surfacekhr; psurfacecapabilities: ptr Surfacecapabilitieskhr): Result {.
    cdecl, importc: "vkGetPhysicalDeviceSurfaceCapabilitiesKHR".}
proc Getphysicaldevicesurfaceformatskhr*(physicaldevice: Physicaldevice;
    surface: Surfacekhr; psurfaceformatcount: ptr uint32;
    psurfaceformats: ptr Surfaceformatkhr): Result {.cdecl,
    importc: "vkGetPhysicalDeviceSurfaceFormatsKHR".}
proc Getphysicaldevicesurfacepresentmodeskhr*(physicaldevice: Physicaldevice;
    surface: Surfacekhr; ppresentmodecount: ptr uint32;
    ppresentmodes: ptr Presentmodekhr): Result {.cdecl,
    importc: "vkGetPhysicalDeviceSurfacePresentModesKHR".}
proc Createswapchainkhr*(device: Device;
                         pcreateinfo: ptr Swapchaincreateinfokhr;
                         pallocator: ptr Allocationcallbacks;
                         pswapchain: ptr Swapchainkhr): Result {.cdecl,
    importc: "vkCreateSwapchainKHR".}
proc Destroyswapchainkhr*(device: Device; swapchain: Swapchainkhr;
                          pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkDestroySwapchainKHR".}
proc Getswapchainimageskhr*(device: Device; swapchain: Swapchainkhr;
                            pswapchainimagecount: ptr uint32;
                            pswapchainimages: ptr Image): Result {.cdecl,
    importc: "vkGetSwapchainImagesKHR".}
proc Acquirenextimagekhr*(device: Device; swapchain: Swapchainkhr;
                          timeout: uint64; semaphore: Semaphore; fence: Fence;
                          pimageindex: ptr uint32): Result {.cdecl,
    importc: "vkAcquireNextImageKHR".}
proc Queuepresentkhr*(queue: Queue; ppresentinfo: ptr Presentinfokhr): Result {.
    cdecl, importc: "vkQueuePresentKHR".}
proc Getdevicegrouppresentcapabilitieskhr*(device: Device;
    pdevicegrouppresentcapabilities: ptr Devicegrouppresentcapabilitieskhr): Result {.
    cdecl, importc: "vkGetDeviceGroupPresentCapabilitiesKHR".}
proc Getdevicegroupsurfacepresentmodeskhr*(device: Device; surface: Surfacekhr;
    pmodes: ptr Devicegrouppresentmodeflagskhr): Result {.cdecl,
    importc: "vkGetDeviceGroupSurfacePresentModesKHR".}
proc Getphysicaldevicepresentrectangleskhr*(physicaldevice: Physicaldevice;
    surface: Surfacekhr; prectcount: ptr uint32; prects: ptr Rect2d): Result {.
    cdecl, importc: "vkGetPhysicalDevicePresentRectanglesKHR".}
proc Acquirenextimage2khr*(device: Device;
                           pacquireinfo: ptr Acquirenextimageinfokhr;
                           pimageindex: ptr uint32): Result {.cdecl,
    importc: "vkAcquireNextImage2KHR".}
proc Getphysicaldevicedisplaypropertieskhr*(physicaldevice: Physicaldevice;
    ppropertycount: ptr uint32; pproperties: ptr Displaypropertieskhr): Result {.
    cdecl, importc: "vkGetPhysicalDeviceDisplayPropertiesKHR".}
proc Getphysicaldevicedisplayplanepropertieskhr*(physicaldevice: Physicaldevice;
    ppropertycount: ptr uint32; pproperties: ptr Displayplanepropertieskhr): Result {.
    cdecl, importc: "vkGetPhysicalDeviceDisplayPlanePropertiesKHR".}
proc Getdisplayplanesupporteddisplayskhr*(physicaldevice: Physicaldevice;
    planeindex: uint32; pdisplaycount: ptr uint32; pdisplays: ptr Displaykhr): Result {.
    cdecl, importc: "vkGetDisplayPlaneSupportedDisplaysKHR".}
proc Getdisplaymodepropertieskhr*(physicaldevice: Physicaldevice;
                                  display: Displaykhr;
                                  ppropertycount: ptr uint32;
                                  pproperties: ptr Displaymodepropertieskhr): Result {.
    cdecl, importc: "vkGetDisplayModePropertiesKHR".}
proc Createdisplaymodekhr*(physicaldevice: Physicaldevice; display: Displaykhr;
                           pcreateinfo: ptr Displaymodecreateinfokhr;
                           pallocator: ptr Allocationcallbacks;
                           pmode: ptr Displaymodekhr): Result {.cdecl,
    importc: "vkCreateDisplayModeKHR".}
proc Getdisplayplanecapabilitieskhr*(physicaldevice: Physicaldevice;
                                     mode: Displaymodekhr; planeindex: uint32;
    pcapabilities: ptr Displayplanecapabilitieskhr): Result {.cdecl,
    importc: "vkGetDisplayPlaneCapabilitiesKHR".}
proc Createdisplayplanesurfacekhr*(instance: Instance; pcreateinfo: ptr Displaysurfacecreateinfokhr;
                                   pallocator: ptr Allocationcallbacks;
                                   psurface: ptr Surfacekhr): Result {.cdecl,
    importc: "vkCreateDisplayPlaneSurfaceKHR".}
proc Createsharedswapchainskhr*(device: Device; swapchaincount: uint32;
                                pcreateinfos: ptr Swapchaincreateinfokhr;
                                pallocator: ptr Allocationcallbacks;
                                pswapchains: ptr Swapchainkhr): Result {.cdecl,
    importc: "vkCreateSharedSwapchainsKHR".}
proc Getphysicaldevicevideocapabilitieskhr*(physicaldevice: Physicaldevice;
    pvideoprofile: ptr Videoprofileinfokhr;
    pcapabilities: ptr Videocapabilitieskhr): Result {.cdecl,
    importc: "vkGetPhysicalDeviceVideoCapabilitiesKHR".}
proc Getphysicaldevicevideoformatpropertieskhr*(physicaldevice: Physicaldevice;
    pvideoformatinfo: ptr Physicaldevicevideoformatinfokhr;
    pvideoformatpropertycount: ptr uint32;
    pvideoformatproperties: ptr Videoformatpropertieskhr): Result {.cdecl,
    importc: "vkGetPhysicalDeviceVideoFormatPropertiesKHR".}
proc Createvideosessionkhr*(device: Device;
                            pcreateinfo: ptr Videosessioncreateinfokhr;
                            pallocator: ptr Allocationcallbacks;
                            pvideosession: ptr Videosessionkhr): Result {.cdecl,
    importc: "vkCreateVideoSessionKHR".}
proc Destroyvideosessionkhr*(device: Device; videosession: Videosessionkhr;
                             pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkDestroyVideoSessionKHR".}
proc Getvideosessionmemoryrequirementskhr*(device: Device;
    videosession: Videosessionkhr; pmemoryrequirementscount: ptr uint32;
    pmemoryrequirements: ptr Videosessionmemoryrequirementskhr): Result {.cdecl,
    importc: "vkGetVideoSessionMemoryRequirementsKHR".}
proc Bindvideosessionmemorykhr*(device: Device; videosession: Videosessionkhr;
                                bindsessionmemoryinfocount: uint32;
    pbindsessionmemoryinfos: ptr Bindvideosessionmemoryinfokhr): Result {.cdecl,
    importc: "vkBindVideoSessionMemoryKHR".}
proc Createvideosessionparameterskhr*(device: Device; pcreateinfo: ptr Videosessionparameterscreateinfokhr;
                                      pallocator: ptr Allocationcallbacks;
    pvideosessionparameters: ptr Videosessionparameterskhr): Result {.cdecl,
    importc: "vkCreateVideoSessionParametersKHR".}
proc Updatevideosessionparameterskhr*(device: Device; videosessionparameters: Videosessionparameterskhr;
    pupdateinfo: ptr Videosessionparametersupdateinfokhr): Result {.cdecl,
    importc: "vkUpdateVideoSessionParametersKHR".}
proc Destroyvideosessionparameterskhr*(device: Device; videosessionparameters: Videosessionparameterskhr;
                                       pallocator: ptr Allocationcallbacks): void {.
    cdecl, importc: "vkDestroyVideoSessionParametersKHR".}
proc Cmdbeginvideocodingkhr*(commandbuffer: Commandbuffer;
                             pbegininfo: ptr Videobegincodinginfokhr): void {.
    cdecl, importc: "vkCmdBeginVideoCodingKHR".}
proc Cmdendvideocodingkhr*(commandbuffer: Commandbuffer;
                           pendcodinginfo: ptr Videoendcodinginfokhr): void {.
    cdecl, importc: "vkCmdEndVideoCodingKHR".}
proc Cmdcontrolvideocodingkhr*(commandbuffer: Commandbuffer; pcodingcontrolinfo: ptr Videocodingcontrolinfokhr): void {.
    cdecl, importc: "vkCmdControlVideoCodingKHR".}
proc Cmddecodevideokhr*(commandbuffer: Commandbuffer;
                        pdecodeinfo: ptr Videodecodeinfokhr): void {.cdecl,
    importc: "vkCmdDecodeVideoKHR".}
proc Cmdbeginrenderingkhr*(commandbuffer: Commandbuffer;
                           prenderinginfo: ptr Renderinginfo): void {.cdecl,
    importc: "vkCmdBeginRenderingKHR".}
proc Cmdendrenderingkhr*(commandbuffer: Commandbuffer): void {.cdecl,
    importc: "vkCmdEndRenderingKHR".}
proc Getphysicaldevicefeatures2khr*(physicaldevice: Physicaldevice;
                                    pfeatures: ptr Physicaldevicefeatures2): void {.
    cdecl, importc: "vkGetPhysicalDeviceFeatures2KHR".}
proc Getphysicaldeviceproperties2khr*(physicaldevice: Physicaldevice;
    pproperties: ptr Physicaldeviceproperties2): void {.cdecl,
    importc: "vkGetPhysicalDeviceProperties2KHR".}
proc Getphysicaldeviceformatproperties2khr*(physicaldevice: Physicaldevice;
    format: Format; pformatproperties: ptr Formatproperties2): void {.cdecl,
    importc: "vkGetPhysicalDeviceFormatProperties2KHR".}
proc Getphysicaldeviceimageformatproperties2khr*(physicaldevice: Physicaldevice;
    pimageformatinfo: ptr Physicaldeviceimageformatinfo2;
    pimageformatproperties: ptr Imageformatproperties2): Result {.cdecl,
    importc: "vkGetPhysicalDeviceImageFormatProperties2KHR".}
proc Getphysicaldevicequeuefamilyproperties2khr*(physicaldevice: Physicaldevice;
    pqueuefamilypropertycount: ptr uint32;
    pqueuefamilyproperties: ptr Queuefamilyproperties2): void {.cdecl,
    importc: "vkGetPhysicalDeviceQueueFamilyProperties2KHR".}
proc Getphysicaldevicememoryproperties2khr*(physicaldevice: Physicaldevice;
    pmemoryproperties: ptr Physicaldevicememoryproperties2): void {.cdecl,
    importc: "vkGetPhysicalDeviceMemoryProperties2KHR".}
proc Getphysicaldevicesparseimageformatproperties2khr*(
    physicaldevice: Physicaldevice;
    pformatinfo: ptr Physicaldevicesparseimageformatinfo2;
    ppropertycount: ptr uint32; pproperties: ptr Sparseimageformatproperties2): void {.
    cdecl, importc: "vkGetPhysicalDeviceSparseImageFormatProperties2KHR".}
proc Getdevicegrouppeermemoryfeatureskhr*(device: Device; heapindex: uint32;
    localdeviceindex: uint32; remotedeviceindex: uint32;
    ppeermemoryfeatures: ptr Peermemoryfeatureflags): void {.cdecl,
    importc: "vkGetDeviceGroupPeerMemoryFeaturesKHR".}
proc Cmdsetdevicemaskkhr*(commandbuffer: Commandbuffer; devicemask: uint32): void {.
    cdecl, importc: "vkCmdSetDeviceMaskKHR".}
proc Cmddispatchbasekhr*(commandbuffer: Commandbuffer; basegroupx: uint32;
                         basegroupy: uint32; basegroupz: uint32;
                         groupcountx: uint32; groupcounty: uint32;
                         groupcountz: uint32): void {.cdecl,
    importc: "vkCmdDispatchBaseKHR".}
proc Trimcommandpoolkhr*(device: Device; commandpool: Commandpool;
                         flags: Commandpooltrimflags): void {.cdecl,
    importc: "vkTrimCommandPoolKHR".}
proc Enumeratephysicaldevicegroupskhr*(instance: Instance;
                                       pphysicaldevicegroupcount: ptr uint32;
    pphysicaldevicegroupproperties: ptr Physicaldevicegroupproperties): Result {.
    cdecl, importc: "vkEnumeratePhysicalDeviceGroupsKHR".}
proc Getphysicaldeviceexternalbufferpropertieskhr*(
    physicaldevice: Physicaldevice;
    pexternalbufferinfo: ptr Physicaldeviceexternalbufferinfo;
    pexternalbufferproperties: ptr Externalbufferproperties): void {.cdecl,
    importc: "vkGetPhysicalDeviceExternalBufferPropertiesKHR".}
proc Getmemoryfdkhr*(device: Device; pgetfdinfo: ptr Memorygetfdinfokhr;
                     pfd: ptr cint): Result {.cdecl, importc: "vkGetMemoryFdKHR".}
proc Getmemoryfdpropertieskhr*(device: Device;
                               handletype: Externalmemoryhandletypeflagbits;
                               fd: cint;
                               pmemoryfdproperties: ptr Memoryfdpropertieskhr): Result {.
    cdecl, importc: "vkGetMemoryFdPropertiesKHR".}
proc Getphysicaldeviceexternalsemaphorepropertieskhr*(
    physicaldevice: Physicaldevice;
    pexternalsemaphoreinfo: ptr Physicaldeviceexternalsemaphoreinfo;
    pexternalsemaphoreproperties: ptr Externalsemaphoreproperties): void {.
    cdecl, importc: "vkGetPhysicalDeviceExternalSemaphorePropertiesKHR".}
proc Importsemaphorefdkhr*(device: Device;
                           pimportsemaphorefdinfo: ptr Importsemaphorefdinfokhr): Result {.
    cdecl, importc: "vkImportSemaphoreFdKHR".}
proc Getsemaphorefdkhr*(device: Device; pgetfdinfo: ptr Semaphoregetfdinfokhr;
                        pfd: ptr cint): Result {.cdecl,
    importc: "vkGetSemaphoreFdKHR".}
proc Cmdpushdescriptorsetkhr*(commandbuffer: Commandbuffer;
                              pipelinebindpoint: Pipelinebindpoint;
                              layout: Pipelinelayout; set: uint32;
                              descriptorwritecount: uint32;
                              pdescriptorwrites: ptr Writedescriptorset): void {.
    cdecl, importc: "vkCmdPushDescriptorSetKHR".}
proc Cmdpushdescriptorsetwithtemplatekhr*(commandbuffer: Commandbuffer;
    descriptorupdatetemplate: Descriptorupdatetemplate; layout: Pipelinelayout;
    set: uint32; pdata: pointer): void {.cdecl,
    importc: "vkCmdPushDescriptorSetWithTemplateKHR".}
proc Createdescriptorupdatetemplatekhr*(device: Device; pcreateinfo: ptr Descriptorupdatetemplatecreateinfo;
                                        pallocator: ptr Allocationcallbacks;
    pdescriptorupdatetemplate: ptr Descriptorupdatetemplate): Result {.cdecl,
    importc: "vkCreateDescriptorUpdateTemplateKHR".}
proc Destroydescriptorupdatetemplatekhr*(device: Device;
    descriptorupdatetemplate: Descriptorupdatetemplate;
    pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkDestroyDescriptorUpdateTemplateKHR".}
proc Updatedescriptorsetwithtemplatekhr*(device: Device;
    descriptorset: Descriptorset;
    descriptorupdatetemplate: Descriptorupdatetemplate; pdata: pointer): void {.
    cdecl, importc: "vkUpdateDescriptorSetWithTemplateKHR".}
proc Createrenderpass2khr*(device: Device;
                           pcreateinfo: ptr Renderpasscreateinfo2;
                           pallocator: ptr Allocationcallbacks;
                           prenderpass: ptr Renderpass): Result {.cdecl,
    importc: "vkCreateRenderPass2KHR".}
proc Cmdbeginrenderpass2khr*(commandbuffer: Commandbuffer;
                             prenderpassbegin: ptr Renderpassbegininfo;
                             psubpassbegininfo: ptr Subpassbegininfo): void {.
    cdecl, importc: "vkCmdBeginRenderPass2KHR".}
proc Cmdnextsubpass2khr*(commandbuffer: Commandbuffer;
                         psubpassbegininfo: ptr Subpassbegininfo;
                         psubpassendinfo: ptr Subpassendinfo): void {.cdecl,
    importc: "vkCmdNextSubpass2KHR".}
proc Cmdendrenderpass2khr*(commandbuffer: Commandbuffer;
                           psubpassendinfo: ptr Subpassendinfo): void {.cdecl,
    importc: "vkCmdEndRenderPass2KHR".}
proc Getswapchainstatuskhr*(device: Device; swapchain: Swapchainkhr): Result {.
    cdecl, importc: "vkGetSwapchainStatusKHR".}
proc Getphysicaldeviceexternalfencepropertieskhr*(
    physicaldevice: Physicaldevice;
    pexternalfenceinfo: ptr Physicaldeviceexternalfenceinfo;
    pexternalfenceproperties: ptr Externalfenceproperties): void {.cdecl,
    importc: "vkGetPhysicalDeviceExternalFencePropertiesKHR".}
proc Importfencefdkhr*(device: Device;
                       pimportfencefdinfo: ptr Importfencefdinfokhr): Result {.
    cdecl, importc: "vkImportFenceFdKHR".}
proc Getfencefdkhr*(device: Device; pgetfdinfo: ptr Fencegetfdinfokhr;
                    pfd: ptr cint): Result {.cdecl, importc: "vkGetFenceFdKHR".}
proc Enumeratephysicaldevicequeuefamilyperformancequerycounterskhr*(
    physicaldevice: Physicaldevice; queuefamilyindex: uint32;
    pcountercount: ptr uint32; pcounters: ptr Performancecounterkhr;
    pcounterdescriptions: ptr Performancecounterdescriptionkhr): Result {.cdecl,
    importc: "vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR".}
proc Getphysicaldevicequeuefamilyperformancequerypasseskhr*(
    physicaldevice: Physicaldevice;
    pperformancequerycreateinfo: ptr Querypoolperformancecreateinfokhr;
    pnumpasses: ptr uint32): void {.cdecl, importc: "vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR".}
proc Acquireprofilinglockkhr*(device: Device;
                              pinfo: ptr Acquireprofilinglockinfokhr): Result {.
    cdecl, importc: "vkAcquireProfilingLockKHR".}
proc Releaseprofilinglockkhr*(device: Device): void {.cdecl,
    importc: "vkReleaseProfilingLockKHR".}
proc Getphysicaldevicesurfacecapabilities2khr*(physicaldevice: Physicaldevice;
    psurfaceinfo: ptr Physicaldevicesurfaceinfo2khr;
    psurfacecapabilities: ptr Surfacecapabilities2khr): Result {.cdecl,
    importc: "vkGetPhysicalDeviceSurfaceCapabilities2KHR".}
proc Getphysicaldevicesurfaceformats2khr*(physicaldevice: Physicaldevice;
    psurfaceinfo: ptr Physicaldevicesurfaceinfo2khr;
    psurfaceformatcount: ptr uint32; psurfaceformats: ptr Surfaceformat2khr): Result {.
    cdecl, importc: "vkGetPhysicalDeviceSurfaceFormats2KHR".}
proc Getphysicaldevicedisplayproperties2khr*(physicaldevice: Physicaldevice;
    ppropertycount: ptr uint32; pproperties: ptr Displayproperties2khr): Result {.
    cdecl, importc: "vkGetPhysicalDeviceDisplayProperties2KHR".}
proc Getphysicaldevicedisplayplaneproperties2khr*(
    physicaldevice: Physicaldevice; ppropertycount: ptr uint32;
    pproperties: ptr Displayplaneproperties2khr): Result {.cdecl,
    importc: "vkGetPhysicalDeviceDisplayPlaneProperties2KHR".}
proc Getdisplaymodeproperties2khr*(physicaldevice: Physicaldevice;
                                   display: Displaykhr;
                                   ppropertycount: ptr uint32;
                                   pproperties: ptr Displaymodeproperties2khr): Result {.
    cdecl, importc: "vkGetDisplayModeProperties2KHR".}
proc Getdisplayplanecapabilities2khr*(physicaldevice: Physicaldevice;
    pdisplayplaneinfo: ptr Displayplaneinfo2khr; pcapabilities: ptr Displayplanecapabilities2khr): Result {.
    cdecl, importc: "vkGetDisplayPlaneCapabilities2KHR".}
proc Getimagememoryrequirements2khr*(device: Device;
                                     pinfo: ptr Imagememoryrequirementsinfo2;
    pmemoryrequirements: ptr Memoryrequirements2): void {.cdecl,
    importc: "vkGetImageMemoryRequirements2KHR".}
proc Getbuffermemoryrequirements2khr*(device: Device;
                                      pinfo: ptr Buffermemoryrequirementsinfo2;
    pmemoryrequirements: ptr Memoryrequirements2): void {.cdecl,
    importc: "vkGetBufferMemoryRequirements2KHR".}
proc Getimagesparsememoryrequirements2khr*(device: Device;
    pinfo: ptr Imagesparsememoryrequirementsinfo2;
    psparsememoryrequirementcount: ptr uint32;
    psparsememoryrequirements: ptr Sparseimagememoryrequirements2): void {.
    cdecl, importc: "vkGetImageSparseMemoryRequirements2KHR".}
proc Createsamplerycbcrconversionkhr*(device: Device; pcreateinfo: ptr Samplerycbcrconversioncreateinfo;
                                      pallocator: ptr Allocationcallbacks;
    pycbcrconversion: ptr Samplerycbcrconversion): Result {.cdecl,
    importc: "vkCreateSamplerYcbcrConversionKHR".}
proc Destroysamplerycbcrconversionkhr*(device: Device;
                                       ycbcrconversion: Samplerycbcrconversion;
                                       pallocator: ptr Allocationcallbacks): void {.
    cdecl, importc: "vkDestroySamplerYcbcrConversionKHR".}
proc Bindbuffermemory2khr*(device: Device; bindinfocount: uint32;
                           pbindinfos: ptr Bindbuffermemoryinfo): Result {.
    cdecl, importc: "vkBindBufferMemory2KHR".}
proc Bindimagememory2khr*(device: Device; bindinfocount: uint32;
                          pbindinfos: ptr Bindimagememoryinfo): Result {.cdecl,
    importc: "vkBindImageMemory2KHR".}
proc Getdescriptorsetlayoutsupportkhr*(device: Device; pcreateinfo: ptr Descriptorsetlayoutcreateinfo;
                                       psupport: ptr Descriptorsetlayoutsupport): void {.
    cdecl, importc: "vkGetDescriptorSetLayoutSupportKHR".}
proc Cmddrawindirectcountkhr*(commandbuffer: Commandbuffer; buffer: Buffer;
                              offset: Devicesize; countbuffer: Buffer;
                              countbufferoffset: Devicesize;
                              maxdrawcount: uint32; stride: uint32): void {.
    cdecl, importc: "vkCmdDrawIndirectCountKHR".}
proc Cmddrawindexedindirectcountkhr*(commandbuffer: Commandbuffer;
                                     buffer: Buffer; offset: Devicesize;
                                     countbuffer: Buffer;
                                     countbufferoffset: Devicesize;
                                     maxdrawcount: uint32; stride: uint32): void {.
    cdecl, importc: "vkCmdDrawIndexedIndirectCountKHR".}
proc Getsemaphorecountervaluekhr*(device: Device; semaphore: Semaphore;
                                  pvalue: ptr uint64): Result {.cdecl,
    importc: "vkGetSemaphoreCounterValueKHR".}
proc Waitsemaphoreskhr*(device: Device; pwaitinfo: ptr Semaphorewaitinfo;
                        timeout: uint64): Result {.cdecl,
    importc: "vkWaitSemaphoresKHR".}
proc Signalsemaphorekhr*(device: Device; psignalinfo: ptr Semaphoresignalinfo): Result {.
    cdecl, importc: "vkSignalSemaphoreKHR".}
proc Getphysicaldevicefragmentshadingrateskhr*(physicaldevice: Physicaldevice;
    pfragmentshadingratecount: ptr uint32;
    pfragmentshadingrates: ptr Physicaldevicefragmentshadingratekhr): Result {.
    cdecl, importc: "vkGetPhysicalDeviceFragmentShadingRatesKHR".}
proc Cmdsetfragmentshadingratekhr*(commandbuffer: Commandbuffer;
                                   pfragmentsize: ptr Extent2d; combinerops: array[
    2'i64, Fragmentshadingratecombineropkhr]): void {.cdecl,
    importc: "vkCmdSetFragmentShadingRateKHR".}
proc Cmdsetrenderingattachmentlocationskhr*(commandbuffer: Commandbuffer;
    plocationinfo: ptr Renderingattachmentlocationinfokhr): void {.cdecl,
    importc: "vkCmdSetRenderingAttachmentLocationsKHR".}
proc Cmdsetrenderinginputattachmentindiceskhr*(commandbuffer: Commandbuffer;
    plocationinfo: ptr Renderinginputattachmentindexinfokhr): void {.cdecl,
    importc: "vkCmdSetRenderingInputAttachmentIndicesKHR".}
proc Waitforpresentkhr*(device: Device; swapchain: Swapchainkhr;
                        presentid: uint64; timeout: uint64): Result {.cdecl,
    importc: "vkWaitForPresentKHR".}
proc Getbufferdeviceaddresskhr*(device: Device;
                                pinfo: ptr Bufferdeviceaddressinfo): Deviceaddress {.
    cdecl, importc: "vkGetBufferDeviceAddressKHR".}
proc Getbufferopaquecaptureaddresskhr*(device: Device;
                                       pinfo: ptr Bufferdeviceaddressinfo): uint64 {.
    cdecl, importc: "vkGetBufferOpaqueCaptureAddressKHR".}
proc Getdevicememoryopaquecaptureaddresskhr*(device: Device;
    pinfo: ptr Devicememoryopaquecaptureaddressinfo): uint64 {.cdecl,
    importc: "vkGetDeviceMemoryOpaqueCaptureAddressKHR".}
proc Createdeferredoperationkhr*(device: Device;
                                 pallocator: ptr Allocationcallbacks;
                                 pdeferredoperation: ptr Deferredoperationkhr): Result {.
    cdecl, importc: "vkCreateDeferredOperationKHR".}
proc Destroydeferredoperationkhr*(device: Device;
                                  operation: Deferredoperationkhr;
                                  pallocator: ptr Allocationcallbacks): void {.
    cdecl, importc: "vkDestroyDeferredOperationKHR".}
proc Getdeferredoperationmaxconcurrencykhr*(device: Device;
    operation: Deferredoperationkhr): uint32 {.cdecl,
    importc: "vkGetDeferredOperationMaxConcurrencyKHR".}
proc Getdeferredoperationresultkhr*(device: Device;
                                    operation: Deferredoperationkhr): Result {.
    cdecl, importc: "vkGetDeferredOperationResultKHR".}
proc Deferredoperationjoinkhr*(device: Device; operation: Deferredoperationkhr): Result {.
    cdecl, importc: "vkDeferredOperationJoinKHR".}
proc Getpipelineexecutablepropertieskhr*(device: Device;
    ppipelineinfo: ptr Pipelineinfokhr; pexecutablecount: ptr uint32;
    pproperties: ptr Pipelineexecutablepropertieskhr): Result {.cdecl,
    importc: "vkGetPipelineExecutablePropertiesKHR".}
proc Getpipelineexecutablestatisticskhr*(device: Device;
    pexecutableinfo: ptr Pipelineexecutableinfokhr; pstatisticcount: ptr uint32;
    pstatistics: ptr Pipelineexecutablestatistickhr): Result {.cdecl,
    importc: "vkGetPipelineExecutableStatisticsKHR".}
proc Getpipelineexecutableinternalrepresentationskhr*(device: Device;
    pexecutableinfo: ptr Pipelineexecutableinfokhr;
    pinternalrepresentationcount: ptr uint32;
    pinternalrepresentations: ptr Pipelineexecutableinternalrepresentationkhr): Result {.
    cdecl, importc: "vkGetPipelineExecutableInternalRepresentationsKHR".}
proc Mapmemory2khr*(device: Device; pmemorymapinfo: ptr Memorymapinfokhr;
                    ppdata: ptr pointer): Result {.cdecl,
    importc: "vkMapMemory2KHR".}
proc Unmapmemory2khr*(device: Device; pmemoryunmapinfo: ptr Memoryunmapinfokhr): Result {.
    cdecl, importc: "vkUnmapMemory2KHR".}
proc Getphysicaldevicevideoencodequalitylevelpropertieskhr*(
    physicaldevice: Physicaldevice;
    pqualitylevelinfo: ptr Physicaldevicevideoencodequalitylevelinfokhr;
    pqualitylevelproperties: ptr Videoencodequalitylevelpropertieskhr): Result {.
    cdecl, importc: "vkGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR".}
proc Getencodedvideosessionparameterskhr*(device: Device;
    pvideosessionparametersinfo: ptr Videoencodesessionparametersgetinfokhr;
    pfeedbackinfo: ptr Videoencodesessionparametersfeedbackinfokhr;
    pdatasize: ptr csize_t; pdata: pointer): Result {.cdecl,
    importc: "vkGetEncodedVideoSessionParametersKHR".}
proc Cmdencodevideokhr*(commandbuffer: Commandbuffer;
                        pencodeinfo: ptr Videoencodeinfokhr): void {.cdecl,
    importc: "vkCmdEncodeVideoKHR".}
proc Cmdsetevent2khr*(commandbuffer: Commandbuffer; event: Event;
                      pdependencyinfo: ptr Dependencyinfo): void {.cdecl,
    importc: "vkCmdSetEvent2KHR".}
proc Cmdresetevent2khr*(commandbuffer: Commandbuffer; event: Event;
                        stagemask: Pipelinestageflags2): void {.cdecl,
    importc: "vkCmdResetEvent2KHR".}
proc Cmdwaitevents2khr*(commandbuffer: Commandbuffer; eventcount: uint32;
                        pevents: ptr Event; pdependencyinfos: ptr Dependencyinfo): void {.
    cdecl, importc: "vkCmdWaitEvents2KHR".}
proc Cmdpipelinebarrier2khr*(commandbuffer: Commandbuffer;
                             pdependencyinfo: ptr Dependencyinfo): void {.cdecl,
    importc: "vkCmdPipelineBarrier2KHR".}
proc Cmdwritetimestamp2khr*(commandbuffer: Commandbuffer;
                            stage: Pipelinestageflags2; querypool: Querypool;
                            query: uint32): void {.cdecl,
    importc: "vkCmdWriteTimestamp2KHR".}
proc Queuesubmit2khr*(queue: Queue; submitcount: uint32;
                      psubmits: ptr Submitinfo2; fence: Fence): Result {.cdecl,
    importc: "vkQueueSubmit2KHR".}
proc Cmdwritebuffermarker2amd*(commandbuffer: Commandbuffer;
                               stage: Pipelinestageflags2; dstbuffer: Buffer;
                               dstoffset: Devicesize; marker: uint32): void {.
    cdecl, importc: "vkCmdWriteBufferMarker2AMD".}
proc Getqueuecheckpointdata2nv*(queue: Queue; pcheckpointdatacount: ptr uint32;
                                pcheckpointdata: ptr Checkpointdata2nv): void {.
    cdecl, importc: "vkGetQueueCheckpointData2NV".}
proc Cmdcopybuffer2khr*(commandbuffer: Commandbuffer;
                        pcopybufferinfo: ptr Copybufferinfo2): void {.cdecl,
    importc: "vkCmdCopyBuffer2KHR".}
proc Cmdcopyimage2khr*(commandbuffer: Commandbuffer;
                       pcopyimageinfo: ptr Copyimageinfo2): void {.cdecl,
    importc: "vkCmdCopyImage2KHR".}
proc Cmdcopybuffertoimage2khr*(commandbuffer: Commandbuffer;
    pcopybuffertoimageinfo: ptr Copybuffertoimageinfo2): void {.cdecl,
    importc: "vkCmdCopyBufferToImage2KHR".}
proc Cmdcopyimagetobuffer2khr*(commandbuffer: Commandbuffer;
    pcopyimagetobufferinfo: ptr Copyimagetobufferinfo2): void {.cdecl,
    importc: "vkCmdCopyImageToBuffer2KHR".}
proc Cmdblitimage2khr*(commandbuffer: Commandbuffer;
                       pblitimageinfo: ptr Blitimageinfo2): void {.cdecl,
    importc: "vkCmdBlitImage2KHR".}
proc Cmdresolveimage2khr*(commandbuffer: Commandbuffer;
                          presolveimageinfo: ptr Resolveimageinfo2): void {.
    cdecl, importc: "vkCmdResolveImage2KHR".}
proc Cmdtraceraysindirect2khr*(commandbuffer: Commandbuffer;
                               indirectdeviceaddress: Deviceaddress): void {.
    cdecl, importc: "vkCmdTraceRaysIndirect2KHR".}
proc Getdevicebuffermemoryrequirementskhr*(device: Device;
    pinfo: ptr Devicebuffermemoryrequirements;
    pmemoryrequirements: ptr Memoryrequirements2): void {.cdecl,
    importc: "vkGetDeviceBufferMemoryRequirementsKHR".}
proc Getdeviceimagememoryrequirementskhr*(device: Device;
    pinfo: ptr Deviceimagememoryrequirements;
    pmemoryrequirements: ptr Memoryrequirements2): void {.cdecl,
    importc: "vkGetDeviceImageMemoryRequirementsKHR".}
proc Getdeviceimagesparsememoryrequirementskhr*(device: Device;
    pinfo: ptr Deviceimagememoryrequirements;
    psparsememoryrequirementcount: ptr uint32;
    psparsememoryrequirements: ptr Sparseimagememoryrequirements2): void {.
    cdecl, importc: "vkGetDeviceImageSparseMemoryRequirementsKHR".}
var Pipelinecreate2disableoptimizationbitkhr*: Pipelinecreateflagbits2khr
var Pipelinecreate2allowderivativesbitkhr*: Pipelinecreateflagbits2khr
var Pipelinecreate2derivativebitkhr*: Pipelinecreateflagbits2khr
var Pipelinecreate2viewindexfromdeviceindexbitkhr*: Pipelinecreateflagbits2khr
var Pipelinecreate2dispatchbasebitkhr*: Pipelinecreateflagbits2khr
var Pipelinecreate2defercompilebitnv*: Pipelinecreateflagbits2khr
var Pipelinecreate2capturestatisticsbitkhr*: Pipelinecreateflagbits2khr
var Pipelinecreate2captureinternalrepresentationsbitkhr*: Pipelinecreateflagbits2khr
var Pipelinecreate2failonpipelinecompilerequiredbitkhr*: Pipelinecreateflagbits2khr
var Pipelinecreate2earlyreturnonfailurebitkhr*: Pipelinecreateflagbits2khr
var Pipelinecreate2linktimeoptimizationbitext*: Pipelinecreateflagbits2khr
var Pipelinecreate2retainlinktimeoptimizationinfobitext*: Pipelinecreateflagbits2khr
var Pipelinecreate2librarybitkhr*: Pipelinecreateflagbits2khr
var Pipelinecreate2raytracingskiptrianglesbitkhr*: Pipelinecreateflagbits2khr
var Pipelinecreate2raytracingskipaabbsbitkhr*: Pipelinecreateflagbits2khr
var Pipelinecreate2raytracingnonullanyhitshadersbitkhr*: Pipelinecreateflagbits2khr
var Pipelinecreate2raytracingnonullclosesthitshadersbitkhr*: Pipelinecreateflagbits2khr
var Pipelinecreate2raytracingnonullmissshadersbitkhr*: Pipelinecreateflagbits2khr
var Pipelinecreate2raytracingnonullintersectionshadersbitkhr*: Pipelinecreateflagbits2khr
var Pipelinecreate2raytracingshadergrouphandlecapturereplaybitkhr*: Pipelinecreateflagbits2khr
var Pipelinecreate2indirectbindablebitnv*: Pipelinecreateflagbits2khr
var Pipelinecreate2raytracingallowmotionbitnv*: Pipelinecreateflagbits2khr
var Pipelinecreate2renderingfragmentshadingrateattachmentbitkhr*: Pipelinecreateflagbits2khr
var Pipelinecreate2renderingfragmentdensitymapattachmentbitext*: Pipelinecreateflagbits2khr
var Pipelinecreate2raytracingopacitymicromapbitext*: Pipelinecreateflagbits2khr
var Pipelinecreate2colorattachmentfeedbackloopbitext*: Pipelinecreateflagbits2khr
var Pipelinecreate2depthstencilattachmentfeedbackloopbitext*: Pipelinecreateflagbits2khr
var Pipelinecreate2noprotectedaccessbitext*: Pipelinecreateflagbits2khr
var Pipelinecreate2protectedaccessonlybitext*: Pipelinecreateflagbits2khr
var Pipelinecreate2raytracingdisplacementmicromapbitnv*: Pipelinecreateflagbits2khr
var Pipelinecreate2descriptorbufferbitext*: Pipelinecreateflagbits2khr
var Bufferusage2transfersrcbitkhr*: Bufferusageflagbits2khr
var Bufferusage2transferdstbitkhr*: Bufferusageflagbits2khr
var Bufferusage2uniformtexelbufferbitkhr*: Bufferusageflagbits2khr
var Bufferusage2storagetexelbufferbitkhr*: Bufferusageflagbits2khr
var Bufferusage2uniformbufferbitkhr*: Bufferusageflagbits2khr
var Bufferusage2storagebufferbitkhr*: Bufferusageflagbits2khr
var Bufferusage2indexbufferbitkhr*: Bufferusageflagbits2khr
var Bufferusage2vertexbufferbitkhr*: Bufferusageflagbits2khr
var Bufferusage2indirectbufferbitkhr*: Bufferusageflagbits2khr
var Bufferusage2executiongraphscratchbitamdx*: Bufferusageflagbits2khr
var Bufferusage2conditionalrenderingbitext*: Bufferusageflagbits2khr
var Bufferusage2shaderbindingtablebitkhr*: Bufferusageflagbits2khr
var Bufferusage2raytracingbitnv*: Bufferusageflagbits2khr
var Bufferusage2transformfeedbackbufferbitext*: Bufferusageflagbits2khr
var Bufferusage2transformfeedbackcounterbufferbitext*: Bufferusageflagbits2khr
var Bufferusage2videodecodesrcbitkhr*: Bufferusageflagbits2khr
var Bufferusage2videodecodedstbitkhr*: Bufferusageflagbits2khr
var Bufferusage2videoencodedstbitkhr*: Bufferusageflagbits2khr
var Bufferusage2videoencodesrcbitkhr*: Bufferusageflagbits2khr
var Bufferusage2shaderdeviceaddressbitkhr*: Bufferusageflagbits2khr
var Bufferusage2accelerationstructurebuildinputreadonlybitkhr*: Bufferusageflagbits2khr
var Bufferusage2accelerationstructurestoragebitkhr*: Bufferusageflagbits2khr
var Bufferusage2samplerdescriptorbufferbitext*: Bufferusageflagbits2khr
var Bufferusage2resourcedescriptorbufferbitext*: Bufferusageflagbits2khr
var Bufferusage2pushdescriptorsdescriptorbufferbitext*: Bufferusageflagbits2khr
var Bufferusage2micromapbuildinputreadonlybitext*: Bufferusageflagbits2khr
var Bufferusage2micromapstoragebitext*: Bufferusageflagbits2khr
proc Cmdbindindexbuffer2khr*(commandbuffer: Commandbuffer; buffer: Buffer;
                             offset: Devicesize; size: Devicesize;
                             indextype: Indextype): void {.cdecl,
    importc: "vkCmdBindIndexBuffer2KHR".}
proc Getrenderingareagranularitykhr*(device: Device; prenderingareainfo: ptr Renderingareainfokhr;
                                     pgranularity: ptr Extent2d): void {.cdecl,
    importc: "vkGetRenderingAreaGranularityKHR".}
proc Getdeviceimagesubresourcelayoutkhr*(device: Device;
    pinfo: ptr Deviceimagesubresourceinfokhr; playout: ptr Subresourcelayout2khr): void {.
    cdecl, importc: "vkGetDeviceImageSubresourceLayoutKHR".}
proc Getimagesubresourcelayout2khr*(device: Device; image: Image;
                                    psubresource: ptr Imagesubresource2khr;
                                    playout: ptr Subresourcelayout2khr): void {.
    cdecl, importc: "vkGetImageSubresourceLayout2KHR".}
proc Getphysicaldevicecooperativematrixpropertieskhr*(
    physicaldevice: Physicaldevice; ppropertycount: ptr uint32;
    pproperties: ptr Cooperativematrixpropertieskhr): Result {.cdecl,
    importc: "vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR".}
proc Cmdsetlinestipplekhr*(commandbuffer: Commandbuffer;
                           linestipplefactor: uint32; linestipplepattern: uint16): void {.
    cdecl, importc: "vkCmdSetLineStippleKHR".}
proc Getphysicaldevicecalibrateabletimedomainskhr*(
    physicaldevice: Physicaldevice; ptimedomaincount: ptr uint32;
    ptimedomains: ptr Timedomainkhr): Result {.cdecl,
    importc: "vkGetPhysicalDeviceCalibrateableTimeDomainsKHR".}
proc Getcalibratedtimestampskhr*(device: Device; timestampcount: uint32;
    ptimestampinfos: ptr Calibratedtimestampinfokhr; ptimestamps: ptr uint64;
                                 pmaxdeviation: ptr uint64): Result {.cdecl,
    importc: "vkGetCalibratedTimestampsKHR".}
proc Cmdbinddescriptorsets2khr*(commandbuffer: Commandbuffer;
    pbinddescriptorsetsinfo: ptr Binddescriptorsetsinfokhr): void {.cdecl,
    importc: "vkCmdBindDescriptorSets2KHR".}
proc Cmdpushconstants2khr*(commandbuffer: Commandbuffer;
                           ppushconstantsinfo: ptr Pushconstantsinfokhr): void {.
    cdecl, importc: "vkCmdPushConstants2KHR".}
proc Cmdpushdescriptorset2khr*(commandbuffer: Commandbuffer;
    ppushdescriptorsetinfo: ptr Pushdescriptorsetinfokhr): void {.cdecl,
    importc: "vkCmdPushDescriptorSet2KHR".}
proc Cmdpushdescriptorsetwithtemplate2khr*(commandbuffer: Commandbuffer;
    ppushdescriptorsetwithtemplateinfo: ptr Pushdescriptorsetwithtemplateinfokhr): void {.
    cdecl, importc: "vkCmdPushDescriptorSetWithTemplate2KHR".}
proc Cmdsetdescriptorbufferoffsets2ext*(commandbuffer: Commandbuffer;
    psetdescriptorbufferoffsetsinfo: ptr Setdescriptorbufferoffsetsinfoext): void {.
    cdecl, importc: "vkCmdSetDescriptorBufferOffsets2EXT".}
proc Cmdbinddescriptorbufferembeddedsamplers2ext*(commandbuffer: Commandbuffer;
    pbinddescriptorbufferembeddedsamplersinfo: ptr Binddescriptorbufferembeddedsamplersinfoext): void {.
    cdecl, importc: "vkCmdBindDescriptorBufferEmbeddedSamplers2EXT".}
proc Createdebugreportcallbackext*(instance: Instance; pcreateinfo: ptr Debugreportcallbackcreateinfoext;
                                   pallocator: ptr Allocationcallbacks;
                                   pcallback: ptr Debugreportcallbackext): Result {.
    cdecl, importc: "vkCreateDebugReportCallbackEXT".}
proc Destroydebugreportcallbackext*(instance: Instance;
                                    callback: Debugreportcallbackext;
                                    pallocator: ptr Allocationcallbacks): void {.
    cdecl, importc: "vkDestroyDebugReportCallbackEXT".}
proc Debugreportmessageext*(instance: Instance; flags: Debugreportflagsext;
                            objecttype: Debugreportobjecttypeext;
                            objectarg: uint64; location: csize_t;
                            messagecode: int32; playerprefix: cstring;
                            pmessage: cstring): void {.cdecl,
    importc: "vkDebugReportMessageEXT".}
proc Debugmarkersetobjecttagext*(device: Device;
                                 ptaginfo: ptr Debugmarkerobjecttaginfoext): Result {.
    cdecl, importc: "vkDebugMarkerSetObjectTagEXT".}
proc Debugmarkersetobjectnameext*(device: Device;
                                  pnameinfo: ptr Debugmarkerobjectnameinfoext): Result {.
    cdecl, importc: "vkDebugMarkerSetObjectNameEXT".}
proc Cmddebugmarkerbeginext*(commandbuffer: Commandbuffer;
                             pmarkerinfo: ptr Debugmarkermarkerinfoext): void {.
    cdecl, importc: "vkCmdDebugMarkerBeginEXT".}
proc Cmddebugmarkerendext*(commandbuffer: Commandbuffer): void {.cdecl,
    importc: "vkCmdDebugMarkerEndEXT".}
proc Cmddebugmarkerinsertext*(commandbuffer: Commandbuffer;
                              pmarkerinfo: ptr Debugmarkermarkerinfoext): void {.
    cdecl, importc: "vkCmdDebugMarkerInsertEXT".}
proc Cmdbindtransformfeedbackbuffersext*(commandbuffer: Commandbuffer;
    firstbinding: uint32; bindingcount: uint32; pbuffers: ptr Buffer;
    poffsets: ptr Devicesize; psizes: ptr Devicesize): void {.cdecl,
    importc: "vkCmdBindTransformFeedbackBuffersEXT".}
proc Cmdbegintransformfeedbackext*(commandbuffer: Commandbuffer;
                                   firstcounterbuffer: uint32;
                                   counterbuffercount: uint32;
                                   pcounterbuffers: ptr Buffer;
                                   pcounterbufferoffsets: ptr Devicesize): void {.
    cdecl, importc: "vkCmdBeginTransformFeedbackEXT".}
proc Cmdendtransformfeedbackext*(commandbuffer: Commandbuffer;
                                 firstcounterbuffer: uint32;
                                 counterbuffercount: uint32;
                                 pcounterbuffers: ptr Buffer;
                                 pcounterbufferoffsets: ptr Devicesize): void {.
    cdecl, importc: "vkCmdEndTransformFeedbackEXT".}
proc Cmdbeginqueryindexedext*(commandbuffer: Commandbuffer;
                              querypool: Querypool; query: uint32;
                              flags: Querycontrolflags; index: uint32): void {.
    cdecl, importc: "vkCmdBeginQueryIndexedEXT".}
proc Cmdendqueryindexedext*(commandbuffer: Commandbuffer; querypool: Querypool;
                            query: uint32; index: uint32): void {.cdecl,
    importc: "vkCmdEndQueryIndexedEXT".}
proc Cmddrawindirectbytecountext*(commandbuffer: Commandbuffer;
                                  instancecount: uint32; firstinstance: uint32;
                                  counterbuffer: Buffer;
                                  counterbufferoffset: Devicesize;
                                  counteroffset: uint32; vertexstride: uint32): void {.
    cdecl, importc: "vkCmdDrawIndirectByteCountEXT".}
proc Createcumodulenvx*(device: Device; pcreateinfo: ptr Cumodulecreateinfonvx;
                        pallocator: ptr Allocationcallbacks;
                        pmodule: ptr Cumodulenvx): Result {.cdecl,
    importc: "vkCreateCuModuleNVX".}
proc Createcufunctionnvx*(device: Device;
                          pcreateinfo: ptr Cufunctioncreateinfonvx;
                          pallocator: ptr Allocationcallbacks;
                          pfunction: ptr Cufunctionnvx): Result {.cdecl,
    importc: "vkCreateCuFunctionNVX".}
proc Destroycumodulenvx*(device: Device; module: Cumodulenvx;
                         pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkDestroyCuModuleNVX".}
proc Destroycufunctionnvx*(device: Device; function: Cufunctionnvx;
                           pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkDestroyCuFunctionNVX".}
proc Cmdculaunchkernelnvx*(commandbuffer: Commandbuffer;
                           plaunchinfo: ptr Culaunchinfonvx): void {.cdecl,
    importc: "vkCmdCuLaunchKernelNVX".}
proc Getimageviewhandlenvx*(device: Device; pinfo: ptr Imageviewhandleinfonvx): uint32 {.
    cdecl, importc: "vkGetImageViewHandleNVX".}
proc Getimageviewaddressnvx*(device: Device; imageview: Imageview;
                             pproperties: ptr Imageviewaddresspropertiesnvx): Result {.
    cdecl, importc: "vkGetImageViewAddressNVX".}
proc Cmddrawindirectcountamd*(commandbuffer: Commandbuffer; buffer: Buffer;
                              offset: Devicesize; countbuffer: Buffer;
                              countbufferoffset: Devicesize;
                              maxdrawcount: uint32; stride: uint32): void {.
    cdecl, importc: "vkCmdDrawIndirectCountAMD".}
proc Cmddrawindexedindirectcountamd*(commandbuffer: Commandbuffer;
                                     buffer: Buffer; offset: Devicesize;
                                     countbuffer: Buffer;
                                     countbufferoffset: Devicesize;
                                     maxdrawcount: uint32; stride: uint32): void {.
    cdecl, importc: "vkCmdDrawIndexedIndirectCountAMD".}
proc Getshaderinfoamd*(device: Device; pipeline: Pipeline;
                       shaderstage: Shaderstageflagbits;
                       infotype: Shaderinfotypeamd; pinfosize: ptr csize_t;
                       pinfo: pointer): Result {.cdecl,
    importc: "vkGetShaderInfoAMD".}
proc Getphysicaldeviceexternalimageformatpropertiesnv*(
    physicaldevice: Physicaldevice; format: Format; typearg: Imagetype;
    tiling: Imagetiling; usage: Imageusageflags; flags: Imagecreateflags;
    externalhandletype: Externalmemoryhandletypeflagsnv;
    pexternalimageformatproperties: ptr Externalimageformatpropertiesnv): Result {.
    cdecl, importc: "vkGetPhysicalDeviceExternalImageFormatPropertiesNV".}
proc Cmdbeginconditionalrenderingext*(commandbuffer: Commandbuffer;
    pconditionalrenderingbegin: ptr Conditionalrenderingbegininfoext): void {.
    cdecl, importc: "vkCmdBeginConditionalRenderingEXT".}
proc Cmdendconditionalrenderingext*(commandbuffer: Commandbuffer): void {.cdecl,
    importc: "vkCmdEndConditionalRenderingEXT".}
proc Cmdsetviewportwscalingnv*(commandbuffer: Commandbuffer;
                               firstviewport: uint32; viewportcount: uint32;
                               pviewportwscalings: ptr Viewportwscalingnv): void {.
    cdecl, importc: "vkCmdSetViewportWScalingNV".}
proc Releasedisplayext*(physicaldevice: Physicaldevice; display: Displaykhr): Result {.
    cdecl, importc: "vkReleaseDisplayEXT".}
proc Getphysicaldevicesurfacecapabilities2ext*(physicaldevice: Physicaldevice;
    surface: Surfacekhr; psurfacecapabilities: ptr Surfacecapabilities2ext): Result {.
    cdecl, importc: "vkGetPhysicalDeviceSurfaceCapabilities2EXT".}
proc Displaypowercontrolext*(device: Device; display: Displaykhr;
                             pdisplaypowerinfo: ptr Displaypowerinfoext): Result {.
    cdecl, importc: "vkDisplayPowerControlEXT".}
proc Registerdeviceeventext*(device: Device;
                             pdeviceeventinfo: ptr Deviceeventinfoext;
                             pallocator: ptr Allocationcallbacks;
                             pfence: ptr Fence): Result {.cdecl,
    importc: "vkRegisterDeviceEventEXT".}
proc Registerdisplayeventext*(device: Device; display: Displaykhr;
                              pdisplayeventinfo: ptr Displayeventinfoext;
                              pallocator: ptr Allocationcallbacks;
                              pfence: ptr Fence): Result {.cdecl,
    importc: "vkRegisterDisplayEventEXT".}
proc Getswapchaincounterext*(device: Device; swapchain: Swapchainkhr;
                             counter: Surfacecounterflagbitsext;
                             pcountervalue: ptr uint64): Result {.cdecl,
    importc: "vkGetSwapchainCounterEXT".}
proc Getrefreshcycledurationgoogle*(device: Device; swapchain: Swapchainkhr;
    pdisplaytimingproperties: ptr Refreshcycledurationgoogle): Result {.cdecl,
    importc: "vkGetRefreshCycleDurationGOOGLE".}
proc Getpastpresentationtiminggoogle*(device: Device; swapchain: Swapchainkhr;
                                      ppresentationtimingcount: ptr uint32;
    ppresentationtimings: ptr Pastpresentationtiminggoogle): Result {.cdecl,
    importc: "vkGetPastPresentationTimingGOOGLE".}
proc Cmdsetdiscardrectangleext*(commandbuffer: Commandbuffer;
                                firstdiscardrectangle: uint32;
                                discardrectanglecount: uint32;
                                pdiscardrectangles: ptr Rect2d): void {.cdecl,
    importc: "vkCmdSetDiscardRectangleEXT".}
proc Cmdsetdiscardrectangleenableext*(commandbuffer: Commandbuffer;
                                      discardrectangleenable: Bool32): void {.
    cdecl, importc: "vkCmdSetDiscardRectangleEnableEXT".}
proc Cmdsetdiscardrectanglemodeext*(commandbuffer: Commandbuffer;
    discardrectanglemode: Discardrectanglemodeext): void {.cdecl,
    importc: "vkCmdSetDiscardRectangleModeEXT".}
proc Sethdrmetadataext*(device: Device; swapchaincount: uint32;
                        pswapchains: ptr Swapchainkhr;
                        pmetadata: ptr Hdrmetadataext): void {.cdecl,
    importc: "vkSetHdrMetadataEXT".}
proc Setdebugutilsobjectnameext*(device: Device;
                                 pnameinfo: ptr Debugutilsobjectnameinfoext): Result {.
    cdecl, importc: "vkSetDebugUtilsObjectNameEXT".}
proc Setdebugutilsobjecttagext*(device: Device;
                                ptaginfo: ptr Debugutilsobjecttaginfoext): Result {.
    cdecl, importc: "vkSetDebugUtilsObjectTagEXT".}
proc Queuebegindebugutilslabelext*(queue: Queue;
                                   plabelinfo: ptr Debugutilslabelext): void {.
    cdecl, importc: "vkQueueBeginDebugUtilsLabelEXT".}
proc Queueenddebugutilslabelext*(queue: Queue): void {.cdecl,
    importc: "vkQueueEndDebugUtilsLabelEXT".}
proc Queueinsertdebugutilslabelext*(queue: Queue;
                                    plabelinfo: ptr Debugutilslabelext): void {.
    cdecl, importc: "vkQueueInsertDebugUtilsLabelEXT".}
proc Cmdbegindebugutilslabelext*(commandbuffer: Commandbuffer;
                                 plabelinfo: ptr Debugutilslabelext): void {.
    cdecl, importc: "vkCmdBeginDebugUtilsLabelEXT".}
proc Cmdenddebugutilslabelext*(commandbuffer: Commandbuffer): void {.cdecl,
    importc: "vkCmdEndDebugUtilsLabelEXT".}
proc Cmdinsertdebugutilslabelext*(commandbuffer: Commandbuffer;
                                  plabelinfo: ptr Debugutilslabelext): void {.
    cdecl, importc: "vkCmdInsertDebugUtilsLabelEXT".}
proc Createdebugutilsmessengerext*(instance: Instance; pcreateinfo: ptr Debugutilsmessengercreateinfoext;
                                   pallocator: ptr Allocationcallbacks;
                                   pmessenger: ptr Debugutilsmessengerext): Result {.
    cdecl, importc: "vkCreateDebugUtilsMessengerEXT".}
proc Destroydebugutilsmessengerext*(instance: Instance;
                                    messenger: Debugutilsmessengerext;
                                    pallocator: ptr Allocationcallbacks): void {.
    cdecl, importc: "vkDestroyDebugUtilsMessengerEXT".}
proc Submitdebugutilsmessageext*(instance: Instance; messageseverity: Debugutilsmessageseverityflagbitsext;
                                 messagetypes: Debugutilsmessagetypeflagsext;
    pcallbackdata: ptr Debugutilsmessengercallbackdataext): void {.cdecl,
    importc: "vkSubmitDebugUtilsMessageEXT".}
proc Cmdsetsamplelocationsext*(commandbuffer: Commandbuffer;
                               psamplelocationsinfo: ptr Samplelocationsinfoext): void {.
    cdecl, importc: "vkCmdSetSampleLocationsEXT".}
proc Getphysicaldevicemultisamplepropertiesext*(physicaldevice: Physicaldevice;
    samples: Samplecountflagbits;
    pmultisampleproperties: ptr Multisamplepropertiesext): void {.cdecl,
    importc: "vkGetPhysicalDeviceMultisamplePropertiesEXT".}
proc Getimagedrmformatmodifierpropertiesext*(device: Device; image: Image;
    pproperties: ptr Imagedrmformatmodifierpropertiesext): Result {.cdecl,
    importc: "vkGetImageDrmFormatModifierPropertiesEXT".}
proc Createvalidationcacheext*(device: Device;
                               pcreateinfo: ptr Validationcachecreateinfoext;
                               pallocator: ptr Allocationcallbacks;
                               pvalidationcache: ptr Validationcacheext): Result {.
    cdecl, importc: "vkCreateValidationCacheEXT".}
proc Destroyvalidationcacheext*(device: Device;
                                validationcache: Validationcacheext;
                                pallocator: ptr Allocationcallbacks): void {.
    cdecl, importc: "vkDestroyValidationCacheEXT".}
proc Mergevalidationcachesext*(device: Device; dstcache: Validationcacheext;
                               srccachecount: uint32;
                               psrccaches: ptr Validationcacheext): Result {.
    cdecl, importc: "vkMergeValidationCachesEXT".}
proc Getvalidationcachedataext*(device: Device;
                                validationcache: Validationcacheext;
                                pdatasize: ptr csize_t; pdata: pointer): Result {.
    cdecl, importc: "vkGetValidationCacheDataEXT".}
proc Cmdbindshadingrateimagenv*(commandbuffer: Commandbuffer;
                                imageview: Imageview; imagelayout: Imagelayout): void {.
    cdecl, importc: "vkCmdBindShadingRateImageNV".}
proc Cmdsetviewportshadingratepalettenv*(commandbuffer: Commandbuffer;
    firstviewport: uint32; viewportcount: uint32;
    pshadingratepalettes: ptr Shadingratepalettenv): void {.cdecl,
    importc: "vkCmdSetViewportShadingRatePaletteNV".}
proc Cmdsetcoarsesampleordernv*(commandbuffer: Commandbuffer;
                                sampleordertype: Coarsesampleordertypenv;
                                customsampleordercount: uint32;
    pcustomsampleorders: ptr Coarsesampleordercustomnv): void {.cdecl,
    importc: "vkCmdSetCoarseSampleOrderNV".}
proc Createaccelerationstructurenv*(device: Device; pcreateinfo: ptr Accelerationstructurecreateinfonv;
                                    pallocator: ptr Allocationcallbacks;
    paccelerationstructure: ptr Accelerationstructurenv): Result {.cdecl,
    importc: "vkCreateAccelerationStructureNV".}
proc Destroyaccelerationstructurenv*(device: Device; accelerationstructure: Accelerationstructurenv;
                                     pallocator: ptr Allocationcallbacks): void {.
    cdecl, importc: "vkDestroyAccelerationStructureNV".}
proc Getaccelerationstructurememoryrequirementsnv*(device: Device;
    pinfo: ptr Accelerationstructurememoryrequirementsinfonv;
    pmemoryrequirements: ptr Memoryrequirements2khr): void {.cdecl,
    importc: "vkGetAccelerationStructureMemoryRequirementsNV".}
proc Bindaccelerationstructurememorynv*(device: Device; bindinfocount: uint32;
    pbindinfos: ptr Bindaccelerationstructurememoryinfonv): Result {.cdecl,
    importc: "vkBindAccelerationStructureMemoryNV".}
proc Cmdbuildaccelerationstructurenv*(commandbuffer: Commandbuffer;
                                      pinfo: ptr Accelerationstructureinfonv;
                                      instancedata: Buffer;
                                      instanceoffset: Devicesize;
                                      update: Bool32;
                                      dst: Accelerationstructurenv;
                                      src: Accelerationstructurenv;
                                      scratch: Buffer; scratchoffset: Devicesize): void {.
    cdecl, importc: "vkCmdBuildAccelerationStructureNV".}
proc Cmdcopyaccelerationstructurenv*(commandbuffer: Commandbuffer;
                                     dst: Accelerationstructurenv;
                                     src: Accelerationstructurenv;
                                     mode: Copyaccelerationstructuremodekhr): void {.
    cdecl, importc: "vkCmdCopyAccelerationStructureNV".}
proc Cmdtraceraysnv*(commandbuffer: Commandbuffer;
                     raygenshaderbindingtablebuffer: Buffer;
                     raygenshaderbindingoffset: Devicesize;
                     missshaderbindingtablebuffer: Buffer;
                     missshaderbindingoffset: Devicesize;
                     missshaderbindingstride: Devicesize;
                     hitshaderbindingtablebuffer: Buffer;
                     hitshaderbindingoffset: Devicesize;
                     hitshaderbindingstride: Devicesize;
                     callableshaderbindingtablebuffer: Buffer;
                     callableshaderbindingoffset: Devicesize;
                     callableshaderbindingstride: Devicesize; width: uint32;
                     height: uint32; depth: uint32): void {.cdecl,
    importc: "vkCmdTraceRaysNV".}
proc Createraytracingpipelinesnv*(device: Device; pipelinecache: Pipelinecache;
                                  createinfocount: uint32; pcreateinfos: ptr Raytracingpipelinecreateinfonv;
                                  pallocator: ptr Allocationcallbacks;
                                  ppipelines: ptr Pipeline): Result {.cdecl,
    importc: "vkCreateRayTracingPipelinesNV".}
proc Getraytracingshadergrouphandleskhr*(device: Device; pipeline: Pipeline;
    firstgroup: uint32; groupcount: uint32; datasize: csize_t; pdata: pointer): Result {.
    cdecl, importc: "vkGetRayTracingShaderGroupHandlesKHR".}
proc Getraytracingshadergrouphandlesnv*(device: Device; pipeline: Pipeline;
                                        firstgroup: uint32; groupcount: uint32;
                                        datasize: csize_t; pdata: pointer): Result {.
    cdecl, importc: "vkGetRayTracingShaderGroupHandlesNV".}
proc Getaccelerationstructurehandlenv*(device: Device; accelerationstructure: Accelerationstructurenv;
                                       datasize: csize_t; pdata: pointer): Result {.
    cdecl, importc: "vkGetAccelerationStructureHandleNV".}
proc Cmdwriteaccelerationstructurespropertiesnv*(commandbuffer: Commandbuffer;
    accelerationstructurecount: uint32;
    paccelerationstructures: ptr Accelerationstructurenv; querytype: Querytype;
    querypool: Querypool; firstquery: uint32): void {.cdecl,
    importc: "vkCmdWriteAccelerationStructuresPropertiesNV".}
proc Compiledeferrednv*(device: Device; pipeline: Pipeline; shader: uint32): Result {.
    cdecl, importc: "vkCompileDeferredNV".}
proc Getmemoryhostpointerpropertiesext*(device: Device; handletype: Externalmemoryhandletypeflagbits;
                                        phostpointer: pointer;
    pmemoryhostpointerproperties: ptr Memoryhostpointerpropertiesext): Result {.
    cdecl, importc: "vkGetMemoryHostPointerPropertiesEXT".}
proc Cmdwritebuffermarkeramd*(commandbuffer: Commandbuffer;
                              pipelinestage: Pipelinestageflagbits;
                              dstbuffer: Buffer; dstoffset: Devicesize;
                              marker: uint32): void {.cdecl,
    importc: "vkCmdWriteBufferMarkerAMD".}
proc Getphysicaldevicecalibrateabletimedomainsext*(
    physicaldevice: Physicaldevice; ptimedomaincount: ptr uint32;
    ptimedomains: ptr Timedomainkhr): Result {.cdecl,
    importc: "vkGetPhysicalDeviceCalibrateableTimeDomainsEXT".}
proc Getcalibratedtimestampsext*(device: Device; timestampcount: uint32;
    ptimestampinfos: ptr Calibratedtimestampinfokhr; ptimestamps: ptr uint64;
                                 pmaxdeviation: ptr uint64): Result {.cdecl,
    importc: "vkGetCalibratedTimestampsEXT".}
proc Cmddrawmeshtasksnv*(commandbuffer: Commandbuffer; taskcount: uint32;
                         firsttask: uint32): void {.cdecl,
    importc: "vkCmdDrawMeshTasksNV".}
proc Cmddrawmeshtasksindirectnv*(commandbuffer: Commandbuffer; buffer: Buffer;
                                 offset: Devicesize; drawcount: uint32;
                                 stride: uint32): void {.cdecl,
    importc: "vkCmdDrawMeshTasksIndirectNV".}
proc Cmddrawmeshtasksindirectcountnv*(commandbuffer: Commandbuffer;
                                      buffer: Buffer; offset: Devicesize;
                                      countbuffer: Buffer;
                                      countbufferoffset: Devicesize;
                                      maxdrawcount: uint32; stride: uint32): void {.
    cdecl, importc: "vkCmdDrawMeshTasksIndirectCountNV".}
proc Cmdsetexclusivescissorenablenv*(commandbuffer: Commandbuffer;
                                     firstexclusivescissor: uint32;
                                     exclusivescissorcount: uint32;
                                     pexclusivescissorenables: ptr Bool32): void {.
    cdecl, importc: "vkCmdSetExclusiveScissorEnableNV".}
proc Cmdsetexclusivescissornv*(commandbuffer: Commandbuffer;
                               firstexclusivescissor: uint32;
                               exclusivescissorcount: uint32;
                               pexclusivescissors: ptr Rect2d): void {.cdecl,
    importc: "vkCmdSetExclusiveScissorNV".}
proc Cmdsetcheckpointnv*(commandbuffer: Commandbuffer;
                         pcheckpointmarker: pointer): void {.cdecl,
    importc: "vkCmdSetCheckpointNV".}
proc Getqueuecheckpointdatanv*(queue: Queue; pcheckpointdatacount: ptr uint32;
                               pcheckpointdata: ptr Checkpointdatanv): void {.
    cdecl, importc: "vkGetQueueCheckpointDataNV".}
proc Initializeperformanceapiintel*(device: Device; pinitializeinfo: ptr Initializeperformanceapiinfointel): Result {.
    cdecl, importc: "vkInitializePerformanceApiINTEL".}
proc Uninitializeperformanceapiintel*(device: Device): void {.cdecl,
    importc: "vkUninitializePerformanceApiINTEL".}
proc Cmdsetperformancemarkerintel*(commandbuffer: Commandbuffer;
                                   pmarkerinfo: ptr Performancemarkerinfointel): Result {.
    cdecl, importc: "vkCmdSetPerformanceMarkerINTEL".}
proc Cmdsetperformancestreammarkerintel*(commandbuffer: Commandbuffer;
    pmarkerinfo: ptr Performancestreammarkerinfointel): Result {.cdecl,
    importc: "vkCmdSetPerformanceStreamMarkerINTEL".}
proc Cmdsetperformanceoverrideintel*(commandbuffer: Commandbuffer; poverrideinfo: ptr Performanceoverrideinfointel): Result {.
    cdecl, importc: "vkCmdSetPerformanceOverrideINTEL".}
proc Acquireperformanceconfigurationintel*(device: Device;
    pacquireinfo: ptr Performanceconfigurationacquireinfointel;
    pconfiguration: ptr Performanceconfigurationintel): Result {.cdecl,
    importc: "vkAcquirePerformanceConfigurationINTEL".}
proc Releaseperformanceconfigurationintel*(device: Device;
    configuration: Performanceconfigurationintel): Result {.cdecl,
    importc: "vkReleasePerformanceConfigurationINTEL".}
proc Queuesetperformanceconfigurationintel*(queue: Queue;
    configuration: Performanceconfigurationintel): Result {.cdecl,
    importc: "vkQueueSetPerformanceConfigurationINTEL".}
proc Getperformanceparameterintel*(device: Device;
                                   parameter: Performanceparametertypeintel;
                                   pvalue: ptr Performancevalueintel): Result {.
    cdecl, importc: "vkGetPerformanceParameterINTEL".}
proc Setlocaldimmingamd*(device: Device; swapchain: Swapchainkhr;
                         localdimmingenable: Bool32): void {.cdecl,
    importc: "vkSetLocalDimmingAMD".}
proc Getbufferdeviceaddressext*(device: Device;
                                pinfo: ptr Bufferdeviceaddressinfo): Deviceaddress {.
    cdecl, importc: "vkGetBufferDeviceAddressEXT".}
proc Getphysicaldevicetoolpropertiesext*(physicaldevice: Physicaldevice;
    ptoolcount: ptr uint32; ptoolproperties: ptr Physicaldevicetoolproperties): Result {.
    cdecl, importc: "vkGetPhysicalDeviceToolPropertiesEXT".}
proc Getphysicaldevicecooperativematrixpropertiesnv*(
    physicaldevice: Physicaldevice; ppropertycount: ptr uint32;
    pproperties: ptr Cooperativematrixpropertiesnv): Result {.cdecl,
    importc: "vkGetPhysicalDeviceCooperativeMatrixPropertiesNV".}
proc Getphysicaldevicesupportedframebuffermixedsamplescombinationsnv*(
    physicaldevice: Physicaldevice; pcombinationcount: ptr uint32;
    pcombinations: ptr Framebuffermixedsamplescombinationnv): Result {.cdecl, importc: "vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV".}
proc Createheadlesssurfaceext*(instance: Instance;
                               pcreateinfo: ptr Headlesssurfacecreateinfoext;
                               pallocator: ptr Allocationcallbacks;
                               psurface: ptr Surfacekhr): Result {.cdecl,
    importc: "vkCreateHeadlessSurfaceEXT".}
proc Cmdsetlinestippleext*(commandbuffer: Commandbuffer;
                           linestipplefactor: uint32; linestipplepattern: uint16): void {.
    cdecl, importc: "vkCmdSetLineStippleEXT".}
proc Resetquerypoolext*(device: Device; querypool: Querypool;
                        firstquery: uint32; querycount: uint32): void {.cdecl,
    importc: "vkResetQueryPoolEXT".}
proc Cmdsetcullmodeext*(commandbuffer: Commandbuffer; cullmode: Cullmodeflags): void {.
    cdecl, importc: "vkCmdSetCullModeEXT".}
proc Cmdsetfrontfaceext*(commandbuffer: Commandbuffer; frontface: Frontface): void {.
    cdecl, importc: "vkCmdSetFrontFaceEXT".}
proc Cmdsetprimitivetopologyext*(commandbuffer: Commandbuffer;
                                 primitivetopology: Primitivetopology): void {.
    cdecl, importc: "vkCmdSetPrimitiveTopologyEXT".}
proc Cmdsetviewportwithcountext*(commandbuffer: Commandbuffer;
                                 viewportcount: uint32; pviewports: ptr Viewport): void {.
    cdecl, importc: "vkCmdSetViewportWithCountEXT".}
proc Cmdsetscissorwithcountext*(commandbuffer: Commandbuffer;
                                scissorcount: uint32; pscissors: ptr Rect2d): void {.
    cdecl, importc: "vkCmdSetScissorWithCountEXT".}
proc Cmdbindvertexbuffers2ext*(commandbuffer: Commandbuffer;
                               firstbinding: uint32; bindingcount: uint32;
                               pbuffers: ptr Buffer; poffsets: ptr Devicesize;
                               psizes: ptr Devicesize; pstrides: ptr Devicesize): void {.
    cdecl, importc: "vkCmdBindVertexBuffers2EXT".}
proc Cmdsetdepthtestenableext*(commandbuffer: Commandbuffer;
                               depthtestenable: Bool32): void {.cdecl,
    importc: "vkCmdSetDepthTestEnableEXT".}
proc Cmdsetdepthwriteenableext*(commandbuffer: Commandbuffer;
                                depthwriteenable: Bool32): void {.cdecl,
    importc: "vkCmdSetDepthWriteEnableEXT".}
proc Cmdsetdepthcompareopext*(commandbuffer: Commandbuffer;
                              depthcompareop: Compareop): void {.cdecl,
    importc: "vkCmdSetDepthCompareOpEXT".}
proc Cmdsetdepthboundstestenableext*(commandbuffer: Commandbuffer;
                                     depthboundstestenable: Bool32): void {.
    cdecl, importc: "vkCmdSetDepthBoundsTestEnableEXT".}
proc Cmdsetstenciltestenableext*(commandbuffer: Commandbuffer;
                                 stenciltestenable: Bool32): void {.cdecl,
    importc: "vkCmdSetStencilTestEnableEXT".}
proc Cmdsetstencilopext*(commandbuffer: Commandbuffer;
                         facemask: Stencilfaceflags; failop: Stencilop;
                         passop: Stencilop; depthfailop: Stencilop;
                         compareop: Compareop): void {.cdecl,
    importc: "vkCmdSetStencilOpEXT".}
proc Copymemorytoimageext*(device: Device;
                           pcopymemorytoimageinfo: ptr Copymemorytoimageinfoext): Result {.
    cdecl, importc: "vkCopyMemoryToImageEXT".}
proc Copyimagetomemoryext*(device: Device;
                           pcopyimagetomemoryinfo: ptr Copyimagetomemoryinfoext): Result {.
    cdecl, importc: "vkCopyImageToMemoryEXT".}
proc Copyimagetoimageext*(device: Device;
                          pcopyimagetoimageinfo: ptr Copyimagetoimageinfoext): Result {.
    cdecl, importc: "vkCopyImageToImageEXT".}
proc Transitionimagelayoutext*(device: Device; transitioncount: uint32;
    ptransitions: ptr Hostimagelayouttransitioninfoext): Result {.cdecl,
    importc: "vkTransitionImageLayoutEXT".}
proc Getimagesubresourcelayout2ext*(device: Device; image: Image;
                                    psubresource: ptr Imagesubresource2khr;
                                    playout: ptr Subresourcelayout2khr): void {.
    cdecl, importc: "vkGetImageSubresourceLayout2EXT".}
proc Releaseswapchainimagesext*(device: Device;
                                preleaseinfo: ptr Releaseswapchainimagesinfoext): Result {.
    cdecl, importc: "vkReleaseSwapchainImagesEXT".}
proc Getgeneratedcommandsmemoryrequirementsnv*(device: Device;
    pinfo: ptr Generatedcommandsmemoryrequirementsinfonv;
    pmemoryrequirements: ptr Memoryrequirements2): void {.cdecl,
    importc: "vkGetGeneratedCommandsMemoryRequirementsNV".}
proc Cmdpreprocessgeneratedcommandsnv*(commandbuffer: Commandbuffer;
    pgeneratedcommandsinfo: ptr Generatedcommandsinfonv): void {.cdecl,
    importc: "vkCmdPreprocessGeneratedCommandsNV".}
proc Cmdexecutegeneratedcommandsnv*(commandbuffer: Commandbuffer;
                                    ispreprocessed: Bool32;
    pgeneratedcommandsinfo: ptr Generatedcommandsinfonv): void {.cdecl,
    importc: "vkCmdExecuteGeneratedCommandsNV".}
proc Cmdbindpipelineshadergroupnv*(commandbuffer: Commandbuffer;
                                   pipelinebindpoint: Pipelinebindpoint;
                                   pipeline: Pipeline; groupindex: uint32): void {.
    cdecl, importc: "vkCmdBindPipelineShaderGroupNV".}
proc Createindirectcommandslayoutnv*(device: Device; pcreateinfo: ptr Indirectcommandslayoutcreateinfonv;
                                     pallocator: ptr Allocationcallbacks;
    pindirectcommandslayout: ptr Indirectcommandslayoutnv): Result {.cdecl,
    importc: "vkCreateIndirectCommandsLayoutNV".}
proc Destroyindirectcommandslayoutnv*(device: Device; indirectcommandslayout: Indirectcommandslayoutnv;
                                      pallocator: ptr Allocationcallbacks): void {.
    cdecl, importc: "vkDestroyIndirectCommandsLayoutNV".}
proc Cmdsetdepthbias2ext*(commandbuffer: Commandbuffer;
                          pdepthbiasinfo: ptr Depthbiasinfoext): void {.cdecl,
    importc: "vkCmdSetDepthBias2EXT".}
proc Acquiredrmdisplayext*(physicaldevice: Physicaldevice; drmfd: int32;
                           display: Displaykhr): Result {.cdecl,
    importc: "vkAcquireDrmDisplayEXT".}
proc Getdrmdisplayext*(physicaldevice: Physicaldevice; drmfd: int32;
                       connectorid: uint32; display: ptr Displaykhr): Result {.
    cdecl, importc: "vkGetDrmDisplayEXT".}
proc Createprivatedataslotext*(device: Device;
                               pcreateinfo: ptr Privatedataslotcreateinfo;
                               pallocator: ptr Allocationcallbacks;
                               pprivatedataslot: ptr Privatedataslot): Result {.
    cdecl, importc: "vkCreatePrivateDataSlotEXT".}
proc Destroyprivatedataslotext*(device: Device;
                                privatedataslot: Privatedataslot;
                                pallocator: ptr Allocationcallbacks): void {.
    cdecl, importc: "vkDestroyPrivateDataSlotEXT".}
proc Setprivatedataext*(device: Device; objecttype: Objecttype;
                        objecthandle: uint64; privatedataslot: Privatedataslot;
                        data: uint64): Result {.cdecl,
    importc: "vkSetPrivateDataEXT".}
proc Getprivatedataext*(device: Device; objecttype: Objecttype;
                        objecthandle: uint64; privatedataslot: Privatedataslot;
                        pdata: ptr uint64): void {.cdecl,
    importc: "vkGetPrivateDataEXT".}
proc Createcudamodulenv*(device: Device;
                         pcreateinfo: ptr Cudamodulecreateinfonv;
                         pallocator: ptr Allocationcallbacks;
                         pmodule: ptr Cudamodulenv): Result {.cdecl,
    importc: "vkCreateCudaModuleNV".}
proc Getcudamodulecachenv*(device: Device; module: Cudamodulenv;
                           pcachesize: ptr csize_t; pcachedata: pointer): Result {.
    cdecl, importc: "vkGetCudaModuleCacheNV".}
proc Createcudafunctionnv*(device: Device;
                           pcreateinfo: ptr Cudafunctioncreateinfonv;
                           pallocator: ptr Allocationcallbacks;
                           pfunction: ptr Cudafunctionnv): Result {.cdecl,
    importc: "vkCreateCudaFunctionNV".}
proc Destroycudamodulenv*(device: Device; module: Cudamodulenv;
                          pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkDestroyCudaModuleNV".}
proc Destroycudafunctionnv*(device: Device; function: Cudafunctionnv;
                            pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkDestroyCudaFunctionNV".}
proc Cmdcudalaunchkernelnv*(commandbuffer: Commandbuffer;
                            plaunchinfo: ptr Cudalaunchinfonv): void {.cdecl,
    importc: "vkCmdCudaLaunchKernelNV".}
proc Getdescriptorsetlayoutsizeext*(device: Device; layout: Descriptorsetlayout;
                                    playoutsizeinbytes: ptr Devicesize): void {.
    cdecl, importc: "vkGetDescriptorSetLayoutSizeEXT".}
proc Getdescriptorsetlayoutbindingoffsetext*(device: Device;
    layout: Descriptorsetlayout; binding: uint32; poffset: ptr Devicesize): void {.
    cdecl, importc: "vkGetDescriptorSetLayoutBindingOffsetEXT".}
proc Getdescriptorext*(device: Device;
                       pdescriptorinfo: ptr Descriptorgetinfoext;
                       datasize: csize_t; pdescriptor: pointer): void {.cdecl,
    importc: "vkGetDescriptorEXT".}
proc Cmdbinddescriptorbuffersext*(commandbuffer: Commandbuffer;
                                  buffercount: uint32; pbindinginfos: ptr Descriptorbufferbindinginfoext): void {.
    cdecl, importc: "vkCmdBindDescriptorBuffersEXT".}
proc Cmdsetdescriptorbufferoffsetsext*(commandbuffer: Commandbuffer;
                                       pipelinebindpoint: Pipelinebindpoint;
                                       layout: Pipelinelayout; firstset: uint32;
                                       setcount: uint32;
                                       pbufferindices: ptr uint32;
                                       poffsets: ptr Devicesize): void {.cdecl,
    importc: "vkCmdSetDescriptorBufferOffsetsEXT".}
proc Cmdbinddescriptorbufferembeddedsamplersext*(commandbuffer: Commandbuffer;
    pipelinebindpoint: Pipelinebindpoint; layout: Pipelinelayout; set: uint32): void {.
    cdecl, importc: "vkCmdBindDescriptorBufferEmbeddedSamplersEXT".}
proc Getbufferopaquecapturedescriptordataext*(device: Device;
    pinfo: ptr Buffercapturedescriptordatainfoext; pdata: pointer): Result {.
    cdecl, importc: "vkGetBufferOpaqueCaptureDescriptorDataEXT".}
proc Getimageopaquecapturedescriptordataext*(device: Device;
    pinfo: ptr Imagecapturedescriptordatainfoext; pdata: pointer): Result {.
    cdecl, importc: "vkGetImageOpaqueCaptureDescriptorDataEXT".}
proc Getimageviewopaquecapturedescriptordataext*(device: Device;
    pinfo: ptr Imageviewcapturedescriptordatainfoext; pdata: pointer): Result {.
    cdecl, importc: "vkGetImageViewOpaqueCaptureDescriptorDataEXT".}
proc Getsampleropaquecapturedescriptordataext*(device: Device;
    pinfo: ptr Samplercapturedescriptordatainfoext; pdata: pointer): Result {.
    cdecl, importc: "vkGetSamplerOpaqueCaptureDescriptorDataEXT".}
proc Getaccelerationstructureopaquecapturedescriptordataext*(device: Device;
    pinfo: ptr Accelerationstructurecapturedescriptordatainfoext; pdata: pointer): Result {.
    cdecl, importc: "vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT".}
proc Cmdsetfragmentshadingrateenumnv*(commandbuffer: Commandbuffer;
                                      shadingrate: Fragmentshadingratenv;
    combinerops: array[2'i64, Fragmentshadingratecombineropkhr]): void {.cdecl,
    importc: "vkCmdSetFragmentShadingRateEnumNV".}
proc Getdevicefaultinfoext*(device: Device;
                            pfaultcounts: ptr Devicefaultcountsext;
                            pfaultinfo: ptr Devicefaultinfoext): Result {.cdecl,
    importc: "vkGetDeviceFaultInfoEXT".}
proc Cmdsetvertexinputext*(commandbuffer: Commandbuffer;
                           vertexbindingdescriptioncount: uint32;
    pvertexbindingdescriptions: ptr Vertexinputbindingdescription2ext;
                           vertexattributedescriptioncount: uint32;
    pvertexattributedescriptions: ptr Vertexinputattributedescription2ext): void {.
    cdecl, importc: "vkCmdSetVertexInputEXT".}
proc Getdevicesubpassshadingmaxworkgroupsizehuawei*(device: Device;
    renderpass: Renderpass; pmaxworkgroupsize: ptr Extent2d): Result {.cdecl,
    importc: "vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI".}
proc Cmdsubpassshadinghuawei*(commandbuffer: Commandbuffer): void {.cdecl,
    importc: "vkCmdSubpassShadingHUAWEI".}
proc Cmdbindinvocationmaskhuawei*(commandbuffer: Commandbuffer;
                                  imageview: Imageview; imagelayout: Imagelayout): void {.
    cdecl, importc: "vkCmdBindInvocationMaskHUAWEI".}
proc Getmemoryremoteaddressnv*(device: Device; pmemorygetremoteaddressinfo: ptr Memorygetremoteaddressinfonv;
                               paddress: ptr Remoteaddressnv): Result {.cdecl,
    importc: "vkGetMemoryRemoteAddressNV".}
proc Getpipelinepropertiesext*(device: Device;
                               ppipelineinfo: ptr Pipelineinfoext;
                               ppipelineproperties: ptr Baseoutstructure): Result {.
    cdecl, importc: "vkGetPipelinePropertiesEXT".}
proc Cmdsetpatchcontrolpointsext*(commandbuffer: Commandbuffer;
                                  patchcontrolpoints: uint32): void {.cdecl,
    importc: "vkCmdSetPatchControlPointsEXT".}
proc Cmdsetrasterizerdiscardenableext*(commandbuffer: Commandbuffer;
                                       rasterizerdiscardenable: Bool32): void {.
    cdecl, importc: "vkCmdSetRasterizerDiscardEnableEXT".}
proc Cmdsetdepthbiasenableext*(commandbuffer: Commandbuffer;
                               depthbiasenable: Bool32): void {.cdecl,
    importc: "vkCmdSetDepthBiasEnableEXT".}
proc Cmdsetlogicopext*(commandbuffer: Commandbuffer; logicop: Logicop): void {.
    cdecl, importc: "vkCmdSetLogicOpEXT".}
proc Cmdsetprimitiverestartenableext*(commandbuffer: Commandbuffer;
                                      primitiverestartenable: Bool32): void {.
    cdecl, importc: "vkCmdSetPrimitiveRestartEnableEXT".}
proc Cmdsetcolorwriteenableext*(commandbuffer: Commandbuffer;
                                attachmentcount: uint32;
                                pcolorwriteenables: ptr Bool32): void {.cdecl,
    importc: "vkCmdSetColorWriteEnableEXT".}
proc Cmddrawmultiext*(commandbuffer: Commandbuffer; drawcount: uint32;
                      pvertexinfo: ptr Multidrawinfoext; instancecount: uint32;
                      firstinstance: uint32; stride: uint32): void {.cdecl,
    importc: "vkCmdDrawMultiEXT".}
proc Cmddrawmultiindexedext*(commandbuffer: Commandbuffer; drawcount: uint32;
                             pindexinfo: ptr Multidrawindexedinfoext;
                             instancecount: uint32; firstinstance: uint32;
                             stride: uint32; pvertexoffset: ptr int32): void {.
    cdecl, importc: "vkCmdDrawMultiIndexedEXT".}
proc Createmicromapext*(device: Device; pcreateinfo: ptr Micromapcreateinfoext;
                        pallocator: ptr Allocationcallbacks;
                        pmicromap: ptr Micromapext): Result {.cdecl,
    importc: "vkCreateMicromapEXT".}
proc Destroymicromapext*(device: Device; micromap: Micromapext;
                         pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkDestroyMicromapEXT".}
proc Cmdbuildmicromapsext*(commandbuffer: Commandbuffer; infocount: uint32;
                           pinfos: ptr Micromapbuildinfoext): void {.cdecl,
    importc: "vkCmdBuildMicromapsEXT".}
proc Buildmicromapsext*(device: Device; deferredoperation: Deferredoperationkhr;
                        infocount: uint32; pinfos: ptr Micromapbuildinfoext): Result {.
    cdecl, importc: "vkBuildMicromapsEXT".}
proc Copymicromapext*(device: Device; deferredoperation: Deferredoperationkhr;
                      pinfo: ptr Copymicromapinfoext): Result {.cdecl,
    importc: "vkCopyMicromapEXT".}
proc Copymicromaptomemoryext*(device: Device;
                              deferredoperation: Deferredoperationkhr;
                              pinfo: ptr Copymicromaptomemoryinfoext): Result {.
    cdecl, importc: "vkCopyMicromapToMemoryEXT".}
proc Copymemorytomicromapext*(device: Device;
                              deferredoperation: Deferredoperationkhr;
                              pinfo: ptr Copymemorytomicromapinfoext): Result {.
    cdecl, importc: "vkCopyMemoryToMicromapEXT".}
proc Writemicromapspropertiesext*(device: Device; micromapcount: uint32;
                                  pmicromaps: ptr Micromapext;
                                  querytype: Querytype; datasize: csize_t;
                                  pdata: pointer; stride: csize_t): Result {.
    cdecl, importc: "vkWriteMicromapsPropertiesEXT".}
proc Cmdcopymicromapext*(commandbuffer: Commandbuffer;
                         pinfo: ptr Copymicromapinfoext): void {.cdecl,
    importc: "vkCmdCopyMicromapEXT".}
proc Cmdcopymicromaptomemoryext*(commandbuffer: Commandbuffer;
                                 pinfo: ptr Copymicromaptomemoryinfoext): void {.
    cdecl, importc: "vkCmdCopyMicromapToMemoryEXT".}
proc Cmdcopymemorytomicromapext*(commandbuffer: Commandbuffer;
                                 pinfo: ptr Copymemorytomicromapinfoext): void {.
    cdecl, importc: "vkCmdCopyMemoryToMicromapEXT".}
proc Cmdwritemicromapspropertiesext*(commandbuffer: Commandbuffer;
                                     micromapcount: uint32;
                                     pmicromaps: ptr Micromapext;
                                     querytype: Querytype; querypool: Querypool;
                                     firstquery: uint32): void {.cdecl,
    importc: "vkCmdWriteMicromapsPropertiesEXT".}
proc Getdevicemicromapcompatibilityext*(device: Device; pversioninfo: ptr Micromapversioninfoext;
    pcompatibility: ptr Accelerationstructurecompatibilitykhr): void {.cdecl,
    importc: "vkGetDeviceMicromapCompatibilityEXT".}
proc Getmicromapbuildsizesext*(device: Device;
                               buildtype: Accelerationstructurebuildtypekhr;
                               pbuildinfo: ptr Micromapbuildinfoext;
                               psizeinfo: ptr Micromapbuildsizesinfoext): void {.
    cdecl, importc: "vkGetMicromapBuildSizesEXT".}
proc Cmddrawclusterhuawei*(commandbuffer: Commandbuffer; groupcountx: uint32;
                           groupcounty: uint32; groupcountz: uint32): void {.
    cdecl, importc: "vkCmdDrawClusterHUAWEI".}
proc Cmddrawclusterindirecthuawei*(commandbuffer: Commandbuffer; buffer: Buffer;
                                   offset: Devicesize): void {.cdecl,
    importc: "vkCmdDrawClusterIndirectHUAWEI".}
proc Setdevicememorypriorityext*(device: Device; memory: Devicememory;
                                 priority: cfloat): void {.cdecl,
    importc: "vkSetDeviceMemoryPriorityEXT".}
var Physicaldeviceschedulingcontrolsshadercorecountarm*: Physicaldeviceschedulingcontrolsflagbitsarm
proc Getdescriptorsetlayouthostmappinginfovalve*(device: Device;
    pbindingreference: ptr Descriptorsetbindingreferencevalve;
    phostmapping: ptr Descriptorsetlayouthostmappinginfovalve): void {.cdecl,
    importc: "vkGetDescriptorSetLayoutHostMappingInfoVALVE".}
proc Getdescriptorsethostmappingvalve*(device: Device;
                                       descriptorset: Descriptorset;
                                       ppdata: ptr pointer): void {.cdecl,
    importc: "vkGetDescriptorSetHostMappingVALVE".}
proc Cmdcopymemoryindirectnv*(commandbuffer: Commandbuffer;
                              copybufferaddress: Deviceaddress;
                              copycount: uint32; stride: uint32): void {.cdecl,
    importc: "vkCmdCopyMemoryIndirectNV".}
proc Cmdcopymemorytoimageindirectnv*(commandbuffer: Commandbuffer;
                                     copybufferaddress: Deviceaddress;
                                     copycount: uint32; stride: uint32;
                                     dstimage: Image;
                                     dstimagelayout: Imagelayout;
    pimagesubresources: ptr Imagesubresourcelayers): void {.cdecl,
    importc: "vkCmdCopyMemoryToImageIndirectNV".}
var Memorydecompressionmethodgdeflate10bitnv*: Memorydecompressionmethodflagbitsnv
proc Cmddecompressmemorynv*(commandbuffer: Commandbuffer;
                            decompressregioncount: uint32;
    pdecompressmemoryregions: ptr Decompressmemoryregionnv): void {.cdecl,
    importc: "vkCmdDecompressMemoryNV".}
proc Cmddecompressmemoryindirectcountnv*(commandbuffer: Commandbuffer;
    indirectcommandsaddress: Deviceaddress;
    indirectcommandscountaddress: Deviceaddress; stride: uint32): void {.cdecl,
    importc: "vkCmdDecompressMemoryIndirectCountNV".}
proc Getpipelineindirectmemoryrequirementsnv*(device: Device;
    pcreateinfo: ptr Computepipelinecreateinfo;
    pmemoryrequirements: ptr Memoryrequirements2): void {.cdecl,
    importc: "vkGetPipelineIndirectMemoryRequirementsNV".}
proc Cmdupdatepipelineindirectbuffernv*(commandbuffer: Commandbuffer;
                                        pipelinebindpoint: Pipelinebindpoint;
                                        pipeline: Pipeline): void {.cdecl,
    importc: "vkCmdUpdatePipelineIndirectBufferNV".}
proc Getpipelineindirectdeviceaddressnv*(device: Device;
    pinfo: ptr Pipelineindirectdeviceaddressinfonv): Deviceaddress {.cdecl,
    importc: "vkGetPipelineIndirectDeviceAddressNV".}
proc Cmdsetdepthclampenableext*(commandbuffer: Commandbuffer;
                                depthclampenable: Bool32): void {.cdecl,
    importc: "vkCmdSetDepthClampEnableEXT".}
proc Cmdsetpolygonmodeext*(commandbuffer: Commandbuffer;
                           polygonmode: Polygonmode): void {.cdecl,
    importc: "vkCmdSetPolygonModeEXT".}
proc Cmdsetrasterizationsamplesext*(commandbuffer: Commandbuffer;
                                    rasterizationsamples: Samplecountflagbits): void {.
    cdecl, importc: "vkCmdSetRasterizationSamplesEXT".}
proc Cmdsetsamplemaskext*(commandbuffer: Commandbuffer;
                          samples: Samplecountflagbits;
                          psamplemask: ptr Samplemask): void {.cdecl,
    importc: "vkCmdSetSampleMaskEXT".}
proc Cmdsetalphatocoverageenableext*(commandbuffer: Commandbuffer;
                                     alphatocoverageenable: Bool32): void {.
    cdecl, importc: "vkCmdSetAlphaToCoverageEnableEXT".}
proc Cmdsetalphatooneenableext*(commandbuffer: Commandbuffer;
                                alphatooneenable: Bool32): void {.cdecl,
    importc: "vkCmdSetAlphaToOneEnableEXT".}
proc Cmdsetlogicopenableext*(commandbuffer: Commandbuffer; logicopenable: Bool32): void {.
    cdecl, importc: "vkCmdSetLogicOpEnableEXT".}
proc Cmdsetcolorblendenableext*(commandbuffer: Commandbuffer;
                                firstattachment: uint32;
                                attachmentcount: uint32;
                                pcolorblendenables: ptr Bool32): void {.cdecl,
    importc: "vkCmdSetColorBlendEnableEXT".}
proc Cmdsetcolorblendequationext*(commandbuffer: Commandbuffer;
                                  firstattachment: uint32;
                                  attachmentcount: uint32; pcolorblendequations: ptr Colorblendequationext): void {.
    cdecl, importc: "vkCmdSetColorBlendEquationEXT".}
proc Cmdsetcolorwritemaskext*(commandbuffer: Commandbuffer;
                              firstattachment: uint32; attachmentcount: uint32;
                              pcolorwritemasks: ptr Colorcomponentflags): void {.
    cdecl, importc: "vkCmdSetColorWriteMaskEXT".}
proc Cmdsettessellationdomainoriginext*(commandbuffer: Commandbuffer;
                                        domainorigin: Tessellationdomainorigin): void {.
    cdecl, importc: "vkCmdSetTessellationDomainOriginEXT".}
proc Cmdsetrasterizationstreamext*(commandbuffer: Commandbuffer;
                                   rasterizationstream: uint32): void {.cdecl,
    importc: "vkCmdSetRasterizationStreamEXT".}
proc Cmdsetconservativerasterizationmodeext*(commandbuffer: Commandbuffer;
    conservativerasterizationmode: Conservativerasterizationmodeext): void {.
    cdecl, importc: "vkCmdSetConservativeRasterizationModeEXT".}
proc Cmdsetextraprimitiveoverestimationsizeext*(commandbuffer: Commandbuffer;
    extraprimitiveoverestimationsize: cfloat): void {.cdecl,
    importc: "vkCmdSetExtraPrimitiveOverestimationSizeEXT".}
proc Cmdsetdepthclipenableext*(commandbuffer: Commandbuffer;
                               depthclipenable: Bool32): void {.cdecl,
    importc: "vkCmdSetDepthClipEnableEXT".}
proc Cmdsetsamplelocationsenableext*(commandbuffer: Commandbuffer;
                                     samplelocationsenable: Bool32): void {.
    cdecl, importc: "vkCmdSetSampleLocationsEnableEXT".}
proc Cmdsetcolorblendadvancedext*(commandbuffer: Commandbuffer;
                                  firstattachment: uint32;
                                  attachmentcount: uint32; pcolorblendadvanced: ptr Colorblendadvancedext): void {.
    cdecl, importc: "vkCmdSetColorBlendAdvancedEXT".}
proc Cmdsetprovokingvertexmodeext*(commandbuffer: Commandbuffer;
                                   provokingvertexmode: Provokingvertexmodeext): void {.
    cdecl, importc: "vkCmdSetProvokingVertexModeEXT".}
proc Cmdsetlinerasterizationmodeext*(commandbuffer: Commandbuffer;
    linerasterizationmode: Linerasterizationmodeext): void {.cdecl,
    importc: "vkCmdSetLineRasterizationModeEXT".}
proc Cmdsetlinestippleenableext*(commandbuffer: Commandbuffer;
                                 stippledlineenable: Bool32): void {.cdecl,
    importc: "vkCmdSetLineStippleEnableEXT".}
proc Cmdsetdepthclipnegativeonetooneext*(commandbuffer: Commandbuffer;
    negativeonetoone: Bool32): void {.cdecl, importc: "vkCmdSetDepthClipNegativeOneToOneEXT".}
proc Cmdsetviewportwscalingenablenv*(commandbuffer: Commandbuffer;
                                     viewportwscalingenable: Bool32): void {.
    cdecl, importc: "vkCmdSetViewportWScalingEnableNV".}
proc Cmdsetviewportswizzlenv*(commandbuffer: Commandbuffer;
                              firstviewport: uint32; viewportcount: uint32;
                              pviewportswizzles: ptr Viewportswizzlenv): void {.
    cdecl, importc: "vkCmdSetViewportSwizzleNV".}
proc Cmdsetcoveragetocolorenablenv*(commandbuffer: Commandbuffer;
                                    coveragetocolorenable: Bool32): void {.
    cdecl, importc: "vkCmdSetCoverageToColorEnableNV".}
proc Cmdsetcoveragetocolorlocationnv*(commandbuffer: Commandbuffer;
                                      coveragetocolorlocation: uint32): void {.
    cdecl, importc: "vkCmdSetCoverageToColorLocationNV".}
proc Cmdsetcoveragemodulationmodenv*(commandbuffer: Commandbuffer;
    coveragemodulationmode: Coveragemodulationmodenv): void {.cdecl,
    importc: "vkCmdSetCoverageModulationModeNV".}
proc Cmdsetcoveragemodulationtableenablenv*(commandbuffer: Commandbuffer;
    coveragemodulationtableenable: Bool32): void {.cdecl,
    importc: "vkCmdSetCoverageModulationTableEnableNV".}
proc Cmdsetcoveragemodulationtablenv*(commandbuffer: Commandbuffer;
                                      coveragemodulationtablecount: uint32;
                                      pcoveragemodulationtable: ptr cfloat): void {.
    cdecl, importc: "vkCmdSetCoverageModulationTableNV".}
proc Cmdsetshadingrateimageenablenv*(commandbuffer: Commandbuffer;
                                     shadingrateimageenable: Bool32): void {.
    cdecl, importc: "vkCmdSetShadingRateImageEnableNV".}
proc Cmdsetrepresentativefragmenttestenablenv*(commandbuffer: Commandbuffer;
    representativefragmenttestenable: Bool32): void {.cdecl,
    importc: "vkCmdSetRepresentativeFragmentTestEnableNV".}
proc Cmdsetcoveragereductionmodenv*(commandbuffer: Commandbuffer;
    coveragereductionmode: Coveragereductionmodenv): void {.cdecl,
    importc: "vkCmdSetCoverageReductionModeNV".}
proc Getshadermoduleidentifierext*(device: Device; shadermodule: Shadermodule;
                                   pidentifier: ptr Shadermoduleidentifierext): void {.
    cdecl, importc: "vkGetShaderModuleIdentifierEXT".}
proc Getshadermodulecreateinfoidentifierext*(device: Device;
    pcreateinfo: ptr Shadermodulecreateinfo;
    pidentifier: ptr Shadermoduleidentifierext): void {.cdecl,
    importc: "vkGetShaderModuleCreateInfoIdentifierEXT".}
proc Getphysicaldeviceopticalflowimageformatsnv*(physicaldevice: Physicaldevice;
    popticalflowimageformatinfo: ptr Opticalflowimageformatinfonv;
    pformatcount: ptr uint32;
    pimageformatproperties: ptr Opticalflowimageformatpropertiesnv): Result {.
    cdecl, importc: "vkGetPhysicalDeviceOpticalFlowImageFormatsNV".}
proc Createopticalflowsessionnv*(device: Device; pcreateinfo: ptr Opticalflowsessioncreateinfonv;
                                 pallocator: ptr Allocationcallbacks;
                                 psession: ptr Opticalflowsessionnv): Result {.
    cdecl, importc: "vkCreateOpticalFlowSessionNV".}
proc Destroyopticalflowsessionnv*(device: Device; session: Opticalflowsessionnv;
                                  pallocator: ptr Allocationcallbacks): void {.
    cdecl, importc: "vkDestroyOpticalFlowSessionNV".}
proc Bindopticalflowsessionimagenv*(device: Device;
                                    session: Opticalflowsessionnv; bindingpoint: Opticalflowsessionbindingpointnv;
                                    view: Imageview; layout: Imagelayout): Result {.
    cdecl, importc: "vkBindOpticalFlowSessionImageNV".}
proc Cmdopticalflowexecutenv*(commandbuffer: Commandbuffer;
                              session: Opticalflowsessionnv;
                              pexecuteinfo: ptr Opticalflowexecuteinfonv): void {.
    cdecl, importc: "vkCmdOpticalFlowExecuteNV".}
proc Createshadersext*(device: Device; createinfocount: uint32;
                       pcreateinfos: ptr Shadercreateinfoext;
                       pallocator: ptr Allocationcallbacks;
                       pshaders: ptr Shaderext): Result {.cdecl,
    importc: "vkCreateShadersEXT".}
proc Destroyshaderext*(device: Device; shader: Shaderext;
                       pallocator: ptr Allocationcallbacks): void {.cdecl,
    importc: "vkDestroyShaderEXT".}
proc Getshaderbinarydataext*(device: Device; shader: Shaderext;
                             pdatasize: ptr csize_t; pdata: pointer): Result {.
    cdecl, importc: "vkGetShaderBinaryDataEXT".}
proc Cmdbindshadersext*(commandbuffer: Commandbuffer; stagecount: uint32;
                        pstages: ptr Shaderstageflagbits;
                        pshaders: ptr Shaderext): void {.cdecl,
    importc: "vkCmdBindShadersEXT".}
proc Getframebuffertilepropertiesqcom*(device: Device; framebuffer: Framebuffer;
                                       ppropertiescount: ptr uint32;
                                       pproperties: ptr Tilepropertiesqcom): Result {.
    cdecl, importc: "vkGetFramebufferTilePropertiesQCOM".}
proc Getdynamicrenderingtilepropertiesqcom*(device: Device;
    prenderinginfo: ptr Renderinginfo; pproperties: ptr Tilepropertiesqcom): Result {.
    cdecl, importc: "vkGetDynamicRenderingTilePropertiesQCOM".}
proc Setlatencysleepmodenv*(device: Device; swapchain: Swapchainkhr;
                            psleepmodeinfo: ptr Latencysleepmodeinfonv): Result {.
    cdecl, importc: "vkSetLatencySleepModeNV".}
proc Latencysleepnv*(device: Device; swapchain: Swapchainkhr;
                     psleepinfo: ptr Latencysleepinfonv): Result {.cdecl,
    importc: "vkLatencySleepNV".}
proc Setlatencymarkernv*(device: Device; swapchain: Swapchainkhr;
                         platencymarkerinfo: ptr Setlatencymarkerinfonv): void {.
    cdecl, importc: "vkSetLatencyMarkerNV".}
proc Getlatencytimingsnv*(device: Device; swapchain: Swapchainkhr;
                          platencymarkerinfo: ptr Getlatencymarkerinfonv): void {.
    cdecl, importc: "vkGetLatencyTimingsNV".}
proc Queuenotifyoutofbandnv*(queue: Queue;
                             pqueuetypeinfo: ptr Outofbandqueuetypeinfonv): void {.
    cdecl, importc: "vkQueueNotifyOutOfBandNV".}
proc Cmdsetattachmentfeedbackloopenableext*(commandbuffer: Commandbuffer;
    aspectmask: Imageaspectflags): void {.cdecl,
    importc: "vkCmdSetAttachmentFeedbackLoopEnableEXT".}
proc Createaccelerationstructurekhr*(device: Device; pcreateinfo: ptr Accelerationstructurecreateinfokhr;
                                     pallocator: ptr Allocationcallbacks;
    paccelerationstructure: ptr Accelerationstructurekhr): Result {.cdecl,
    importc: "vkCreateAccelerationStructureKHR".}
proc Destroyaccelerationstructurekhr*(device: Device; accelerationstructure: Accelerationstructurekhr;
                                      pallocator: ptr Allocationcallbacks): void {.
    cdecl, importc: "vkDestroyAccelerationStructureKHR".}
proc Cmdbuildaccelerationstructureskhr*(commandbuffer: Commandbuffer;
                                        infocount: uint32; pinfos: ptr Accelerationstructurebuildgeometryinfokhr;
    ppbuildrangeinfos: ptr ptr Accelerationstructurebuildrangeinfokhr): void {.
    cdecl, importc: "vkCmdBuildAccelerationStructuresKHR".}
proc Cmdbuildaccelerationstructuresindirectkhr*(commandbuffer: Commandbuffer;
    infocount: uint32; pinfos: ptr Accelerationstructurebuildgeometryinfokhr;
    pindirectdeviceaddresses: ptr Deviceaddress; pindirectstrides: ptr uint32;
    ppmaxprimitivecounts: ptr ptr uint32): void {.cdecl,
    importc: "vkCmdBuildAccelerationStructuresIndirectKHR".}
proc Buildaccelerationstructureskhr*(device: Device;
                                     deferredoperation: Deferredoperationkhr;
                                     infocount: uint32; pinfos: ptr Accelerationstructurebuildgeometryinfokhr;
    ppbuildrangeinfos: ptr ptr Accelerationstructurebuildrangeinfokhr): Result {.
    cdecl, importc: "vkBuildAccelerationStructuresKHR".}
proc Copyaccelerationstructurekhr*(device: Device;
                                   deferredoperation: Deferredoperationkhr;
                                   pinfo: ptr Copyaccelerationstructureinfokhr): Result {.
    cdecl, importc: "vkCopyAccelerationStructureKHR".}
proc Copyaccelerationstructuretomemorykhr*(device: Device;
    deferredoperation: Deferredoperationkhr;
    pinfo: ptr Copyaccelerationstructuretomemoryinfokhr): Result {.cdecl,
    importc: "vkCopyAccelerationStructureToMemoryKHR".}
proc Copymemorytoaccelerationstructurekhr*(device: Device;
    deferredoperation: Deferredoperationkhr;
    pinfo: ptr Copymemorytoaccelerationstructureinfokhr): Result {.cdecl,
    importc: "vkCopyMemoryToAccelerationStructureKHR".}
proc Writeaccelerationstructurespropertieskhr*(device: Device;
    accelerationstructurecount: uint32;
    paccelerationstructures: ptr Accelerationstructurekhr; querytype: Querytype;
    datasize: csize_t; pdata: pointer; stride: csize_t): Result {.cdecl,
    importc: "vkWriteAccelerationStructuresPropertiesKHR".}
proc Cmdcopyaccelerationstructurekhr*(commandbuffer: Commandbuffer; pinfo: ptr Copyaccelerationstructureinfokhr): void {.
    cdecl, importc: "vkCmdCopyAccelerationStructureKHR".}
proc Cmdcopyaccelerationstructuretomemorykhr*(commandbuffer: Commandbuffer;
    pinfo: ptr Copyaccelerationstructuretomemoryinfokhr): void {.cdecl,
    importc: "vkCmdCopyAccelerationStructureToMemoryKHR".}
proc Cmdcopymemorytoaccelerationstructurekhr*(commandbuffer: Commandbuffer;
    pinfo: ptr Copymemorytoaccelerationstructureinfokhr): void {.cdecl,
    importc: "vkCmdCopyMemoryToAccelerationStructureKHR".}
proc Getaccelerationstructuredeviceaddresskhr*(device: Device;
    pinfo: ptr Accelerationstructuredeviceaddressinfokhr): Deviceaddress {.
    cdecl, importc: "vkGetAccelerationStructureDeviceAddressKHR".}
proc Cmdwriteaccelerationstructurespropertieskhr*(commandbuffer: Commandbuffer;
    accelerationstructurecount: uint32;
    paccelerationstructures: ptr Accelerationstructurekhr; querytype: Querytype;
    querypool: Querypool; firstquery: uint32): void {.cdecl,
    importc: "vkCmdWriteAccelerationStructuresPropertiesKHR".}
proc Getdeviceaccelerationstructurecompatibilitykhr*(device: Device;
    pversioninfo: ptr Accelerationstructureversioninfokhr;
    pcompatibility: ptr Accelerationstructurecompatibilitykhr): void {.cdecl,
    importc: "vkGetDeviceAccelerationStructureCompatibilityKHR".}
proc Getaccelerationstructurebuildsizeskhr*(device: Device;
    buildtype: Accelerationstructurebuildtypekhr;
    pbuildinfo: ptr Accelerationstructurebuildgeometryinfokhr;
    pmaxprimitivecounts: ptr uint32;
    psizeinfo: ptr Accelerationstructurebuildsizesinfokhr): void {.cdecl,
    importc: "vkGetAccelerationStructureBuildSizesKHR".}
proc Cmdtracerayskhr*(commandbuffer: Commandbuffer; praygenshaderbindingtable: ptr Strideddeviceaddressregionkhr;
    pmissshaderbindingtable: ptr Strideddeviceaddressregionkhr;
    phitshaderbindingtable: ptr Strideddeviceaddressregionkhr;
    pcallableshaderbindingtable: ptr Strideddeviceaddressregionkhr;
                      width: uint32; height: uint32; depth: uint32): void {.
    cdecl, importc: "vkCmdTraceRaysKHR".}
proc Createraytracingpipelineskhr*(device: Device;
                                   deferredoperation: Deferredoperationkhr;
                                   pipelinecache: Pipelinecache;
                                   createinfocount: uint32; pcreateinfos: ptr Raytracingpipelinecreateinfokhr;
                                   pallocator: ptr Allocationcallbacks;
                                   ppipelines: ptr Pipeline): Result {.cdecl,
    importc: "vkCreateRayTracingPipelinesKHR".}
proc Getraytracingcapturereplayshadergrouphandleskhr*(device: Device;
    pipeline: Pipeline; firstgroup: uint32; groupcount: uint32;
    datasize: csize_t; pdata: pointer): Result {.cdecl,
    importc: "vkGetRayTracingCaptureReplayShaderGroupHandlesKHR".}
proc Cmdtraceraysindirectkhr*(commandbuffer: Commandbuffer;
    praygenshaderbindingtable: ptr Strideddeviceaddressregionkhr;
    pmissshaderbindingtable: ptr Strideddeviceaddressregionkhr;
    phitshaderbindingtable: ptr Strideddeviceaddressregionkhr;
    pcallableshaderbindingtable: ptr Strideddeviceaddressregionkhr;
                              indirectdeviceaddress: Deviceaddress): void {.
    cdecl, importc: "vkCmdTraceRaysIndirectKHR".}
proc Getraytracingshadergroupstacksizekhr*(device: Device; pipeline: Pipeline;
    group: uint32; groupshader: Shadergroupshaderkhr): Devicesize {.cdecl,
    importc: "vkGetRayTracingShaderGroupStackSizeKHR".}
proc Cmdsetraytracingpipelinestacksizekhr*(commandbuffer: Commandbuffer;
    pipelinestacksize: uint32): void {.cdecl, importc: "vkCmdSetRayTracingPipelineStackSizeKHR".}
proc Cmddrawmeshtasksext*(commandbuffer: Commandbuffer; groupcountx: uint32;
                          groupcounty: uint32; groupcountz: uint32): void {.
    cdecl, importc: "vkCmdDrawMeshTasksEXT".}
proc Cmddrawmeshtasksindirectext*(commandbuffer: Commandbuffer; buffer: Buffer;
                                  offset: Devicesize; drawcount: uint32;
                                  stride: uint32): void {.cdecl,
    importc: "vkCmdDrawMeshTasksIndirectEXT".}
proc Cmddrawmeshtasksindirectcountext*(commandbuffer: Commandbuffer;
                                       buffer: Buffer; offset: Devicesize;
                                       countbuffer: Buffer;
                                       countbufferoffset: Devicesize;
                                       maxdrawcount: uint32; stride: uint32): void {.
    cdecl, importc: "vkCmdDrawMeshTasksIndirectCountEXT".}